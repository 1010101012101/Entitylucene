How to prevent automount of a partition in El Capitan <body> There are two boot partitions on my MacBook. A working, bootable, El Capitan is installed on both.  How can I prevent automounting partition2, when booting from partition1?  According to many pages I found via google this is done by editing fstab via vifs an adding the line  precodeUUID=uuid_of_partition2_here       none    hfs     rw,noauto /code/pre  But that doesn't work! The partition is mounted anyway!  <answer231759> It appears that the syntax must use single spaces, not tabs, to be recognised by the system.  This would fall in line with many command line processes; the only exception that springs to mind is the codehosts/code file, which can use any amount of whitespace.  That would make the correct syntax    precodeUUID=uuid_of_partition2_here none hfs rw,no auto /code/pre  rather than     precodeUUID=uuid_of_partition2_here       none    hfs     rw,no auto /code/pre  ... subtle but important difference.  <answer231903> Tetsujin and user3439894's comments and observations prompted some testing.  Turns out, there is more than one UUID when you look at drives and partitions and the 'emdiskutil list/em' command doesn't report the UUID that needs to be used in the vifs/fstab commands.   precode  root %&gt; diskutil info disk1 | grep -e UUID /code/pre  Shows that there are Volume, Disk / Partition, LV,LVF and LVG UUIDs ..  I'm only interested in the first two!  When I enter emdiskutil list/em I get the "Disk / Partition UUID", when I enter emdiskutil info disk1/em I get both the "Disk / Partition UUID" and the "Volume UUID" (and more ..) I also get the "Volume Name" (the disk label)   Some tests I performed with the Volume - UUID and the disk label indicate:   ul lithe UUID in vifs/fstab is the "Volume UUID", don't use tabs! /li lithe UUID command in vifs/fstab doesn't work with the "Disk / Partition UUID", tab/space makes no difference here/li liwhen using the "LABEL" syntax, don't use tabs!/li /ul  Here are the two examples I got to work:  precodeUUID=&lt;Volume UUID&gt;&lt;SPACE&gt;none&lt;space&gt;rw,noauto  LABEL=&lt;Volume Name&gt;&lt;SPACE&gt;none&lt;space&gt;rw,noauto /code/pre  You can find the &lt;Volume UUID&gt; and the &lt;Volume Name&gt; of your internal disk by running  precodediskutil info disk1 | grep -e "Volume\ Name" -e "Volume\ UUID" /code/pre  On my system the external disk-info shows up for disk2s1 and disk3s1  <answer247271> On OS X 10.11.6 Whitespaces vs Tabs did not matter for me (confirmed I was using "true" tabs by viewing code/etc/fstab/code in a hex editor and observed code0x09/code for field separator byte).  I did use codevifs/code, however, but from what I can tell that simply locks file access to code/etc/fstab/code. Also tested with a leading newline (blank line) under file comment as well as last line of codefstab/code containing no newline or newline (blank line under last fstab entry)  The main thing that mattered for me was:  ol liUse Volume UUID instead of Disk / Partition UUID/li liSpecifying filesystem type is crucial (lexus example lacked this)/li /ol  Untested factors:  ol licodeno auto/code vs codenoauto/code (I used codenoauto/code)/li liText editor configured to use multiple spaces for tabs/li /ol  <answer260692> The command contains a file system type to be mounted. Make sure that if you are not mounting an apple drive which is hfs, substitute this for your type, for example ntfs if its newer windows disk.  <comment283030> idk if whitespace is important, I only have single spaces between those elements & mine works just fine to prevent my cloned boot drive from appearing. After that, maybe double/triple-check the UUID <comment283047> @Tetsujin: changing each tab in the file to a single space solved the problem...  if you write your comment as an answer I'll gladly mark it as the right one! <comment283049> Ah, glad it turned out to be a simple fix. I'll write it up as an answer... <comment283062> According to the [manual page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man5/fstab.5.html) for _fstab_ is states, "_Each filesystem is described on a separate line; **fields on each line are separated by tabs or spaces**._". Note: I added the bold highlighting on the relevant part. <comment283063> Interesting - however, empirically, that seems to not be the case. Was that the man for Mac or nix? <comment283064> As a test, I just modified my existing _fstab_ file replacing _spaces_ with _tabs_ and then plugged in a drive that has three partitions, two of which are set not to mount.  Only the first partition mounted, as it should have, and the two that are set not to mount did not mount, even with _tabs_ being the field separator as stated in the manual page.  Note that this is under OS X 10.8.5 and maybe things have changed in OS X 10.11. <comment283066> If I get time later, I'll test on El Cap, with tabs & multiple rather than single spaces. Can't do it now as I've too much running live. <comment283258> @user3439894: my experience, as stated above, is with El Capitan. All the docs I've read sofar has lead me to believe tab/space is equivalent.. I'll be doing some testing later today .. <comment283269> I've done some testing and will write up what I found in a separate answer. <comment283363> Nice bit of research. Would seem, though, that rather than trying to remember which can take tabs & which not, the safest method is to always use single spaces. <comment283530> I agree .. but using tabs makes the elements line up, I tend to use them were ever I can get away with it (But not in vifs/fstab, apparently :-) <comment305116> Could you please expand on the 'filesystem type'. Where do I specify that? Do you know of documentation for this topic? <comment305265> `man fstab` lists supported filesystems as well as describes various expected "tokens" (keywords).  I only posted because it seemed like the behavior of fstab was broken for awhile on El Capitan, but seems to work as expected / documented as of OS X 10.11.6.