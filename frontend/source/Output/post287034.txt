Why doesn't sed pattern matching treat '\t' as a <tab> character? <body> I have a file with some leading tabs and I tried to convert the tabs to spaces by using sed:  precodecat test_file | sed -e 's/[\t]/    /g' /code/pre  It works properly on various flavours of UNIX, but on my Mac (Sierra) it doesn't treat '\t' as an escape for tab (hex 0x09) rather it treats it as two separated characters.  grep properly handles the \t shortcut for tab.  <answer287047> BSD codesed/code follows the codePOSIX/code standard for codeBRE/code's, see codeman 7 re_format/code. In particular the following:  precode                                             all other special charac-  ters, including `\', lose their special significance within a bracket  expression. /code/pre  Nor is code\t/code treated special (as the tab character) in the pattern.  You have the following options:  precode# Type a literal tab in the /pattern/ with the keys &lt;control&gt;&lt;v&gt;&lt;tab&gt; 's/&lt;control&gt;&lt;v&gt;&lt;tab&gt;/    /g'  # Use a character class within the bracket expression 's/[[:cntrl:]]/    /g'  # Use ansi -c quoting $'s/\t/    /g'  # Print the tab with printf "s/$(printf '\t')/    /g" /code/pre  <comment362327> I like the $'s/\t/   /g' option.  Thanks!