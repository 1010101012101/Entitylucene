I'm Getting Errors When I Try to do 'brew update' <body> I want to install a gem. The instructions strongly suggest that I use Homebrew to install the gem dependencies. I have not used Homebrew a lot, maybe once years ago. I do remember that El Capitan already has it installed. I also remembered the 'brew doctor' and 'brew update' commands. First I ran codebrew update/code and got the following error:  precode[~]$ brew update warning: unable to unlink CONTRIBUTING.md: Permission denied warning: unable to unlink SUPPORTERS.md: Permission denied fatal: cannot create directory at '.github': Permission denied Error: Failure while executing: git pull -q origin refs/heads/master:refs/remotes/origin/master /code/pre  I had no idea about the details of this error so I decided to try codesudo brew update/code. I got the following error.  precode[~]$ sudo brew update sudo: /private/etc/sudoers.d is owned by uid 501, should be 0 Password: /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- mach (LoadError)     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /usr/local/Library/Homebrew/extend/pathname.rb:2:in `&lt;top (required)&gt;'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /usr/local/Library/Homebrew/global.rb:3:in `&lt;top (required)&gt;'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /usr/local/Library/brew.rb:15:in `&lt;main&gt;' /code/pre  Then I decided to run codebrew doctor/code. I got the following error.  precode[~]$ brew doctor /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require': cannot load such file -- mach (LoadError)     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /usr/local/Library/Homebrew/extend/pathname.rb:2:in `&lt;top (required)&gt;'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /usr/local/Library/Homebrew/global.rb:3:in `&lt;top (required)&gt;'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/rubygems/core_ext/kernel_require.rb:55:in `require'     from /usr/local/Library/brew.rb:15:in `&lt;main&gt;' /code/pre  I guess the ruby version 2.0.0 is the version of Ruby that my Mac Mini Server is using for the OS. I'm using a newer version of Ruby with Ruby Version Manager for my Ruby on Rails applications.  The last time I used Homebrew it was either with Mavericks or Mountain Lion. I have no idea where to go from here to solve this problem. None of the documentation I have found online addresses this specific error.  <answer231844> Why not make a list of the things you might have installed:  precode brew list /code/pre  Then make a backup (just in case). Then uninstall homebrew and possibly everything else in /usr/local to get a clean install and a clean start?  ul lihttps://gist.github.com/mxcl/1173223/li /ul  <answer233249> I've similar problems and my research suggests resetting your local version of the brew repo:  precodecd $(brew --prefix) &amp;&amp; git fetch &amp;&amp; git reset --hard origin/master /code/pre  I'm about to try this myself.  <answer234499> As mentioned here: https://github.com/Homebrew/legacy-homebrew/issues/49879#issuecomment-196294820  What worked for me given all the errors was  precodesudo chown -R $(whoami):admin /usr/local cd $(brew --prefix) &amp;&amp; git fetch origin &amp;&amp; git reset --hard origin/master /code/pre  Then I could run brew commands again, such as codebrew update/code and codebrew upgrade/code. (And fwiw, as an alternative to codebrew list/code if it weren't working and you just wanted a quick list, you can get a crude listing just by doing codels -l cd $(brew --prefix)/Cellar/code)  <answer259650> Building off of the previous answer, run the following:  precodesudo chown $(whoami):admin /usr/local cd $(brew --prefix) &amp;&amp; git fetch origin &amp;&amp; git reset --hard origin/master brew update /code/pre  I just ran that on El Capitan 10.11.6, and the update ended with the message:     == Migrating HOMEBREW_REPOSITORY (please wait)...br   == Migrated HOMEBREW_REPOSITORY to /usr/local/Homebrew!br   Homebrew no longer needs to have ownership of /usr/local. If you wish you canbr   return /usr/local to its default ownership with:   precodesudo chown root:wheel /usr/local /code/pre  If you see that, run the command to correctly return the permission change you made at the beginning to normal.  <comment283189> You might have 2 issues one is the sudoers file has the wrong owner only edit it by visudo <comment283232> "I do remember that El Capitan already has it installed." Can you elaborate? <comment283430> @techraf I did a clean install on El Capitan after wiping my hard drive clean. When I attempted to install homebrew it said it was already installed. There were several times when I opened Xcode it said it was installing needed components.I assumed Homebrew was installed in El Capitan or Xcode. <comment283476> the brew list command gives the same error. <comment283483> I went ahead and uninstalled and reinstalled Homebrew as I had not used it to install anything I was currently using. I have to remove /usr/local/include manually. Now my system is ready to brew. Thanks! <comment294215> on El Capitan, I still get: fatal: cannot create directory at '.github': Permission denied <comment294218> is it sensible to make system-wide /usr/local owned by a specific user as homebrew does? I cringe, but it must have a rationale.