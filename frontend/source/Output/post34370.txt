How can I see where a program writes to my disk? <body> If I want to uninstall a program and remove all trace of data it stored on my computer,  is there a tool to see where a program has written data? I expect it isn't going to be possible after the fact, but perhaps there is something that can run when a program is first launched to monitor all the locations to which it writes?  I think I'm looking for something that does for local storage what Little Snitch does for the internet.  <answer34375> There method isn't as automated as other options, but it has the advantage that it finds files associated with an app even if they aren't used during the monitoring session.  I use an app called Find Any File, which lets you search your entire hard drive easily using some complex queries.  This method relies on the assumption that all app files either have the name of the app in the filename, or are stored somewhere with the name of the app in an enclosing folder's name. This is almost always true; Application Support, login items/launchagents/launchdaemons, caches, the app bundle itself, etc all follow it.br strongI've yet to find an app with files in non-obvious places that don't follow this rule./strong  Here's how I would formulate my query for the app Balsamiq Mockups, which I installed a few days ago:  img src="https://i.stack.imgur.com/V22Uc.png" alt="enter image description here"  The reason I've got the two parts of the name separately is to cover cases where there is a space between the two words (like the app bundle) as well as where there isn't (like a codecom.developer.AppName/code file).  The codeModification Date is within the past .../code component is optional and only helpful when the app has been installed relatively recently. Generally, just the app name should be just fine.  The results show all the files that the app has created:  img src="https://i.stack.imgur.com/dTK3P.png" alt="enter image description here"  I've got the view in hierarchical mode to show the location of the files, but either view mode is fine.  If you want to delete the files, switch to the list view, select them all, right click and choose Move to Trash.  img src="https://i.stack.imgur.com/DNqTX.png" alt="enter image description here"  strongBonus:/strong If the app has a custom file extension, you can easily round up all of those files too: codeName ends in .ext/code  <answer34376> If I get it right, you want to monitor all file-system operations of your app when you launch it and when it's running ?br Rather than finding each and every byte that this program has ever written to your hard-drive.    For the first case I have two recommendations:  ul lifseventer/li /ul  img src="https://i.stack.imgur.com/3Tot2.gif" alt="fseventer"  ul liInstruments.app from /Developer/Applications/ (you need Xcode for that)  ul liChoosing "File Activity" from the templates/li /ul/li /ul  img src="https://i.stack.imgur.com/51X7x.png" alt="Instruments"  Supplement from 2011-12-22  ul liAnd for the command-line, copied from here    codesudo opensnoop -p PID/code/li /ul  Shows you all of the files that are being accessed on your system by a particular process (by passing its PID)  <answer34387> This isn't ideal, but here's another idea:  ul liCreate a new user account./li liIn terminal: ul licodetouch ~/Desktop/first_dir/code/li licodetouch ~/Desktop/second_dir/code/li licodels -laR ~ &gt; ~/Desktop/first_dir/code/li /ul/li liInstall the program in question/li liRun it/li liIn terminal: ul licodels -laR ~ &gt; ~/Desktop/second_dir/code/li licodediff ~/Desktop/first_dir ~/Desktop/second_dir/code/li /ul/li /ul  <answer34833> The command line is the most efficient option here, just use the command emlsof/em (list open files) with the relevant options, you can limit the results to file opened all, by user, by parent process, by group ID, etc.  Type in emman lsof/em to the Terminal for all the options.  Another option is use the Activity Monitor app, locate your running app in the list, double click it, then select 'open files and ports'.  <comment39252> I'm suspicious of the claim that all app files either have the name of the app in the filename, or are stored somewhere with the name of the app in an enclosing folder's name, but I don't have a counterexample yet. I'm not convinced, but I am intrigued. Thanks. <comment39253> You do have a point, but I've tested this with quite a few apps and never found one where it doesn't work. <comment39264> A very hard problem to attack without the OS enforcing a strict sandbox or in the case where the programs simple and you can install it in a clean environment to run it to see all the places it typically writes. <comment39265> But the second scenario is doable, no? In fact, you just gave me an idea about a solution to my own question. <comment39371> I love virtual machines :-) that and rsync and grep <comment39739> `lsof` or Activity Monitor just take a snapshot, though, right? It's just the files open at the point in time when the command is run?