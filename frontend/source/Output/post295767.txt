How to have a non-obvious encrypted partition on an external hard-drive with MacOS Sierra? <body> MacOS Sierra asks for password whenever I plug in partitioned external drive which I do not want to happen.  I have strongMacbook Pro 2016/strong running strongSierra 10.12.6/strong with a Seagate Backup Plus Slim 2TB Portable External Hard Drive.    I partitioned the drive with 1.2 TB for backups (codeTime Capsule/code) and 800 GB for other stuff that I can share with my friends (codeTachyon/code).    strongI ultimately want to achieve the following:/strong  (1) Have Time Capsule for my backups which is encrypted;  (2) Not make it obvious that there is an encrypted partition on the drive (e.g. not have my computer ask me to type in the password everytime it's plugged in and I don't want to save the password in the keychain); and  (3) When I am ready to do a backup or to grab something from the encrypted partition, make it available either via commandline or disk utility.  h1________________________________________________________/h1  Right now, it asks me to type in the password everytime it is plugged in and I say codecancel/code I don't know how to get the encrypted drive back unless I eject it and plug it back in.   img src="https://i.stack.imgur.com/hZx0C.png" alt="enter image description here"  <answer296260> h1How To Do It - Summary/h1  What you need to do is prevent the file system from mounting that specific volume. This is typically handled by codefstab/code, and configured via the code/etc/fstab/code file. However, macOS (and OS X) specify a different command to correctly handle the editing of the code/etc/fstab/code file - that is, vifs. Be warned that unless you have a default editor configured via the  codeEDITOR/code environment variable, the file editor which will be used is codevi/code. There is additional information about codevifs/code below, under the "Information About the codevifs/code Command" heading, including how to use an editor other than codevi/code.  h1Step by Step Instructions/h1  The first thing we need to do is to get the UUID of the volume(s) we want to affect. To get the UUID, the drive must be connected to the computer, and volume must already be mounted. In this case, you would need to plug in the USB drive and enable access to the volume by entering the password.  Once this is done, which can be verified by seeing the volume in Finder, we need to get to the terminal. In the terminal window, type the command codediskutil info /Volumes/&lt;Volume Name&gt; | grep 'Volume UUID'/code. In your case, you would replace "" with "Time\ Capsule". Note the backslash () is needed to escape special characters, such as space in this case. This should return a single line with a value similar to "Volume UUID:              AA2313FE-7C4A-340F-8293-D74EA0ED34DE". The UUID, which is "AA2313FE-7C4A-340F-8293-D74EA0ED34DE" here, is what we need. Select it, and copy it to the clipboard (kbd&#8984;/Cmd/kbd+kbdC/kbd).  We now need to edit the code/etc/fstab/code file. By default, the  For the scope of this answer, I will assume that you are comfortable with whichever editor you are using to perform the following steps.  Start the editor by typing codesudo vifs/code in the terminal window. This will prompt for an administrator password to get administrative access to edit the file.  With the editor open, and the volume's UUID in the clipboard, we will append a line at the end of the file as follows: codeUUID=&lt;Volume UUID from clipboard&gt; /Volumes/Time\ Machine hfs rw,noauto/code. You can use the terminal command codeman fstab/code to get additional options or values to use in the entry, but here, the following options and values are specified as:    ul licode/Volumes/&lt;Volume Name - from above&gt;/code Specify the mount point into which the volume is to be mounted./li licodehfs/code The file system type (Mac volumes are typically hfs - strongH/strongierarchical strongF/strongile strongS/strongystem)  /li licoderw,noauto/code    ul licoderw/code Mount as strongr/strongead/strongw/strongrite when mounting  /li licodenoauto/code Do strongNOT/strong automatically mount the volume  /li /ul/li /ul  After you've added and updated the line(s) as necessary, save the file and exit the editor. To test that this has "taken", you can perform either a logout/login, reboot, or disconnect (eject) the disk and reconnect it. The volume should no longer be mounting or prompting for the password.  At a later time, when you need to mount the volume, you can return to the trusty terminal, and use the command codemount /Volumes/&lt;Volume Name&gt;/code, or open codeDisk Utility/code, select the volume, and click the codeMount/code button in the toolbar.  h1tl;dr/h1  ul liGet the volume's UUID, in the terminal, using the codediskutil info /Volumes/&lt;Volume Name&gt;/code command/li liUse the command codesudo vifs/code to properly (for macOS/OS X) lock and edit the code/etc/fstab/code file/li liAdd an entry to the code/etc/fstab/code file for the volume, by its UUID, adding codenoauto/code to the mount options/li liTo use/mount the Volume, use codeDisk Utility/code and the codeMount/code options for the volume, or use codemount /Volumes/&lt;Volume Name&gt;/code/li /ul  h1Information About the codevifs/code Command/h1  Here is what you need to know about the what and the why of the codevifs/code command. What this command does is simply lock the code/etc/fstab/code file for editing to the calling user, and opens the file in codevi/code (explaining the strongvi/strong in codevifs/code), or the editor (command) specified system's defined codeEDITOR/code environment variable. While we could directly edit the code/etc/fstab/code file, using the codevifs/code command is the only method recommended/approved by Apple.  h1References/h1  ul liPrevious answer to a somewhat similar question  /li liExample on iDownloadBlog  /li liApple's vifs documentation/li /ul 