How to customize "Kind"s in the Finder <body> Is there a way to customize the Kinds in the Finder in any way? I'd like to set up my own custom kinds to make it easier to sort files in Finder views.  I know that I can use the Get Info palette to customize which application opens a file but that's not exactly what I'm talking about.  Really, the problem is I work with a lot of source files in plain/text format and as a result they all end up being displayed as TextWrangler Text File.  Thing is, I do prefer having TextWrangler be their default application, I just want them to have a more descriptive Kind is all.  strongClarification/strong codeKind/codes basically describe the nature of the file, distinct from the extension. In the old days of System 7, they were stored as special metadata attached to the file. Not sure what the mechanism is in OS X. But basically, you can add the "Kind" column to your list view and it will basically describe what that file is. I'd like to be able to create or set up custom Kinds, to make it easier to sort by that column.  strongMore details/strong  The main place I'd be using this is not the Finder but Cyberduck, which appears to use the Kind column and only the Kind column for sorting by file type. So obviously if I could customize the Kinds available that'd make it easier to sort within CyberDuck. So I suppose if someone knows a hack to make CyberDuck sort files by extension, that'd work too.  <answer20986> This question is answered on SuperUser.  The "kind" of a file is determined by the the Launch Services Database. In OS X Lion, it is found at code/private/var/folders/**/**/-Caches-/com.apple.LaunchServices-034501.csstore/code.  This database is updated when new applications are installed, and the only supported way for an end user to change the kind of a file is by changing the "Open with:" application in get info windows, as you mention.  If you simply need to create another tier of organization for sorting files in finder windows, that's what the "Label" and "Comments" fields are for. You can turn them on by clicking the checkboxes after selecting codeShow View Options/code in the View menu. Labels can be customized in Finder preferences.  <answer21157> You could make new codeCFBundleDocumentTypes/code entries in  code/Applications/TextWrangler.app/Contents/Info.plist/code. Many extensions are currently defined under a single entry with the codeCFBundleTypeName/code codeTextWrangler text document/code:  precode&lt;key&gt;CFBundleDocumentTypes&lt;/key&gt; &lt;array&gt;     &lt;dict&gt;         &lt;key&gt;CFBundleTypeExtensions&lt;/key&gt;         &lt;array&gt;             &lt;string&gt;a&lt;/string&gt;             &lt;string&gt;as&lt;/string&gt;             &lt;string&gt;asm&lt;/string&gt;             &lt;string&gt;asp&lt;/string&gt;             &lt;string&gt;bashrc&lt;/string&gt;             &lt;string&gt;c&lt;/string&gt;             &lt;string&gt;c++&lt;/string&gt;             &lt;string&gt;cc&lt;/string&gt;             &lt;string&gt;cfm&lt;/string&gt;             &lt;string&gt;conf&lt;/string&gt;             &lt;string&gt;cp&lt;/string&gt;             &lt;string&gt;cpp&lt;/string&gt;             &lt;string&gt;cshrc&lt;/string&gt;             &lt;string&gt;css&lt;/string&gt;             &lt;string&gt;cxx&lt;/string&gt;             &lt;string&gt;equ&lt;/string&gt;             &lt;string&gt;erb&lt;/string&gt;             &lt;string&gt;f&lt;/string&gt;             &lt;string&gt;f77&lt;/string&gt;             &lt;string&gt;for&lt;/string&gt;             &lt;string&gt;ftn&lt;/string&gt;             &lt;string&gt;h&lt;/string&gt;             &lt;string&gt;h++&lt;/string&gt;             &lt;string&gt;hpp&lt;/string&gt;             &lt;string&gt;htm&lt;/string&gt;             &lt;string&gt;html&lt;/string&gt;             &lt;string&gt;inc&lt;/string&gt;             &lt;string&gt;j&lt;/string&gt;             &lt;string&gt;java&lt;/string&gt;             &lt;string&gt;js&lt;/string&gt;             &lt;string&gt;json&lt;/string&gt;             &lt;string&gt;jsp&lt;/string&gt;             &lt;string&gt;log&lt;/string&gt;             &lt;string&gt;m&lt;/string&gt;             &lt;string&gt;mm&lt;/string&gt;             &lt;string&gt;p&lt;/string&gt;             &lt;string&gt;pas&lt;/string&gt;             &lt;string&gt;pch&lt;/string&gt;             &lt;string&gt;pch++&lt;/string&gt;             &lt;string&gt;php&lt;/string&gt;             &lt;string&gt;php3&lt;/string&gt;             &lt;string&gt;pl&lt;/string&gt;             &lt;string&gt;plist&lt;/string&gt;             &lt;string&gt;plx&lt;/string&gt;             &lt;string&gt;pm&lt;/string&gt;             &lt;string&gt;ppu&lt;/string&gt;             &lt;string&gt;profile&lt;/string&gt;             &lt;string&gt;r&lt;/string&gt;             &lt;string&gt;rb&lt;/string&gt;             &lt;string&gt;rez&lt;/string&gt;             &lt;string&gt;rhtml&lt;/string&gt;             &lt;string&gt;rss&lt;/string&gt;             &lt;string&gt;s&lt;/string&gt;             &lt;string&gt;sql&lt;/string&gt;             &lt;string&gt;shtm&lt;/string&gt;             &lt;string&gt;shtml&lt;/string&gt;             &lt;string&gt;tcl&lt;/string&gt;             &lt;string&gt;tcshrc&lt;/string&gt;             &lt;string&gt;text&lt;/string&gt;             &lt;string&gt;txt&lt;/string&gt;             &lt;string&gt;wml&lt;/string&gt;             &lt;string&gt;xhtml&lt;/string&gt;             &lt;string&gt;xml&lt;/string&gt;             &lt;string&gt;xsl&lt;/string&gt;             &lt;string&gt;xslt&lt;/string&gt;             &lt;string&gt;yaml&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;CFBundleTypeIconFile&lt;/key&gt;         &lt;string&gt;TextWranglerTextDoc.icns&lt;/string&gt;         &lt;key&gt;CFBundleTypeName&lt;/key&gt;         &lt;string&gt;TextWrangler text document&lt;/string&gt;         &lt;key&gt;CFBundleTypeOSTypes&lt;/key&gt;         &lt;array&gt;             &lt;string&gt;TEXT&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;CFBundleTypeRole&lt;/key&gt;         &lt;string&gt;Editor&lt;/string&gt;     &lt;/dict&gt; /code/pre  As usual, making changes inside the bundle invalidates the code signature. A new certificate can be assigned with codecodesign -f -s - /Applications/TextWrangler.app/code.  <comment16280> I'm aware that in theory one option is to go into the .plist for a given application and start creating additional file types (see http://www.cocoadev.com/index.pl?CFBundleTypeRole). However, I'd rather not have to do that, and it seems like there's a lot of potential for error. <comment16389> Not exactly what you asked for, but this free prefpane lets you manipulate the file type associations. http://www.rubicode.com/Software/RCDefaultApp/ <comment16420> Hmmm... I thought I remembered there being an answer that someone posted. Was it deleted? Didn't know that could happen. <comment22550> You should edit your question to clarify what Kinds are to new users of Lion <comment23021> It has to be the Kind column, unfortunately, I'll update the question to clarify why. <comment23022> So if your answer is correct, it looks like I'm out of luck. <comment23141> @XAleXOwnZX if you're just starting out in OS X, you're not going to be able to answer the question anyway. <comment23174> Some keys in `Info.plist`s and `~/Library/Preferences/com.apple.LaunchServices.plist` either have precedence over the LS database or can be modified to make changes to the LS database. <comment23261> touche but it was unclear to me too since i read this before playing around extensively with lion