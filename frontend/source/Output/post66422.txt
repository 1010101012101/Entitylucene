Change all the .txt files to .md files in a certain folder <body> Is there a Terminal command or something like that to batch rename files in a certain folder? Basically I want to change all the files that have a .txt as a file type, and change it to .md (for markdown). Is this possible? I am comfortable using the Terminal, being a developer, so don't hold back on solutions. :)  Thanks in advance for any help you can provide.  <answer66426> You can do the following in Terminal:     find . -iname "*.txt" -exec bash -c 'mv "$0" "${0%\.txt}.md"' {} \;   This will recursively rename all .txt files in the current directory to .md.  <answer66479> Even if you do not use emzsh/em as your default shell, you can still use emzmv/em in a temporary shell:  precodezsh -c 'autoload zmv;$0 $@' zmv -w '*.txt' '$1.md' /code/pre  Recursively:  precodezsh -c 'autoload zmv;$0 $@' zmv -w '**/*.txt' '$1$2.md' /code/pre  Note: The code-n/code option is handy for testing.  emzmv/em is described in the codezshcontrib/code manpage, and the full glob syntax is described in the codezshexpn/code manpage in the “Filename Generation” section.  <comment78144> Awesome! Thanks a lot. :) <comment78145> I tested it and it works, thanks a bunch. :) <comment78231> This does seem like a shorter syntax, umm... Could you give me a little bit of what this zmv or zsh command does? Thanks. :) <comment78308> With `-w`, each wildcard gets put into a positional parameter (`$1`, `$2`, etc.) to be used in the new name; without `-w` you must include parentheses to delimit the extent of the text that is matches and placed in the positional parameters. So, not using `-w` may make it a bit more obvious: `zsh -c 'autoload zmv;$0 $@' zmv -n '(*).txt' '$1.md'` renames all `*.txt` files (in the current directory) to end in `.md` instead of `.txt`; `zsh -c 'autoload zmv;$0 $@' zmv -n '(**/)(*).txt' '$1$2.md'` does likewise in the current directory and all subdirectories. <comment78480> Oh OK! Well thanks a lot! I used the other one but will keep this in mind for the future. :)