Is there a way to reduce the swappiness of OS X 10.6 Snow Leopard? <body> I have 6GB on my old Macbook, with an SSD.  I would like to avoid writing to the swap file as much as possible.  Ever since my upgrade, I have always had at least 1 to 1.5GB memory "free".  Yet, I have always had 2 to 25MB of used swap space.  (Out of 128MB total)  How do I get this to be 0MB swap used unless I run out of "free" memory?  On Linux, there is now a "swappiness" parameter that controls the tendency to use swap.  I'd like to crank OS X's "swappiness" down very very low, but not deactivate swap entirely.  I'd like to know that my machine will just run slower if it ever runs out of memory instead of having a kernel panic.  I'm pretty close to where I want to be, but I'd like to get rid of these writes to a large file that (slightly) shorten the life of my SSD while doing me no benefit whatsoever.    <answer8470> I'm not sure that a swap file of 2MB to 25MB is really something to worry about. It might be more useful to look at the values for Page In and Page Out to determine how emoften/em data is being written to the swap. The number of page events can be found using the System Memory tab of the Activity Monitor application.  There are a couple of other options that you could try but I think you're probably way out of warranty if you try:  ul liDisabling dynamic pager/li liCreating a new paging system/li /ul  I would just suggest putting up with the existing system since the wear on your SSD is probably minimal especially since SSD wear is a bit of a myth anyway or maybe it's not.  <answer31234> If there's anything like this available in OSX, it probably lives somewhere in here:  precode  sysctl -a | grep ^vm | sort /code/pre  These look like possible suspects to me:  precode  vm.vm_page_free_target: 2000   vm.memory_pressure: 0   vm.page_free_wanted: 0 /code/pre  A HP doc on managing memory performance mentions some of those same kernel variables in S6.1.4 and S6.5.  However, this looks like the golden egg in HP Tru64, and there's nothing like this I see in OSX:  precode  vm_aggressive_swap /code/pre  Googling on codevm_page_free_target/code turns up an OSX Internals book which might help.    <answer246782> For temporary solution, you can run codesudo purge/code to force disk cache to be flushed and emptied which may reduce the swappiness a bit (if you had several large swap files in code/private/var/vm/code, e.g. I've got 17G of them at the time of writing). If won't work, remove the files manually, they would be recreated.  You can also disable dynamic pager (swap daemon), so run in Terminal (restart is required):  precodesudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.dynamic_pager.plist /code/pre  To re-enable:  precodesudo launchctl load -w /System/Library/LaunchDaemons/com.apple.dynamic_pager.plist /code/pre  Unfortunately in the latest OS X you've to also disable SIP (emSystem Integrity Protection/em) which is actually not recommended. See: How do I disable System Integrity Protection (SIP) AKA &quot;rootless&quot; on OS X 10.11, El Capitan?  <comment9157> Thanks, but if you re-read my question, you'll find that there are actually two files 64MB each.  It's not just 2 to 25MB.  It's 128MB total swap and 2 to 25MB usage.  What I find annoying, is that the total swap varies between 64 and 128MB.  This would seem to indicate that the 2nd swap file is being deactivated then recreated.  That's a lot of disk use for nothing.  I already knew of the two system mods you suggested, and indicated that I didn't like the 1st one.  The 2nd one, I find to be not well engineered. <comment36233> This is your answer.  Disabling the dynamic pager can really help but you truly run the risk of causing apps to go belly up when you run out of ram.  If actually running out of memory isn't an issue for you then don't worry. <comment36239> It's understood you do what you want, and you're asking for an answer to this question â€” I won't contest this. However, I think it is important to make it clear for less technical-savvy users: the fact that your system is swapping, especially on such a little amount, is **not** a problem at all, not necessarily a source of sluggishness, and even the opposite. The OS can decide some memory parts won't be accessed and it's more effective to preemptively free some blocks in RAM and get extremely unlikely cache misses. OS X is very good at this (see RAM usage of hidden apps). <comment304447> The first link is dead. <comment312874> I've fixed the broken link.... although this answer is now 5 years and almost 6 macOS versions out of date.