Updating and running Git through Homebrew instead of XCode <body> On my new 2014 Mac (OS X 10.9 Mavericks), I have just installed Git using Homebrew. In order to install Homebrew, I had to download and install XCode 5. So now, when I enter the command codewhich git/code, I can see that Git is running from a different file pathway than the rest of the Homebrew installation. Git's different pathway is code/usr/bin/git/code. I believe it is supposed to be in code/usr/local/bin//code instead, with the rest of Homebrew.  I found a solution to getting Git to run from the Homebrew installation (and consequently an updated version of Git). According to another Q&amp;A on this site, the solution is to add codeexport PATH="/usr/local/bin:$PATH"/code in code~/.bash_profile/code.  Unfortunately, I don't understand where to enter that information. When I'm in Terminal, I can't change directories to something called "~/.bash_profile." How do I get there to enter the command codeexport PATH="/usr/local/bin:$PATH"/code? I tried entering the command code/usr/bin/open ~/.bash_profile/code, but Terminal tells me: codeThe file /Users/**MYNAME**/.bash_profile does not exist./code  <answer144878> This: code~/.bash_profile/code is a emfile/em, not a emdirectory/em. It's a file that gets executed when you start a bash login shell:     A login shell is a bash shell that is started with - or --login.      When BASH is invoked as a login shell, the following files are executed in the displayed order.      ol   licode/etc/profile/code/li   licode~/.bash_profile/code/li   licode~/.bash_login/code/li   licode~/.profile/code/li   /ol   To ensure your Homebrew-installed tools appear before any other tools you can copy and paste the following in to a terminal window to update your code~/.bash_profile/code file:  precodecat &lt;&lt; 'EOF' &gt;&gt; ~/.bash_profile  export PATH="/usr/local/bin:$PATH" EOF /code/pre  This will append (code&gt;&gt;/code) the necessary lines to code~/.bash_profile/code for you in a safe manner. The append will create the file if it does not exist. The heredoc syntax used above is explained in this nice StackOverflow answer.  After making changes to your code.bash_profile/code file you need to reload it or start a new Terminal session to see the change. To reload it in your existing session type:  precodesource ~/.bash_profile /code/pre  <comment171246> Thank you. My limited knowledge of Terminal: Running Git and Haml/Sass commands! So, on a new line in a new window, I copied/pasted your recommended command. This had no effect; when I checked on the location of my git repository again by typing `which git`, the pathway was in the same incorrect location. I was asked to run `sudo` commands to update XCode, so I did, and then was asked to run `brew doctor` again. I watched a new empty git repo initialize within `/usr/local/.git/`. But when I type `which git` again on a new line to verify that correct location, I just see `/usr/bin/git` again. <comment171247> After changing your `.bash_profile` file you need to start a new Terminal to load the changes or run `source ~/.bash_profile` in your existing Terminal. <comment171251> I have quit Terminal, re-opened it, and run your original `cat` command again. Then I entered your additional command, `source ~/.bash_profile` on a new line. I typed in `which git` again, but am still seeing the incorrect file pathway. <comment171254> I've reviewed the answer from the question I referenced originally. Someone advised opening .bash_profile in a text editor with the command `/usr/bin/open ~/.bash_profile`. I entered this command and found my `export PATH="/usr/local/bin:$PATH"` command written several times (for each time I've duplicated the Terminal command). I erased the duplicate entries and kept one line of that `export PATH`(etc.) command. Does this mean that I'm now ACTUALLY using Git from Homebrew's installation in `/usr/local/.git/`--even if the `which git` command always shows me `/usr/bin/git` instead? <comment171255> If `which git` is showing you `/usr/bin/git` and not `/usr/local/bin/git` then you're not using the Homebrew version of git. <comment171256> Let's trouble shoot this in a chat room: http://chat.stackexchange.com/rooms/17163/discussion-between-ian-c-and-joker6 <comment171411> I would love to, thank you for offering! But I don't have enough reputation points to participate in a chat room yet. Is there another forum we can use? <comment171419> You should have access to that chat now.