Can I make the Finder label a folder if it contains a file or folder of a specific name? <body> I'd love it if I could somehow make the Finder color-label all folders containing a .git directory so I could tell at a glance if the folder is a Git repo. Any ideas?  <answer55493> Saw this question and realized the answer would be useful to me too. Here's the Applescript I came up with. Copy it into Applescript Editor, and adjust the two variables codetheSearchPath/code (first line) and the index number at the end of the codeset label index/code line and you should be good to go.  I'm searching code~/projects/code and coloring the results green in this case.  precodeset theSearchPath to "/Users/Me/projects" set theResults to do shell script "find " &amp; quoted form of theSearchPath &amp; " -name .git"  repeat with i from 1 to (count paragraphs of theResults)   set theResult to paragraph i of theResults   set theParentPath to text 1 through ((length of theResult) - 5) of theResult   set theParentAlias to POSIX file (theParentPath) as alias   tell application "Finder"     set label index of theParentAlias to 6     -- Set the last value of the above line to correspond with the color you want.     -- 0 is no color     -- 1 is orange     -- 2 is red     -- 3 is yellow     -- 4 is blue     -- 5 is purple     -- 6 is green     -- 7 is gray   end tell end repeat /code/pre  Note: It hasn't been written to gracefully handle errors spit out by the codefind/code command. As long as you're searching directories you have permissions on, this shouldn't be an issue.  <answer282221> Vickash's script didn't work for me so I updated it, and revised it slightly to be able to find any file extension by specifying the extension in the variable codetheFileExtension/code (in my case, .flac files.) Works in Sierra.  precodeset theSearchPath to "/Users/Me/projects" set theFileExtension to ".flac" set theResults to do shell script "find " &amp; quoted form of theSearchPath &amp; " -name *"&amp;theFileExtension  repeat with i from 1 to (count paragraphs of theResults)     set theResult to paragraph i of theResults     set thePath to text 1 through ((length of theResult)) of theResult     tell application "Finder"         set theParentAlias to container of (POSIX file (thePath) as alias)         set label index of theParentAlias to 1         -- Set the last value of the above line to correspond with the color you want.         -- 0 is no color         -- 1 is orange         -- 2 is red         -- 3 is yellow         -- 4 is blue         -- 5 is purple         -- 6 is green         -- 7 is gray     end tell end repeat /code/pre  <comment63534> Use Folder Actions http://apple.blogoverflow.com/2012/06/folder-actions-tutorial-automation-meet-the-filesystem/ <comment63576> @mankoff thanks for the suggestion, but aren't folder actions tied to specific folders? Or can I make a folder action that is attached to ALL folders, even newly created ones? <comment63591> Oh you are probably right. OK. Perhaps you'll need to code. See SCPlugin, the SVN Finder Plugin. It changes folder and file icons based on SVN status. <comment63592> Or, cron job with a 'find' or 'mdfind' command, calling AppleScript? There are an infinite number of hack-ish ways to do this. Not sure about the best formal method.