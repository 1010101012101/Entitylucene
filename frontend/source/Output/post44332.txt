Insert code blocks in the body of emails <body> I'm a developer, and I'd like to be able to distinguish blocks of code from regular text, when I write emails.   precodeBasically I wanna be able to do this. In the Mail app, (or Sparrow!). /code/pre  Is there a way to do this emwith a shortcut, or macro, etc/em so that I don't have to reach for the mouse every time and change like 20 font attributes?  <answer44335> Assuming you're comfortable sending HTML mail you could use Markdown to format your email message and create an automator service to convert, render and replace your markdown with formatted text.  ᔥ Ryan Gray: Markdown Compose for Mac OS X Mail     [W]hat I had to do was to save the HTML generated from the Markdown conversion to a temporary file, then open that in Safari, have Safari select all and copy to the clipboard (copying an HTML object), then having Mail paste it – replacing the selected Markdown text. So, the service workflow takes the selected text, but does not itself replace the selection directly.   Instructions for creating this service are provided in the article.  In addition to providing an explicit path to the markdown.pl file in your Automator script, be certain that you make markdown.pl an executable file.  precodechmod a+x your/path/to/markdown.pl /code/pre  strongNote:/strong With the demise of Posterous, the original link to Ryan Gray's article broke. I've edited the answer to point to a version archived at The Internet Archive Wayback Machine. ↬Dominique for bringing the broken link to my attention.   <answer44344> The magic behind the formatting on StackExchange is a great perl script called Markdown. Download it, and double-click the resulting Markdown_1.0.1.zip file.  Then, in terminal, type  precodechmod a+x ~/Downloads/Markdown_1.0.1/Markdown.pl sudo cp ~/Downloads/Markdown_1.0.1/Markdown.pl /usr/local/bin/ /code/pre  Once you have that done, you can create a Service in strongAutomator/strong.  The service you create receives strongrich text/strong in strongany application/strong. Uncheck the box that says strongOutput replaces selected text./strong  Your service will contain two actions:  The first action is strongRun Shell Script/strong. Here is the shell script:  precode/usr/local/bin/Markdown.pl | /usr/bin/textutil -stdin -stdout -format html -convert rtf | /usr/bin/pbcopy /code/pre  Your section action is strongRun AppleScript/strong.  Here is the AppleScript:  precodetell application "System Events"     keystroke "v" using {command down} end tell /code/pre  Save the service, and, if you wish, assign it a keyboard shortcut using strongSystem Preferences/strong » strongKeyboard/strong » strongKeyboard Shortcuts/strong » strongServices/strong  Then, you can type text using the formatting codes you use on this site, and run this service to generate formatted text. This will only work if your mail messages are set up as strongemRich Text/em/strong -- if you have plain text mail messages, running this service will simply erase the contents of your message, as your rich text formatted by the service will not be able to be pasted.  <answer44447> I use a shell script like this:  precodeecho "&lt;style&gt; $(cat /Applications/Marked.app/Contents/Resources/swiss.css | sed 's/&amp;/&amp;amp;/g;s/&lt;/\&amp;lt;/g;s/&gt;/\&amp;gt;/g') &lt;/style&gt; $(cat | pandoc --strict -p)" | textutil -stdin -stdout -inputencoding UTF-8 -format html -convert rtf | LC_CTYPE=UTF-8 pbcopy /code/pre  codepandoc --strict -p/code acts like Markdown.pl and preserves tabs.  code-inputencoding UTF-8/code is required to preserve non-ASCII characters. codeLC_CTYPE=UTF-8/code is not needed if LC_CTYPE is already set to a UTF-8 locale.  <answer148034> You can install Markdown Service Tools and then follow the instructions by Tobias O’Leary. Recommended!  <answer182327> I know this one is a little old -- so here is an update of sorts.  I had a hard time getting that answer's shell script to work correctly.  I had installed Markdown via brew.  On the shell script "Pass input:" set to "as arguments".  I had success with this variation on the shell script:  precode/usr/local/bin/markdown &lt;( echo "$1" ) | /usr/bin/textutil -stdin -stdout -convert rtf -format html | /usr/bin/pbcopy /code/pre  The AppleScript remained the same.  img src="https://i.stack.imgur.com/4mXTu.png" alt="enter image description here"  <comment50377> Cleaner than "rendering" the HTML in Safari. I like it. <comment50477> Sadly, this still doesn't work for me. I now get "Failed to write output" and again it looks like it's caused by the second part (pasting). I'm running 10.6.8 with Automator 2.1.1. I'm guessing it's a versioning issue. <comment50496> If anyone has debugging issues, we have a room: http://chat.stackexchange.com/rooms/info/2830/markdown-automator-mail?tab=general <comment53424> This is brilliant. For those of you who prefer reStructuredText: `/path/to/rst2html.py -q --stylesheet=/create/a/style.css --embed-stylesheet | /path/to/textutil -stdin -stdout -format html -convert rtf | pbcopy` <comment110508> Ryan Gray's article is no longer at the address given now that Posterous is gone. However, Brett Terpstra has an awesome [set of OSX services for Markdown](http://brettterpstra.com/projects/markdown-service-tools)! <comment111480> Yes, I use Brett's Markdown Services constantly. <comment345814> Holy crap this is cool!!! Works perfectly.