How to change a key combination without using Karabiner? <body> I have used Karabiner to change a key combination but the problem is, it doesn't work exactly as I want.  For example, using Karabiner, I have mapped kbdalt/kbdkbd←/kbd to kbdcmd/kbdkbd←/kbd and vice versa. But what Karabiner does is, it "tricks" the OS to make it think that I have pressed kbdalt/kbdkbd←/kbd, whenever I press kbdcmd/kbdkbd←/kbd.  This isn't the behaviour I want. The behaviour I want is, whenever I press cmd&lt;-, I want the system to think that I have indeed pressed kbdcmd/kbdkbd←/kbd, but instead of moving the cursor to the beginning of the line, I want it to move it to the previous word.  It is possible to do this maybe messing with some system files and stuff?  <answer208915> You can change the text editing bindings for Cocoa apps with DefaultKeyBinding.dict. This will work for almost all applications where the kbd⌘ command/kbd+kbd← left/kbd and kbd⌘ command/kbd+kbd→ right/kbd worked before. (The only way it wouldn't work is if the application creator reimplemented those shortcuts from scratch, which is doubtful as it would be much easier to just use the versions that come free with a textfield.)  ol liIf the directory code~/Library/KeyBindings//code does not exist, create it./li liCreate the file codeDefaultKeyBinding.dict/code in that directory with contents like this:  precode{     "@\Uf702" = moveWordBackward:;     "@\Uf703" = moveWordForward:;     "~\Uf702" = moveToBeginningOfLine:;     "~\Uf703" = moveToEndOfLine:; } /code/pre  The code@/code refers to the Command key, code~/code is Option, code\Uf702/code is Left, and code\Uf703/code is Right. The selectors on the right-hand side are the same ones used in the default file, code/System/Library/Frameworks/AppKit.framework/Resources/StandardKeyBinding.dict/code, but switched around to match what you said in your question./li liRestart an application for the changes to take effect in it./li /ol  Here's an in-depth guide to the Cocoa Text System that should help explain what's going on.  <comment251919> Hmm You may restrict the solution I offered in the [related question](http://apple.stackexchange.com/questions/208875/how-can-i-change-a-command-and-cursor-key-bindings-globally) to particular apps. <comment251920> @klanomath That may work, albeit not very practically. The behaviour I want is, I want cmd- act as Ctrl- of a PC keyboard. That is; make the cursor move to the previous word. ... <comment251921> @klanomath ... Note that I am talking about cursor because I want this behaviour to happen only on text fields. The reason is, for example I am using cmd- as "Show Previous Tab" shortcut on Safari. <comment251922> @klanomath I feel like there's _gotta_ be some magic to do it by messing with some system files and stuff but the problem is, I don't know how to do it or is it really possible. <comment251926> Probably you indeed have to hack some frameworks (which may overwritten by the next system update). Do you need the solution in EVERY app. I think the most problematic apps are browsers because they may offer text field as well as tab/window navigation with those shortcuts <comment251927> @klanomath Practically, I need the solution everywhere where I am editing text. <comment251928> Thanks. Could you also post some links so that I will understand what exactly I am doing by doing these and understand how these work? <comment251930> In short, I just want to understand how this works. <comment251932> @Utku: Edited. Hopefully that helps. <comment251933> @Utku [Developer Apple](https://developer.apple.com/library/mac/documentation/Cocoa/Conceptual/EventOverview/TextDefaultsBindings/TextDefaultsBindings.html) <comment251937> @0942v8653 Just to understand more deeply: This works perfectly in applications like TextEdit, Notes, etc. but in Terminal, still alt- moves the cursor to the previous word. Also, still the original bindings work in this comment box as well. What is the reason for this? Why didn't that change affect Terminal or Stack Exchange's comment box? <comment251938> @Utku: What browser are you using? It works in the Firefox I am using to write this comment right now, and it should also work in Safari. Terminal does not use the Cocoa Text System because its needs are more specialized (it has to draw characters on the screen quickly and in a matrix, which is not what the Cocoa Text System is for). You can change your Terminal keybindings in Terminal's Preferences  Profiles  [your profile]  Keyboard. Evidently your browser also doesn't use the Cocoa Text System or try to adopt its keybindings. <comment251940> @0942v8653 I am using Safari. It seems odd that it doesn't work in Safari. <comment251941> @0942v8653 Sorry for bothering it works now. Probably I have tried it before restarting Safari. <comment251943> @0942v8653 By the way, how can I learn which applications use Cocoa Text System and which ones do not? <comment251944> @Utku: There is no real way to tell except for trying it out. Generally, any app that is Mac-only or made natively should use Cocoa Text System, and any app that uses GTK+ or Qt should not. I don't think that Firefox uses it (it is GTK+) but it must have some sort of workaround to make DefaultKeyBinding.dict work. <comment251949> @0942v8653 One last question: In Safari, I have assigned custom keyboard shortcuts from System Preferences - Keyboard - Shortcuts - App Shortcuts. I have assigned cmd- to show previous tab and cmd- to show next tab. Normally, when I am not in a text box, these shortcuts work as intended but when I am in a text box, apparently Cocoa Text System's shortcuts (fortunately) override and they act as previous word and next word. I am just curious about why Cocoa Text System's shortcuts override these shortcuts I have assigned. <comment251950> @0942v8653 Even more interestingly, I observe this behaviour on every text box in Safari, except the address bar/search box on top. Does this mean that the address bar/search box does not use Cocoa Text System or it too uses it but somehow, Cocoa Text System's shortcuts do not override the shortcuts I have specifically assigned for Safari? <comment251953> @Utku: I don't really know. I would say that it probably does use the Cocoa Text System but overrides shortcuts for the address bar (It doesn't disable them completely—I don't have your settings for navigating back and forward in history and the editing bindings still work for me).