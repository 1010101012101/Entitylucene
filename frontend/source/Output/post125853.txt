Homebrew doctor warnings requesting library deletions <body> I got the following list of codebrew doctor/code warnings and was wondering if it's safe to  delete the libraries and .pc files listed. (I have no idea what they are used for!)  precodeWarning: Unbrewed dylibs were found in /usr/local/lib. If you didn't put them there on purpose they could cause problems when building Homebrew formulae, and may need to be deleted.  Unexpected dylibs: /usr/local/lib/libtcl8.6.dylib /usr/local/lib/libtk8.6.dylib  Warning: Unbrewed .pc files were found in /usr/local/lib/pkgconfig. If you didn't put them there on purpose they could cause problems when building Homebrew formulae, and may need to be deleted.  Unexpected .pc files: /usr/local/lib/pkgconfig/tcl.pc /usr/local/lib/pkgconfig/tk.pc  Warning: Unbrewed static libraries were found in /usr/local/lib. If you didn't put them there on purpose they could cause problems when building Homebrew formulae, and may need to be deleted.  Unexpected static libraries: /usr/local/lib/libtclstub8.6.a /usr/local/lib/libtkstub8.6.a /code/pre  <answer127273> I had the intention of uninstalling R completely from my Mac and re-installing it using Homebrew.  The steps I took were as follows:  1) Remove the R app and framework:  precoderm -rf /Library/Frameworks/R.framework /Applications/R.app \    /usr/bin/R /usr/bin/Rscript /code/pre  2) Remove the packages accompanying R (my understanding was that R installed some packages). On my system, I identified the following packages:  precode$ pkgutil --pkgs | grep org.r- org.r-project.R.Leopard.fw.pkg org.r-project.R.Leopard.GUI.pkg org.r-project.R.Leopard.GUI64.pkg org.r-project.R.x86_64.fw.pkg org.r-project.R.x86_64.GUI.pkg org.r-project.x86_64.tcltk.x11 /code/pre  To see which files make up the Tcl/Tk package, for example, you may type:  precodepkgutil --files org.r-project.x86_64.tcltk.x11 /code/pre  I used the following command to remove all the files and (sub-)folders from that package:  precodepkgutil --files org.r-project.x86_64.tcltk.x11 | xargs sudo rm -rf /code/pre  That turned out to be a very bad idea as it resulted in a kernel panic and I ended up having to re-install Mavericks!  Apparently, according to the geniuses at the Apple Store, the above packages come pre-installed with Mavericks and, for some unknown reason, deleting the files from the above mentioned package removes some essential system files!  I concluded that using Homebrew causes a lot more trouble instead of making my life easier!  Originally, I dumped MacPorts for Homebrew because Homebrew was faster and MacPorts seemed to keep a lot of "leaves" on its trees! Also, both require regular maintenance.  Finally, I'm giving up both!  <answer143143> I got the same warnings, and worked it around with the following:  So first back up these files:  code mv /usr/local/lib/libtcl8.6.dylib /usr/local/lib/libtcl8.6.dylib.bak ... /code  Then install tcl/tk with Homebrew:  code brew tap homebrew/dupes brew install tcl-tk --with-tk /code  Then link the files, so that R can find the tcl/tk installed by Homebrew:  code ln -s /usr/local/Cellar/tcl-tk/8.6.1/lib/libtcl8.6.dylib /usr/local/lib/libtcl8.6.dylib ln -s /usr/local/Cellar/tcl-tk/8.6.1/lib/libtk8.6.dylib /usr/local/lib/libtk8.6.dylib /code  Please double check that the linked location is where tcl-tk is installed.  Now both Homebrew and R are happy.  More details can be found on my blog. Hope this helps.  <answer148605> I got the same warnings from codebrew doctor/code. To get rid of R that I had installed via the cran package, I basically followed the same steps as Olivier, thus removing app and framework as described in the R Installation and Administration manual:  precoderm -rf /Library/Frameworks/R.framework /Applications/R.app /usr/bin/R /usr/bin/Rscript /code/pre  Then I carefully removed the files listed as belonging to the package by bmaking sure that no directories were deleted/b (especially the complete codeusr/code branch, which is listed in the output of codepkgutil/code -- delete this one and you will get a kernel panic):  precodefor F in `pkgutil --files org.r-project.x86_64.tcltk.x11 | sed 's/^/\//'`   do if [[ -f $F ]]     then rm $F   fi done /code/pre  This left me with few Tcl and Tk-related directories in code/usr/local/lib/code, which I got rid off bmanually/b, checking the output from codepkgutil/code. Alternatively, but risking to remove unrelated directories that for whatever reason were left empty, this could be done via:  precodefind /usr/local -type d -empty -delete /code/pre  I reinstalled R through codebrew install r/code without problems.  <comment148759> The only way we could answer this is if we knew what installed them and then what uses them. <comment148989> Apparently, the libraries come from installing R.app http://apple.stackexchange.com/questions/122558/making-homebrew-and-r-app-live-together-happily <comment148995> Then this is a dup and as my comment there says Something is very likely to break and none but you will be in a position to debug it - which is why those who know how to debug this don't use a package manger that puts things where you also build - they know how to debug having done this before <comment148999> Your comment isn't of much use to me, but thanks for your effort anyway! <comment149002> The answer is it is not safe as something will break but you might not get told what goes wrong until you see a wrong answer in some report although more likely a crash <comment149003> If I want to keep things safe, does that essentially mean that I have to chose between using R or using Homebrew? <comment178661> Alternatively, Oliviers answer works fine if one adds the `--only-files` flag to `pkgutil` to make sure no directories are removed.