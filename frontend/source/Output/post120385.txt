How to automatically mount NFS shares on OS X <body> I have a NFS server set up on my local LAN running on Arch Linux that I can connect to using OS X Mavericks by issuing the following command in the terminal:  precodemount -t nfs -o resvport host:/srv/nfs4/users /mnt/host /code/pre  As the NFS client is a MacBook Pro, I would like for it to automatically connect to the NFS server whenever I am home (and do nothing otherwise).  Adding the following line in code/etc/auto_master/code did not work:  precode/mnt/host -fstype=nfs4,resvport host:/srv/nfs4/users /code/pre  More specifically, running codeautomount -vc/code yields the following:  precodeautomount: /net updated automount: /home updated automount: /mnt/host nmounted automount: no unmounts /code/pre  ...but code/mnt/host/code is an empty directory even when I codecd/code into it.  Can anybody help me out?  Thanks in advance and let me know if I omitted important details.  <answer120392> If you try default code/etc/auto_master/code file, you can see line  precode/net            -hosts      -nobrowse,hidefromfinder,nosuid /code/pre  Then you can codecd /net/host/exported/path/code and found that mac tries to mount this exported path.  <answer136116> I'm running into the same problem than @ndejay but the cause may differ sightly.  I'm using NFSv3 and my Autofs maps were working on OS X 10.5 to 10.8 :  precode/mnt -fstype=nfs,nfsvers=3,proto=tcp,resvport myserver:/share /code/pre  On Mavericks it works only from the command line :  precodemount -t nfs -o nfsvers=3,proto=tcp,resvport myserver:/share /mnt /code/pre  With a little debugging and sniffing I figured out that Mavericks's Autofs tries to mount the NFSv3 share only if its "pingnfs" check (with UDP paquets to port 111) is successful.  That behaviour added to a corporate firewall that doesn't allow UDP trafic on port 111 makes Mavericks not usable for us.  <answer136914> I've been using a commercial product called NFS Manager to handle my automounts, and it's been working great. It has a trial mode, so you can see if it works for you and is worth the money.   I have no affiliation with the product.  <answer165197> I found that the automountd service wasn't loaded on my machine (running 10.10 Yosemite).  precode$ sudo launchctl list | grep -i auto 84878   0   com.apple.autofsd -   0   com.apple.preferences.timezone.auto -   0   com.apple.automountd /code/pre  Restarting autofsd and automountd and then rerunning codeautomount -vc/code has made it work.  precodesudo launchctl unload /System/Library/LaunchDaemons/com.apple.automountd.plist sudo launchctl unload /System/Library/LaunchDaemons/com.apple.autofsd.plist sudo launchctl load /System/Library/LaunchDaemons/com.apple.autofsd.plist sudo launchctl load /System/Library/LaunchDaemons/com.apple.automountd.plist /code/pre  <comment140455> Thanks for the suggestion but it doesn't work for me. <comment140519> @ndejay Try `cd /net/host/srv/nfs4/users`. Your Arch Linux box must export the path with the `insecure` option, see http://forums.macrumors.com/showthread.php?t=317044 for more information. <comment161501> This approach may be helpful: http://smekkley.wordpress.com/2014/01/18/time-machine-via-nfs-on-mavericks/ - it suggests avoiding NFSv4 on OS X 10.9 and provides specific flags to ensure a stable NFS automount.