How to create duplicate pair of keyboard media keys for use with iTunes and streaming websites <body> I've recently installed the Google Chrome extension Streamkeys which allows the user to use keyboard commands to perform common playback actions on popular streaming sites (Youtube, Soundcloud, and many major sites).  For macOS, Streamkeys default setting is to use the global Mac media keys (kbd⏪/kbd kbd▶/❚❚/kbd kbd⏩/kbd).  Due to Chrome design, global keys cannot be rebound to use modifier keys like kbdSHIFT/kbd + kbd▶/❚❚/kbd.  I like the idea of using the media keys for global Soundcloud/Youtube control, so what I'd like to do is to rebind the keyboard so that emiTunes/em instead uses modifier keys like kbdSHIFT/kbd + kbd▶/❚❚/kbd. That way, I can have the best of two worlds.  Question: How can I "duplicate" these three keys to a new location and use them to control iTunes, while still letting Chrome think that they are in their old location? In other words, I would effectively like two pairs of the same keys, only that one pair controls iTunes and one pair controls Chrome Streamkeys.  Is this even possible, and am I thinking about it the right way, when assuming that I would need "duplicates"? Just rebinding the keys would probably not work, since Chrome would still find the keys and "take them" for Streamkeys?  Note again: this is about emglobal/em control. It is not the same as in-tab in Chrome or in-app in iTunes.  <answer254340> h2Install Karabiner/h2  Which can be found there: Karabiner: a keyboard customizer for OS X  h2Analyse which keys are involved/h2  Within codeKarabiner/code menu select codeLaunch EventViewer.../code and type on the music control key you would like to program. Here is the output you should get: img src="https://i.stack.imgur.com/oUwrG.png" alt="Karabiner Event Viewer"  h2Make a codeprivate.xml/code/h2  Read the codeKarabiner/code documentation on the topic: private.xml Reference Manual  Create the code${HOME}/Library/Application Support/Karabiner/private.xml/code with the following content:  precode&lt;?xml version="1.0"?&gt; &lt;root&gt;   &lt;item&gt;     &lt;name&gt;Shift standard music control keys&lt;/name&gt;     &lt;identifier&gt;Shift standard music control keys&lt;/identifier&gt;     &lt;autogen&gt;__KeyToKey__ ConsumerKeyCode::MUSIC_PREV, ModifierFlag::SHIFT_L, ConsumerKeyCode::MUSIC_PREV&lt;/autogen&gt;     &lt;autogen&gt;__KeyToKey__ ConsumerKeyCode::MUSIC_PLAY, ModifierFlag::SHIFT_L, ConsumerKeyCode::MUSIC_PLAY&lt;/autogen&gt;     &lt;autogen&gt;__KeyToKey__ ConsumerKeyCode::MUSIC_NEXT, ModifierFlag::SHIFT_L, ConsumerKeyCode::MUSIC_NEXT&lt;/autogen&gt;   &lt;/item&gt; &lt;/root&gt; /code/pre  Depending of your taste, use codevi/code, codeemacs/code or codeTextEdit/code (of course not codeWord/code).  If you want to be clean, I would suggest you to proceed as I did.  Create a source with the above content in:  precode${HOME}/Documents/src/Karabiner/music.xml /code/pre  and then install it within the codeKarabiner/code directory:  precodecp ${HOME}/Documents/src/Karabiner/music.xml "${HOME}/Library/Application Support/Karabiner/private.xml" /code/pre  ( The code"…"/code use is necessary because of the space within codeApplication Support/code. ).  h2Load your codeprivate.xml/code/h2  Tell codeKarabiner/code you will use a custom setting: img src="https://i.stack.imgur.com/H65Pc.png" alt="Karabiner use prepared settings"  and load it: img src="https://i.stack.imgur.com/cMGa5.png" alt="Karabiner apply prepared settings"  h2Test it/h2  Check that this let you achieve the mapping you want to get with codeChrome/code.  I didn't check this part of your request, and I am not sure I understood it fully.  Report success or failure, since this may help some other users .  <answer254466> Alternative solution that tends to the issue of the OP, but doesn't answer the question:  In case someone is having the exact same issue with Streamkeys uptaking the place of media keys that should also control iTunes, I found that the best way to mitigate this issue is use the Chrome extension Extension Automation to activate Streamkeys only when sites you specify have been opened in a Chrome tab. So if Soundcloud, Youtube or any other site that you may specify isn't open in a tab, iTunes controls will work as normal.  Rebinding the Streamkey shortcuts in Chrome to something like kbdShift/kbd + kbdCtrl/kbd + (kbd7/kbd/kbd8/kbd/kbd9/kbd) is also possible solution, of course.  <comment316717> Daniel, thanks very much for these detailed guidelines. Rebinding the media keys to use Shift modifiers actually didn't work (I'm pretty sure I did it right). The normal keys are still in use, but the Shifted commands do nothing. Does `__KeyToKey__` *duplicate* or *move* key mappings? <comment316778> The above configuration tested give me 6 working keys. The mapping defined by `Karabiner` is a one way mapping. Did you use the **left** shift key? <comment316779> Check with `Karabiner  Launch EventViewer...` which keycode are exactly sent. If they are different from the one in my answer, then you have to adapt your `private.xml`. If you are in such a case, please add a screen capture of `EventViewer...` within your original question. <comment316794> I'm getting the same keycodes as in your screenshot, but the media keys are still designated to their original places. Strange. I do know from previous  experience with Karabiner that your answer should theoretically be correct (probably), so I guess I will have to keep on looking for a fix. <comment316796> I checked with `iTunes` my 3 music control keys work alone **and** with the shift modifier. I suspect that `Streamkeys` is modyfing the key function not only within `Chrome` but at the global level. <comment316797> You should add your found solution as an answer since it seems a fully working one which isn't the case of mine.