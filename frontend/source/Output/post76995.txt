gcc vs. llvm, compiling c++ code, migrating from linux <body> i'm migrating from linux machine to mac os x. I was used to write c++ application (for opengl and opencv application mainly) using vim as editor.  Now, i have installed XCode on a new 10.8 mac os x machine, and I read about some problems in installing a new g++, and i was wondering if i really need it, what are the main differences between llvm and g++, if i can use my old codes with no problems in Xcode, with my old makefiles, etc..  Do you have some advice?  <answer76998> In general g++ and llvm are different implementations of a C++ compiler, both run conforming c++03 programs and have different parts of C++11 implemented.  In general you code should work under both (it is a common way of debugging/checking code to compile code under differ compilers).  Your makefiles will need a slight change - if well written only in a few places to change the compiler to use the llvm one.  the main issue to note is that Linux is not Unix (and even then OSX is based on BSD) and so some of the system calls will change.  I would stick with llvm unless there is a well documented bug in the code that forces you to use gcc.  <comment89335> Feel free to edit in which problem you have or link to a summary of the problems. Keep in mind, we are _not the place_ for programming expertise - but do allow basic usage questions and how to compile open source software. Feel free to flag this or ask on [meta] about where we draw the line between compiling open source and advising developers on choosing a compiler.