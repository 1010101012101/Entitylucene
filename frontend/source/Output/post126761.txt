Way to logout a user from the command line in OS X 10.9 <body> I want to logout my Mac OS X from the command line. My OS X version is 10.9. I tried command codepkill -KILL -u uid/code, but this command didn't work out. Is there a command that can be used to log out a user from the system using command line only, not AppleScript?  <answer126762> This has worked for me in the past:  strongLog out (with confirmation)/strong  precodeosascript -e 'tell app "System Events" to log out' /code/pre  strongLog out directly (no confirmation)/strong  precodeosascript -e 'tell app "System Events" to  «event aevtrlgo»' /code/pre  or  precodeosascript -e 'tell application "loginwindow" to  «event aevtrlgo»' /code/pre  This way any running application will get noticed and can terminate in a safe fashion.  <answer126785> To log out purely from terminal (or a remote ssh session), just kill the loginwindow process:  precodesudo pkill loginwindow /code/pre  You could get fancy and specify the user if multiple users have a loginwindow process, but this is an easy one shot, no prompt way to end a user's graphical session.  <answer158219> If you have multiple users ....  Find the Process ID with:  precodeps aux|grep login /code/pre  Then kill that process and you logged that session out. But there are a lot of procceses left.  Check with codepstree/code so you know which process to terminate.  <answer186561> This does the trick for me.  precodesudo su /code/pre  To get some root privileges and the # prompt, then kill the processes.  precodekillall -vu username -HUP /code/pre  And if it´s not all gone. Nuke em!  precodekillall -vu username -9 /code/pre  <answer222798> if you're logged with ssh to a remote computer you can logout by simply typing 'exit':  precode[host:~user]$ exit /code/pre  <answer230972> codesudo launchctl bootout gui/$(id -u &lt;username&gt;)/codebr orbr codesudo launchctl bootout user/$(id -u &lt;username&gt;)/code  Replace username with the target user's user name or replace the whole subshell with the user's uid.  This tells launchctl to teardown the users login session (gui specifically refers to the user's temporary login session, user specifies the users background processes).  You can log yourself out without the codesudo/code to test this.  Note that this will ONLY work on macOS 10.11.x or newer (see codelaunchctl help/code for more)  <comment148472> what exactly didn't work out? <comment148474> on running the command pkill -KILL -u uid the system shows me a grey screen and on waiting for long the system shows the force quit window with no application running <comment148477> osascript -e 'tell app "System Events" to  «event aevtrlgo»'  showing error: a "" cant go sfter this to . <comment148483> Hmm, works ok for me. Can you try from a shell script instead of the command line, maybe the shell does some strange stuff here. <comment148503> I'm guessing the OP has some other issue and the normal commands are getting hung up from the comments here and the question description. <comment181931> This did work on earlier OSX versions, but has stopped working for a lot of time, IIRC at least since 10.8. <comment181976> @Lohoris This still logs me out on 5 of 5 macs I've tested since your comment. One is 10.8.5, one 10.9.5 and the rest are 10.10. <comment181978> It might count as "logged out", but if you check with `ps -auxw` you'll notice there are still many processes pertaining to the "logged out" user. <comment181981> @Lohoris User processes are started before you log in on OS X now. Killing loginwindow does the same as the log out option on OS X graphically or using AppleScript as the OP here doesn't want. The processes that depend on the graphical log in are all children of the loginwindow processes that gets spawned by the user account that logs in. <comment182009> Knowing this I've tried and you're right: even "logging out" normally leaves some processes running. Would you edit your post so I can reverse the downvote? Actually it might sense to integrate this information anyway. <comment182011> @Lohoris As requested :-) Let's leave the extra process info in the comments for now? <comment259983> Use "su root" instead of "sudo su" <comment272900> Note that « ≠  <comment281965> I JUST reread your question and I'm sorry that this won't help you, but it will come up in google search results.