CentOS 6.x for CUDA development on a MBP <body> Here is a short description of my situation - I need a portable machine for CUDA and iOS development, so any of the newer MacBook Pros with NVIDIA GPUs seemed like a no-brainer at first. However, the CUDA-requiring project already has a huge code base from a large number of contributors that is developed on CentOS 5.x/6.x. CentOS is also the only platform that is officially supported.  I obviously need a Mac because of the iOS project, but is MBP the right machine for the CentOS+CUDA based one? Did anyone get this to work properly, or is buying two separate machines (MacBook Pro + a PC laptop) the only solution?  P.S. I am mostly worried about the GPU-switching support between MacBook Pro's cards on Linux, so any first-hand experience from existing MBP owners is very welcome.   <answer62197> I don't think you'll be able to do this. I tried RHEL and it locked up on load. Same results on Fedora 16. I did successfully install Fedora 17 but was unable to get dynamic video card switching to work. Nor was I able to get the Nvidia card to work. I believe you have to run dual X servers and map the second card to your DFP out based on other posts. Additionally, heat and power consumption are increased since it never powers off the NVidia card. I did a lot of playing with Bumblebee and switching configurations for the Nouveau driver since the Nvidia driver yields a black screen. However, it wasn't switching properly. I believe the best I ever had it working was to run on the Intel card with hardware acceleration using the Nouveau driver. I would not recommend it as a CUDA platform at this time. There is a reasonable amount of contrib energy focused in this direction though and I don't think it will be too long before it is working. The Linux kernel has had support related to this being implemented as well.  <answer145745> I know this post is long time ago, but I want to share some information for someone visit this post later. I did install Ubuntu &amp; Centos &amp; Debian on a MBP(9.2). It seems the important point is the kernel version, not the distro itself. The newer the kernel, the better the performance/ compatibility to Apple's hardware. In my case, intel_pstate kernel module support better than older module(don't remember) for Ivy Bridge. Being on Debian jessie 3.13, work like a charm, just a little bit tweak.( a little). On Centos 2.6 and Ubuntu 3.2, it seems not right. Temperature, fan, keyboard, trackpad... Have to tweak them all. And kernel panic, hanging happen a lot. Not even mentioning on a MBP with dedicated graphics card.  <comment72054> Hi, Greg! Thank you for your answer.  It turned out that there is an "unsupported" OS X port of the code because a lot of researchers on the project use MBPs.  In the meantime, I was also notified that I will be getting a desktop development PC which I can use for a few months until I go abroad. Linux support for the retina MBP (which I ordered) will probably get better by then, and even if it doesn't I can still work on the unsupported port under OS X.