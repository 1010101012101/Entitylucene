Can cupsfilter take input from stdin? <body> Is it possible to configure cupsfilter to take input from the standard input (as opposed to only taking input from a file)?  Specifically, I would like to do something like this:  coderuby do_some_processing.rb &lt; input_file.txt | cupsfilter | lpr/code  I tried both coderuby filter &lt; input | cupsfilter/code and coderuby filter &lt; input | cupsfilter -/code  Both attempts resulted in a "usage" message being written to stdout.  It wouldn't be terrible to create temporary files between steps, but it seems like that should be unnecessary.  --  Here is the long story:  I would like my students to be able to type their essay exams (as opposed to handwriting them, which I am finding increasingly difficult to read).  In order to preserve the integrity of the tests, they must type the exams in a text-only environment.   In order to grade the exams, I need to convert those .txt files into .pdf files so I can upload them to Gradescope.  Furthermore, I want each problem on a separate page, which requires inserting a form feed somehow.  My current idea is to ask the students to type "\newpage" in their text files, then run their files through a ruby script to replace "\newpage" with "\f".    Any other ideas of how I could have students easily insert form feeds into text documents they are typing with vi/emacs/nano?   (In the long run, a better solution is to allow them to use LibreOffice or something similar; but, for the moment, we don't have a good way of "locking down" the lab's GUI environment.)  <comment345366> I'm voting to close this question as off-topic because it does not appear to be about Apple hardware or software within the scope defined in the [help centre](http://apple.stackexchange.com/help/on-topic). <comment345379> @Tetsujin What makes you think so? All the tools mentioned, including `cupsfilter`, are available on macOS. `cupsfilter` is actually part of macOS <comment345387> You could try to use process substitution (see `bash(1)`): `cupsfilter (ruby do_some_processing.rb  input_file.txt) | lpr`