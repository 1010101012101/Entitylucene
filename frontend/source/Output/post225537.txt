What happens when the kernel_task is killed? <body> What happens when you kill kernel_task on OS X? Is that even possible? I know that the system reboots because of kernel panic when you kill launchd, but I can't find any resources online and am afraid of trying to kill kernel_task.  <answer225557> You can't properly kill kernel_task. Activity Monitor doesn't allow you to kill kernel_task at all - neither as admin nor as root.  If you try to outwit kernel_task by using codekill -9 0/code or code/bin/kill -9 0/code as root you just kill yourself i.e. the first command kills bash (kill is an integrated command of bash) and the second command kills code/bin/kill/code because in both cases the 0 is interpreted as me/yourself and strongnot/strong as kernel_task.  The man page for the system call codekill/code (which is called by both codekill/code and code/bin/kill/code) explains that  precodeIf pid is zero:     Sig is sent to all processes whose group ID is equal to the process group ID of     the sender, and for which the process has permission; this is a variant of     killpg(2). /code/pre  This makes it basically impossible to even attempt to kill the process with PID 0.  <answer276005> u strongCANT/strong kill it cause its the kernel wich is basicley the core of a operating system wich also starts all applications and drivers and killing it wuld be the same as trying to remove ur whole body form your body its imposible cause u trying to remove something form itself wich is  as imposible as gooing quicker then the speed of light while running compare it to trying to remove the apple of a apple with the same apple exept if it changes into a blackhole it cant disapear and since the blackhole is the apple its still not gone only way to kill kernel_task is by a manual overide of its data wich strongCRASHES IF EVEN ATTEMPTED CAUSE OF U ATTEMPTING TO REACH TO KERNEL SPACE AND WRITING OVER THE MOST IMPORTAND APPLICATION OF THE OS/strong  <comment347392> Well said - it's the kernel that does the executions, so it's far easier to just shut down the OS instead of changing it (hot patch or not) to self-kill and then work out any engineering issues where processes that depend on the kernel now crash due to the change that has happened. This is also why kernel panics bring the system to an abrupt halt.