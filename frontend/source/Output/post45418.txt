How to automatically login to captive portals on OS X? <body> How can I automatically login to captive portals on OS X?  A captive portal is used by (often not password-protected) wireless networks that present a web page as soon as you connect to them, requiring you to login.  I have to login to different wireless networks like this very frequently, and none of the captive portals seem to remember my login/password information. Is there a way to automate the login process somehow, or at least store the login/password pairs in the Keychain?  strongUpdate:/strong There’s an iOS app called AutoWifi that basically handles this. If it’s possible to do this on iOS with all its restrictions, surely it must be possible to do something like it on OS X, right?  hr  strongRelated fun fact:/strong This is how Apple tests for captive portals on OS X and iOS:     OS X and iOS make a request to codehttp://www.apple.com/library/test/success.html/code every time you connect to a WiFi network.   strongAs of Yosemite/strong the URL is now:  codehttp://captive.apple.com/hotspot-detect.html/code  This URL returns the following HTML:  precode&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2//EN"&gt; &lt;HTML&gt; &lt;HEAD&gt;     &lt;TITLE&gt;Success&lt;/TITLE&gt; &lt;/HEAD&gt; &lt;BODY&gt; Success &lt;/BODY&gt; &lt;/HTML&gt; /code/pre  <answer45425> A captive portal is not like a password. It's more like a sign in sheet. Every time the network you're connected to hands out an IP address through DHCP, it gives you the captive portal to sign into/agree to and then it allows you to connect. From what I understand, this is a cross platform restriction that cannot be altered. It emmay/em be something that the network administrators can change, but even that may depend on the type of equipment being used.   <answer47858> Doesn't deleting (or renaming) code/Library/Preferences/SystemConfiguration/CaptiveNetworkSupport/Settings.plist/code stop the auto-probing?  It could at least stop the opening of the WebView popup.  Otherwise replace all URLs in that codeSettings.plist/code with a local hosted copy of the codesuccess.html/code file and host the codesuccess.html/code file on your localhost webserver.  <answer74473> You can rename   precode/System/Library/CoreServices/Captive Network Assistant.app /code/pre  into   precode/System/Library/CoreServices/No More Captive Network Assistant.app /code/pre  and you're all set. Password entering now goes via your browser of choice and can be stored using 1password or other plugins.  Note that if you were already logged in while doing the renaming, it may take some time for your session to expire...  <answer140475> Tyilo's NetworkAutoLogin project on github is an os.x daemon that "Automagically logs into to Captive Portal Networks" with user-supplied credentials.   It uses PhantomJS &amp; CasperJS to post the necessary info to the fields on the captive portal login page. Could be the secret login "password", a username-password pair, or just activating a EULA checkbox and the "connect" button.  I can't remember exactly how it is triggered, but it registers a .plist with launchctl.  You put configuration options in a json file, specifying the name of the fieldset (optional) on the captive portal page and the necessary fieldname + content pairs (required). Here's an example of the config file stored in code~/.networkautologin.js/code  precode{ // Example with all possible options     match: {         SSID: ['Example WiFi 1', 'Example WiFi 2'],         BSSID: '01:23:45:67:89:AB',         URL: 'http://logon.example.org/?url=http://www.apple.com/library/test/success.html'     },     form_selector: 'form#login_form',     fields: {         'username': 'test',         'password': '123123'     } } /code/pre  <answer140843> Just found this Disable Captive Network Support in OS X  Which mentions "To disable it, set this preference:"  precodesudo defaults write /Library/Preferences/SystemConfiguration/com.apple.captive.control Active -boolean false /code/pre  In case, you would ever want to remove this setting, you can do:  precodesudo defaults delete /Library/Preferences/SystemConfiguration/com.apple.captive.control Active /code/pre  Then, as @Leon mentions, use the regular web browser to login. Or if you are on a network where that somehow does not work then you can still try and open the app manually ( located at code/System/Library/CoreServices/Captive Network Assistant.app/code )  <answer196040> I seeing captive portal requests on my home network every 5 min.  But I've changed in file em/Library/Preferences/SystemConfiguration/CaptiveNetworkSupport/Settings.plist/em  string: emhttp://www.apple.com/library/test/success.html/em to stronghttp://captive.apple.com/hotspot-detect.html/strong (I meant ProbeURL section). apple changed probe URL for new OS, I do not know why, but new URL response is 200 (OK) and should works (I've faced with same problem on my mbp 2011 Mavericks).  <answer273282> Although a few years old this question and answer shows high in googling this. Unfortunately MacOS has changed since then. This page on MacWorld from 2016 seems to describe the current (as of this writing) state.  Which essentially is that because of SIP you can disable the assistant only in  recovery mode. I have yet to find any solution to the other part of this question, "can we automate the login?"  <comment51746> You’re absolutely right that it’s more like a sign-in sheet than a password, but I’m surprised there doesn’t seem to be an easy way to autofill this sheet :) On iOS, there are apps that can take care of this. Isn’t there anything similar for OS X? <comment51748> What apps for iOS can do this? Wouldn't you then have to use that app for web browsing, etc.? <comment51749> The [AutoWiFi](http://itunes.apple.com/us/app/autowifi/id299484372) app handles this automatically; all you have to do is click “Connect” once and you’re logged in. <comment54736> Take a look at /Library/Preferences/SystemConfiguration/CaptiveNetworkSupport/Settings.plist. Manipulating the preferences here can easily compound serious security risks on top of the many Apple has decidedly implemented on their own. I'm not sure which browser you use to connect via these captive portals, but you can also try setting up network locations for them, or creating a simple macro depending on what you want to auto-fill. <comment54786> That’s the thing — whenever OS X detects a captive portal, it opens a WebView popup window (not a real browser UI) with the login page. <comment54788> If you have a chance post the source code of the popup. <comment54789> @ioi The HTML source of the page depends on the network. Once you get the popup, it’s possible to browse to the same page by just opening any browser and trying to load a URL. <comment54790> oh cool, then it shouldn't be a problem to over-ride, re-direct, or script something. It's really up to you how you want to handle it. There's really nothing you can't script when such a situation calls for it. If you need more specifics feel free to ping me for chat. <comment54791> @ioi It would be great if you could write an answer with some more details :) <comment54793> sure; I would need to know the exact routine/methods used from the host (i.e. login? agree? etc). <comment54797> @ioi Most of them require a username, password, and ticking a checkbox. <comment86607> Looking forward to testing this out :) No downsides? <comment110940> None of the answers answers the question! <comment153019> Great post, it helped me a lot. Very creative naming :) no more captive network assistant. <comment165983> related http://stackoverflow.com/questions/14606131/using-captive-network-assistant-on-macosx-to-connect-to-vpn <comment165984> not crazy that it requires yet another daemon to be running in the background <comment167127> I have compiled it but have been unable to observe the daemon trigger when presented with a preset captive network login page. <comment201148> I can't use any captive portals since 10.10.2 - driving me crazy <comment232605> Anyone know where Apple documents this implementation functionality on the OS X side? If they document this at all for developers and/or users. <comment232608> While this may be simple(st?) solution, I would think cwd's answer is the proper way to do it even though it's admin-ish. There are certain things on Mac that Apple kind of forces us to be admin-ish on, when we want to "think different" from Apple. <comment232610> Here's an interesting related fun fact read as well, particularly about the profile part: https://grpugh.wordpress.com/2014/10/29/an-undocumented-change-to-captive-network-assistant-settings-in-os-x-10-10-yosemite/ <comment269887> Likewise (even updated it to the new settings in yosemite+) <comment314553> this is working perfectly, thanks. <comment363070> the response below from cwd should be the accepted answer