Script to move files under their first letter name <body> i've a lot of files (1000+) in a single directory, and i would like to organize them into sub directories, according to their first letter. So i've 200 files starting with A, and i would like to move them into subdirectory "A", then all "B" files etc. etc.  How to do ?   <answer52281> In a terminal: codecd/code into the directory in question, then  precodefor x in `ls -1 | sed -e 's/^\(.\).*/\1/' | sort -u`; do mkdir $x &amp;&amp; mv -i ${x}?* $x done /code/pre  This assumes that no files have a single character name before you start. If they do, you might move them aside before you run the above procedure:  precodemkdir singles &amp;&amp; mv ? singles /code/pre  and then move them to their appropriate destinations aftwards.  strongEdit:/strong See the comments below for some caveats. If you run into problems with too long command lines, you could replace the second line by  precodemkdir $x &amp;&amp; find . -maxdepth 1 -name "${x}?*" -exec mv -i {} $x \; /code/pre  <answer52317> Here's a Ruby one-liner:  precoderuby -e 'require "FileUtils"; Dir["*"].each { |f| next if File.directory?(f); d = f[0]; Dir.mkdir d rescue nil; FileUtils.mv(f,d) }' /code/pre  It basically iterates over all files, creates the directories if possible and moves the files to it afterwards.  Just execute this line from the directory.  <answer94398> This would also work if the filenames start with multibyte characters (like Ä or あ):  precodels | iconv -f utf8-mac -t utf-8 | LC_CTYPE=UTF-8 cut -c1 | uniq | while IFS= read -r l; do   f=("$l"*)   mkdir -- "$l"   mv -- "${f[@]}" "$l" done /code/pre  codeiconv -f utf8-mac -t utf-8/code converts text from a partially decomposed form used by HFS+ to precomposed form. See Text Encodings in VFS or this question. codeLC_CTYPE=UTF-8/code makes codecut -c1/code consider multibyte characters as single characters.  <comment59843> This fails with files that have spaces (or newlines) in their name. Command substitution might also result in too many arguments. <comment59942> @slhck: No, spaces in filenames are no problem, unless the filename begins with a space. Yes, newlines would be a problem, but both of these cases are distinctly unusual. Command substitution could be a problem if too many filenames start with the same letter. But I think the current limit on command line length is quite generous, so this is not very likely with the number of files indicated. Still, I'll add a fix for that to the answer. <comment59943> Ah, I see now, my bad, +1 to you!