How is the hidden interface bridge100 working? <body> This interface codebridge100/code has been introduced with codeMavericks/code and exists on codeYosemite/code. (On codeMountain Lion/code the same kind of mechanism was taking place with the codebridge0/code associated with the visible interface: codeThunderbolt Bridge/code).  This interface is related to the starting of codeInternet Sharing/code. When codeInternet Sharing/code is off:  precode$ ifconfig bridge100 ifconfig: interface bridge100 does not exist $ /code/pre  When codeInternet Sharing/code is on:  precode$ ifconfig bridge 100 bridge100: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICASRT&gt; mtu1500         options=3&lt;RXCSUM,TXCSUM&gt;         ether ••My_Ethernet_@MAC•• [...] /code/pre  But this interface doesn't appear within codeSystem Preferences &gt; Network/code.  hr  Where is the correct documentation about this hidden interface?  How to make this interface appear within the codeSystem Preferences &gt; Network/code list of interfaces?  How is this interface configuration managed?  <answer186838> (This is isn't a correct answer, but just a starting point.)  h2Not mandatory/h2  This bridge interface is not at all necessary. Here is the way to inactivate it:  ul liStop codeInternet Sharing/code through the GUI./li liWait one full minute for all the processes to terminate their house keeping:  precodeps ax | egrep '[ /](PID|Int)' /code/pre/li limodify the codeInternet Sharing/code plist:  precodecd /System/Library/LaunchDaemons /usr/bin/sudo -s # make a quick backup cp com.apple.NetworkSharing.plist com.apple.NetworkSharing.plist~orig vi com.apple.NetworkSharing.plist /code/pre  within the codeProgramArguments/code array, insert the 2 new arguments code-B/code (disable bridge interface) and code-v/code (verbose output), so that this array definition will look like:  precode&lt;array&gt;     &lt;string&gt;/usr/libexec/InternetSharing&lt;/string&gt;     &lt;string&gt;-B&lt;/string&gt;     &lt;string&gt;-v&lt;/string&gt; &lt;/array&gt; /code/pre  save this new file and exit codevi/code/li listart codeInternet Sharing/code through the GUI,/li lido a verification codeifconfig -a/code./li /ul  Now codeInternet Sharing/code is directly working on codeen1/code and all necessary processes are started correctly: codepfctl/code, codewifid/code, codenatpmpd/code, codebootpd/code.  <comment219637> Would this *technical* question be more useful in another Stackexchange group as: "Super User" or "Network Engineering"?