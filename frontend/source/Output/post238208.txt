Start stunnel service on bootup <body> I have a service ran under homebrew. This service is simply started by running the command  codesudo stunnel/code  I need this command to run on bootup, so I created a LaunchDaemon but it is not working. Here is the launchd file:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple$ &lt;plist version="1.0"&gt;    &lt;dict&gt;    &lt;key&gt;Label&lt;/key&gt;    &lt;string&gt;com.stunnel.stunnelstartup.plist&lt;/string&gt;    &lt;key&gt;ProgramArguments&lt;/key&gt;    &lt;array&gt;           &lt;string&gt;/bin/sh&lt;/string&gt;           &lt;string&gt;/usr/local/etc/stunnel/startup.sh&lt;/string&gt;    &lt;/array&gt;    &lt;key&gt;UserName&lt;/key&gt;    &lt;string&gt;ROOT&lt;/string&gt;    &lt;key&gt;RunAtLoad&lt;/key&gt;    &lt;true/&gt;    &lt;key&gt;KeepAlive&lt;/key&gt;    &lt;false/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  And here is the shell script:  precode#!/bin/bash #stunnel startup sleep 30 #Delay added for the system to boot properly sudo stunnel /code/pre  What am I doing wrong???  EDIT: I have done what all of the answers have suggested so far, with still no luck. Here is my new launchd file:  I also edited the stunnel configuration so it does not run in the background  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple$ &lt;plist version="1.0"&gt;    &lt;dict&gt;    &lt;key&gt;Label&lt;/key&gt;    &lt;string&gt;com.stunnel.stunnelstartup.plist&lt;/string&gt;    &lt;key&gt;Program&lt;/key&gt;    &lt;string&gt;/usr/local/bin/stunnel&lt;/string&gt;    &lt;key&gt;UserName&lt;/key&gt;    &lt;string&gt;root&lt;/string&gt;    &lt;key&gt;RunAtLoad&lt;/key&gt;    &lt;true/&gt;    &lt;key&gt;AbandonProcessGroup&lt;/key&gt;    &lt;false/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <answer238210> It appears that codestunnel/code backgrounds itself, i.e. it forks a subprocess to do the actual work in the background, then exits. When a codelaunchd/code-managed process exits, codelaunchd/code defaults to automatically killing off any leftover subprocesses... like the background codestunnel/code process. I haven't tested these, but there are two simple ways to avoid this.  First, you can tell codelaunchd/code emnot/em to kill leftover subprocesses by adding code&lt;key&gt;AbandonProcessGroup&lt;/key&gt;&lt;true/&gt;/code to the .plist.  Second, you can tell codestunnel/code to not background itself by adding codeforeground = yes/code to its config file. If you do the second option, you can probably also remove code&lt;key&gt;KeepAlive&lt;/key&gt;&lt;false/&gt;/code from your .plist, and let codelaunchd/code manage the codestunnel/code daemon properly.  [Update] If that and Mark's suggestions don't get it working, I'd recommend adding some debugging output in the script, and sending that emand/em stunnel's output to a log file. Something like this:  precode#!/bin/bash #stunnel startup exec &gt;/tmp/stunnel.log 2&gt;&amp;1 # Send all output to a debug log sleep 30 #Delay added for the system to boot properly echo "$(date) - Starting stunnel" sudo /path/to/stunnel echo "$(date) - stunnel exited with status $?" echo /code/pre  You can do similar things by adding codeStandardOutPath/code and codeStandardErrorPath/code keys, but in this case it's easier to edit the script.  <answer238211> There are several things which need checking here but this is not a direct answer as not all of them might be the issue here.  For a working example for macports see here  ol liWhere is stunnel the path is not the same in launchd as it is in a terminal session /li liYou can't have sudo in the script as run by root - however in this case you don't need the script just run the execrable directly/li liThe username is root not ROOT /li liWhere do you put the plist file?/li /ol  I would also suggest a daemon should not be run at startup but only when a connection comes in on a socket but that appears to be how stunned is written not an installation problem   Although seeing this other answer I am surprised that the example plist files I have seen work (and my last comment is more relevant)  <comment292000> I put the plist file in /library/LaunchDaemons <comment292001> The reason I ran a script is so if stunnel tries to start too early, the script compensates for that by adding a delay for the system to boot <comment292002> I have no idea where the stunnel path is, or how to find it. All I know is that if you run sudo stunnel from anywhere stunnel will start <comment292003> and the issue is that the path in terminal and launchd differs so one can find it and the other can't so you need to know this. try `type -p stunnel` to find it <comment292115> Thanks, I found  the path. I have tried all the suggestions with no luck. See edit <comment292274> @Skyler440: D'oh! I got the `AbandonProcessGroup` key backwards, it should be true not false. I also added a suggestion about capturing debug output from the script and stunnel