Run nrpe on boot w/o a logged in user <body> Running a Mac mini with server app. (El Capitan 10.11.4 &amp; Server.app 5.1)  Installed Xcode, brew, and nrpe via brew.  Works fine as such. It's not sensible to have to remote desktop to it and log in just to get monitoring up and running.  Given that FileVault is active logging in automatically is not an option.  How do I make nrpe start if the machine gets rebooted without interaction?  EDIT1: OK, couldn't find an easy way to make this work; so I disabled filevault after a brief discussion with the team. But on boot (and with an automatic login) nrpe still doesn't start automatically ...   <answer235541> Citing http://launchd.info:  ol li~/Library/LaunchAgents and /Library/LaunchAgents are used for the currently logged in user./li li/Library/LaunchDaemons is for running things as root ( emor/em the user specified with the codeUserName/code key) when the machine boots./li /ol  The key (no pun intended), however, is that plists placed in code/Library/LaunchDaemons//code must be emowned/em by coderoot:wheel/code and should be codechmod 644/code.  So, just because codenrpe/code creates a plist does not mean that it will run on boot without login.  I installed it via codebrew/code myself, and at the end it says:  precodeTo have launchd start nrpe at login:   ln -sfv /usr/local/opt/nrpe/*.plist ~/Library/LaunchAgents Then to load nrpe now:   launchctl load ~/Library/LaunchAgents/homebrew.mxcl.nrpe.plist /code/pre  I would recommend that you do this, instead:  precodechmod 644 /usr/local/opt/nrpe/homebrew.mxcl.nrpe.plist  sudo chown root:wheel /usr/local/opt/nrpe/homebrew.mxcl.nrpe.plist  sudo ln /usr/local/opt/nrpe/homebrew.mxcl.nrpe.plist /Library/LaunchDaemons/homebrew.mxcl.nrpe.plist /code/pre  The first line makes sure that the permissions are correct.  The second line makes sure that the ownership is correct  The third/last line links the file from /usr/local/opt/nrpe/ to /Library/LaunchDaemons (note the absence of a code~/code which is intentional).  Then you need to make sure that the file does emnot/em exist in ~/LaunchAgents, which would be confusing:  precoderm -f "$HOME/Library/LaunchAgents/homebrew.mxcl.nrpe.plist" /code/pre  That will delete the file (if it exists).  h2Important/h2  By placing the file in code/Library/LaunchDaemons/code you will be telling codenrpe/code to run as coderoot/code. That may be OK, or it may be a very bad idea. I don't know the answer to that question. However, to be safe I would make it explicitly run as a user emother/em than root unless I was absolutely sure. Also, I would use codelaunchd/code's ability to log errors to see if it is running OK.  To do this you will need to edit the plist mentioned above. Here is the file as it is originally created, as of 2016/04/20:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;org.nrpe.agent&lt;/string&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;/usr/local/bin/nrpe&lt;/string&gt;     &lt;string&gt;-c&lt;/string&gt;     &lt;string&gt;/usr/local/etc/nrpe.cfg&lt;/string&gt;     &lt;string&gt;-d&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt;   &lt;key&gt;ServiceDescription&lt;/key&gt;   &lt;string&gt;Homebrew NRPE Agent&lt;/string&gt;   &lt;key&gt;Debug&lt;/key&gt;   &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  and here is the version that I would recommend:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Debug&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;GroupName&lt;/key&gt;     &lt;string&gt;staff&lt;/string&gt;     &lt;key&gt;InitGroups&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;org.nrpe.agent&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/usr/local/bin/nrpe&lt;/string&gt;         &lt;string&gt;-c&lt;/string&gt;         &lt;string&gt;/usr/local/etc/nrpe.cfg&lt;/string&gt;         &lt;string&gt;-d&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;ServiceDescription&lt;/key&gt;     &lt;string&gt;Homebrew NRPE Agent&lt;/string&gt;     &lt;key&gt;StandardErrorPath&lt;/key&gt;     &lt;string&gt;/tmp/org.nrpe.agent.stderr.log&lt;/string&gt;     &lt;key&gt;StandardOutPath&lt;/key&gt;     &lt;string&gt;/tmp/org.nrpe.agent.stdout.log&lt;/string&gt;     &lt;key&gt;UserName&lt;/key&gt;     &lt;string&gt;INSERTUSERNAMEHERE&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Replace codeINSERTUSERNAMEHERE/code with the actual username of the user that you want codenrpe/code to run as.  h3Deprecated/h3  Note that according to LaunchControl (which is the best app out there for managing launchd plists) the codeDebug/code key is deprecated for OS X 10.10 and will be ignored.  h2Reboot/h2  Once you have the file in place, the best way to test it will be to reboot the system and do NOT log in on console. Instead, after the boot process is complete, log in via codessh/code and make sure that the process is running, and check the two log files to see what, if anything, you see there.  I hope this helps.  ps - spend $10 on LaunchControl. It's a great app. There is no registration code so you don't emhave/em to pay for it, but you should because the developer trusts you to if you use the app.  <comment287875> Are you looking for help using a tool like LaunchCenter to make a plist to have launchd run the job or just instructions to set a script file to run as a startup item and have a user log in to the Mac when it boots and then lock the screen? <comment287876> Hi @bmike, nrpe installs a plist, so it's just the launch. Since the box has a FileVault keychain set automated logins aren't possible. <comment287878> Aah. So you need to modify the startup script to read the password from the `security` binary and store things there or otherwise automate things with `expect` ? <comment287879> Heh @bmike; I don't know what I need to know about MacOS/X. In Linux land (my home ;}) services (demons) work just fine w/o anyone having to log in or having to start things using a password. Seems to be possible on MacOS/X, too, e.g. seeing as I can ssh to the thing w/o prior human interaction after a reboot. <comment288215> thank you very much; I had done the move and link prior to this post, but autostart kept failing on boot. With the modified plist everything is hunky-dory. :} <comment288759> Glad to hear it