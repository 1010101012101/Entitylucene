Change file association in terminal? <body> Is there a method for associating file types with applications via terminal? I thought ~/Library/Preferences/com.apple.launchservices.plist might do it, and I also have seen: Why is a command line change to ~/Library/Preferences/com.apple.LaunchServices.plist not effective immediately? but I can't seem to get it working.  I guess I'm looking for a way to imitate what the GUI does when someone uses it to change association types, it seems to work instantly there...  <answer91527> Short answer: A file's application association is stored in the file's emresource fork/em, and Apple provides two utilities (emRez/em and emDeRez/em) which allow manipulation of resource forks., but this is not for the faint of heart.  For more details, this question is answered very thoroughly at Super User:  ul lihttps://superuser.com/questions/259248/mac-osx-change-file-association-per-file-on-the-command-line/li /ul  <answer91530> Check out duti:     duti is a command-line tool written by Andrew Mortensen, designed to set default applications for document types and URL schemes on Mac OS X.      Document types on Mac OS X are defined by what Apple calls Uniform Type Identifiers, or UTIs. HTML files, for example, have a UTI of public.html. Microsoft Word documents are described by the UTI com.microsoft.word.doc. Apple provides many UTIs with Mac OS X, but developers are free to define their own, as long as the UTI is unique to that document type.      duti's name means "default for UTI."   <answer91558> You can edit code~/Library/Preferences/com.apple.LaunchServices.plist/code in a text editor after converting it to XML:  precodeplutil -convert xml1 ~/Library/Preferences/com.apple.LaunchServices.plist /code/pre  Then add entries like this to the codeLSHandlers/code array:  precode&lt;dict&gt;   &lt;key&gt;LSHandlerContentType&lt;/key&gt;   &lt;string&gt;com.adobe.pdf&lt;/string&gt;   &lt;key&gt;LSHandlerRoleAll&lt;/key&gt;   &lt;string&gt;net.sourceforge.skim-app.skim&lt;/string&gt; &lt;/dict&gt; &lt;dict&gt;   &lt;key&gt;LSHandlerContentTag&lt;/key&gt;   &lt;string&gt;mkv&lt;/string&gt;   &lt;key&gt;LSHandlerContentTagClass&lt;/key&gt;   &lt;string&gt;public.filename-extension&lt;/string&gt;   &lt;key&gt;LSHandlerRoleAll&lt;/key&gt;   &lt;string&gt;org.videolan.vlc&lt;/string&gt; &lt;/dict&gt; /code/pre  You can use codemdls/code to see the UTIs of file types and something like codeosascript -e 'id of app "AppName"'/code to see the bundle identifiers of applications.  You can apply changes to codecom.apple.LaunchServices.plist/code by restarting. Logging out and back in isn't enough.  hr  I also use duti though. I have saved a file like this (with about 100 lines) as code~/.duti/code:  precodeorg.gnu.Emacs public.plain-text all # .txt, .text, plain text files without an extension org.gnu.Emacs public.unix-executable all # executable scripts com.SequentialX.Sequential .jpg all org.videolan.vlc .mkv all /code/pre  I have a launchd agent that runs codeduti ~/.duti/code automatically when code~/.duti/code is changed.  You can normally use filename extensions (like code.jpg/code) instead of a UTIs (like codepublic.jpg/code) to specify file types. codeduti/code converts the extensions to UTIs that also apply to other extensions (like code.jpeg/code). For some extensions like code.mkv/code and code.tex/code, the UTI depends on what application registered the extension first.  The latest version of codeduti/code (1.5.1) only includes source code, but 1.5.0 also includes an installer.  <answer260549> Here is a launchd agent for duti that will do the trick:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt;   &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.duti.watcher&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;       &lt;string&gt;/usr/local/bin/duti&lt;/string&gt;       &lt;string&gt;/Users/joshgummersall/.duti&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;UserName&lt;/key&gt;     &lt;string&gt;joshgummersall&lt;/string&gt;     &lt;key&gt;KeepAlive&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;WatchPaths&lt;/key&gt;     &lt;array&gt;       &lt;string&gt;/Users/joshgummersall/.duti&lt;/string&gt;     &lt;/array&gt;   &lt;/dict&gt; &lt;/plist&gt; /code/pre  Obviously replace codejoshgummersall/code with your own username. I placed this file at code~/Library/LaunchAgents/duti.plist/code, codechmmod/coded to 644 and ran:  precode$ launchctl load -F -w ~/Library/LaunchAgents/duti.plist /code/pre  <comment360489> Mandatory suggestion: use `brew install duti` to install `duti`