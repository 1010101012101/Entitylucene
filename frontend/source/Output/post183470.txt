/etc/resolver: TLD itself not resolved by custom resolver <body> I'm using the code/etc/resolver/code technique for a codedev/code domain as explained in some blog posts around the web (like this one).  I used this technique previously on 10.9, but on my new Yosemite there seems to be one small problem: the TLD itself, i.e codedev/code, does not seem to be resolved by the custom DNS. In other words on 10.9 both codedev/code and code*.dev/code would be passed to dnsmasq and resolved correctly, but on Yosemite this only happens for code*.dev/code. codedev/code is resolved by something else to an address other than the one configured in dnsmasq.  I know dnsmasq works properly:  precode# host dev localhost Using domain server: Name: localhost Address: 127.0.0.1#53 Aliases:   dev has address 127.0.0.1 /code/pre  however:  precode# ping -c 1 dev PING dev (127.0.53.53): 56 data bytes ^C --- dev ping statistics --- 1 packets transmitted, 0 packets received, 100.0% packet loss # ping -c 1 a.dev PING a.dev (127.0.0.1): 56 data bytes 64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.035 ms  --- a.dev ping statistics --- 1 packets transmitted, 1 packets received, 0.0% packet loss round-trip min/avg/max/stddev = 0.035/0.035/0.035/0.000 ms /code/pre  My code/etc/resolver/dev/code is:  precodenameserver 127.0.0.1 /code/pre  I know I can just add codedev/code itself to code/etc/hosts/code, since it's the only one that doesn't work it not a big deal. However I'd like to know if I did something wrong and if I can achieve the same behaviour I had previously on 10.9.  <answer222903> 127.0.53.53 is a special address, indicating a possible name collision. What's happened is Google has registered .dev as a new TLD, and dnsmasq is trying to inform you that your use of .dev could collide with the new official use of .dev.  Though it's strange you can get *.dev to resolve correctly, I can't, I just made Apache listen on 127.0.53.53 because I'm lazy like that.  Here's ICANN's explanation of 127.0.53.53  <comment270151> I guess we're going to have to find a new TLD for our local fiddlings...