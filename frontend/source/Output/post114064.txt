Can iBeacons work directly with remote servers? <body> Can iBeacons work directly with remote servers? in other words can you store notifications or information you want pushed out to users on a server and have that information retrieved from a server when the user gets within range of an iBeacon?   I am almost done with building my app but need to store information I want pushed out to users on a remote server rather than locally in my app. For some reason I cannot find a direct answer to this or anywhere online that talks about iBeacons working with servers to populate information to users.  <answer114145> It is possible but for now I think anyone gives this service. Here's some information about the technology. InnoQuant is a Startup is working to incorporate inside their platform ibeacons  <answer118476> An iBeacon can't communicate directly with a remote server. iBeacons are low-energy bluetooth devices that only performs a broadcast of it's UUID (unique user identifier), a major and minor numbers.   On your iOS app using CoreLocation framework you can intercept this broadcasted signal and use it as you please. You will also be able to get the proximity of the iBeacon device within your app, the proximity is given in four values: Unknown, Far, Near and Immediate.  The video What is new in Core Location (Apple developer account required) has a good introduction to the iBeacon technology.  <answer118483> The term iBeacon is a marketing term for the idea that iOS (and Mac) location services can be driven by bluetooth signals. So, the bluetooth component can be a USB device, software running on the Mac or iOS device (and other vendors too) or custom hardware that can run from battery power.   Rather than having your app use GPS or WiFi proximity, it can register for updates to be triggered when a beacon is close by. Whether you "app" is simply an iBeacon activated passbook pass or something more full feature, it can register to have the OS wake it up rather than need to run in the background continually.   The device and/or app then can communicate with the server (assuming a data connection) rather than the beacon communicating directly with the server.   Apple describes this at http://support.apple.com/kb/HT6048  <answer159606> Beacons are 'dumb' and only output an ID that the app detects and goes off to the server to load appropriate content.  I'm not 100% sure I'm understanding your question fully (so I apologise if I have it wrong) but here are some thoughts:  ol liDesign your App to load web content (i.e. it becomes a browser of sorts)/li liCombine an beacon CMS system that sits behind your your app and assists you to control / manage the content URL's the beacons load including the URL's for the various proximity distance settings./li /ol  Hope this helps?  We launched an iBeacon, beacon (non Apple beacons) and proximity enabled App called HelloLocal (http://www.hellolocal.me). We have our own CMS sitting off the back of this to manage the proximity devices. It runs very smoothly and I'd fully recommend this as a direction for you moving forward. If you are going to commercialise your app it will make sense also.  Kind regards,  Brent  <answer174875> Yes, the app can do that based on beacon region, have a look at this answer:  Can iBeacon range/region monitoring trigger &quot;dynamic&quot;/data-based notification?  <answer208989> https://github.com/javadj111/ibeacon-server here i created a simple server to store beacon's detail in database(derby) and show them to user in a web-panel. using restful API to send data from client-side to server.   <comment133743> Let's see whether you get any answers here, the topic may be too new though. I also wonder if this is more of a "does iBeacon has this feature" question or if your primary interest is about "how to programmatically use this feature". <comment133748> I'll have an answer when I get some time. Would prefer to keep it here if possible. <comment133749> Actually both if possible. I tried using an online cloud server known as parse.com only to be told that their cloud server does not support iBeacons. and there is no article or question and answer forum that addresses this issue. Most only talk about storing messages you want your users to receive when they get within range directly in the source code rather than a server. <comment136324> My understanding at this point is that standard iBeacons (Estimote, Roximity, etc) only transmit an address. If a phone/app detects that beacon's address, the app then has to do all the work - communicate with your web server, get the necessary information, display a notification, etc.