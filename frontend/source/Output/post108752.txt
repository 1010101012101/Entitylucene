Who installed this Emacs? <body> I have:  precode$ /Applications/Emacs.app/Contents/MacOS/Emacs --version GNU Emacs 24.3.1 $ /usr/bin/emacs --version GNU Emacs 22.1.1 /code/pre  How do I get rid of the second installation of Emacs?  <answer108753> The second codeemacs/code came with OS X.  For files that are logged in the package database, you can use codepkgutil/code:  precode$ pkgutil --file-info /usr/bin/emacs volume: / path: /usr/bin/emacs  pkgid: com.apple.pkg.BSD pkg-version: 10.9.0.1.1.1306847324 install-time: 1382483268 uid: 0 gid: 0 mode: 555 /code/pre  A list of packages can be obtained via codepkgutil --packages/code.  However, note that—again—this only covers items in the package database.  You should not modify items that are part of the core operating system.  If you prefer a locally-installed program to override one that came with the operating system, you should adjust your codePATH/code to prefer that program before system paths such as code/usr/bin/code are checked.  One way to do this is to have code/usr/local/bin/code be first in your path and link your code/Applications/code version of emacs to code/usr/local/bin/code so that it will be called first unless a program explicitly calls code/usr/bin/emacs/code  <answer108754> The file code/usr/bin/emacs/code is installed as part of Mac OS X. It is generally not a good idea to change or modify files that are installed as part of the default OS installation; other programs can rely on their presence.  Utilities installed as part of the operating system can be invoked by other programs with the expectation that the version installed will match the operating system spec. Removing them or replacing them with a different version could cause other programs to fail to operate as designed.  <comment127423> I can replace `/usr/bin/emac` with a symlink to `/Applications/Emacs.app/Contents/MacOS/Emacs`, right? <comment127424> @sds Not a good idea.  Adjust your `PATH` to prefer your `Emacs.app` version instead. <comment127426> You want `/usr/bin/emacs` to invoke the default version. You can safely install your own programs in `/usr/local/bin`. If you want your own programs to preempt the system versions, make sure `/usr/local/bin` is earlier in your path than `/usr/bin` and `/bin`, but be warned that this creates a security hole if someone with admin privileges on your system installs a `/usr/local/bin` version of some other program with unexpected results. <comment127430> This site works better if you restrict your questions to ask one thing only. Otherwise you won't be able to accept one answer if good answers to several sub-questions are spread across several answers. But there is no limit on the number of questions you can ask, so please just ask a new one for whatever has gotten dropped here and still needs answering.