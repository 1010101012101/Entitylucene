Terminal App: What comes after connection? <body> I want to use an SSH connection to upload large photo files to a server.  FTP taking 10 minutes per photo.  Someone suggested SSH; I have managed to get the computer connected to the server, but I don't know what to do next.  Shouldn't there be a window showing available files both local and remote server?  Shouldn't I be able to drag and drop from local to specific folder on server?  Where is this???  Thanks for anything helpful.  <answer236090> secure shell, codessh/code, is a command line based method of talking to another computer. By default, there is no graphical interface associated with codessh/code.  h1Speed/h1  The speed of your upload is probably limited by your Internet connection. The protocol used to transfer the files will make a difference but it may not be significant.  Domestic quality Internet connections tend to have much slower upload speeds than download speeds. This is particularly true for ADSL based connections. VDSL, cable, and fibre connections offer faster upload speeds.  Try running a speed test on your Internet connection. What values do you see? Is the upload number much lower than the download?  If you are transfering thousands of small files, an alternative protocol is probably worth trying. If you are transferring tens or low hundreds of larger files, codeftp/code will likely go as fast as any other method.  h2Command Line - rsync/h2  From your question, it sounds like you have codessh/code access to your server. This is great. If you are comfortable with the command line, you can use a tool like remote sync, codersync/code, to perform the file transfer. See Fastest and safest way to copy massive data from one external drive to another for more about this approach. With codersync/code you will end up issuing a command something like:  precodersync -rv --progress '~/Pictures/My Photos/' user@sftp.server.com:~/Pictures/ /code/pre  Alternative command line tools to codersync/code include codescp/code.  h2Graphical Interface - CyberDuck/h2  Alternatively, consider using a tool like CyberDuck to connect to and securely transfer files to your server. Try using the same server address as with codeftp/code but instead use codesftp/code; note the addition of an codes/code. This stands for secure. codesftp/code will give you a File Transfer Protocol (FTP) connection over a secure connection, much like codessh/code.  img src="https://i.stack.imgur.com/Cpk21.png" alt="CyberDuck Browser on OS X"  <answer236097>    Shouldn't there be a window showing available files both local and   remote server? Shouldn't I be able to drag and drop from local to   specific folder on server?   I think what you are looking for is an SCP or SFTP (secure copy or secure FTP) with a GUI.  SSH (secure shell) is a Terminal or command line interface to your system - it's not a file transfer application.  There are a number of good browswer and standalone clients for SFTP/SCP including  ul liCyberduck/li liFugu/li liFileZilla/li /ul  There is already a good writeup on these clients here on Ask Different in this post:  https://apple.stackexchange.com/a/25667/119271 so I won't belabor it here.  <comment288839> Have a look at [the Unix & Linux Stack Exchange](http://unix.stackexchange.com/questions/2857/ssh-easily-copy-file-to-local-system), where this exact question was answered. <comment288840> How did you connect your computer to the server, did you use `ssh` to log in remotely? <comment288851> BTW by far the most popular commercial solution is just Transmit by Panic.  panic.com/transmit/ <comment288869> It's worth noting that transferring many smaller files can be slower based on the protocol and/or implementation. I've found rsync to be faster than ever FTP client I've tried when transferring many small files for this reason. Packing them in an uncompressed archive and extracting them via SSH can also help. <comment288870> Fugu looks abandoned with a beta of a new version from 2011, although it appears the previous release was also 5 years before that. <comment288933> SFTP is not FTP over SSH, but rather its own protocol; the Wikipedia article you link has more details.