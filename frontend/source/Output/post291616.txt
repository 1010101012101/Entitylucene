How do I download all PNGs on a page with iOS Workflow? <body> I want to save all of the PNGs from this goofy website so I can turn them into a PDF. I thought I'd use Workflow for iOS, which I've never used before.  I get the contents of this page and then get all the links  precodeGet Contents of URL |&gt; Get URLs from Input |&gt; Quick Look /code/pre  But, when I want to filter or match those URLs for PNGs, I get weird codeapplewebdata:///code URLs, like  precodeapplewebdata://{guid}/path/to/PNG /code/pre  hr  I am currently using iOS and trying to make Workflow (or something similar) work for this task. Thanks for the other suggestions, but they won't work for me!  <answer291631> EDIT: If you have a Mac you can use Automator with the following workflow to accomplish this task.  s Try this, it worked for me! (Although you could just download these few images per hand by right-clicking on the links and choosing "Download linked file") /s  img src="https://i.stack.imgur.com/Wbywq.png" alt="Automator Screenshot"  <answer292845> What a hot mess... I ended up using a number of "Get Component of URL" steps to extract the scheme and host from the Workflow Input and the path from the links to PNGs on the page (these were the ones showing as codeapplewebdata:///code).  Once I had the parts of the URL to download, it went something like this  precodeGet Contents of URL |&gt; Get Component of URL; Scheme |&gt; Save Variable 'Scheme' &lt;Input&gt; |&gt; Get Component of URL; Host |&gt; Save Variable 'Host' &lt;Input&gt; |&gt; Get URLs from Input |&gt; Repeat with Each    |&gt; If Input Contains '.PNG'    |&gt; Get Component of URL; Path    |&gt; URL &lt;Scheme&gt;://&lt;Host&gt;/&lt;Path&gt;    |&gt; Get Contents of URL    |&gt; Add to Variable 'Pages' |&gt; Pages |&gt; Filter Images; Sort by Name A to Z; File Type 'PNG' |&gt; Make PDF |&gt; Set Name &lt;input.Name&gt; |&gt; Quick Look |&gt; Save File /code/pre  It seems like, if I didn't have to break down into procedural steps to extract and recombine a usable URL, I could have written a much cleaner simpler pipeline. Something like  precodeGet Contents of URL |&gt; Get URLs from Input |&gt; Get Contents of URL |&gt; Get Images from Input |&gt; Filter Images; Sort by Name A to Z |&gt; Make PDF |&gt; Set Name &lt;input.Name&gt; |&gt; Quick Look |&gt; Save File /code/pre  <answer292991> You're so close! The key missing piece here is using the codeGet Contents of Web Page/code action instead of codeGet Contents of URL/code. If you simply swap that action in, everything should work as you were expecting it to, and you can use the simpler solution you referenced in your answer.  Here is a working example:  precodeGet Contents of Web Page |&gt; Get URLs from Input |&gt; Get Contents of URL |&gt; Filter Images Where: File Extension is 'png', Sort by Name, Order A to Z |&gt; Make PDF |&gt; Set Name: Workflow Input Name |&gt; Quick Look |&gt; Save File /code/pre  <comment368172> You are trying to get the *contents* of the URL before getting the URL's?  I think you may have the wrong action here. <comment368191> The OP is using iOS, not macOS. So I doubt a macOS Automator workflow is applicable here. <comment368194> Darn it, you are right. Wasn't reading carefully enough. <comment369202> I highly recommend you get [Pythonista](http://omz-software.com/pythonista/) for things like this. I realize that your actual question hasn't been answered -- and I don't know that it's possible at all with Workflow. I couldn't imagine trying to automate stuff on my phone without an actual programming language. <comment369229> The iPad, even just the air 2, but especially the pro, does great work in split view mode :) this is kinda one-off, but I'm trying to use the iPad more exclusively. I don't even need a general purpose workflow. This applewebdata thing is nonsense. <comment369679> Not sure if you saw the web page, but the "images" I need to extract are just anchor tags with PNG hrefs, not img tags. Would Get Contents of Web Page work in that case? <comment369822> Yes! Using the `Get Contents of URL` action is causing you to get those `applewebdata://` URLs. If you use `Get Contents of Web Page` instead, you'll get the URLs you are expecting and it should "just work" without reconstructing the URLs manually. Give it a try! <comment369890> It works! I'm going to add my _exact_ workflow to your answer and accept it. Thank you!