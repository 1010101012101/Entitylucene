Applescript giving error 1728 when checking if file exists <body> I'm trying to make compressing a video file using HandBrake easier through applescript and have been basing most of the code off of templates I've found.br At this point in the code, the user has specified the source file and the destination folder.br Instead of HandBrakeCLI just blindly overwriting a file with the same name in the destination folder, I wanted Finder to do a check and, if a file with the same does already exist in the destination folder, then I wanted to have the filename appended with the current date and time before the extension.br Everything worked fine until I started adding the "if exists" code.  Here's the chunk of code:  precodetell application "Finder"     set newFilepathPOSIX to POSIX path of dest_folder     set newFilepathPOSIX to newFilepathPOSIX &amp; "video.mp4"     -- Check if file with same name exists     if exists file newFilepathPOSIX then         display dialog "There is already a file named \"video.mp4\". Do you want to replace the file?" buttons {"Quit", "No", "Yes"} cancel button 1         if result = {button returned:"No"} then             set newFilepathPOSIX to POSIX path of dest_folder             set newFilepathPOSIX to newFilepathPOSIX &amp; "video" &amp; getDateAsString &amp; ".mp4"         end if     end if     set newFilepathPOSIX to quoted form of newFilepathPOSIX     set shellCommand to "/Volumes/Flash Drive/HandBrakeCLI -i " &amp; origFilepathPOSIX &amp; " -o " &amp; newFilepathPOSIX &amp; " --preset=\"Classic\"" end tell  to getDateAsString from t     set creationDateString to year of t as string     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; getMonthNum(t) as string)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; day of t as string)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; hours of t as string)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; minutes of t as string)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; seconds of t as string)     return creationDateString end getDateAsString /code/pre  Here's what it returns:  precodeexists file "/Users/me/Box Documents/My Folder/video.mp4"     --&gt; false /code/pre  If I add "as POSIX file" to the "if exists" line, this is what it returns:  precodeget file "/Users/me/Box Documents/My Folder/video.mp4"     --&gt; error number -1728 from file "/Users/me/Box Documents/My Folder/video.mp4" exists file "My HD:Users:me:Box Documents:My Folder:video.mp4"     --&gt; true display dialog "There is already a file named \"video.mp4\". Do you want to replace the file?" buttons {"Quit", "No", "Yes"} cancel button 1     --&gt; {button returned:"No"} /code/pre  After this, it errored out.br Totally new at this so hopefully I've given enough detail without giving away way too much detail.  <answer81541> Try:  precodeset dest_folder to POSIX path of dest_folder set newFilepathPOSIX to dest_folder &amp; "video.mp4"  tell application "System Events" to exists file newFilepathPOSIX if the result then     display dialog "There is already a file named \"video.mp4\". Do you want to replace the file?" buttons {"Quit", "No", "Yes"} cancel button 1     if button returned of the result = "No" then         beep         --Insert your code here     end if end if /code/pre  EDIT  precode set handPath to "/Volumes/Flash Drive/HandBrakeCLI" set dest_folder to POSIX path of dest_folder if text -1 of dest_folder â‰  "/" then set dest_folder to dest_folder &amp; "/" set newFilepathPOSIX to dest_folder &amp; "video.mp4"  tell application "System Events" to exists newFilepathPOSIX if the result then     display dialog "There is already a file named \"video.mp4\". Do you want to replace the file?" buttons {"Quit", "No", "Yes"} cancel button 1     if button returned of the result = "No" then set newFilepathPOSIX to dest_folder &amp; "video" &amp; getDateAsString(current date) &amp; ".mp4" end if  set shellCommand to quoted form of handPath &amp; " -i " &amp; quoted form of origFilepathPOSIX &amp; " -o " &amp; quoted form of newFilepathPOSIX &amp; " --preset=\"Classic\"" do shell script shellCommand  on getDateAsString(myDate)     set creationDateString to year of myDate as string     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; (month of myDate as integer) as text)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; day of myDate as text)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; hours of myDate as text)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; minutes of myDate as text)     set creationDateString to creationDateString &amp; text -2 thru -1 of ("0" &amp; seconds of myDate as text) end getDateAsString /code/pre  <answer81798> You could just write the files out with the time stamp always included. And you do not need all that code to do it.  precodeset theDate to do shell script "date +%Y_%m_%d_%H%M%S" -- use the unix  date command to get a formated text date  set newFilepathPOSIX to POSIX path of dest_folder set newFilepathPOSIX to newFilepathPOSIX &amp; "video_" &amp; theDate &amp; ".mp4" /code/pre  Also only put code between strongtell blocks/strong that needs to be interpreted by a   given Application.  I.e the code below doe not need a strongtell block/strong.  None of the below example code is in a strongtell block/strong but works fine.  precode  set newFilepathPOSIX to "/Users/USERNAME/Movies/CLI/"     set theDate to do shell script "date +%Y_%m_%d_%H%M%S"    set the sourceFile to "/Users/USERNAME/Movies/The Studio.m4v"     set newFilepathPOSIX to newFilepathPOSIX &amp; "video_" &amp; theDate &amp; ".mp4"     set shellCommand to "/Volumes/HandBrake-0.9.8-MacOSX.6_CLI_x86_64/HandBrakeCLI -i " &amp; quoted form of sourceFile &amp; " -o " &amp; quoted form of newFilepathPOSIX &amp; " --preset=\"Classic\""      do shell script shellCommand /code/pre  Putting code erroneously between them (like your doing with the finder) will raise unexpected errors or results.  You can also get the title of a video if it has one use the strongmdls/strong command  example: This will look for the video's first title. If it does not find one then it will use "video"  precodeset theDate to do shell script "date +%Y_%m_%d_%H%M%S" set sourceFile to "/Users/USERNAME/Desktop/Desktop--MOVIES/The Studio2.mov"  set nulmaker to "Video" set title to (do shell script "mdls   -name  kMDItemTitle -raw -nullMarker" &amp; space &amp; quoted form of nulmaker &amp; space &amp; quoted form of sourceFile) -- get the first title name or if none set to "Video" set newFilepathPOSIX to newFilepathPOSIX &amp; title &amp; "_" &amp; theDate &amp; ".mp4"    set shellCommand to "/Volumes/HandBrake-0.9.8-MacOSX.6_CLI_x86_64/HandBrakeCLI -i " &amp; quoted form of sourceFile &amp; " -o " &amp; quoted form of newFilepathPOSIX &amp; " --preset=\"Classic\"" do shell script shellCommand /code/pre  <comment94255> Thanks, but now I'm getting 1708 errors (see my response "answer" below).