Have OSX Launch Applicaiton on restart? <body> This may seem like a odd question since most people would want to know how to start a program on boot. I was wondering if there is a way to have OSX launch an application when the restart button is pressed from the apple menu.  <answer202531> It's doable with a reboot proxy, i.e. you'd rename code/sbin/reboot/code, e.g. codesudo mv /sbin/reboot /sbin/reboot.ori/code, and then create a codereboot/code symlink to the code/sbin/reboot_proxy/code bash script that has the command(s) you what to execute before the reboot and then lastly it executes code/sbin/reboot.ori/code.  I actually have this setup on my Mac running OS X 10.8.5 and it works well.  I'm trapping both codereboot/code and codeshutdown/code commands. Which are what's run when clicking the strongApple/strong menu  strongReboot.../strong and or strongShut Down.../strong commands.  ul liNote: It's best to have a second bash script to toggle the state of the original file and the proxy bash script as it has to be set back before OS X updates are done that will touch the file(s)./li /ul  This is the code in my codeshutdown_proxy/code bash script that has a symbolic link for both the codereboot/code and codeshutdown/code commands after the original were renamed with a code.ori/code extension.  Feel free to adapt it for your use.  strongContents of codereboot_proxy/code/strong   precode#!/bin/bash  _name="$0"; echo "Reboot Proxy Executing..."  # Place command(s) to execute before reboot directly below this comment:   _command="$_name.ori" echo "Executing $_command $@..."  "$_command" "$@" /code/pre  Let me add that from a security standpoint there are those that would argue this is a bad thing to do and I'd say to some extent that's true under the right conditions however since I'm the only one that has ever and will ever touch my Mac and I have several layers of security running beyond the built-ins, I personally have no issue using such a method.  <answer202546> Since choosing Apple Menu  Reboot effectively logs you out, you could probably do something like is suggested here: Run Script on Logout Without Use of Logout Hook.   I would avoid attempting to edit or modify any system binaries, scripts, etc and stick to what is available in "userspace." Mostly because any system update could overwrite any changes you made, and if you did anything that if "broken" could prevent booting or logging in... Well, that can be a major headache.  emNote: I have not had a chance to put any of that to the test just yet, but it looks like a few leads may be in there./em  <comment244276> Just to be sure of what you're asking, you what a program to start when Apple menu  Restart... is clicked and that program runs and finishes its task before the actual reboot process takes place.  Is that correct? What about when a `shutdown -r now` command, which is a reboot, is issued in a Terminal or from an application? <comment244279> That doesn't matter, I only need this program to execute upon the Apple menu  Restart being clicked. <comment244282> Thanks for this, I feel like it will work but for some reason even after replacing the old reboot binary with a new bash script executing what I need it still reboots like normal. Could I be doing something wrong? <comment244283> Actually, when running from the terminal the reboot command works, it seems OSX is using a different command when using the GUI <comment244284> @CyrodiilSavior, The way I have mine setup, whether I click the Apple menu  Reboot... and or Shut Down... commands or run `reboot` and or `shutdown` in a Terminal what is in my "# Command(s) to execute before reboot" section all finish before the actual reboot/shutdown occurs. <comment244285> As I've mentioned, my method works for me from the GUI and CLI under OS X 10.8.5.  What OS X version are you using so I can test under that version? <comment244287> I'm using Yosemite, I thought maybe it was a version issue but I wasn't sure. <comment244290> Okay, I'll test with Yosemite a bit later today, need to go cut the grass first. <comment244302> On a clean build of OS X 10.10.4 I just tested my `shutdown_proxy` script and it works whether I click the Apple menu  Reboot... and or Shut Down... commands or run reboot and or shutdown in a Terminal.  So you might need to show and or explain what you've done for me to troubleshoot it.  The way mine is set the `reboot` and `shutdown` binaries have been renamed and a symlink named `reboot` and `shutdown` point to my `shutdown_proxy` in the same dir.  The code in the proxy script runs as I said in all 4 use cases.  I see no reason why it can't be adapted for just the reboot. <comment244305> Hrm, I'm guessing I followed your instructions incorrectly. Basically what I did was I renamed /sbin/reboot to /sbin/reboot.OLD then I made a bash script called reboot and inside I wrote what I'd need (basically is just runs an application) and then on the last line I had it do shutdown -r now to actually perform the reboot. This works just fine from CLI but when I use the GUI it acts like a normal reboot <comment244308> While I did originally say _"... and then create a /sbin/reboot bash script that has the command(s) you what to execute before the reboot ..."_ I said that because you only wanted it to act when rebooting however I think you're going to have to have `reboot` as a symlink to the proxy script in order for it to work. <comment244310> Thats a good suggestion, I'll keep it in mind, I'm going to keep working with @user3439894 and his method for now because I also need to do this on linux systems. <comment244312> Alright I think I understand. Let me give that a go and see if it works. <comment244320> I have `/sbin/shutdown_proxy` the bash script, and a symlink named `reboot` and `shutdown` that point to  `/sbin/shutdown_proxy` and the original `reboot` and `shutdown` binaries now have a `.ori` extension.  All files are in `/sbin` and owned by `root:wheel`.  Use my proxy script only call it `reboot_proxy` since that all you want it for, and use the script in my answer, as is, placing your command(s) after the comment as noted.  Rename the `reboot` binary `reboot.ori`.  Since your only want reboot don't rename the `shutdown` binary, I'm trying to explain how this is working on my system too. <comment244607> I got it working, thanks so much for the help! <comment244654> You're welcome and I glad you were able to get it working.