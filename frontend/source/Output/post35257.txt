loosing vi mode in terminal <body> My favorite text editor beeing VIM made me add the follwing line to my ~/.bashrc  precodeset -o vi /code/pre  As expected, hitting escape lets me execute a vi command, BUT ONLY ONE ?!? For example if I do this:   precodeescape, b, b /code/pre  it jumps to the beginning of the word and then types "b" to the line instead of jumping another word back.  This happens on all my osx boxes (10.6 and 10.7) and non of the linuxes I use.   Anyone else experiencing this? Or is this expected?   <answer56954> You can use kbdC-x/kbdkbdC-e/kbd to go into editor mode. This will use vim if your $EDITOR is set to vim. Also, if you switch to zsh there are options to have a psuedo-normal mode on the command line. See this blog post describing it: http://www.civet.ws/?p=165  <answer73054> If you're using codeset vi/code then kbdC-x/kbdkbdC-e/kbd will not open your editor as Conner suggested. Instead, use kbdEsc/kbdkbdv/kbd.  <answer148554> This problem can come up when you have both ~/.bash_profile (or ~/.profile) and ~/.bashrc files with different settings. To determine if this is your issue, try typing these commands to start a "clean" bash prompt and set vi mode therein:  precodebash --norc --noprofile set -o vi /code/pre  If the vim keybindings don't vanish after one movement, then read on.  The fix for me was first to change ~/.bash_profile to only read:  precode[ -r ~/.bashrc ] &amp;&amp; . ~/.bashrc /code/pre  Then I put the codeset -o vi/code option in ~/.bashrc.  For me, it was no problem for .bash_profile to refer exclusively to .bashrc. Notably, command-line tools with automagic installers like [gvm|http://gvmtool.net/] and [rvm|http://rvm.io/] may manipulate your .bash_profile file, so you may need to set it back after an install or update of those.  <comment40135> Hmm, works as expected here, what other settings do you have defined? Maybe you can add the output of `set -o` to your question (or post it as a comment for somebody with editing rights to add)? <comment40141> Thanks for that, I created a `~/.bashrc` with only `set -o` vi and it seems that terminal ignores it because `set -o` shows emacs on... investigating further, hints welcome... <comment40143> Try to run `bash --norc --noprofile` and set vi mode manually. If this works the problem is in one of the init files. <comment40146> Yep, that fixed it. osx terminal is starting bash as login shell.  created a `~/.profile`  with  `if [ -f ~/.bashrc ]; then . ~/.bashrc fi`  this way I only have to worry about the rc and can copy it between systems.  Thanks for hints patrx <comment40550> The `-f` test (does it exist and is it a file) should be `-r` (does it exist, is it a file and is it readable). Also, you can simplify the code a little to `[ -r ~/.bashrc ] && . ~/.bashrc` (itâ€™s a matter of taste, but this style is used in `/etc/profile`, for example). <comment80723> I'm having the exact same issue.  I have my default shell set to zsh rather than bash and generally use iTerm rather than termal, but I removed my .profile and .zshrc files and tried in terminal as well and same issue? any other insights? <comment103886> I have the same problem and I've searched a lot but I couldn't found the solution and it's freaking me out. <comment174950> Running `bash --norc --noprofile` followed by `set -o vi` did indeed allow me to use successive vim commands as expected, but manipulating `~/.profile` as described didn't lead to a sticking fix, but editing `~/bash_profile` did. Guess it just depends on the init scripts you're using.