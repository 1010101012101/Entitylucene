Defining environment variables with launchd/launchctl <body> There are different solutions regarding the definition of environment variables that are stored in the codelaunchd/code process, namely over at StackOverflow and Superuser. How do these solutions differ?  <answer64917> For the sake of clarity, I will refer to this solution as the emstatic solution/em, the second solution as the emdynamic solution/em, and finally this one as the emlaunch agent solution/em. I am going to compare the static and dynamic solution with the launch agent one, respectively.  The static solution involves the editing of code/etc/launchd.conf/code. This has the advantage, as with the launch agent solution, that the variables are set right at the login. Disadvantages are that  ul lithe variables are defined for all users. The launch agent solution lets each user decide for himself. If one wants to define variables for all users with the launch agent solution, the shell script can be amended with a loop (and another file),/li lithe definition of the variables in code/etc/launchd.conf/code does not allow for things like variable substitution and such stuff (at least that is my guess, maybe it is feasible),/li liobviously, you need access to code/etc/launchd.conf/code to pull the static solution off, with the other one you can put all files at accessible places, e.g. the launch agent in code~/Library/LaunchAgents//code,/li lithe variables are not available immediately after editing the file, as with the launch agent solution (but see below)./li /ul  The dynamic solution is similar to the launch agent solution. Its disadvantage is that the variables are not available right after login, you first need to (re-)define them. To combine the dynamic solution with the other, imagine you wanted to set the variable codeFOO/code to the content of the variable codeBAR/code. You would fire up a shell, say the bash, and type  precodelaunchctl setenv FOO "$BAR" echo 'setenv FOO $BAR' &gt;&gt; ~/.conf.launchd /code/pre  Then codeFOO/code would be available in all applications started after this definition, and would also be defined right after the next login. 