Bash Ctrl-A Returns to Start of Line but Doesn't Display Properly <body> When I ssh into a Linux server from bash Terminal, I can use kbdCTRL/kbd+kbdA/kbd to return to the start of line properly, and kbdCTRL/kbd+kbdE/kbd to go to end of line and everything works fine.  When I use bash locally on my Mac, when I use kbdCTRL/kbd+kbdA/kbd it logically goes back to the start of the line, but doesn't display the cursor in the correct place.  It displays the cursor 7 or so characters off and doesn't update the line text correct.  strongExample/strong  precodefind . -name "hello.cpp" /code/pre  strongkbdCTRL/kbd+kbdA/kbd!/strong  precodefind . -name "hello.cpp"        ^~~ cursor shows here ???? /code/pre  strongInsert "this is a test" (just to show)/strong  Displays:  precodefind . this is a test -name "hello.cpp"                       ^~~ cursor is still here ???        ^~~~~~~~~~~~~^ text inserted here ??? ^~~~~~^ unchanged for some reason /code/pre  strongCommand executed/strong  precodethis is a test find . -name "hello.cpp" /code/pre  I use the same  precodePS1=\n \e[1;95m \u@\h \e[0;32m\w \e[1;30m $(__git_ps1 " (%s)" ) \n \e[1;95m \@ \n $ \e[0;30m /code/pre  as I do on Linux.  strongVersion Info/strong  ul libash version: 3.2.57(1)/li literminal version: 2.6.1 (361.1)/li liOS X El Capitan, 10.11.5/li /ul  <answer258965> Add code\[/code and code\]/code around the colour codes to enable bash to calculate the line length correctly. Something like this:  precodePS1=\n \[\e[1;95m\] \u@\h \[\e[0;32m\]\w \[\e[1;30m\] $(__git_ps1 " (%s)" ) \n \[\e[1;95m\] \@ \n $ \[\e[0;30m\] /code/pre  (This answer is taken from @Mark's comment on the question.)  <comment297069> Actually the reason seems to be the opposite you need \[ \] to enclose the colour shift codes as per the article quoted there http://www.ibm.com/developerworks/linux/library/l-tip-prompt/ <comment297076> Adding `\[` and `\]` around the colors solved the problem.  It's actually the inverse of the other problem, which I'd recommend changing the subject line for as this is a more general issue than just for "emacs style".  Do you want me to mark as duplicate even though they're inversed?  I think this subject would make it easier to find. <comment297154> Currently it is not a duplicate but I suspect a question could be written using the other answer to produce a common question <comment323844> @Mark I converted your comment to an answer. Questions should have answers. If you create your own answer (you can copy the one I added if you want) then I will delete mine.