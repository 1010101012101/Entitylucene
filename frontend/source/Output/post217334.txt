Slow pbpaste / pbcopy <body> Laptop: Late 2013, i7, 500G SSD, 16G of ram  El Capitan 10.11.1  When I try and pbcopy and pbpaste on the command line they are running emawfully/em slow. This ties into an emacs issue I'm having as well but since pbcopy/paste is the root of it I'm asking here....  Here is some example output:  precode~❯ time echo 'test' | pbcopy echo 'test'  0.00s user 0.00s system 24% cpu 0.003 total pbcopy  0.01s user 0.01s system 1% cpu 0.830 total ~❯ time echo 'test' | pbcopy echo 'test'  0.00s user 0.00s system 38% cpu 0.002 total pbcopy  0.01s user 0.01s system 1% cpu 0.847 total ~❯ time echo 'test' | pbcopy echo 'test'  0.00s user 0.00s system 40% cpu 0.001 total pbcopy  0.01s user 0.01s system 0% cpu 1.708 total ~❯ time pbpaste test pbpaste  0.01s user 0.01s system 1% cpu 0.860 total ~❯ time pbpaste test pbpaste  0.01s user 0.01s system 1% cpu 0.843 total ~❯ time pbpaste test pbpaste  0.01s user 0.01s system 1% cpu 0.853 total /code/pre  If I watch Activity Monitor and set sampling to 1 second - I can see notifyd jump to 100% CPU usage everytime I run pbcopy.  If I kill codenotifyd/code pbcopy/paste works blazingly fast:  precodetime echo 'test' | pbcopy echo 'test'  0.00s user 0.00s system 38% cpu 0.002 total pbcopy  0.01s user 0.01s system 80% cpu 0.015 total /code/pre  El Capitan bug? Something else? Thanks in advance for any responses.  <answer217342> Consider reporting this directly to Apple via bug reporter as it is unlikely anyone here will be able to help.  Delays of strikearound point zero one/strike less than one second are probably acceptable to Apple's engineers. 100% CPU is also acceptable; useful work is being done for the user when copying and pasting.  The pasteboard is not designed as a performance focused transport mechanism for processes and scripts.  Pasteboard operations can result in a cascade of notifications to processes. This is likely what you are detecting as codenotifyd/code is responsible for system wide notification delivery. This behaviour is normal.  <comment262731> I think you're missing the actual timing here: the wall clock time is `0.830 total`, `0.860 total`, etc. <comment262732> You are right. I am an order of magnitude out. Still less than one second; which for a user initiated action remains acceptable.