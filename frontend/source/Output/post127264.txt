Bash: Return the most recently edited file in a specified directory <body> For a bash script I am currently developing I want to access the name of the most recently edited file (including folders but not subdirectories) in a specified directory. How do I do this?  <answer127265> pre class="lang-none prettyprint-override"codels -t /path/to/folder/ | sed -n 1p /code/pre  supcode-t/code sorts ls by date modified. The output is piped to sed to get the first line of the output./sup  <answer127270> As @fedorqui suggested You can do:  codels -1t | awk '{ print $9; exit}'/code  strongOld post:/strong  You can get it using codeawk/code and codetail/code  codels -lrt /path/to/folder/ | tail -1 | awk '{ print $9 }'/code  <answer127278> Parsing codels/code is helpful in most of the cases, but sometimes it is not a good idea.  To have a 100% sure solution, you can use the codefind/code command and make it print the last time all files were accessed. By printing it in a numeric way, they you can sort the list and print the last one.  precodefind /your/path -maxdepth 1 -print0 | xargs -0 stat -c "%Y %n" | sort -n | tail -1 | cut -d' ' -f2- /code/pre  h3Explanation/h3  ul licode-maxdepth 1/code does not go deeper in the directory structure./li licodexargs -0 stat -c "%Y %n"/code gets the file name and prints its time of last modification plus the name of the file. (from codeman stat/code: "%Y     time of last modification, seconds since Epoch")/li licodesort -n/code orders the list numerically, being the first the oldest./li licodetail -1/code gets the last of the list./li licodecut -d' ' -f2-/code removes the printing of the datetime./li /ul  <comment149147> Don't You print only the third file in first column by using this `sed` command? <comment149150> @Mateusz ls, when piped, doesn't print in columns. I've made the answer much simpler though, printing the first line since if you haven't aliased ls to show hidden files etc then the first line is all that's necessary since there's no total/etc. <comment149159> There's no `-printf` operator on OS X `find.`    `find: -printf: unknown primary or operator` <comment149160> Oh, thanks @MateuszSzlosek Just updated with an approach with `print0` and then `xargs`. I am curious to see if it works. It should... <comment149161> Note you can improve it by using `ls -lt` (without `-r` that reverses) and then skip `tail -1` by doing `awk '{print $9; exit}'` <comment149162> `stat: illegal option -- c` <comment149164> Let's try with `stat -f` as described in [Last modified date of a directory in OSX](http://stackoverflow.com/questions/10197938/last-modified-date-of-a-directory-in-osx) <comment149165> `ls -lt` gives "total XXXX" on the first line. <comment149166> As per the `-l` part. You can use `1` (one) instead. <comment149167> Good point, this works. Thanks! <comment149169> `-print0` option gives me concatenated output of `ls` <comment149180> You can also do `ls -t /path/to/folder/ | head -1` which I think is slightly more readable.