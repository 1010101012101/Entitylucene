App Slicing Thinning: Pre determine actual true size & space taken by App install or update on iOS Device? <body> Note: This has to do with strongApp Slicing/strong and strongApp Thinning/strong that was introduced by Apple in late 2015. Nothing to do with your 2012 question.    https://developer.apple.com/library/ios/documentation/IDEs/Conceptual/AppDistributionGuide/AppThinning/AppThinning.html  http://www.imore.com/app-thinning-ios-9-explained  http://www.macrumors.com/2015/10/05/ios-9-app-slicing-now-available/  http://www.appcoda.com/app-thinning/  Given that my iOS storage has been running out of space, I try to keep iOS App versions which are smaller in size and not update unless essential or compelled to {e.g. Uber compels updates}   So, I recently did a comparative analysis for 2 apps and what sizes (in MB) they show in 3 places (iTunes 12.3.3 On Windows 8.1 x 64):   strongApp Names:/strongbr Todoist  11.0.3br Wunderlist 3.4.3  hr  strongCurrent Latest Versions updated &amp; synced this weekend:/strong   strongiTunes  AppStore/strong | As shown on AppStore before downloadbr 70br 95    strongiTunes  My Apps/strong  | As shown in iTunes after downloadbr 34br 53    strongiPad 2 - iOS 9.0.2 /strong | As seen under iTunes  Sync  App Selection area after Install/ Syncbr 65br 87    strongiPhone 5 - iOS 9.0.2 /strong | As seen under iTunes  Sync  App Selection area after Install/ Syncbr XXbr YYbr {Will post these numbers soon as well}  I cannot understand why the "strongcomplete un-thinned App from the AppStore/strong would emtake more space/em when strongthinned for the iPad or iPhone/strong"  hr  <answer234516> I can see multiple reasons for that happening:  strongA) Compression/strong  Apps are downloaded in compressed form from the app store. It is similar to a Zip-file. When the app is installed on the phone, it is uncompressed by the app installer software on the phone.  strongB) Differential updates/strong  If you already have the app installed, and are merely downloading an update for the app - you could be downloading a differential instead of the full app. For newer iOS versions, the App Store will calculate the difference between what you already have and the new version of the app, enabling you to download less. However it will still take up the full amount of space on the disk after the upgrade has taken place.  strongC) App downloads after first use/strong  When you use an app for the first time, many apps will download extra data that is stored with the app on your phone. This could account for differences in app size as listed by the App Store, compared to the amount of space the app takes on your phone in practice.  <comment286752> Possible duplicate of [How much free space do I need to install an app update?](http://apple.stackexchange.com/questions/49562/how-much-free-space-do-i-need-to-install-an-app-update) <comment286764> Things have changed with recent iOS releases and application thinning, so I don't think it's a duplicate as such (answers might be different this time round). <comment286846> @AndrewLarsson - This has to do with App Slicing and App Thinning that was introduced in late 2015. Nothing to do with your 2012 question. <comment286850> @jk - I like the direction you are going but it needs more detailed info/ math. Is Itunes now doing Differential downloads between app releases? I dont think so. I have yet to see a single app download partial updates.. Every update has mean double digit MB downloads. <comment286897> They claim to be doing so. See Apple Technical Q&A QA1779 where they  write: "When generating the update package, the app store compares one or more prior versions of your app to the new version and creates an optimized package for each that contains only the content that has changed between versions of your app, excluding any content that did not change". Some call this "delta app updates". <comment286905> @AlexS Okay, thanks for the clarification. <comment287098> Your claim about block sizes is incorrect. Using statfs() on both my rMBP 15" (running OS X 10.11.4) and iPhone 6S (running iOS 9.3.1), the block size for the root filesystem on both is 4096 bytes. <comment287140> I wasn't able to check on iOS right now, but you're right regarding OS X. I checked using "diskutil info", but I got the device and allocation block sizes mixed up. The allocation block size is indeed 4 kB on OS X, whereas it is the irrelevant device block size which is 512 bytes.