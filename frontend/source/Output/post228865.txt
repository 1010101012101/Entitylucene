How to install an homebrew package behind a proxy? <body> I'm working behind a proxy. When I installed homebrew I've modified the official command:  precode/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" /code/pre  by adding a code-x/code option to tell curl about the proxy:  precode/usr/bin/ruby -e "$(curl -x proxy.mydomain.com:3128 -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" /code/pre  and it works well. But now I want to install openssl:  precodebrew install openssl /code/pre  and logically, the proxy is not detected:  precodecurl: (7) Failed to connect to homebrew.bintray.com port 443: Connection refused Error: Failed to download resource "openssl" /code/pre  If I set the environment variables as described in the documentation:  precodehttp_proxy=proxy.mydomain.com:3128 HTTPS_PROXY=proxy.mydomain.com:3128 ALL_PROXY=proxy.mydomain.com:3128 /code/pre  I obtain the same error. Adding codehttp:/code or codehttps:/code before doesn't change the problem.  Any ideas?  <answer232770> To run Homebrew or Curl behind a proxy :  precodeexport ALL_PROXY=$http_proxy:port  /code/pre  or  precodeexport ALL_PROXY=proxyIP:port /code/pre  After this is done, installation worked smoothly.  <answer262351> Try run codebrew/code like this:  precodehttp_proxy=https://user:password@proxy:port https_proxy=https://user:password@proxy:port brew install PACKAGE /code/pre  The source is here: https://juanchorossi.com/osx-set-brew-proxy-server/   <answer290850> precodeall_proxy=&lt;proxy_domain&gt;:&lt;port&gt; brew install &lt;package&gt; /code/pre  I didn't explicitly include the codehttp:///code or codehttps:///code prefix in the proxy domain. Worked for me with macOS Sierra and Homebrew 1.2.4.  <comment284464> `$http_proxy` is not defined usually. <comment308454> Setting `$ALL_PROXY` worked for me. <comment322972> Depending on the brew command you use, you also have to set the proxy for git with `git config --global http.proxy http://proxyuser:proxypwd@proxy.server.com:8080`