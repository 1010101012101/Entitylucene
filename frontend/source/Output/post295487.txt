Merge two folders, without overwriting any files <body> I have a folder called "AeroFS", and another one called "AeroFS Backup".   "AeroFS Backup" contains everything that "AeroFS" contains, and more.   I need to merge "AeroFS Backup" back into the "AeroFS" folder, but not overwrite ANY existing files, even if they are newer.   I'm not particularly comfortable with terminal commands, but may give them a try.  Is there a emfree/em app that can do this without overwriting existing files at all?  <answer295490> Depending on the version of macOS you're running, you could just select all the files in emAeroFS Backup/em and drag them into the emAeroFS/em folder. When you do you'll get prompted as below:  img src="https://i.stack.imgur.com/1ueeV.png" alt="enter image description here"  If you then tick the emApply to ALL/em checkbox and click on the kbdKeep Both/kbd button, you'll merge the files as you want. (In older versions of macOS you may be prompted with the kbdMerge/kbd button instead of the kbdKeep Both/kbd button). If you don't get either option, try holding the kbdOption/kbd key down as you drag the files across.  strongIMPORTANT/strong - Before doing this with the folders you want, I would create a couple of test folders (or just make copies of the folders you want to merge) and then test this behaviour, as I'm not sure what versions of macOS originally offered this functionality.  <answer295512> Not sure why the other answer was deleted, it was almost right.  I use the terminal command to do this:  codecp -n -v '/src'/* '/dest'/code  codecp/code = Copy  code-n/code = Don't overwrite existing  code-v/code = Verbose output  <answer295514> You can do this in Terminal with a short script:  precodefor file in /source/directory; do $time=date +%s; if [[ -f /target/directory/$file ]]; then cp $file ${file}-${time}; else cp $file /target/directory/$file; fi; done /code/pre  This will check to see if the file already exists and if it does it will append the time in seconds to the destination filename and copy it over.  The advantage this has over just doing a code-v/code verbose or code-n/code no overwrite is that it will ensure there are no multiple duplicates.    Additionally, this has the added advantage that if the filenames are the same but are different in size/content it gives you the opportunity to see the potential dupes and deal with them.  <comment373107> `man mv` might be a good place to start :-) <comment373109> I'm trying with RSync however it's not behaving correctly, and instead is copying the folder within the folder selected. <comment373110> Unfortunately this isn't what we want. It still copies the files over and makes duplicates of all the ones that already exist. We need a "Skip" option". <comment373111> Hmm, I'm a little confused. If you want to *merge* the folders without overwriting any existing files, isn't this exactly what you need? Apologies if I'm missing something obvious, it's been one of those days. :( <comment373113> No, The two folders are identical, except that the backup folder contains more files. If I were to merge them, then all the existing files will end up with duplicates. <comment373115> Okay, well, if you get the *Keep Both* option by default, then pressing the Option key down will change the option from *Keep Both* to *Skip* instead. <comment373135> Sounds like you may have a trailing slash in your rsync command where you shouldn't, or vice versa. See [this answer](https://stackoverflow.com/a/31278462/476909). <comment373139> Try `rsync -av --ignore-existing  source/ destination` <comment373348> The Skip option isn't there at all. Tried holding down all the keys. <comment373398> Ok, let's work through this a little. In much older versions of macOS you'd only get `Skip` as the default extra choice. Then it became `Merge` and now it's `Keep Both`. The way to change it was by pressing the Option key (which you can do after the message appears on screen). If you let me know what version of macOS you're running I'd be happy to test it at my end to see if I can replicate what you're getting. :)