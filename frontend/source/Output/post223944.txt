pf port-forwarding on OS X Yosemite to avoid block <body> My ISP blocked a TCP port, let's say em$ip1:$port1/em  So I setup em$ip2:$port2/em on my own VPS to get around it. How can I forward all traffic to em$ip1:$port1/em on OS X Yosemite as client to em$ip2:$port2/em using codepfctl/code?  I tried:  precodeecho -e "rdr inet proto tcp to $ip1 port $port1 -&gt; $ip2 port $port2 \n"  | sudo pfctl -ef - /code/pre  Then tried curl the code$ip1:port1/code  It didn't work at all. I guess the problem is the command above only translates incoming traffic, not outgoing.  I successfully made it working on Linux with this:  precodeiptables -t nat -A OUTPUT -d $ip1 -p tcp --dport $port1 -j DNAT --to-destination  $ip2:$port2 iptables -t nat -A INPUT -d $ip2 -p tcp --dport $port2 -j SNAT --to-source $ip1 /code/pre  How can I do it with codepfctl/code?  <comment271515> @klanomath I read somwhere that the trailing newline is essential. To avoid  `syntax error`. However, if you remove the `\n` it still does not work. <comment271523> Have you tried [this](https://serverfault.com/questions/421261/os-x-10-8-redirecting-locally-initiated-ssh-connections-to-localhost22)? Don't use *Packets = "proto tcp from $Out to any port 22"*  but *Packets = "proto tcp from en0 to any port 22"* instead. <comment271668> @klanomath yes, behind a router. Both my Mac and Linux are behind the same router. `iptables` works. I tried the thread you posted, sorry it didnt work. <comment271676> @klanomath Thanks for the tip, I tried that. Didn't work. I even tried wireshark, it still connects to the old blocked ip <comment271678> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/34547/discussion-between-klanomath-and-est).