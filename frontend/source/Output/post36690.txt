How can I prevent an SSH session from hanging in OS X Terminal? <body> When I strongclose my MacBook/strong with an active SSH session in Terminal and then wake it up,  the prompt goes unresponsive.  In about five minutes it says     codeWrite failed: Broken pipe/code   and terminates.  This also happens when I strongdon't type/strong anything in the Terminal in about fifteen minutes.  Can I force OS X to:  ol listrongKeep SSH connection alive/strong for longest time possible/li listrongKill it immediately/strong once it becomes unresponsive/li /ol  ?  <answer36691> strongFor keeping the connection alive/strong, you can check in code/etc/ssh_config/code the line where it says codeServerAliveInterval/code, that tells you how often (in seconds) your computer is gonna send a null packet to keep the connection alive. If you have a 0 in there that indicates that your computer is not trying to keep the connection alive (it is disabled), otherwise it tells you how often (in seconds) it is sending the aforementioned packet. Try putting 120 or 240, if it is still killing your connection, you can go lower, maybe to 5, if with that number it doesn't happen, maybe it is your router who is dumping the connection to free memory.  strongFor killing it when it gets hang up/strong, you can use the ssh escape character:  precode~. /code/pre  That is, press the tilde and then the period, if it doesn't work, press Enter before you press that, that will kill the connection immediately.  <answer108636> You can also try using the awesome mosh project. It will gracefully handle network losses, machines going to sleep, etc and happily restore the connection when you have a working network again.  Another more time-honored solution is to use tmux on the remote machine. In that case you may still get a broken pipe, but if you reconnect your shell and applications will be waiting just as you left them.  <answer220012> You can:  Configure your system, system-wide, for all connections By editing: strong/etc/ssh/ssh_config/strong And add the line:  precodeServerAliveInterval 10 /code/pre  Or, per-server strong~/.ssh/config/strong  precodeHost keepsdroppingme.com    ServerAliveInterval 10 /code/pre  What this basically does it sends keep alive packet, every 10 seconds...  <answer248868> Add these two lines to code/etc/ssh/ssh_config/code:  precodeServerAliveInterval 60 TCPKeepAlive yes /code/pre  <answer252027> The various answers here are in conflict regarding the exact path to the config files.  Maybe it is different in different unixes?  I suggest reading the man pages on your system!  In strongman ssh(1)/strong, search for text: emconfig/em.  On my system, I have a choice of either system-wide or this-user config files (and the paths are oddly different).  In strongman ssh_config(5)/strong, search for text: emalive/em.  On my system, it looks like I need to set both emServerAliveInterval/em and emServerAliveCountMax/em.  What worked for me, on macOS 10.12 Sierra, is to put the following two lines in ~/.ssh/config:  precodeServerAliveInterval 20 ServerAliveCountMax 180 /code/pre  Now I can ssh to my Ubuntu 16.04 server with no disconnect for 20*180 seconds = 1 hour.  Made my day!  <comment41759> Thanks! This seems to have worked. <comment127543> Actually, that's exactly what I'm doing now. <comment149813> Ok, you can kill the connection with `~.`, great tip! But what does it actually do? <comment160777> The only thing I was confused about was wether or not I had to restart sshd, but it seems as though just exiting the session and reconnecting did the trick <comment349210> Often the ~. doesn't work for me for several minutes. Why is that?