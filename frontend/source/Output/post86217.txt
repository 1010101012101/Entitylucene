Disabling startup items that run on their own <body> I've found a couple apps that seem to be able to launch themselves on startup, despite that they don't appear in the usual places...  precode- Login Items (in the Users preference pane) - /Library/LaunchAgents - /Library/LaunchDaemons - /Library/StartupItems - /System/Library/LaunchAgents - /System/Library/LaunchDaemons - /System/Library/StartupItems - ~/Library/LaunchAgents - ~/Library/LaunchDaemons - ~/Library/StartupItems /code/pre  At least some of these apps (e.g. Day One and Pauses – both from the Mac App Store) seem to be launching an item from their own internal codeLoginItems/code folders:  precode/Applications/Day One.app/Contents/Library/LoginItems/Day One Reminders.app /Applications/Pauses.app/Contents/Library/LoginItems/PausesLauncher.app /code/pre  As good citizens, both apps allow you to disable the launch-on-login behavior, but it's disconcerting that this behavior doesn't seem to be controllable from a system-wide preference, and I'd like a way to systematically identify/control these login items. So, the (two-part) question is:  ul liWhat is actually controlling whether/how these app-specific launch items are being activated, and/li liHow can I get an inventory of all these login items?/li /ul  em[edited for clarity 2013-03-20 11:22 PT]/em  <answer86280> Day One seems to store the login item in /var/db/launchd.db/com.apple.launchd.peruser.501/overrides.plist:  precode$ /usr/libexec/PlistBuddy -c 'Print _com.apple.SMLoginItemBookmarks:com.dayoneapp.dayone-agent' /var/db/launchd.db/com.apple.launchd.peruser.501/overrides.plist book 0(UserslaurTorrents                         Day One.apContentsLibrary LoginItemsDay One Reminders.app $4HXh?kld ????$A????H???A?1M?$5DF7A03E-A7FB-3E80-B61D-F10CD8BF7B5D?/?0c75ae904b0f99cb3a794e7360629c822a0f4a14;00000000;0000000000000020;com.apple.app-sandbox.read-write;00000001;01000002;0000000000641712;/users/lauri/torrents/day one.app/contents/library/loginitems/day one reminders.app??????D|@l 0 ? ? ? ?  0 &lt;???????D /code/pre  Changing this to true in that same file disabled it:  precode&lt;key&gt;com.dayoneapp.dayone-agent&lt;/key&gt; &lt;dict&gt;     &lt;key&gt;Disabled&lt;/key&gt;     &lt;false/&gt; &lt;/dict&gt; /code/pre  <answer260835> (This is not about the user visible Login Items under the Users &amp; Groups Systems Preferences)  The Contents/Library/LoginItems/ buried in the application bundle is what appears to be the implementation of Apple's approach to sandboxed apps.   The tip from @user495470 about the storage of the login item reference in /var/db/launchd.db/ seems to be now defunct in macOS 10.12  Apple's direction appears to be heading into the app-self-contained approach where the LaunchDaemons, LaunchAgents, and StartupItems may be off-limits in the future as Mac apps may be required to be sandboxed at some point (personal conjecture, not fact). On the other hand CFPreferences API and sending AppleEvents to launch are deprecated...  Ref:  ul liAdding Login Items - Apple Developer/li liTable 3: Std locations for code in bundle/li liApp Sandbox LoginItem Sample Code/li /ul  While in the past it was easy to look in the aforementioned folders for startup launch information (per Dan), this new sandboxed model, while theoretically safer operationally, hides the an app's (or Trojan's?) startup capability from all normal users and most superusers who know to look in the system directories.  Finding these hidden Login Items now has become a PITA (pain in the app) with either grep'ing your way through the Applications folder or manually open app bundles looking in /Contents/Library/ for a "LoginItems" folder and it's contents.  For the user level solution, I did find a tool that lists the app bundle embedded Login Items called CleanMyMac http://bit.ly/2g5pk8t  (can deactivate or activate them. Be careful, only get this app from the company. There are cracked versions available that actually carry a virus in a way very similar to how Login Items now works (irony)..) img src="https://i.stack.imgur.com/v909r.png" alt="CleanMyMac showing Login Items picker"  And notice how these items, enabled or disabled, are not part of the user visible "Login Items" under the "Users &amp; Groups" System Preferences:  img src="https://i.stack.imgur.com/pOGR5.png" alt="enter image description here"  If you are like me and you are working this at a code level, a consolidated guide to implementation is here (by Tim Schroeder 2013): The Launch at Login Sandbox Project  <comment99479> (Note that this is *not* a dupe of ["Disabling startup items that run despite being unchecked on the “login items” list"](http://apple.stackexchange.com/questions/42570/disabling-startup-items-that-run-despite-being-unchecked-on-the-login-items-li)) ;) <comment99480> Why do you think it's not a duplicate (helps to prevent getting the same answers again)? And I assume you're experiencing this with specific applications, could you list them in your question please? <comment99481> And I think you are mistaking the Day One thing. The thing you listed above is just the Reminder app (menulet) which does get started if launch-at-login is checked. It's not a sandboxed LaunchAgents/Daemons folder. <comment99483> Thanks for the clarification. I may be mistaken about the diagnosis, but that's where I saw activity when watching the "disable" action with `fs_usage`, so I assumed that was what's going on. <comment99484> And, not a dupe because the other question was answered with the standard list of loginitems that I listed at the start of the question. The applications I'm seeing this happen with (including Day One) don't appear in my Login Items or those directories... <comment99571> What happens if you remove these apps from Notification Center? <comment99738> Nice -- looks like that's the answer. I'm still baffled why this isn't surfaced anywhere obvious: it's not in the Login Items preference pane (granted, there would need to be a new section for all users)... not in any of the launch folders... not even in Lingon. Out of curiosity, how did you know where to look? <comment99828> I ran [fseventer](http://www.fernlightning.com/doku.php?id=software:fseventer:start) when I opened Day One for the first time. <comment99911> Good call... thanks :) <comment274554> Thanks for sharing your investigative results! I sometimes also use fseventer for FS monitoring applications.