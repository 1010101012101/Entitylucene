Script or workflow to modify find and replace backslashes in clipboard <body> I need to do a lot of copying filepaths written by people using a PC (which uses backslashes) to a Mac (which uses forward slashes), and I'm tired of manually switching them every time.  I have to copy the filepath from our shared web browser, paste it into my file browser, and then go in and manually remove the backslash and replace it with a forward slash.  That last part is really what's killing me since basically every filepath I copy has several backslashes in it that I want to paste! What I want is something that will modify the contents of my clipboard so I can just paste it into my Mac file browser without having to manually replace the slashes every time.  In short, I want any "\" in my clipboard to change to a "/" before I paste it. Can anyone please help me with this?  <answer251460> ol liKeep the Windows quoted path entries into a plain text, name it to paths.txt, such as  precode "C:\Program Files\xyz"  "C:\Windows\System32" /code/pre/li liThen do it in Terminal:   precodecat paths.txt | sed -e 's#\\#\/#g' &gt; converted.txt /code/pre/li liThe result such as  precode"C:/Program Files/xyz" "C:/Windows/System32" /code/pre  if you want to get posix paths, try   precodecat paths.txt | sed -e 's#^\"\([a-zA-Z]\):#\"\/\1#' -e 's#\\#\/#g' &gt; converted.txt /code/pre  the converted result will be:  precode"/C/Program Files/xyz" "/C/Windows/System32" /code/pre/li /ol  <answer251471> Using an Automator Service and AppleScript emcode/em, here are two examples of how you can change embackslashes/em to emslashes/em in a emstring/em.  The first one takes the emselected text/em passed to the Automator Service, makes the replacements and sets the emoutput/em to the Clipboard. Which from there you can manually paste wherever you desire that can accept pasted text.  The second one takes the emselected text/em passed to the Automator Service, makes the replacements and then replaces the emselected text/em passed with the emmodified text/em in place, that is providing the source emselected text/em is editable.  There is a slight emcode/em difference between the two, in the codeon run/code emsubroutine/em and a single setting difference between the emservices/em. Both require first selecting a emtext string/em and then either a emright-click/em to select the emservice/em from the Context menu or accessing the emservice/em from the Application_Name  Services  menu. The codeon replaceText(find, replace, textString)/code emsubroutine/em is the same in both examples.  strongAppleScript emcode/em for the Clipboard method emservice/em:/strong  pre class="lang-none prettyprint-override"codeon run {input}     set the clipboard to replaceText("\\", "/", input as string) end run  on replaceText(find, replace, textString)     set prevTIDs to AppleScript's text item delimiters     set AppleScript's text item delimiters to find     set textString to text items of textString     set AppleScript's text item delimiters to replace     set textString to "" &amp; textString     set AppleScript's text item delimiters to prevTIDs     return textString end replaceText /code/pre  hr  strongAppleScript emcode/em for the replace selected text method emservice/em:/strong  pre class="lang-none prettyprint-override"codeon run {input}     set input to replaceText("\\", "/", input as string)     return input end run  on replaceText(find, replace, textString)     set prevTIDs to AppleScript's text item delimiters     set AppleScript's text item delimiters to find     set textString to text items of textString     set AppleScript's text item delimiters to replace     set textString to "" &amp; textString     set AppleScript's text item delimiters to prevTIDs     return textString end replaceText /code/pre  hr  strongTo use the AppleScript emcode/em in an Automator Service:/strong  ul liIn strongAutomator/strong, create a new strongService/strong with strongService receives selected text in any application/strong and strongInput is entire selection/strong, then either leaving unchecked the strong[] Output replaces selected text/strong check box for the clipboard service (AppleScript emcode/em for the Clipboard method emservice/em:) or checking the strong[âˆš] Output replaces selected text/strong check box for the for the emreplace selected/em text service (AppleScript emcode/em for the replace selected text method emservice/em:)/li liAdd a strongRun AppleScript/strong emaction/em to it and delete the emdefault code/em./li liCopy and paste whichever emcode/em for the method you choose to use./li liSave the strongService/strong with an appropriate name, e.g., strongReplace backslashes with slashes on Clipboard/strong for the first one and or strongReplace backslashes with slashes in selected text/strong for the second one. Or of course whatever you prefer./li /ul  Now select some text that has embackslashes/em in it and then select the emservice's/em name from the Services Context menu (right-click) or the Application_Name  Services  menu.  If using the Clipboard method, then paste the now emmodified selected text/em wherever you want or if using the emreplace selected text/em method, it's already replaced having selected that Service. 