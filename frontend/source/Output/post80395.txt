How do I compile vim with the --enable-gui=yes flag on OS X 10.8.2 <body> I'm trying to compile the latest version of codevim/code (7.3.785 as on date) with the code--enable-gui/code option set to codeyes/code:  precode./configure --enable-gui=yes make /code/pre  but codemake/code fails with several errors (full output). I can't quite make sense of the errors, as I don't see anything specific that I can fix. I must add that compiling it works fine without the GUI option, so it might be something directly related to X or the OS X Cocoa frame work. I'm running OS X 10.8.2 on a retina MBP.   What should I change/add/install to get this to work?     strongNote:/strong This question is explicitly about compiling codevim/code from source with the GUI option. I'm aware of codemacvim/code and this is what I use for almost everything. However, in order to embed codevim/code inside Eclipse using codeeclim/code, I need codegvim/code (works out of the box on Windows and Linux). Unfortunately, codemacvim/code does not support embedding inside Eclipse, hence my attempts to make it work on OS X.   <answer80463> You can fix the error about missing header files by exporting CFLAGS like this before running codemake/code:  precodeexport CFLAGS="-I/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.7.sdk/Developer/Headers/FlatCarbon/" /code/pre  Unfortunately, a new attempt to compile codevim/code fails with loads of errors:  precode/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/Headers/MacTypes.h:17:24: error: #include nested too deeply (...) /System/Library/Frameworks/CoreFoundation.framework/Headers/CFBase.h:156: error: conflicting types for ‘Boolean’ /usr/X11/include/X11/Intrinsic.h:155: error: previous declaration of ‘Boolean’ was here (...) /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.8.sdk/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/Headers/MacTypes.h:11:20: error: missing binary operator before token "(" (...) /code/pre  and README_mac.txt doesn't offer much help:  precode(...) Sorry, this text still needs to be written! /code/pre  After some more failed attempts with other compile options, and after skimming through the errors, one quickly gets the impression that strongGUI support is not yet implemented for OS X, at least for Quartz/strong.   A look to the other options for getting codevim/code, HomeBrew and MacPorts, pretty much confirms the suspicion: The former doesn't offer GUI support at all (see here) and the latter only using X11 (see here).  So to compile codevim/code with GUI support you will have to revert to the good ol' X11 (I tested the Athena widgets, other options are codemotif/code and, if you use GTK, codegtk1/code and codegtk2/code):  precode$ make distclean $ ./configure --enable-gui=yes --enable-gui=athena --disable-darwin /code/pre  After launching XQuartz I could start codevim/code in GUI mode:  precode$ export DISPLAY=:0 $ ./src/vim -g /code/pre  img src="https://i.stack.imgur.com/HplUZ.png" alt="enter image description here"  However, I have the impression that this is not the GUI support you need to embed codevim/code inside Eclipse.  <answer195246> You can use macports to install codevim/code with gtk support:  precodesudo /opt/local/bin/port install vim +huge +gtk2 /code/pre  <comment92828> Did you try Homebrew? It would be very simple to edit the formula for vim (`brew edit vim`) and change the line `--enable-gui=no` to `--enable-gui=yes`. Your log suggests you might be missing some dependencies. <comment92866> Although it doesn't work with Eclipse, this answers my question, so +1! Eclipse needs vim with gtk support, but I seem to be having issues compiling that as well. However, that's a different issue and looks like I might be able to fix it myself. Thanks :) <comment92867> Thanks, I'm glad I could help, hopefully you can get `vim` to compile with GKT support.