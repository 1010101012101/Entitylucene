Can't quit app launched through launchd <body> As it says in the title, "Can't quit app launched through launchd"—or more precisely, I emcan/em quit it, but it then automatically restarts again.  hr  strongBackground/strong: I prefer to use BusyCal, not iCal, but there are some calendar-ish things that have to be done by iCal before BusyCal can get the results. I figured I'd create two launchd scripts: one to launch iCal every day at 5 am, and another to quit it a few minutes later.  hr  Here's the plist to launch (in code~/Library/LaunchAgents/com.dori.iCalLaunch.plist/code):  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"  "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;KeepAlive&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.dori.iCalLaunch&lt;/string&gt;     &lt;key&gt;OnDemand&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Applications/iCal.app/Contents/MacOS/iCal&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;ServiceDescription&lt;/key&gt;     &lt;string&gt;iCal Launcher&lt;/string&gt;     &lt;key&gt;StartCalendarInterval&lt;/key&gt;     &lt;dict&gt;         &lt;key&gt;Hour&lt;/key&gt;         &lt;integer&gt;5&lt;/integer&gt;     &lt;/dict&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  My understanding was that I didn't need the codeKeepAlive/code and codeOnDemand/code keys, but I put them in anyway to try to stop the relaunching.   Here's the plist to quit (in code~/Library/LaunchAgents/com.dori.iCalQuit.plist/code):  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"  "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.dori.iCalQuit&lt;/string&gt;     &lt;key&gt;Program&lt;/key&gt;     &lt;string&gt;/usr/bin/osascript&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;osascript&lt;/string&gt;         &lt;string&gt;-e&lt;/string&gt;         &lt;string&gt;tell application "iCal" to quit&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;ServiceDescription&lt;/key&gt;     &lt;string&gt;iCal Quitter&lt;/string&gt;     &lt;key&gt;StartCalendarInterval&lt;/key&gt;     &lt;dict&gt;         &lt;key&gt;Hour&lt;/key&gt;         &lt;integer&gt;5&lt;/integer&gt;         &lt;key&gt;Minute&lt;/key&gt;         &lt;integer&gt;10&lt;/integer&gt;     &lt;/dict&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Based on my log files, they both run just fine—but after the Quit runs, iCal relaunches.  Any ideas for things to try, or things that might be causing this?  <answer10405> If you don't specify code&lt;Minute&gt;/code in the code&lt;StartCalendarInterval&gt;/code, then (just like codecron/code's code*/code) it will run the job every minute.  <answer12329> Something you might want to try if configuring this is becoming a pain is Lingon, it is a easy to use GUI editor for launchd, I would try to configure your job in it and see if you get the same results.   <answer12527> One answer to this problem is slightly counter-intuitive.  Simplify your iCal plist file and make iCal run forever by setting codeOnDemand/code to codefalse/code. Here is a file I tested by storing it as code~/Library/DontLaunchAgents/com.dori.iCalForever.plist/code - don't leave this file in any directory launchd looks at unless you want to launch iCal every time you log in and respawn it should you ever choose to quit iCal.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"  "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.dori.iCalForever&lt;/string&gt;     &lt;key&gt;OnDemand&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Applications/iCal.app/Contents/MacOS/iCal&lt;/string&gt;     &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Now you need a single shell script that calls these two commands separated by a sleep long enough to accomplish whatever task iCal needs to perform.  precodelaunchctl load ~/Library/DontLaunchAgents/com.dori.iCalForever.plist sleep 600 #sleep time in seconds launchctl unload ~/Library/DontLaunchAgents/com.dori.iCalForever.plist /code/pre  .. and Bob's your uncle.  <comment10937> Then why, when I quit iCal manually, does it wait to restart till 5:00am the next day? <comment10938> It's 6am or after.  To be pedantic:  you specified Hour = 5, but no Minute, so it runs every minute from 5:00 to 5:59.  If you were awake during that time period and using the machine, not only would it restart on you but it'd steal focus once a minute while running.  Note that your quit job specifies both Hour and Minute, and doesn't keep running. <comment13141> As awesome as Lingon is - it doesn't change the way launchd works. This doesn't help with the problem that launchd isn't set up to both start and then stop an app. iCal doesn't have an easy way to know it's supposed to kill itself, so the issue is tracking the PID of the iCal process so it can be unloaded/quit once the processing is done. See my answer for more details. <comment13150> I also figure you could have two launchd plists - one to call the **launchctl load** and another delayed to call the **launchctl unload** but I prefer the script solution since it behaves better if the mac is sleeping and wakes after the launch time has passed. Launchd will trigger events that should have run during the sleep time and you might get the load and unload quicker than you desire in that odd case. <comment13180> launchd is built to start things on demand, once, or continuously. It's not set up to stop things except for log out or shut down. Since iCal doesn't have an internal mechanism to listen for a kill command, it's best to load and unload a job that is set to run always. See my answer for more info... <comment13347> @bmike But `osascript -e 'tell application "iCal" to quit'` does work. `launchd` might not be designed for stopping tasks, but you don't explain why this won't work. Also, in this case, `launchd` isn't stopping a task, it is starting a new one. (That new one happens to be a shell script that stops something, but that seems to be beside the point.). <comment13353> I totally agree and missed the most simple solution - killall or osascript. Kudos to @mankoff <comment13355> Nope. By my understanding, kudos to @Dori for coding it, and to @geekosaur for pointing out the bug, but I'm not sure why Dori never followed up on this, hence my bounty-ing. Still confused why this answer got voted down 2x.