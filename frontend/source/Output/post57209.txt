Why might more memory be wired in safe mode than in normal mode? <body> Maybe more noticeable in Lion and Mountain Lion, than in Snow Leopard and earlier versions of the operating system:   ul liin safe mode, an unexpectedly large amount of emwired/em memory. /li /ul  h1Question/h1  Why might more memory be wired in safe mode?  h2Example/h2  Screenshots of Mountain Lion in safe and normal modes on a MacBookPro5,2 with 8 GB memory:   ul liwith a safe boot, more than 5 GB is wired after login/li liwith a normal boot, less than 2 GB./li /ul  h2Links/h2  Mac OS X: What is Safe Boot, Safe Mode?   What is wired memory?  Mac virtual memory: how to make OS X create swap (page) files as freely with a normal boot as it does with a safe boot (swapfile1 etc)  XNU questions in Stack Overflow  <answer57662> SafeBoot disables various kernel extensions including the GPU. The extra memory is likely being used for the display where it would normally be allocated to share with integrated graphics or be handled by a discreet graphics card.  <answer57770> Wiring code into RAM prevents it from being swapped to storage, so this might be a nice design tradeoff to wire critical components and frameworks to RAM so that the chance of a drive that fails to write data correctly will bring the system down.  Trading speed for stability would be a nice thing for safe mode to enhance it's ability to run in edge cases (drive totally full, drive failing, major software corruption). Even if this is not intentional, the safe boot does throw away (and does not recreate) the dynamic loader shared cache and that also might be a design reason to just pin each library needed into RAM. You would want to run codesysdiagnose/code before, during and after a safe boot and might be able to see in memory allocation statistics if this makes up for your measured difference in RAM allocation.  I can't speak for the designers, but I would consider making this tradeoff if I were in their shoes and wanted to make Safe Mode as safe to run as possible.  <comment66458> [sysdiagnose](http://developer.apple.com/library/mac/#documentation/Darwin/Reference/Manpages/man1/sysdiagnose.1.html) – good idea. Maybe [allmemory](http://developer.apple.com/library/mac/#documentation/Darwin/Reference/Manpages/man1/allmemory.1.html) alone will give the answers. <comment66464> Safe boot aside: where free space on a startup volume is critically low, I should not run `sysdiagnose` – the amount dumped to `/private/tmp/allmemoryDataFiles` can make a difficult situation worse. <comment66466> Muahhhh aaaahhh ahhhh haaaaaa. You almost fell into my "all your free space will become log files" trap. <comment67276> Side note: if there's a delay in me accepting an answer on this one, it'll be because I can't easily start my Mac in safe mode (but I'm keeping that off-topic). <comment91638> Answers here are not forgotten! Last week I successfully booted in safe mode. I'm now looking at overall performance of the Mac and peripherals (mainly hard disk drives) with attention to `dynamic_pager` writes to permanent storage, both with and without safe boot. <comment105779> A vote up for thought, but the graphics card alone can't explain it. I added to the question an example where there's a difference of more than 3 GB on a Mac with only 512 MB on the preferred card.