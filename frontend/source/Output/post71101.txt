How do I make ⌘← and ⌘→ work for home/end combo for Terminal? <body> Why does kbdfn/kbd-kbd⇧/kbd-kbd→/kbd (or others) do a home/end in Terminal but a kbd⌘/kbd-kbd→/kbd works everywhere else?  So just to be clear the question is how to make Terminal take kbdCommand/kbd + kbd←/kbd and kbd→/kbd for home and end?  <answer71247> As convenient as it would be, Terminal can't easily provide the functionality you ask for.  The reason is that programs that run inside Terminal have different rules for moving the cursor to the beginning/end of the line, for example:  ul licodebash/code (and other shells) use kbdCtrl/kbdkbdA/kbd and kbdCtrl/kbdkbdE/kbd/li licodevi/code uses kbd0/kbd and kbd$/kbd/kbdShift/kbdkbd4/kbd/li /ul  Other programs may use other keys. strongThere isn't a universal key combination for positioning the cursor at the beginning/end of the line./strong  Of course, Terminal could maintain a list of key combinations for a number of common programs, check what's running and send the correct keys for you, or it could provide a menu item like emMove Cursor To Beginning Of Line Inside Shell ⌘←/em and then send kbdCtrl/kbdkbdA/kbd behind the scenes. But I guess Apple engineers thought that if you venture in CLI territory you know its idiosyncrasies.  As a side note, Terminal provides kbdOption/kbdkbd←/kbd and kbdOption/kbdkbd→/kbd which behaves in codebash/code as you would expect and moves the cursor to the beginning of the previous/next word. That's because these key combinations are mapped to kbdEsc/kbdkbdb/kbd and kbdEsc/kbdkbdb/kbd (see codeman bash/code, section "Commands for Moving" for more information). In codevi/code, for example, only the latter (kind of) works (at the end of this answer I'll show how to configure codevi/code to work with kbdOption/kbdkbd←/kbd and kbdOption/kbdkbd→/kbd).  strongBut thanks to Automator, AppleScript and bash aliases you can get kbd⌘/kbdkbd←/kbd and kbd⌘/kbdkbd→/kbd to work with codebash/code (and possibly other shells) and codevi/code./strong  The first step is to map kbd⌘/kbdkbd←/kbd and kbd⌘/kbdkbd→/kbd to kbdCtrl/kbdkbdA/kbd and kbdCtrl/kbdkbdE/kbd. In a second step, I'll show you how to configure codevi/code to honor kbdCtrl/kbdkbdA/kbd and kbdCtrl/kbdkbdE/kbd (which, as a result, will make codevi/code compatible with kbd⌘/kbdkbd←/kbd and kbd⌘/kbdkbd→/kbd).  strongMap kbd⌘/kbdkbd←/kbd and kbd⌘/kbdkbd→/kbd to kbdCtrl/kbdkbdA/kbd and kbdCtrl/kbdkbdE/kbd/strong  ol liIn Terminal, go to Preferences...Settings[your active profile]Keyboard: img src="https://i.stack.imgur.com/2lcUi.png" alt="enter image description here"/li liPress kbd+/kbd, select "Cursor Left", "Control-Shift" as modifier and action "Send Text:". Then press kbdCtrl/kbdkbdA/kbd (code\001/code will appear in the text field) and confirm with kbdOK/kbd: img src="https://i.stack.imgur.com/hIyBS.png" alt="enter image description here"  (In a previous version of this answer I used "Shift" as a modifier. I've noticed that this setting conflicts with kbd⌘/kbdkbdshift/kbdkbd←/kbd, which shows the previous Terminal tab, if you don't let go of kbd⌘/kbd immediately. Using "Control-Shift" fixes that.)/li liNow add a key combination for "Cursor Right", but  press kbdCtrl/kbdkbdE/kbd (code\005/code will appear in the text field). Confirm with kbdOK/kbd./li liOpen Automator (for example, hit kbd⌘/kbdkbdspace/kbd to bring up Spotlight and type emAutomator/em), select FileNew and choose codeService/code:  img src="https://i.stack.imgur.com/oVvE1.png" alt="enter image description here"/li liDrag codeRun AppleScript/code to the right pane: img src="https://i.stack.imgur.com/Kg6pb.png" alt="enter image description here"/li liType the following script:  precodeon run {input, parameters}     tell application "System Events"         tell application process "Terminal"             key code 123 using {shift down, control down}         end tell     end tell end run /code/pre  and save as codeMove Cursor to Beginning of Line/code:  img src="https://i.stack.imgur.com/1HJrL.png" alt="enter image description here"/li liRepeat steps 4. to 6. with this script:  precodeon run {input, parameters}     tell application "System Events"         tell application process "Terminal"             key code 124 using {shift down, control down}         end tell     end tell end run /code/pre  and save as codeMove Cursor to End of Line/code:  img src="https://i.stack.imgur.com/V3oqY.png" alt="enter image description here"/li liThis is what TerminalServices looks like now:  img src="https://i.stack.imgur.com/H9RSu.png" alt="enter image description here"/li /ol  strongConfigure codevi/code to honor kbdCtrl/kbdkbdA/kbd and kbdCtrl/kbdkbdE/kbd/strong  ol liOpen code.bashrc/code with your favorite editor and add this line:  codealias vi='vim -c "map &lt;C-A&gt; 0" -c "map &lt;C-E&gt; $" -c "map &lt;Esc&gt;b B" -c "map &lt;Esc&gt;f E"'/code  The first two codemap/code commands tell codevim/code to interpret kbdControl/kbdkbdE/kbd and kbdControl/kbdkbdA/kbd as kbd$/kbd and kbd0/kbd, which move the cursor to the beginning or end of line, respectively.  The last two codemap/code commands tell codevim/code to move the cursor one word at a time as you would expect when pressing kbdoption/kbdkbd←/kbd and kbdOption/kbdkbd→/kbd./li /ol  strongCaveats/strong  You will notice that there is a short delay between the moment you press kbd⌘/kbdkbd←/kbd or kbd⌘/kbdkbd→/kbd and the moment the cursor actually moves.   Bear in mind that it will only work for programs that honor kbdCtrl/kbdkbdA/kbd/kbdCtrl/kbdkbdE/kbd, so you may still want to learn the specific key combinations of each program you use in Terminal.  (Tested on macOS Sierra 10.12.4)  <answer144273> Of course its possible.  First of all, you can use the free tool "DoubleCommand" if you have a windows keyboard with HOME/END keys to make'em behave like they should (beginning /end of line).   Secondly, for terminal specifically, go to the preferences, Keyboard, edit the icon/key which looks like an arrow pointing up-left, select "send text" and type ctrl+a. Done!   Same for the end button..  If you dont have a PC keyboard, you can do the same with other key combinations.  <comment82868> Thanks for the detailed answer, is there a petition to just have Apple include a home/end button on the next redesign :-) <comment82869> I'm glad I could help. <comment345727> Wow.. all this to get a freaking `⌘` shortcut <comment356362> This is a good answer, but it could be improved by excluding all the extraneous information about `vi` which is a completely different application than the terminal. <comment356363> Oh if apple would just give us a normal keyboard! <comment356373> @axiopisty The reason I mention `vi` is because it is a program that I expect people to use when running Terminal.app and that needs a special tweak to work with the Cmd- combo. Other CLI programs, like `emacs`, support Ctrl-A and Ctrl-E and thus don't need any special configuration. Anyway, I don't understand your point about `vi`, the other program I mention,`bash`, is *also* a completely different application than the terminal (Terminal.app)... <comment373232> That is a great trick. I also managed to get the AppleScript running by sending the keycodes for "Home" and "End": "key code 115"  and "key code 119""