Possible to create a Bash alias that enters a certain string into Terminal? <body> Is it possible to create a Bash alias that upon running, enters a string of my prior choosing, into Terminal?  Let's pretend this is in my code~/.bash_profile/code:  precodealias start_youtube="cd ~/Video/Youtube; **[PASTE: youtube-dl URL]**" /code/pre  Imagine that: the alias would change directory to codeVideo/Youtube/code and then strong[PASTE]/strong the string: codeyoutube-dl URL/code. It could either do kbdReturn ⏎/kbd or preferably just leave the string codeyoutube-dl URL/code in the Terminal prompt so that I could swap the placeholder URL for a real URL.  If I try actually running the alias below;  precodealias start_youtube="cd ~/Video/Youtube; youtube-dl URL" /code/pre  it will run the command as entered by which youtube-dl will return an error like em"Could not parse URL"/em – which could've been fine. But pressing the kbd↑/kbd key will not show the last input of the alias (codeyoutube-dl URL/code) but rather shows the invoking of the alias (codestart_youtube/code) [which I'm sure is usually preferable].  So the requested solution is to paste a placeholder string into the Command Prompt, or somehow access the history of the alias command via the Shell.  <answer293493> Here's how I would approach it. Use this related question to write the function that would reside in your codebashrc/code or codebash_profile/code. Then add a line in the function that would delete the most recent line in your bash history using this  <answer294948> You could use codeosascript/code for this and tell the System Events to type keys for you. strongGenerally, I strongly advise against the whole approach of blindly sending keystrokes to the shell, you can wreak havoc on your system with this!/strong  precodeosascript -e 'tell application "Terminal" to activate' -e 'tell application "System Events" to keystroke "# cd /tmp; your text" ' /code/pre  For safety reasons I send the comment character code#/code as the first character, but this line gives the result you wanted. The cursor waits after the emyour text/em and you may continue typing.   <comment370355> I settled for something inbetween. Created a function that *`echo`es* the "placeholder string" which I can Copy, Edit and Enter, once the alias has `cd` to the desired dir. Didn't understand how to access bash history from the alias or why to delete lines from it, because keyboarding ↑ does not reveal the commands used in the alias afaik.