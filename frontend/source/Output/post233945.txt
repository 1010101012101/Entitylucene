Opening a specific page on Mac Preview from Terminal <body> How I can modify the codeopen filename.pdf/code command so that I can open a desired page number directly without having to scroll down.  <answer233987> Unfortunately the codeopen/code command does not have an emoption/em to pass to Preview to tell it to go to a given page.  Additionally, Preview does not have an AppleScript Dictionary to make scripting a solution easier, however it's not impossible.  The embash script/em below takes two emarguments/em, the emfilename/em of the document to emopen/em and the empage number/em to emgo to/em. Note that if the target file to emopen/em is not in the emworking directory/em in Terminal then the fully qualified empathname/em must be used.  You'll need to create a file to place this emcode/em into and make it emexecutable/em. It should be in a emdirectory/em that is in the code$PATH/code, otherwise, to use it, you'll have to provide the fully qualified empathname/em to the emexecutable/em or use code./executable/code if at the emworking directory/em of the emexecutable/em in Terminal.  For this example, using the default Terminal, which opens to one's Home Directory:  precodetouch OpenToPage open OpenToPage /code/pre  Now copy and paste the emcode/em, from the strongCode:/strong section below, into the opened document and save it, then close it.  While still in Terminal, make the file emexecutable/em:  precodechmod u+x OpenToPage /code/pre  To use codeOpenToPage/code:  precode./opentopage /path/name/to/filename.pdf 3 /code/pre  Or:   precode./opentopage '/path/name/to/file name.pdf' 3  ./opentopage /path/name/to/file\ name.pdf 3 /code/pre  hr  strongCode:/strong  precode#!/bin/bash  if [[ -z $2 ]]; then     [[ -z $1 ]] &amp;&amp; printf "\n Missing Filename..."     printf "\n Missing Page Number...\n\n"     printf "   Syntax: OpenToPage Filename Page_Number\n"     printf "   Example: OpenToPage Filename.pdf 3\n\n"     exit 1 else     open -a Preview "$1"     sleep .5     osascript -e 'tell application "Preview" to activate' \               -e 'delay 0.25' \               -e 'tell application "System Events" to tell process "Preview" to click menu item "Go to Pageâ€¦" of menu "Go" of menu bar 1' \               -e 'delay 0.25' \               -e "tell application \"System Events\" to keystroke \"$2\"" \               -e 'delay 0.25' \               -e 'tell application "System Events" to key code 36' fi exit 0 /code/pre  hr  Notes: If the target emfilename/em and or empathname/em has spaces, the spaces must be escaped with a code\/code (backslash) or the target emfilename/em and or empathname/em must be quoted, but not both.  The codesleep/code and codedelay/code times can be adjusted if/as necessary.  As the script is presently written the timings adds 1.25 seconds total to the whole process and should probably be fine as is. If I had to adjust anything I'd change the value of codesleep/code, to code.75/code or code1/code, before modifying the values of codedelay/code.  The naming of the embash script/em file in this answer is arbitrary, name it whatever you like, e.g. codeotp/code or codeo2p/code for emopen to page/em, etc. 