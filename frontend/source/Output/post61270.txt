How can I ask Mountain Lion to have apache2 recognize .cgi and execute it as a CGI script? <body> I've upgraded from Lion to Mountain Lion, and have noticed as a result of the upgrade, besides my screen saver saying it won't work on this version of OSX, Apache is displaying the private web dashboard I run off of it, but instead of executing CGI scripts (no special directory, but a .cgi extension), it is displaying the source code.  My present /etc/apache2/httpd.conf, edited after apparently being overwritten, has:  precode&lt;Directory "/Users/jonathan"&gt;     ...     Options ExecCGI Indexes FollowSymLinks MultiViews     ... &lt;/Directory&gt; ... AddHandler cgi-script .cgi ... DocumentRoot "/Users/jonathan/mirror" /code/pre  How can I tell Apache that for any webpage it serves under /Users/jonathan/mirror, or better /Users/jonathan, if it has a .cgi extension, it should be executed as a CGI script instead of having the source displayed as plain text?  --Edit--  My httpd.conf file, if you can spot an error, is:  precode# # This is the main Apache HTTP server configuration file.  It contains the # configuration directives that give the server its instructions. # See &lt;URL:http://httpd.apache.org/docs/2.2&gt; for detailed information. # In particular, see  # &lt;URL:http://httpd.apache.org/docs/2.2/mod/directives.html&gt; # for a discussion of each configuration directive. # # Do NOT simply read the instructions in here without understanding # what they do.  They're here only as hints or reminders.  If you are unsure # consult the online docs. You have been warned.   # # Configuration and logfile names: If the filenames you specify for many # of the server's control files begin with "/" (or "drive:/" for Win32), the # server will use that explicit path.  If the filenames do *not* begin # with "/", the value of ServerRoot is prepended -- so "log/foo_log" # with ServerRoot set to "/usr" will be interpreted by the # server as "/usr/log/foo_log".  # # ServerRoot: The top of the directory tree under which the server's # configuration, error, and log files are kept. # # Do not add a slash at the end of the directory path.  If you point # ServerRoot at a non-local disk, be sure to point the LockFile directive # at a local disk.  If you wish to share the same ServerRoot for multiple # httpd daemons, you will need to change at least LockFile and PidFile. # ServerRoot "/usr"  # # Listen: Allows you to bind Apache to specific IP addresses and/or # ports, instead of the default. See also the &lt;VirtualHost&gt; # directive. # # Change this to Listen on specific IP addresses as shown below to  # prevent Apache from glomming onto all bound IP addresses. # #Listen 12.34.56.78:80 Listen 80  # # Dynamic Shared Object (DSO) Support # # To be able to use the functionality of a module which was built as a DSO you # have to place corresponding `LoadModule' lines at this location so the # directives contained in it are actually available _before_ they are used. # Statically compiled modules (those listed by `httpd -l') do not need # to be loaded here. # # Example: # LoadModule foo_module modules/mod_foo.so # LoadModule authn_file_module libexec/apache2/mod_authn_file.so LoadModule authn_dbm_module libexec/apache2/mod_authn_dbm.so LoadModule authn_anon_module libexec/apache2/mod_authn_anon.so LoadModule authn_dbd_module libexec/apache2/mod_authn_dbd.so LoadModule authn_default_module libexec/apache2/mod_authn_default.so LoadModule authz_host_module libexec/apache2/mod_authz_host.so LoadModule authz_groupfile_module libexec/apache2/mod_authz_groupfile.so LoadModule authz_user_module libexec/apache2/mod_authz_user.so LoadModule authz_dbm_module libexec/apache2/mod_authz_dbm.so LoadModule authz_owner_module libexec/apache2/mod_authz_owner.so LoadModule authz_default_module libexec/apache2/mod_authz_default.so LoadModule auth_basic_module libexec/apache2/mod_auth_basic.so LoadModule auth_digest_module libexec/apache2/mod_auth_digest.so LoadModule cache_module libexec/apache2/mod_cache.so LoadModule disk_cache_module libexec/apache2/mod_disk_cache.so LoadModule mem_cache_module libexec/apache2/mod_mem_cache.so LoadModule dbd_module libexec/apache2/mod_dbd.so LoadModule dumpio_module libexec/apache2/mod_dumpio.so LoadModule reqtimeout_module libexec/apache2/mod_reqtimeout.so LoadModule ext_filter_module libexec/apache2/mod_ext_filter.so LoadModule include_module libexec/apache2/mod_include.so LoadModule filter_module libexec/apache2/mod_filter.so LoadModule substitute_module libexec/apache2/mod_substitute.so LoadModule deflate_module libexec/apache2/mod_deflate.so LoadModule log_config_module libexec/apache2/mod_log_config.so LoadModule log_forensic_module libexec/apache2/mod_log_forensic.so LoadModule logio_module libexec/apache2/mod_logio.so LoadModule env_module libexec/apache2/mod_env.so LoadModule mime_magic_module libexec/apache2/mod_mime_magic.so LoadModule cern_meta_module libexec/apache2/mod_cern_meta.so LoadModule expires_module libexec/apache2/mod_expires.so LoadModule headers_module libexec/apache2/mod_headers.so LoadModule ident_module libexec/apache2/mod_ident.so LoadModule usertrack_module libexec/apache2/mod_usertrack.so #LoadModule unique_id_module libexec/apache2/mod_unique_id.so LoadModule setenvif_module libexec/apache2/mod_setenvif.so LoadModule version_module libexec/apache2/mod_version.so LoadModule proxy_module libexec/apache2/mod_proxy.so LoadModule proxy_connect_module libexec/apache2/mod_proxy_connect.so LoadModule proxy_ftp_module libexec/apache2/mod_proxy_ftp.so LoadModule proxy_http_module libexec/apache2/mod_proxy_http.so LoadModule proxy_scgi_module libexec/apache2/mod_proxy_scgi.so LoadModule proxy_ajp_module libexec/apache2/mod_proxy_ajp.so LoadModule proxy_balancer_module libexec/apache2/mod_proxy_balancer.so LoadModule ssl_module libexec/apache2/mod_ssl.so LoadModule mime_module libexec/apache2/mod_mime.so LoadModule dav_module libexec/apache2/mod_dav.so LoadModule status_module libexec/apache2/mod_status.so LoadModule autoindex_module libexec/apache2/mod_autoindex.so LoadModule asis_module libexec/apache2/mod_asis.so LoadModule info_module libexec/apache2/mod_info.so LoadModule cgi_module libexec/apache2/mod_cgi.so LoadModule dav_fs_module libexec/apache2/mod_dav_fs.so LoadModule vhost_alias_module libexec/apache2/mod_vhost_alias.so LoadModule negotiation_module libexec/apache2/mod_negotiation.so LoadModule dir_module libexec/apache2/mod_dir.so LoadModule imagemap_module libexec/apache2/mod_imagemap.so LoadModule actions_module libexec/apache2/mod_actions.so LoadModule speling_module libexec/apache2/mod_speling.so LoadModule userdir_module libexec/apache2/mod_userdir.so LoadModule alias_module libexec/apache2/mod_alias.so LoadModule rewrite_module libexec/apache2/mod_rewrite.so #LoadModule perl_module libexec/apache2/mod_perl.so #LoadModule php5_module libexec/apache2/libphp5.so #LoadModule hfs_apple_module libexec/apache2/mod_hfs_apple.so  &lt;IfModule !mpm_netware_module&gt; &lt;IfModule !mpm_winnt_module&gt; # # If you wish httpd to run as a different user or group, you must run # httpd as root initially and it will switch.   # # User/Group: The name (or #number) of the user/group to run httpd as. # It is usually good practice to create a dedicated user and group for # running httpd, as with most system services. # User _www Group _www  &lt;/IfModule&gt; &lt;/IfModule&gt;  # 'Main' server configuration # # The directives in this section set up the values used by the 'main' # server, which responds to any requests that aren't handled by a # &lt;VirtualHost&gt; definition.  These values also provide defaults for # any &lt;VirtualHost&gt; containers you may define later in the file. # # All of these directives may appear inside &lt;VirtualHost&gt; containers, # in which case these default settings will be overridden for the # virtual host being defined. #  # # ServerAdmin: Your address, where problems with the server should be # e-mailed.  This address appears on some server-generated pages, such # as error documents.  e.g. admin@your-domain.com # ServerAdmin you@example.com  # # ServerName gives the name and port that the server uses to identify itself. # This can often be determined automatically, but we recommend you specify # it explicitly to prevent problems during startup. # # If your host doesn't have a registered DNS name, enter its IP address here. # #ServerName www.example.com:80  # # DocumentRoot: The directory out of which you will serve your # documents. By default, all requests are taken from this directory, but # symbolic links and aliases may be used to point to other locations. # DocumentRoot "/Users/jonathan/mirror"  # # Each directory to which Apache has access can be configured with respect # to which services and features are allowed and/or disabled in that # directory (and its subdirectories).  # # First, we configure the "default" to be a very restrictive set of  # features.   # &lt;Directory /&gt; Options FollowSymLinks AllowOverride None Order deny,allow Deny from all &lt;/Directory&gt;  # # Note that from this point forward you must specifically allow # particular features to be enabled - so if something's not working as # you might expect, make sure that you have specifically enabled it # below. #  # # This should be changed to whatever you set DocumentRoot to. # &lt;Directory "/Users/jonathan"&gt; # # Possible values for the Options directive are "None", "All", # or any combination of: #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews # # Note that "MultiViews" must be named *explicitly* --- "Options All" # doesn't give it to you. # # The Options directive is both complicated and important.  Please see # http://httpd.apache.org/docs/2.2/mod/core.html#options # for more information. # Options +ExecCGI Indexes FollowSymLinks MultiViews AddHandler cgi-script .cgi  # # AllowOverride controls what directives may be placed in .htaccess files. # It can be "All", "None", or any combination of the keywords: #   Options FileInfo AuthConfig Limit # AllowOverride None  # # Controls who can get stuff from this server. # Order allow,deny Allow from all  &lt;/Directory&gt;  # # DirectoryIndex: sets the file that Apache will serve if a directory # is requested. # &lt;IfModule dir_module&gt; DirectoryIndex index.cgi index.html &lt;/IfModule&gt;  # # The following lines prevent .htaccess and .htpasswd files from being  # viewed by Web clients.  # &lt;FilesMatch "^\.([Hh][Tt]|[Dd][Ss]_[Ss])"&gt; Order allow,deny Deny from all Satisfy All &lt;/FilesMatch&gt;  # # Apple specific filesystem protection. # &lt;Files "rsrc"&gt; Order allow,deny Deny from all Satisfy All &lt;/Files&gt; &lt;DirectoryMatch ".*\.\.namedfork"&gt; Order allow,deny Deny from all Satisfy All &lt;/DirectoryMatch&gt;  # # ErrorLog: The location of the error log file. # If you do not specify an ErrorLog directive within a &lt;VirtualHost&gt; # container, error messages relating to that virtual host will be # logged here.  If you *do* define an error logfile for a &lt;VirtualHost&gt; # container, that host's errors will be logged there and not here. # ErrorLog "/private/var/log/apache2/error_log"  # # LogLevel: Control the number of messages logged to the error_log. # Possible values include: debug, info, notice, warn, error, crit, # alert, emerg. # LogLevel warn  &lt;IfModule log_config_module&gt; # # The following directives define some format nicknames for use with # a CustomLog directive (see below). # LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined LogFormat "%h %l %u %t \"%r\" %&gt;s %b" common  &lt;IfModule logio_module&gt; # You need to enable mod_logio.c to use %I and %O LogFormat "%h %l %u %t \"%r\" %&gt;s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio &lt;/IfModule&gt;  # # The location and format of the access logfile (Common Logfile Format). # If you do not define any access logfiles within a &lt;VirtualHost&gt; # container, they will be logged here.  Contrariwise, if you *do* # define per-&lt;VirtualHost&gt; access logfiles, transactions will be # logged therein and *not* in this file. # CustomLog "/private/var/log/apache2/access_log" common  # # If you prefer a logfile with access, agent, and referer information # (Combined Logfile Format) you can use the following directive. # #CustomLog "/private/var/log/apache2/access_log" combined &lt;/IfModule&gt;  &lt;IfModule alias_module&gt; # # Redirect: Allows you to tell clients about documents that used to  # exist in your server's namespace, but do not anymore. The client  # will make a new request for the document at its new location. # Example: # Redirect permanent /foo http://www.example.com/bar  # # Alias: Maps web paths into filesystem paths and is used to # access content that does not live under the DocumentRoot. # Example: # Alias /webpath /full/filesystem/path # # If you include a trailing / on /webpath then the server will # require it to be present in the URL.  You will also likely # need to provide a &lt;Directory&gt; section to allow access to # the filesystem path.  # # ScriptAlias: This controls which directories contain server scripts.  # ScriptAliases are essentially the same as Aliases, except that # documents in the target directory are treated as applications and # run by the server when requested rather than as documents sent to the # client.  The same rules about trailing "/" apply to ScriptAlias # directives as to Alias. # ScriptAliasMatch ^/cgi-bin/((?!(?i:webobjects)).*$) "/Library/WebServer/CGI-Executables/$1"  &lt;/IfModule&gt;  &lt;IfModule cgid_module&gt; # # ScriptSock: On threaded servers, designate the path to the UNIX # socket used to communicate with the CGI daemon of mod_cgid. # #Scriptsock /private/var/run/cgisock &lt;/IfModule&gt;  # # "/Library/WebServer/CGI-Executables" should be changed to whatever your ScriptAliased # CGI directory exists, if you have that configured. # &lt;Directory "/Library/WebServer/CGI-Executables"&gt; AllowOverride None Options None Order allow,deny Allow from all &lt;/Directory&gt;  # # DefaultType: the default MIME type the server will use for a document # if it cannot otherwise determine one, such as from filename extensions. # If your server contains mostly text or HTML documents, "text/plain" is # a good value.  If most of your content is binary, such as applications # or images, you may want to use "application/octet-stream" instead to # keep browsers from trying to display binary files as though they are # text. # DefaultType text/plain  &lt;IfModule mime_module&gt; # # TypesConfig points to the file containing the list of mappings from # filename extension to MIME-type. # TypesConfig /private/etc/apache2/mime.types  # # AddType allows you to add to or override the MIME configuration # file specified in TypesConfig for specific file types. # #AddType application/x-gzip .tgz # # AddEncoding allows you to have certain browsers uncompress # information on the fly. Note: Not all browsers support this. # #AddEncoding x-compress .Z #AddEncoding x-gzip .gz .tgz # # If the AddEncoding directives above are commented-out, then you # probably should define those extensions to indicate media types: # AddType application/x-compress .Z AddType application/x-gzip .gz .tgz  # # AddHandler allows you to map certain file extensions to "handlers": # actions unrelated to filetype. These can be either built into the server # or added with the Action directive (see below) # # To use CGI scripts outside of ScriptAliased directories: # (You will also need to add "ExecCGI" to the "Options" directive.) # AddHandler cgi-script .cgi  # For type maps (negotiated resources): #AddHandler type-map var  # # Filters allow you to process content before it is sent to the client. # # To parse .shtml files for server-side includes (SSI): # (You will also need to add "Includes" to the "Options" directive.) # #AddType text/html .shtml #AddOutputFilter INCLUDES .shtml &lt;/IfModule&gt;  # # The mod_mime_magic module allows the server to use various hints from the # contents of the file itself to determine its type.  The MIMEMagicFile # directive tells the module where the hint definitions are located. # #MIMEMagicFile /private/etc/apache2/magic  # # Customizable error responses come in three flavors: # 1) plain text 2) local redirects 3) external redirects # # Some examples: #ErrorDocument 500 "The server made a boo boo." #ErrorDocument 404 /missing.html #ErrorDocument 404 "/cgi-bin/missing_handler.pl" #ErrorDocument 402 http://www.example.com/subscription_info.html #  # # MaxRanges: Maximum number of Ranges in a request before # returning the entire resource, or one of the special # values 'default', 'none' or 'unlimited'. # Default setting is to accept 200 Ranges. #MaxRanges unlimited  # # EnableMMAP and EnableSendfile: On systems that support it,  # memory-mapping or the sendfile syscall is used to deliver # files.  This usually improves server performance, but must # be turned off when serving from networked-mounted  # filesystems or if support for these functions is otherwise # broken on your system. # #EnableMMAP off #EnableSendfile off  # 6894961 TraceEnable off  # Supplemental configuration # # The configuration files in the /private/etc/apache2/extra/ directory can be  # included to add extra features or to modify the default configuration of  # the server, or you may simply copy their contents here and change as  # necessary.  # Server-pool management (MPM specific) Include /private/etc/apache2/extra/httpd-mpm.conf  # Multi-language error messages #Include /private/etc/apache2/extra/httpd-multilang-errordoc.conf  # Fancy directory listings Include /private/etc/apache2/extra/httpd-autoindex.conf  # Language settings Include /private/etc/apache2/extra/httpd-languages.conf  # User home directories Include /private/etc/apache2/extra/httpd-userdir.conf  # Real-time info on requests and configuration #Include /private/etc/apache2/extra/httpd-info.conf  # Virtual hosts #Include /private/etc/apache2/extra/httpd-vhosts.conf  # Local access to the Apache HTTP Server Manual Include /private/etc/apache2/extra/httpd-manual.conf  # Distributed authoring and versioning (WebDAV) #Include /private/etc/apache2/extra/httpd-dav.conf  # Various default settings #Include /private/etc/apache2/extra/httpd-default.conf  # Secure (SSL/TLS) connections #Include /private/etc/apache2/extra/httpd-ssl.conf # # Note: The following must must be present to support #       starting without SSL on platforms with no /dev/random equivalent #       but a statically compiled-in mod_ssl. # &lt;IfModule ssl_module&gt; SSLRandomSeed startup builtin SSLRandomSeed connect builtin &lt;/IfModule&gt;  Include /private/etc/apache2/other/*.conf /code/pre  <comment70707> Is there a `LoadModule cgi_module modules/mod_cgi.so` in your httpd.conf? <comment70712> Yes; it was there to begin with after the upgrade. <comment70713> You can check with this guide: http://httpd.apache.org/docs/2.2/howto/cgi.html. Might be something there that can help. <comment70719> Thank you; I read through it and tried copying the AddHandler line inside the VirtualHost. Would it be helpful if I copied my httpd.conf inside a pastebin? <comment70721> (Just added my httpd.conf file in at the bottom.) <comment70722> P.S. When I copy the httpd.conf on the computer that I migrated this computer from, "apachectl restart" runs without reported error but the server is refusing connections. <comment70723> You should change `Directory "/Users/jonathan"` to `Directory "/Users/jonathan/mirror"` as that is the DocumentRoot. You can connect to the server now? <comment70726> let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/4565/discussion-between-jonathanhayward-and-hoshts)