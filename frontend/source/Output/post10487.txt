Error 'USBDeviceOpen failed' only with my user account when using PowerMate USB Controller. OK with fresh account <body> I have a PowerMate USB controller from Griffin: it works, but using my strongnormal user account I can't control the light settings/strong. With a strongfresh new account, everything works/strong as expected. How can I find what cause the trouble?  I can interact with it, turn it, press it, and it reacts as expected.br But I can't control the light settings: the light is always on, even if I set it to pulsing mode. It doesn't blink when it should.  Each time I do an action that should change the light state (assigning the Default Set to the PowerMate unit, or changing the default light state in the settings), I get this error in the console:     19/03/11 17:39:42 PowerMate[441]  PowerMate Device location: 26410000 service: 0000b69b USBDeviceOpen failed: e00002c5   Sometimes, I get multiple entries of the same error (up to 14 times). Except for this error and the following error at launch of the app, there is nothing helpful.     Path (null) given to -[NSWorkspace iconForFile:] is not a full path.   hr I'm running Lion 10.7.1 (problem was similar on Snow Leopard).  Here is what I have done so far to troubleshoot:  ul liMake sure the application PowerMate.app is not running/li liUn-plug the USB PowerMate device and every other USB devices (except for my keyboard)/li liRemove everything created by the application PowerMate.app with:  /li /ul  .  precoderm ~/Library/Preferences/com.griffintechnology.PowerMate.plist; rm -rf ~/Library/Caches/com.griffintechnology.PowerMate; rm -rf ~/Library/Application\ Support/PowerMate; /code/pre  ul liRepair the authorization with Disk Utility.app/li liReboot./li liApply the latest combo update (MacOSXUpdCombo10.6.6.dmg)/li liReboot/li liLaunch the latest version of the PowerMate.app application (version 3.0 - 3012)./li liThen plug-in the USB PowerMate device./li /ul  Anything else you suggest to find the difference between my account and a new one?  strongKnown Differences That Matter between the accounts:/strong  strongSimilarities between the accounts:/strong  Both accounts are admin of the machine.br They are members of the same group.  Output of the id command:  my normal account (the one with the issue):br codeuid=501(mylogin) gid=20(staff) groups=20(staff),401(com.apple.access_screensharing),102(com.apple.access_ssh),204(_developer),100(_lpoperator),98(_lpadmin),81(_appserveradm),80(admin),79(_appserverusr),61(localaccounts),12(everyone),402(com.apple.sharepoint.group.1)/code  the fresh new test account (the one where it works):br codeuid=502(test2) gid=20(staff) groups=20(staff),401(com.apple.access_screensharing),204(_developer),100(_lpoperator),98(_lpadmin),81(_appserveradm),80(admin),79(_appserverusr),61(localaccounts),12(everyone),402(com.apple.sharepoint.group.1)/code  I am in contact with Griffin support. They are very nice, but so far we haven't been able to find the reason of the issue.  hr  strongUpdate:/strong Apparently, the error code codee00002c5/code means "exclusive access and device already open".br Any idea how to figure what process has access to a USB Device?  <answer11409> This sounds like something is broken with the device node for the usb device. You an compare the settings with something like this:  ol lifigure out what the device node is. The last step will output the device name following a  (and some other junk you can ignore.) You'll need that device name in step 2. It would be best to do this test on the temp user that works, just after a fresh reboot. ol licodels -1 /dev/ &gt; /tmp/before/code  (emnote, that's "dash one"/em)/li liplug the device in/li licodels -1 /dev/ &gt; /tmp/after/code/li licodediff /tmp/before /tmp/after/code/li /ol/li licompare the device permissions between the two. ol lilogin as yourself/li licodels -el /dev/devicename &gt; /tmp/broken/code  (emnote, that's "dash e ell" this time/em)/li lilogin as the temp user/li licodels -el /dev/devicename &gt; /tmp/working/code/li /ol/li /ol  This last bit will create two files that look something like this:  codecrw-rw-rw-  1 root    wheel      11,   1 Mar 26 16:20 cu.Bluetooth-PDA-Sync/code  The first bit (codecrw-rw-rw-/code) is a textual representation of the mode bits... it's possible a difference there is the cause.  The next bit that might be the problem is the user (coderoot/code) and group (codewheel/code), either of which could be causing the problem.  I'm assuming it's being dynamically created (incorrectly) when the device is inserted. Another possibility is that the device node is persistent, but wrong. If both of those files MATCH, then show us what they are and we can probably figure out what the device should be set to.  <answer38932> I found the culprit: MenuMeters was accessing the light setting of the PowerMate device.  I didn't know MenuMeters had a setting to show the CPU usage via the PowerMate glow. It was there since 2003, but I didn't care about it since I didn't own a PowerMate before.  The latest version fix this bug. Many thanks to  Alex Harper for his great piece of software and continuous support. http://www.ragingmenace.com/software/menumeters/history.html  <comment11587> Check your current and new user group memberships, using the `id` command. <comment11597> Are you an administrator of your machine? Is the new user an administrator on the machine? Are the two users members of the same user groups? Would it be possible that the Griffin thing uses any other .plist other than what you removed? Have you tried an app cleaner (like AppZapper or the free alternatives out there?) <comment11621> @mspasov and @Mart√≠n Marconcini: thank you for your ideas. I have updated the question with the answers to your questions. <comment16179> Hi cabbey. Thank you for the help. On the first step, I get exactly similar results (around 300 entries) with the working account and the broken one, so the diff gives nothing. Any other way to get the device name? <comment16180> Couldn't figure the device name from the first step. But I tried `ls -el /dev/*  /tmp/_all_working_account` on the fresh new account and `ls -el /dev/*  /tmp/_all_broken_account` on my account. The only significative difference in the diff is: crw--w----  1 test2  tty        16,   0 May 30 12:15 /dev/ttys000 for the file _all_working_account and  crw--w----  1 lv    tty        16,   0 30 mai 12:17 /dev/ttys000  crw--w----  1 lv    tty        16,   1 30 mai 12:18 /dev/ttys001 for the file _all_broken_account.