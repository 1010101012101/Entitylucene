Can't connect to AFP shares with 10.10.4 <body> I just updated the Mac Mini that I use as a file server to the 10.10.4 and the Server App to 4.1.3. After I updated I can't connect anymore to the AFP share that I see in the Finder sidebar on the client, a MacBook Pro.  If I restart the sharing service in the Server App, the connection is successful. After a while, if I click again on the Mac Mini in the MBP Finder sidebar, it says "Connecting..." and then "Connection failed".  The web server on the Mac Mini doesn't respond either. I can't connect either with the "Screen Sharing" button and sometimes it just disappears from the sidebar.  On the MBP when the sharing connection fails it says:  precode14/07/15 14:10:23,438 sharingd[174]: SDSharePointBrowser::handleOpenCallBack returned 65 /code/pre  or:  precode14/07/15 15:14:36,418 NetAuthSysAgent[318]: DNSAddressResolver:Resolve CFNetServiceResolveWithTimeout failed 14/07/15 15:14:36,418 NetAuthSysAgent[318]: ERROR: AFP_GetServerInfo - connect failed 64 14/07/15 15:14:36,419 sharingd[179]: SDSharePointBrowser::handleOpenCallBack returned 64 /code/pre  <answer208419> I had this exact same problem with the "SDSharePointBrowser::handleOpenCallBack returned 65" error in the console. To fix it, I enabled, and then disabled, SMB and AFP file sharing in System Preferences. After a system restart the NAS then connects correctly via AFP.  <answer234818> I'm not 100% sure this is exactly related to the question at hand, but it might help some with this issue.     TL;DR: make sure your machine does not include code./code or code\/code   First. back in OSX 10.9.x Apple changed the default file share service from AFP to SMB2, meaning if you use Finder to connect to a machines file share the machine will try SMB then it emshould/em try AFP if SMB fails.  I have just spend far too long looking at Wireshark conversations between a 10.10.5 client and 10.11.3 file server to see what was going on and I think may have found the reason this sometimes fails for some users.  First a setup that seems to work: The server computer name is configured to codeComputer 1/code (note the space) in the codeSystem Preferences &gt; Sharing/code pane. the netbios name for this machine is different but that does not come into play when connecting via Finder.  This results in Bonjour populating the client machine with a codecomputer 1/code in the Shared section of the side bar. when you click on this shared item and then click the codeConnect As.../code button the following conversation happens between the client and server:  precodeCLIENT: Tree Connect Request: \\computer 1._smb._tcp.local\IPC$ SERVER: STATUS_SUCCESS CLIENT: Create Request File: srvsvc ... CLIENT: Finder receives Directory listing /code/pre  This works as expected, you click on the server enter your credentials and get access to the resources.  Now a configuration that does not work, same setup as above but this time the server name is changed to codecomputer.1/code (using a dot instead of a space), this results in the following client server conversation:  precodeCLIENT: Tree Connect Request: \\computer\.1._smb._tcp.local\IPC$ SERVER: STATUS_BAD_NETWORK_PATH CLIENT: Tree Connect Request: \\&lt;ip address&gt;\IPC$ SERVER: STATUS_SUCCESS CLIENT: Finder displays Connection Failed /code/pre  There are two interesting parts to this:  ol liThe client escapes the code./code to code\./code causing the server to report back a bad path/li liAs soon as the client notices the bad path error it tries connecting with the server IP address, that succeeds, but the client does not ask for a directory listing and displays the Connection Failed./li liThe connection does not fall back to AFP when SMB fails./li /ol  This seems like a bug in the OS's handling of invalid characters to the SMB protocol and proper fallback to either IP or AFP in the case of a failure.  I tested all of the US face special characters are the following characters are cause this problem: code./code (period) and code\/code (backslash). Every other character seems to work fine (e.g. code!/code, code@/code, code%/code, code?/code ...) though I did not do an exhaustive check as the ascii character space. 