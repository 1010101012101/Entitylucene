How to execute a Parallels Windows application with command line parameters from Mac? <body> I am trying to call Beyond Compare Windows app to perform a file compre directly from Mac but I am block with command line argument passing.  You can call Windows applications from the OS X command line via something like:  precodeopen "$HOME/Applications (Parallels)/{ca50aac6-caa6-47a6-9bfe-e38f6261cb8d} Applications.localized/python.exe.app" --args -v /code/pre  Still, it seems that there is a problem when you try to pass arguments.  <answer155921> this is a neat hack to get parameters passed to your windows applications:  http://forum.parallels.com/threads/batch-files.11285/  The salient pieces:  ol licopy and rename the codeWindows Command Processor.app/code application bundle in your Parallels Applications directory. (should be in code~/Applications (Parallels)/{&lt;GUID&gt;} Applications.localized/code).  /li liedit codeRenamed Windows Command Processor.app/Contents/Resources/AppParams.pva/codeand change the codeApp Path/code property to code...\cmd.exe /C &lt;path-to-windows-executable&gt; &lt;parameters&gt;/code/li /ol  <answer212041> strongAPPROACH 1/strong  This approach is a hack, but works with the least expensive version of Parallels.   On the virtual Windows machine:  ul liCreate a *.bat file for each possible set of parameters. For example:/li /ul  pre      @echo off      start "" "C:\Program Files (x86)\MyApplication.exe" --myArg      exit /pre  On the Mac:  ul liNavigate to code$(HOME)/Applications (Parallels)/VMNAME/code Applications, where VMNAME is the name of a virtual machine./li liDuplicate the emMyApplication.app/em application bundle and rename the duplicate emMyApplication --arg.app/em./li liRight-click emMyApplication --myArg.app/em and choose "Show Package Contents*./li liOpen Contents/Resources/AppParams.pva in an editor (e.g., TextEdit), and change the value of the codeApp Path/code property to the absolute path in the virtual machine to the *.bat file, rather than the application. Save the file./li /ul  This is similar to @johnl's answer above, which provided the vital clue. However, at least in Parallels 11, the codeApp Path/code property would only work with an application path, not with a command line.  strongAPPROACH 2/strong  As of Parallels 11, this approach requires one of the more expensive editions of Parallels - Pro or Business. I don't have either, and haven't tested this approach.  According to the Parallels manual Parallels Desktop for Mac Pro Edition, the command codeprlctl exec/code can accept a command to be executed on the Windows virtual machine.     strongprlctl exec/strong      Executes a command inside a virtual machine. Parallels Tools must be installed in a virtual machine to use this utility. Commands in Linux guests are invoked with codebash -c/code.      Syntax      codeprlctl exec vm_id|vm_name command/code      strongParameters/strong      Name Description      emvm_id|vm_name/em The UUID or the name of the virtual machine.      emcommand/em A command to execute.    <comment256939> I like the sound of approach 2 but it doesn't work for me on my Windows 10 VM. I can `exec ... cmd.exe` (but this starts an interactive shell in the host terminal, it doesn't open cmd up inside the guest). If I try something like `exec ... notepad.exe` then nothing happens at all. <comment257099> @cdlk - I'm not able to test this approach myself. In your case, did you start the command with `prlctl`? Do you have Parallels 11 with the Pro or Business edition? <comment257197> No worries. I'm actually evaluating the trial version of Parallels Pro 11 at the moment. I contacted Parallels support earlier on (re. `exec` on Windows VMs) and they pointed me towards approach 1 instead, so I guess this isn't supported on Windows. Out of interest, on OSX VMs, I can run `prlctl exec ... open /Applications/Notes.app/` and this opens the notes app in the guest as you'd expect. <comment333491> Thanks for this.  I *think* that this means that the `parameters` need to be hardwired in the `AppParams.pva` file.  Is there any way to pass these from the MacOS environment or command line?   I.e. to have a MacOS script (e.g. bash) take command line parameters that it passes across Parallels to a script in the Windows guest?  (Apart from modifying the `.app` bundle or the `AppParams.pva` file on the fly, which is annoying to make MP safe; generating is MP safe, but leaves garbage that mist be cleaned up.) <comment333516> Unfortunately Parallels' prlctl does not seem to allow passing command line arguments or setting environment variables in the guest app, without kluges such as placing such things in a file to pass across the Host/Guest boundary.    By comparison, VirtualBox makes this easy to do:  `VBoxManage guestcontrol start [--exe] [--putenv][--unquoted-args]`. More and more I regret having chosen Parallels rather than VirtualBox. <comment335553> I vaguely remember this working when I first started using Parallels circa 2 years ago in 2015 - editing the .app bundle `AppParams.pva` and changing the command.   Not enough for me to really start using it.  But working enough that I thought it might eventually be made to work.   //   Unfortunately, now, in 2017, 2 years later and several updates of Parallels and MacOS, it works not at all.  In fact, when I do such edits, even just adding a single blank character after `cmd.exe` fails - when I run such a bundle, it gets deleted !!!  // Probably some security feature, but I am stymied. <comment335557> As described in stackoverflow.com/questions/41456329/â€¦ I have switched to using VirtualBox for automation, because because I was not able to get any form of parameterized automation of GUI apps running across Parallels. But I would love to get automation across Parallels working, since Parallels does some things better than VirtualBox.