Run a shell script when switching to battery power <body> User Story:  As a MacBookPro user I want to run a script that ejects my USB drive when I disconnect the power source so that I don't have to remember to eject it before grabbing my laptop and hurrying off to a meeting.  Acceptance Criteria:  ol liNO third party apps/li liNO polling.  It must be event driven/li /ol  I already have a script that I use for detecting network cable changes.  I launch it using launchctl with a WatchPath like this in my .plist file:  precode&lt;key&gt;WatchPaths&lt;/key&gt; &lt;array&gt;     &lt;string&gt;/Library/Preferences/SystemConfiguration&lt;/string&gt; &lt;/array&gt; /code/pre  I'm hoping to find a similar way to launch a different script when my power cord is connected/disconnected.  I already know how to detect whether AC power is connected or not... I just need to find an event that tells me I can do it.  precodeAC_POWER=`ioreg -l | grep ExternalConnected | cut -d"=" -f2 | sed -e 's/ //g'`  if [[ "$AC_POWER" == "No" ]] then     for MEDIA_PATH in "/Volumes/Backup Drive 1/" /Volumes/MyPhotos/     do         if [ -e "$MEDIA_PATH" ]         then             echo "Ejecting $MEDIA_PATH"             diskutil eject "$MEDIA_PATH"         else             echo "$MEDIA_PATH not mounted"         fi         done else     echo "AC Power connected" fi /code/pre  <answer53115> I understand you do not want to use any third party applications. However, you should be aware that there is one that can do exactly what you ask for. This proves what you seek is possible.  Power Manager can run a script when you disconnect your MacBook Pro from mains power.  I use this ability to have my MacBook Pro run a shell script each time I plug in and unplug the power cord.  img src="https://i.stack.imgur.com/y0rDS.jpg" alt="Run a script on battery - DssW Power Manager"  Disclaimer: I work for DssW, the creators of Power Manager. I can confirm this solution does not poll and is event driven.  <answer53119> ControlPlane, which picked up where the cool-but-buggy Marco Polo left off, allows you to build context-based rules that can do things for you based on where you are and what you're doing. It uses an evidence-based approach to determining where you are and, once your location criteria passes a certain confidence threshold, executes actions for you based on the confidence that you're "in that location".  It's pretty cool.  One of the evidence sources it supports is current power source. And its evidence source support is all based around event-driven sources.  And it's open source.  And free.  You can set it up to run an AppleScript (or a shell script) for you when ever the power source changes or just when it changes in one direction.  <answer170554> I know I am super late to the game in responding the this request but I just did this myself and it is working perfectly. All you need is a LaunchAgent that watches com.apple.telemetry.battery.charge-cycle in /private/var/root/Library/Preferences (I am doing this on Yosemite and have not tested in other OSes.)  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;com.me.helloworld&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;                 &lt;string&gt;/PATH/TO/SCRIPT.sh&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;WatchPaths&lt;/key&gt;         &lt;array&gt;                 &lt;string&gt;/private/var/root/Library/Preferences/com.apple.telemetry.battery.charge-cycle.plist&lt;/string&gt;         &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <comment60713> May I ask why you are against the use of a third party tool? <comment60717> Am I the only one finding this as a demand rather than a question? <comment60718> Yep, I ran across a number of your links when looking for the solution.  It was a very nice solution, just a little too heavyweight for my needs.  I have a group of 20 developers with the same problem and can't get that in the budget.  I'm giving you an upvote because your app does exactly what I want.  I have a feeling my question is one of your hard-earned trade secrets.  Thanks! <comment60720> Sorry, I'm a software developer and was trying to phrase the question as a user story so it was clear and concise.  It certainly is a question, not a demand.  The acceptance criteria was given to weed out the solutions I'd already investigated. <comment60722> [ControlPlane](http://www.controlplaneapp.com/) is a free, open source, evidence-based, location-to-action execution tool for OS X. It can do things based on the state of your Mac. One of the evidence sources it supports is the current power source (battery or AC) and it can run a script on change. Have you seen it? <comment60723> @macaco I work in a group of 20 developers with the same problem.  Graham's tool was very nice and would do exactly what I need, except it's too fully featured for the "nice to have" I'm trying to accomplish.  The more third party apps I put on our boxes the more attention I attract from IT. :-) <comment60724> See: https://github.com/dustinrue/ControlPlane/blob/master/Source/PowerEvidenceSource.m for how ControlPlane does it. <comment60725> @IanC. I had not seen control plane.  Perhaps part of my problem was I couldn't find the right search terms.  Feel free to add your comment as an answer so I can mark that as accepted if I decide to modify the acceptance criteria. :-) <comment60730> Thanks. Not sure how you can avoid polling without using an application. A pure shell script solution is unlikely but maybe a lighter-weight tool can be found. <comment61483> This worked.  Thank you!