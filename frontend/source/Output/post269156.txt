Why does my launchd script not run at login? <body> I have tried to follow this question so that at login, the currently configured screensaver becomes the desktop background. Therefore, I have created the following script:  precode# login.sh /System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background &amp; /code/pre  I have then created a launch service as code~/Library/LaunchAgents/my_login_items.plist/code with the content  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;    &lt;key&gt;Label&lt;/key&gt;    &lt;string&gt;com.user.loginscript&lt;/string&gt;    &lt;key&gt;Program&lt;/key&gt;    &lt;string&gt;/path/to/login.sh&lt;/string&gt;    &lt;key&gt;RunAtLoad&lt;/key&gt;    &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  And then run codelaunchctl load ~/Library/LaunchAgents/my_login_items.plist/code. Nothing happens, however.  <answer269164> This is a deeply unsatisfying answer, but I got it to work by running code/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background &amp;/code in a subshell. I changed codelogin.sh/code to...  precode#!/bin/bash longname=$0 shortname=$(basename "${longname}") echo "$(date -u "+%Y-%m-%d %H:%M:%S") ${shortname} (${longname}) running..." output=$(/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background)    # &lt;- COMMAND GOES HERE             echo "$(date -u "+%Y-%m-%d %H:%M:%S") ${shortname} ended." /code/pre  ...and that works (my usual static desktop changes to my default screensaver). I use this idiom for other launchd tasks, running the tasks in a subshell so I can easily test whether the operation succeeded and log code$output/code. I don't understand why this works while your original doesn't, but at least it does work.  Note that I removed the code&amp;/code from the end of your command - I'm not convinced this is necessary with codelaunchd/code, and it was preventing my wrapper script from logging that it had ended (though the code&amp;/code wasn't the cause of the original problem).  <comment338098> Does `login.sh` work when you run it from the command line? (I'm assuming it does, but wanted to check). When you `launchctl load` does it work? (Again, I'm assuming it doesn't, but need to check). Finally, and this strays into "answer" territory, could you try adding `StandardOutPath` and `StandardErrorPath` to your `plist` so the agent logs whats happening? (`keyStandardOutPath/key string/tmp/test.stdout/string keyStandardErrorPath/key string/tmp/test.stderr/string`) <comment338099> @JohnN Both of your assumptions are correct. I added the path keys, but both log files stay empty. <comment338100> Ah, that's disappointing. I'll have a play around and see if I can replicate this.