How to monitor file access for an OS X application? <body> I am looking for the OS X corespondent of FileMon, that was later included in ProcessMon.  BTW, it is essential to be able to filter by process.  <answer14410> Launchd is the main system level tool for monitoring files (and a folder is a special file) since it's always running. Hazel is one program that helps put a pretty GUI around launchd WatchPaths. Look here for lots of tips on launchd as well as hundreds of tutorials, a good wikipedia article and the Apple dev docs.  fseventsd will log some changes - so you might use FSeventer or access those files if launchd isn't your cup of tea.  fs_usage and lsof are process aware command line tool to tap into the IO subsystem as it's running. The fs_usage buffer can get overloaded so if you want something more guaranteed and less of a "take a quick peek" it's less dependable for total correct results as the other commands.  <answer14411>    codelsof/code   command on the Terminal.app can do that for you? use the codeman lsof/code to catch up with it's use. Cheers  <answer14420> There's a graphical interface to codelsof/code type information. It's donationware from HAMSoft and it's called What's Keeping Me. Designed to answer that "Why can't I delete this from my trash?" question that comes up every so often on OS X, it also happens to be a handy way to watch for open I/O handles on running processes if you're just curious about what's going on. It allows you some simple search and filtering.  <answer14425> There is the command codeopensnoop/code. Run without arguments, it may overwhelm you with output, but it can be run with arguments code-n name/code to limit output to processes named codename/code.  <answer14428> No one has mentioned Activity Monitor, found in the code/Applications/Utilities/code folder.  Click on the Process Name in the list, then hit the "Inspect" button on the toolbar.  There are three tabs in the resulting window: codeMemory/code, codeStatistics/code, codeOpen Files and Ports/code. The codeOpen Files and Ports/code tab will show all the open files being used by the process.  <answer14438> Instruments—a part of the Apple Xcode development suite—can monitor all file access and writes. Open it from /Applications/Xcode.app/Contents/Applications/Instruments.app, select your application or process, and press Start. You have extensive filter options available in the menus.  Older versions of Xcode are storing the App at /Developer/Applications/Instruments.app  <answer107890> The faster way is:  precode$ lsof [path_to_file] /code/pre  This solution doesn't require the root password and gives you back the following, clear, result:  precodeCOMMAND    PID USER   FD   TYPE DEVICE SIZE/OFF     NODE NAME Finder     497  JR7   21r   REG    1,2   246223 33241712 image.jpg QuickLook 1007  JR7  txt    REG    1,2   246223 33241712 image.jpg /code/pre  <answer194556> Also available are codeiosnoop/code and codeiotop/code depending on your specific needs. These terminal commands can be piped through codegrep/code to watch for filesystem events from a specific process or against a specific file.  <comment15527> I'll add three options - since the unix heritage of Mac OS X is different than the NT architecture - the tools don't overlap perfectly. Are you looking for an API to program or just tools to peek at what is currently happening (or trigger actions after a certain file changes) <comment15564> I have used FSEventer quite a few times to find out what an application is accessing. This is great when looking for license files for system imaging for lab deployment. <comment115458> Similarly `sudo opensnoop | grep .classpath` gives you accesses to a classpath file for example. <comment139673> As of Xcode 5, this is now located in /Applications/Xcode.app/Contents/Applications/Instruments.app - and can also be reached from within the XCode app - Xcode-Open Developer Tool-Instruments. <comment248789> fseventer is excellent to have the big picture realtime, you really see what's going!.