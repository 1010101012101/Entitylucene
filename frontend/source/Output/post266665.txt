How to define an array with a single `defaults` command? <body> I want a domain codecom.apple.keyboard.modifiermapping.1452-628-0/code to contain the following array:  precode(         {         HIDKeyboardModifierMappingDst = 2;         HIDKeyboardModifierMappingSrc = 0;     },         {         HIDKeyboardModifierMappingDst = 0;         HIDKeyboardModifierMappingSrc = 2;     },         {         HIDKeyboardModifierMappingDst = 0;         HIDKeyboardModifierMappingSrc = 10;     } ) /code/pre  I can achieve it by deleting the current value and running three code-array-add/code commands:  precodedefaults -currentHost delete -g com.apple.keyboard.modifiermapping.1452-628-0 defaults -currentHost write -g com.apple.keyboard.modifiermapping.1452-628-0 -array-add '{ HIDKeyboardModifierMappingDst = 2; HIDKeyboardModifierMappingSrc = 0; }'     defaults -currentHost write -g com.apple.keyboard.modifiermapping.1452-628-0 -array-add '{ HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 2; }'     defaults -currentHost write -g com.apple.keyboard.modifiermapping.1452-628-0 -array-add '{ HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 10; }' defaults -currentHost read -g com.apple.keyboard.modifiermapping.1452-628-0 /code/pre  hr  strongWhat syntax can I use to define the array in a single command?/strong  hr  ul liIf I run the following script:  precodedefaults -currentHost delete -g com.apple.keyboard.modifiermapping.1452-628-0 defaults -currentHost write -g com.apple.keyboard.modifiermapping.1452-628-0 -array '(   { HIDKeyboardModifierMappingDst = 2; HIDKeyboardModifierMappingSrc = 0; },   { HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 2; },   { HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 10; } )'  defaults -currentHost read -g com.apple.keyboard.modifiermapping.1452-628-0 /code/pre  I get an array within an array:  precode(         (                 {             HIDKeyboardModifierMappingDst = 2;             HIDKeyboardModifierMappingSrc = 0;         },                 {             HIDKeyboardModifierMappingDst = 0;             HIDKeyboardModifierMappingSrc = 2;         },                 {             HIDKeyboardModifierMappingDst = 0;             HIDKeyboardModifierMappingSrc = 10;         }     ) ) /code/pre/li liIf I try with code-plist/code instead of code-array/code I get an codeUnexpected argument/code./li liIf I run the following script:  precodedefaults -currentHost delete -g com.apple.keyboard.modifiermapping.1452-628-0     defaults -currentHost write -g com.apple.keyboard.modifiermapping.1452-628-0 -array '   { HIDKeyboardModifierMappingDst = 2; HIDKeyboardModifierMappingSrc = 0; },   { HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 2; },   { HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 10; }' defaults -currentHost read -g com.apple.keyboard.modifiermapping.1452-628-0 /code/pre  I get a syntax error codedefaults[22044:679428] Could not parse: ... Try single-quoting it./code/li /ul  hr  Question again: what syntax can I use to define the array in a single command?  <answer266667> code-array/code takes individual array elements as individual arguments.  precodedefaults -currentHost write -g com.apple.keyboard.modifiermapping.1452-628-0 -array \   '{ HIDKeyboardModifierMappingDst = 2; HIDKeyboardModifierMappingSrc = 0; }' \   '{ HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 2; }' \   '{ HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 10; }' /code/pre  The ‘\’ are used to keep the shell waiting for the next line, so they can be omitted if written on one line. You don't need to use codedelete/code first: unlike code-array-add/code, code-array/code replaces the entire array with the new contents.  If you don't want to do it this way, here's an alternative: you can pass the data structure as a string. This is closer to the examples in your question and works the same.  precodedefaults -currentHost write -g com.apple.keyboard.modifiermapping.1452-628-0 '(   { HIDKeyboardModifierMappingDst = 2; HIDKeyboardModifierMappingSrc = 0; },   { HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 2; },   { HIDKeyboardModifierMappingDst = 0; HIDKeyboardModifierMappingSrc = 10; } )'  /code/pre  <comment334364> This answers my question perfectly. However, shall I ask another question of how to do it with a single argument? My intention was to provide a single data structure, and when writing the question, I did not realise "a single command" and "a single data structure" were requirements that could be fulfilled in different ways. <comment334365> @techraf I've edited my answer to include a single-string method, see if that's better <comment334369> Oh! Now I get it. `-array` and `-dict` are optional. And I tried to convince it with non-existent `-plist`... Thank you!