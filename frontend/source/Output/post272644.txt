Is there a faster way to insert text at cursor in AppleScript than "keystroke"? <body> This is for a .scpt file, triggered by a keyboard combo in FastScripts, entitled em"Type As Single Line Plain Text."/em  The AppleScript code takes the clipboard text, removes all rich text formatting, and then removes all line breaks and indentations, setting this new string to a new variable, codetheClipboardTextWithoutAnyLineBreaksOrFormatting/code. Finally, I want the AppleScript to insert this new text at the blinking cursor.  But, I don't want to overwrite the original clipboard with this new, plain text string. I simply want the new string typed out at the blinking cursor, system-wide and in any application. codekeystroke/code does accomplish exactly what I want. It is just slow.  Here is the full script:  precodeset theClipboardTextWithoutAnyFormatting to (the clipboard as text)  set AppleScript's text item delimiters to {return &amp; linefeed, return, linefeed, character id 8233, character id 8232} set theClipboardTextWithoutAnyLineBreaksOrFormatting to text items of (theClipboardTextWithoutAnyFormatting as text) set AppleScript's text item delimiters to {" "}  tell application "System Events" to keystroke theClipboardTextWithoutAnyLineBreaksOrFormatting /code/pre  The problem with this method is that if codetheClipboardTextWithoutAnyLineBreaksOrFormatting/code contains a very long string, for example 2000 characters, then it will take a while for all of the text to be typed out, since it is being done manually in real time.  Is there a better way?  <comment342731> @user3439894 I've edited my question to include the context. <comment342751> @user3439894 I've edited my question to include the rest of the code. <comment342754> @user3439894 The "target file" can literally be anything and anywhere where text can be typed, from a comment field on a Stack Exchange question in Chrome.app, to renaming a folder in Finder.app, to the body of an .rtf file in TextEdit.app. If the text is to be typed into a file (which may not necessarily be the case, as explained in the previous sentence), then the file would not only have to be open, but also the frontmost window, and the blinking cursor would have to be set in the location where the user wants the text to be typed. My current code accomplishes all of this perfectly. <comment342783> This is a completely different question to the original. Set your goalposts then leave them be.