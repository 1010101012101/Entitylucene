map network drives <body> I need to get a script that would map network drives based on a person's user name (we use AD to allow access). It used to work prior to 10.10.  We have a new Mac lab that is running 10.12.6. The old script is below.  I've installed emjq/em from home-brew , but keep getting an error when I try to run it. (Also below)  Sorry I have no experience with AppleScript, and totally lost.  Any help would be appreciated  precode# Get Username and Tag Number.  Define the URL for the json request.  set user to do shell script "whoami" set tag to do shell script "hostname -s" set link to "https://my.gprc.ab.ca/AppService/api/NetworkMappings?UserName=" &amp; user &amp; "&amp;ComputerName=" &amp; tag # Get the number of disks currently mounted.  set diskLength to length of (list disks)  # Get number of records in the json object. # Define the first record number in the object.  set recordLength to do shell script "curl " &amp; quoted form of link &amp; " | jq 'length'" set recordNumber to 0  # For each json record, determine if the object is a drive or printer and mount/install accordingly.  repeat recordLength times      # Define a variable pointing to the first record returned by list disks.     # set diskItem to 1      try         set networkPathVar to do shell script "curl " &amp; quoted form of link &amp; " | jq '.[" &amp; recordNumber &amp; "] | .NetworkPath' | cut -c 2- | sed 's:\\\\\\\\\\\\\\\\://:g' | sed 's:\\\\\\\\:/:g'  | sed 's:.$::'"         set deviceType to do shell script "curl " &amp; quoted form of link &amp; " | jq '.[" &amp; recordNumber &amp; "] | .Type'"     on error         return     end try       if deviceType contains "Drive" then          set recordNumber to recordNumber + 1          # Check to see if the drive is already mounted.  If not mount it.          # repeat diskLength times         if networkPathVar does not contain items 1 thru diskLength of (list disks) then              mount volume "smb:" &amp; networkPathVar          end if         # end repeat      else          set recordNumber to recordNumber + 1     end if # End of Device Type IF end repeat /code/pre  and the error I get is?  precodesh: jq: command not found   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                  Dload  Upload   Total   Spent    Left  Speed    0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 100    36  100    36    0     0    495      0 --:--:-- --:--:-- --:--:--   500 (23) Failed writing body  sh: jq: command not found   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current                                  Dload  Upload   Total   Spent    Left  Speed    0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0 100    36  100    36    0     0    495      0 --:--:-- --:--:-- --:--:--   500 (23) Failed writing body (127) /code/pre  <answer294846> You probably installed codejq/code in code/usr/local/bin/code (or any other directory outside of code/bin:/sbin:/usr/bin:/usr/sbin/code). Usually this directory is not part of codePATH/code so you need to specify the full path to run it (code/usr/local/bin/jq/code).  <answer294939> The primary issue being pointed out is not really an strongAppleScript/strong issue per se. In other words, while the codedo shell script/code emcommand/em is an strongAppleScript/strong emcommand/em, nonetheless, the issue is that the emcommand(s)/em called by the codedo shell script/code emcommand/em are not strongAppleScript/strong emcommands/em, they are codeshell/code emcommands/em and as such are subject to the emenvironment/em passed to the codeshell/code when the br codedo shell script/code emcommand/em is executed.  The codePATH/code passed to a codedo shell script/code emcommand/em is code/usr/bin:/bin:/usr/sbin:/sbin/code, and any executable called that is not within that codePATH/code, then the emfully qualified pathname/em needs to be used.  The codePATH/code emenvironment variable/em is a emcolon-delimited/em list of emdirectories/em that your emshell/em searches through when you enter a emcommand/em.  Apparently codejq/code is not within that codePATH/code. In other words, codejq/code is not located in one of the following locations: code/usr/bin:/bin:/usr/sbin:/sbin/code  So, your choices are either emsymlink/em or emmove/em codejq/code to one of those locations, or use the emfully qualified pathname/em of the codejq/code executable in the codejq/code emcommand/em within the emcommands/em of the codedo shell script/code emcommand/em.  In the codedo shell script/code emcommand/em, change codejq/code to code/path/to/jq/code  Example: code/usr/local/bin/jq/code  Substitute code/usr/local/bin//code with the actual code/path/to//code the codejq/code executable.  You might be able to ascertain its empath/em in strongTerminal/strong using the following emcommand/em:  precodewhich jq /code/pre  On my system the result of codewhich jq/code is: code/usr/local/bin/jq/code  If that doesn't work, then use the following emcommand/em in strongTerminal/strong:  precodefind / -iname jq 2&gt;/dev/null /code/pre  So, you really do not need to understand strongAppleScript/strong because the issue is a codeshell/code issue. Understanding how emshells/em work is where you need to focus on your lack of understanding.  <comment372123> The `PATH` passed to a `do shell script` _command_ is `/usr/bin:/bin:/usr/sbin:/sbin`, and any executable called that is not within that 'PATH` the _fully qualified pathname_ needs to be used. Also, I can't test your _code_, but the _output_ that's passed to `| cut -c 2- | sed 's:\\\\\\\\\\\\\\\\://:g' | sed 's:\\\\\\\\:/:g'  | sed 's:.$::'` could probably be replaced with a single `awk` command or at the lease the three piped `sed` _commands_ could be written as a single `sed` _command_ using `-e command` and not have to pipe to two additional occurrences of `sed`. <comment372135> sorry your are talking to someone that is sooooooo new to applyscript <comment372157> We all have been there. Which part of the answer do I need to explain better? <comment372232> @SteveLunney Simply replace the three occurrences of jq in the AppleScript with /usr/local/bin/jq and it should work. Tested - as far as  I can get without proper account at gprc.ab.ca.