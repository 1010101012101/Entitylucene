How do I create a menu shortcut which involves the delete key? <body> In Addressbook I want to create a keyboard shortcut for the Menu entry codeDelete Group/code using the key combination codeoption-command-delete/code.  So I went to codeSystem Preferences/code -- codeKeyboard/code -- codeKeyboard Shortcuts/code and added an app-specific shortcut entry for code"Delete Group"/code. But when I tried to assign the key combination codeoption-command-delete/code, my input wouldn't get accepted. (Combinations with letter like option-command-D work, though.)  How can I enter a shortcut combination involving the delete key?  <answer47113> You can edit the property list that stores the shortcuts directly. For example open code~/Library/Preferences/com.apple.AddressBook.plist/code with TextMate or TextWrangler, and add:  precode&lt;key&gt;NSUserKeyEquivalents&lt;/key&gt; &lt;dict&gt;     &lt;key&gt;Delete Card&lt;/key&gt;     &lt;string&gt;~@&amp;#x0008;&lt;/string&gt; &lt;/dict&gt; /code/pre  The shortcut strings are documented in http://www.hcs.harvard.edu/~jrus/Site/Cocoa%20Text%20System.html.  <comment54137> This is excellent! Thanks! I've tried it and it works brilliantly. Only things to add: (1) The code snippet has to go _inside_ the most-outer dict.../dict tag pair and (2) the text editor has to convert the binary plist file first into text format before you can edit it. <comment83079> @halloleo I believe that if you use Xcode to edit the plist, you don't have to worry about converting between binary and text formats. If you don't have Xcode, you can use `defaults write $path_to_plist NSUserKeyEquivalents -dict-add "$command_name" "$shortcut_string"`.