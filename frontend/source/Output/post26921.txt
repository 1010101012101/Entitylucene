Installed MacPorts packages sizes <body> Can I retrieve a list of the sizes of MacPorts installed packages?  Yes, I know they are compiled from sources, but if a list of generated files is known, it should be computable anyway.  <answer26942> Well, by default they install to /opt/local so it should be as easy as cd /opt/local &amp;&amp; du -sh * to get a list of the file sizes. Not sure if it's built into MP by default to give you overall sizes  <answer26985> Using the command:  precodedu -sh /opt/local/var/macports/software/* /code/pre  echos back all directories and sizes of your installed ports.  Use the command:  precodeport -d echo installed /code/pre  echoes a listing of the ports installed.  <answer192263> You could make use of port build in command codecontents/code, which gives you the oportunity to do things like that:  precodeport contents --size depof:python27 /code/pre  Grep the lines you need and do the maths :-)  Update: found answer here at guide.macports.  While reading a bit deeper, I found this  precodeport space --units MB --total thisport /code/pre  which is much more handy then calculating the sum of the size of each file inside a port.  <answer240638> To list the dependencies as a hierarchy  precodepsd() { port rdeps $1 2&gt;/dev/null | sed -E "1 s/.*of (.*) @.*/\1/" | while IFS= read -r line     do         port_name="$(port space --total $line 2&gt;/dev/null | cut -d ' ' -f 1-2)"         port_size=${port_name% *}         port_unit=${port_name#* }         printf "%-30s%12.2f %s\n" "$line" "$port_size" "$port_unit"     done } /code/pre  Example  precode$ psd mosh mosh                                895.03 KiB   pkgconfig                         629.39 KiB     libiconv                          6.27 MiB       gperf                           0.00 B   ncurses                            15.17 MiB   protobuf-cpp                       44.11 MiB     autoconf                          0.00 B       xz                              1.68 MiB         gettext                      24.82 MiB           expat                       1.11 MiB     automake                          0.00 B     libtool                           4.19 MiB     zlib                            738.74 KiB   openssl                            17.50 MiB   p5.22-getopt-long                 132.63 KiB     perl5.22                         54.52 MiB       gdbm                          553.91 KiB   p5.22-io-socket-ip                 64.05 KiB /code/pre  Adjust the length of the formatted output, code30/code in my example, as needed.br If you want the output truncated or rounded, see here.  To list the grand total of the above hierarchy  precodealias pst='_() { port rdeps $1 2&gt;/dev/null | cut -d : -f 2 | xargs port space --units MiB --total $1 2&gt;/dev/null ; } ; _' /code/pre  Example  precode$ pst mosh 172.312 MiB total /code/pre  You might want to check codeport help space/code.  I guess you could add coloring and ordering to the output.  <answer262804> To get each port along with a total of all ports just type codeport space installed/code  Example output:      code41.354 KiB xorg-libXcomposite @0.4.4_0   141.987 KiB xorg-libXcursor @1.1.14_0   34.448 KiB xorg-libXdamage @1.1.4_0   74.149 KiB xorg-libXdmcp @1.1.2_0   33.258 KiB xorg-libXevie @1.0.3_0   312.101 KiB xorg-libXext @1.3.3_0   75.650 KiB xorg-libXfixes @5.0.3_0   337.943 KiB xorg-libXi @1.7.8_0   39.058 KiB xorg-libXinerama @1.1.3_0   436.256 KiB xorg-libXmu @1.1.2_0   143.032 KiB xorg-libXrandr @1.5.1_0   53.017 KiB xorg-libXScrnSaver @1.2.2_0   2.696 MiB xorg-libXt @1.1.5_1   87.028 KiB xorg-libXtst @1.2.3_0   92.010 KiB xorg-libXv @1.0.11_0   72.373 KiB xorg-libXxf86vm @1.1.4_0   135.396 KiB xorg-randrproto @1.5.0_0   10.171 KiB xorg-recordproto @1.14.2_0   57.425 KiB xorg-renderproto @0.11.1_0   7.189 KiB xorg-scrnsaverproto @1.2.2_0   49.408 KiB xorg-videoproto @2.3.3_0   849.766 KiB xorg-xcb-proto @1.12_1   66.130 KiB xorg-xcb-util @0.4.0_0   143.412 KiB xorg-xextproto @7.3.0_0   18.946 KiB xorg-xf86vidmodeproto @2.3.1_0   5.789 KiB xorg-xineramaproto @1.2.1_0   469.177 KiB xorg-xproto @7.0.31_0   171.815 KiB xrender @0.9.10_0   1.344 MiB XviD @1.3.4_0   1.575 MiB xz @5.2.2_0   3.102 MiB yasm @1.3.0_0   707.211 KiB zlib @1.2.8_0   3.645 GiB total/code   <comment30796> Why not just du -sh /opt/local? <comment30797> That works as well, I like being in the directory to start tinkering so go down the cd path ;) <comment30903> Oh. I didn't know they were neatly installed in separate directories :) <comment30904> Oh, they aren't. In those directories I just have the tarballs. I want to know the full current installed size. <comment30905> ???. I'd like to know the *single* package size, not the sum of all the macports. <comment228651> I can't test it any more, so I'll just trust this to be correct. <comment228676> @Lohoris : much appreciated. Added link where I found this.