Partially copy a folder, preserving the invisible system files contained, but only some of the remaining content <body> I am looking for a way to copy a folder, with all the invisible and system files it contains in its "first level", but only some of the other visible, "normal" folders it contains? This is related to a "Time Machine" data transfer, from an old disk to a new one. But I think it is a question interesting in its own.  <answer201610> First create a new folder where you will copy the data to: codemkdir &lt;dest_folder&gt;/code. Then use:  precode# "First level" hidden files find &lt;source_folder&gt; -d 1 -name ".*" -print0 | xargs -0 -J % cp -R % &lt;dest_folder&gt; # Normal folders cp -R &lt;source_folder&gt;/&lt;folder1&gt; &lt;source_folder&gt;/&lt;folder2&gt; ... &lt;dest_folder&gt; /code/pre  <comment243061> You could do this with rsync and it's --include and --exclude options. <comment243084> `cp -r source_folder/.*` can cause the current working directory to be copied to the destination. Much safer to `shopt -s dotglob; cp source_folder/* dest_folder`. Then a second copy with the `-R` option for any folders. <comment243086> Interesting. In fact, it will even include `source_folder/..`. I didn't notice since i use `zsh`, which will not include `.` and `..`. However, your suggestion will not copy any hidden directories until you explicitly pass them to the second `cp -R`. It will also copy possibly unwanted non-hidden files in the source directory.