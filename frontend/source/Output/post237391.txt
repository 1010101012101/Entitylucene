Google Chrome on OSX will not open .desktop files created in Ubuntu <body> I have recently collected &amp; saved a large volume of internet links on my Ubuntu 14.04 machine that I wish to share with my other computer that runs OSX, but have come to realize that Google Chrome will not open these files on OSX as it does in Ubuntu. The files are.desktopfiles. An example of the file's contents is as follows:  precode[Desktop Entry] Encoding=UTF-8 Name=Link to Lifehacker Pack for Chrome: Our List of the Essential Extensions Type=Link URL=http://lifehacker.com/ Icon=text-html /code/pre  OSX does not know natively what to do with this file type, and prompts me to choose which application to use to open the files. If I choose to use Google Chrome it will simply display the contents of the file in a tab, but will not navigate to the url in the file. Opening the file with Firefox loads the URL fine in a new tab.  How can I get Google Chrome to open these files normally?  <answer237494> My primary OS is OS X, however I do have a Linux Mint system I use and run into similar situations in which I want to do the same thing on both systems, and when it's not directly supported I have to find another way. In a case such as this, if there wasn't a Browser Extension for code.desktop/code files, like in your other question about code.url/code files, here is what I'd do.  I'd convert the code.desktop/code files to code.webloc/code files and or code.url/code files and use the Default Apps Preference Pane, RCDefaultApp by Rubicode, to change which application opens any given file extension.  Here's a embash script/em, that I modified from a similar emscript/em I wrote years ago, which will create code.webloc/code files and or code.url/code files from code.desktop/code files that have emURLs/em in them.  ol liIn a Terminal codecd/code to the directory containing the code.desktop/code files./li liIssues the following commands:  codetouch d2wu/codebr codeopen d2wu/code/li liCopy and paste the emcode/em below into the opened coded2wu/code file./li /ol  hr  precode#!/bin/bash  clear echo echo " Create .webloc/.url files from .desktop files." echo " ----------------------------------------------" echo "              Choose File Type(s):"  echo echo " [1] Create .webloc &amp; .url files." echo " [2] Create only .webloc files." echo " [3] Create only .url files." echo " [Q] Quit." echo echo " Press 1 to 3 or Q then press Enter..."  Create_WEBLOC () {     for f in *.desktop; do         if [[ ! -f  ${f%.*}.webloc ]]; then             url="$(awk -F '=' '/^URL=/{print $2}' "$f")"             if [[ ! -z $url ]]; then cat &lt;&lt;EOF &gt;"${f%.*}.webloc" &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;URL&lt;/key&gt;     &lt;string&gt;$url&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; EOF             else                 echo "  No URL found in $f file."             fi         fi     done  }  Create_URL () {     for f in *.desktop; do         if [[ ! -f  ${f%.*}.url ]]; then             url="$(grep -e '^URL=' "$f")"             if [[ ! -z $url ]]; then                 printf "[InternetShortcut]\n${url}\n" &gt; "${f%.*}.url"             else                 echo "  No URL found in $f file."             fi         fi     done  }  read  keypress echo  case "$keypress" in     "1")         echo "  Creating .webloc &amp; .url files."         Create_WEBLOC         Create_URL     ;;     "2")         echo "  Creating .webloc files."         Create_WEBLOC     ;;     "3")         echo "  Creating .url files."         Create_URL     ;;     "q" | "Q")         echo "  No files were created."     ;;     *)         echo "  Pressing \"$keypress\" is not a valid choice... Try again!"         echo         read -p " Press Enter to continue..."         "$0"        # Run the Script again.     ;; esac echo /code/pre  hr  ol start="4" liSave and close the coded2wu/code file./li liMake coded2wu/code executable:  codechmod u+x d2wu/code/li liExecute coded2wu/code:  code./d2wu/code/li /ol  hr  Example emscript/em output:  precodeCreate .webloc/.url files from .desktop files. ----------------------------------------------              Choose File Type(s):  [1] Create .webloc &amp; .url files. [2] Create only .webloc files. [3] Create only .url files. [Q] Quit.  Press 1 to 3 or Q then press Enter... [] /code/pre  hr  Note: You can use the Default Apps Preference Pane, RCDefaultApp by Rubicode, to change which application opens a given file extension.  Also, if you need modify other emdefault/em methods of file types, Apps, URLs, UTIs, etc. the the Default Apps Preference Pane is a great utility for it.  hr  img src="https://i.stack.imgur.com/EM8Oh.png" alt="Code shown in Sublime Text"  hr  Note: As coded it will not overwrite existing code.webloc/code files and or code.url/code files even thought when selecting 1, 2 or 3, it reports "Creating ... files.".  This was done to both not step on existing files and minimize output to the screen while only outputting which code.desktop/code files do not contain a codeURL=.../code line, as can be the case depending on what type of code.desktop/code file it is.  <comment290701> .desktop files are specific to Ubuntu https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles <comment290703> @Mark -   As mentioned in the post above, Firefox on OSX opens these files easily. <comment290958> super handy, thanks for taking the time to write this out. I was lucky enough to have a Linux guru answer my question [HERE](https://askubuntu.com/questions/756072/desktop-file-will-not-open-in-google-chrome-when-launched-from-spacefm/768376?noredirect=1#comment1148164_768376) recently, so I am using that method for now. I may use this code above though at some point thank you. <comment290959> @Kalamalka Kid, back in Snow Leopard days I had a _script_ I wrote that customized my Dock with 5 different backgrounds and accents to show which apps were open and I would change the Dock base on the what wallpaper I displayed.  So to copy that existing script to `d2wu` as the template and delete/add the _code_ as needed was a breeze.  Easier for me to do then if I had to do what the Linux Guru did for you. I wouldn't have been able to do that as I'm not a Linux Guru! :)  Thanks though for acknowledging my effort.