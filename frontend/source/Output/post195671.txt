Download entire iTunes purchase history as CSV file <body> I'm wondering if anyone has found a way to download one's entire iTunes or App Store purchase history as a CSV file?  I know that from within iTunes I can go to Account / View Account / Purchase History, but this has numerous problems. It does not let me download the results, but only shows them in iTunes. It does not show all purchases, but instead shows results one screenful at a time. And it does not even show purchases as individal line items, but shows them grouped into collections you need to click into. It's almost like they're trying to make it hard to see how you spend on the App Store or iTunes Store....  I have not been assiduously saving all the email receipts regarding my purchases, so I cannot access this information by doing bulk processing of those old emails.  So is there any other way to get access to this information except for the inadequate iTunes interface?  And if the only way is via the iTunes interface, is there any way to script the UI so I could write a program that iterated through all results and extracted them? Has anyone actually succeeded in doing this?  <answer229240> You asked, "is there any way to script the UI?"  Yes, if you are on a Mac.  You also asked, "Has anyone actually succeeded in doing this?"  Sort of.  My history goes back to 2005, and the iTunes Store session kept timing out, so I had to run it it batches, but the following script does work.  Be aware that it runs very slowly;  simply retrieving the class of an object from iTunes can take almost a second.  I would welcome any performance enhancements anyone can suggest.  This worked on OS X Yosemite 10.10.5 with iTunes 12.3.2.35, and on OS X Mavericks 10.9.5 with iTunes 12.3.2.35, on or around February 28th, 2016.  Any changes Apple makes to the iTunes Store account interface will likely break this script.  In iTunes, go to Store  View Account, log in, scroll to Purchase History and click See All, then, when the screen showing Batch 1 out of N is visible, run the following script in Script Editor:  precodetell application "System Events"     set dateString to do shell script "date \"+%Y-%m-%d_%H.%M.%S\""     log dateString     set target_file to ((path to documents folder) as text) &amp; dateString &amp; "_iTunes_Purchase_History.txt"     set myOutput to ""      set webArea to UI element "loading iTunes store" of splitter group 1 of window "iTunes" of application process "iTunes"     set batchText to value of first UI element of webArea whose value starts with "Viewing Batch"     log batchText     set AppleScript's text item delimiters to {" "}     set num to last text item in batchText     log num     set currentNum to text item 3 in batchText     log currentNum      repeat num times         set els to UI elements of webArea         set ready to false         set open_target_file to open for access file target_file with write permission         --repeat with el in els         repeat with el in els             set cl to class of el             if cl is button then                 set myOutput to myOutput &amp; "\n"             end if             if cl is static text then                 set val to value of el                 if val starts with "Copyright" then set ready to false                 if ready then set myOutput to myOutput &amp; val &amp; "\t"                 if val is "Total Price" then set ready to true             end if         end repeat         log myOutput         write myOutput to open_target_file starting at eof         set myOutput to ""         close access open_target_file          click button "Next" of webArea         repeat             delay 2             set batchText to value of first UI element of webArea whose value starts with "Viewing Batch"             set tempNum to text item 3 in batchText             if tempNum is not currentNum then                 set currentNum to tempNum                 log currentNum                 exit repeat             end if         end repeat         delay 2     end repeat end tell /code/pre  This produces tab-delimited text, not CSV as the OP requested, but most spreadsheet applications will import it.  Gift purchases seem to mess up the formatting, so it may need some manual curation.  I relied on information at http://n8henrie.com/2013/03/a-strategy-for-ui-scripting-in-applescript/ to learn how to do GUI scripting.  <answer231117> I use a windoze machine mostly and found a semi-manual way to accomplish the task as follows:  In iTunes Navigate to Account Info (currently at upper right of iTunes next to search button). Scroll down to Purchase History, click "See All".  ol liUse Greenshot to capture the purchase info/li liPaste from clipboard into One-Note, /li liUse "Image to Text option" on pasted image./li liPaste Text into One-Note - or another document./li liCorrect and reformat as needed./li /ol  Click "Next" button and wait for iTunes to give you the next dozen entries. Repeat, repeat, repeat.  img src="https://i.stack.imgur.com/mZZWI.png" alt="Sample One-Note screen of iTunes purchases"  Hint: Seems by default the view is of the latest purchases and "Next" goes backward through time.  Also note, that multiple purchases in the same day (like albumbs) get lumped together and you have to click the tiny - symbol to see meaningful details.   <answer277723> this script actually emdoes/em work! just not as expected…  ol lii followed the directions, but i got an error: something about not being able to handle the TITLES as a string (?). this took about 2-3 minutes./li lifirst suspicions:  ul liwhen i copy-n-pasted the code into Script Editor, the following lines were “interpreted” i.e. \n showed up as a [literal/visual] line break, as did \t showing up as a tab [literal/visual]  ul liset myOutput to myOutput &amp; "\n"/li liif ready then set myOutput to myOutput &amp; val &amp; "\t"/li /ul/li licommas separating the “Titles included in order” indicating multiple purchases in a single day/li lii was wrong… i think… i dunno./li /ul/li lion a lark, i jumped to the LAST batch (apparently, my fist purchase with this account was in 2004 which meant 49 batches) and ran the script again  ul liresult: the script was running longer than expected, so i assumed an error and stopped the process after about 10 minutes… BUT there WAS a *.txt file generated [in my Documents folder]. this file showed data for   ul lithe LAST batch [that was showing in iTunes when i started the script] THEN /li lithe FIRST batch [BATCH 1, showing my most recent purchases]/li liwhen i went to iTunes, i noticed that BATCH 2 was displayed/li /ul/li liconclusion: the command for the NEXT button (click button "Next" of webArea) was working. SOMETHING WAS HAPPENING!!! (…and my theory about the commas was diminished)/li /ul/li liin order to get the info i needed (batches 1-13 of 49), i did the following:  ul lijumped to the LAST batch (here, the 49th batch)/li liran the script/li lii monitored iTunes, and watched the batch display automatically change until it showed BATCH 14/li lii stopped the script and checked the *.txt file in my Documents folder/li liLO! the *.txt file showed my purchases from [my last] BATCH 49 through BATCH 13!/li /ul/li linot done yet! i wanted to repeat the initial error to record the exact error and to see if my initial suspicions made sense. NOPE! i started from the beginning, and THIS:  ul lithe script ran as expected/li lithe only error (so far, because i’m still running the script) was a lost connection timeout at BATCH 21/li /ul/li /ol  currently, the script is working on BATCH 32…  bTIMING:/b  ul libased on the creation date of the generated *.txt file and the modification times (which i am also monitoring), it looks like each batch takes about 3 minutes to process and update said *.txt file./li liso far, for my 49 batches (lost connection timeout NOT included) it’s taken…  ul liBATCHES 1-21 = @45 minutes/li liBATCHES 21-49 (in progress: current SAVED batch = 34) = @30 minutes/li /ul/li /ul  i know… TMI! TMI!br but i hope this helps!  brbr  bEDIT:/b  ol start="6" liRE: #5 above… “ the only error (so far, because i’m still running the script) was a lost connection timeout at BATCH 21”  ul lii re-started the script, starting at BATCH 21 (where the lost connection timeout happened)/li lii expected it to end at BATCH 1… NOPE! it kept going, uninterrupted, until it rounded upon itself and recorded up to BATCH 20 (which will display BATCH 21 in iTunes upon completion)/li /ul/li /ol  bCONCLUSION:/b the script will run from BATCH[n] to BATCH[n-1]    (provided NO timeouts/interruptions)  <comment233634> If no one scrapes the data, do consider just asking Apple Support for a summary. They might be able to get you the data if you ask and explain how you tried and failed to download it with the tools they provide. <comment233643> are you asking for beyond 90 days ? <comment233644> Yes. I want to figure out how much money I've been spending monthly since 2007 on this stuff. Second, I want to inventory all purchases I've made that will not be shareable via iCloud family sharing, which excludes in-app purchases and non-shareable apps among other things. <comment233646> Aside of looking in the purchases history in the App Store, you are probably better off looking at your credit card reports that can be downloaded as CSV file. <comment233647> Yup, that will work for figuring out the total spend. But only iTunes (only Apple...) can provide the per purchase information needed to identify in-app purchases and to distinguish music from app purchases. Seems like the only way is screen scraping, which is another way of saying I'm out of luck... <comment233648> well if you ant that kind of detailed reporting, then you are out of luck. <comment329757> Sadly it seems that this no longer works on macOS Sierra and iTunes 12.5.3.x <comment338589> it produces this error in Sierra: `System Events got an error: Can’t get UI element 1 of UI element "loading iTunes store" of splitter group 1 of window "iTunes" of application process "iTunes" whose value starts with "Viewing Batch". Invalid index.` <comment349530> By _This script actually does work_, do you mean the one offered by jjpr in their [answer](http://apple.stackexchange.com/a/229240/168832)? Regardless, it'd be good if you could clarify so that other readers know what you're referring to and aren't having to guess. <comment351071> (I added this comment in the wrong place: to the question, not the answer …) Worked perfectly for me. MacOS Sierra 10.12.4, 56 batches. Too about 1.5 hours. The data wasn’t perfectly formatted due to inconsistencies in the actual data, but that was easy to fix afterwards. Thanks for a most useful script! Too bad I can’t add it directly to iTunes. <comment371920> Wow thanks so much! Followed directions next to the script and it ran slowly as you said. And gave me a perfect file that opened cleanly in excel. Using OSX 10.11.6. <comment371921> Wow thanks so much! Followed directions next to the script and it ran slowly as you said. And gave me a perfect file that opened cleanly in excel. Using OSX 10.11.6.