Applescript - Unable to find resource when inside application <body> I have a regular Applescript application bundle that executes an applescript file when it's run. I'm trying to run a shell file that is located at "/Contents/Resources/Data/df.sh", however with the code I'm using, it keeps giving me "resource not found" errors.  precodeset bashFile to path to resource "df.sh" do shell script "bash " &amp; bashFile /code/pre  I'm really new to Applescript, so there's the chance I'm doing something obvious wrong.  <answer121501> The file you are trying to executeâ€” if you locate it in the Finder and Get Info on it codeCommand I/code, what path does the info window say under "Where:". That is most probably the path you will want to use.   <answer121543> Try using codepath to me/code instead:  codedo shell script "bash " &amp; POSIX path of (path to me) &amp; "Contents/Resources/script.sh"/code  code((path to me as text) &amp; "Contents:Resources:script.sh") as alias/code  <answer121897> There are a few reasons it didn't work.  ol licodepath to resource/code basically takes the bundle path and finds files in there, so you need to actually put the subdirectory, in this case "Data."/li liApplescript uses its own (stupid) file path syntax, so you need the POSIX version./li liIt breaks on spaces because appending the POSIX path code~/Desktop/test folder/code shows up as 2 arguments to codebash/code. To fix this just put quotes around it, as you would any other time, with codequoted form of/code./li /ol  Here's the fixed script:  pre set bashFile to path to resource "Data/df.sh" do shell script "bash " & quoted form of (POSIX path of bashFile) /pre  <answer241936> I am unable to comment yet, but there was 1 more tip that helped me. In addition to 0942v8653's answer:  ul liFor example, if you are using the Script Editor (and possibly the Automator app as well), close and re-open the program./li /ul  I had added the file outside of the program, so it must not have loaded/recognized the file until I restarted it.  <comment141666> No. There's a reason I'm doing it like this. If I do your method, when the application gets moved to somewhere else the file path breaks. I'm trying to do it so that it always works regardless of the bundle location. <comment141706> It edited my code to include that, but it seems that it gets tripped up when a space occurs in the file path. e.g.: "bash: /Users/user1/Desktop/test: No such file or directory" when the folder is actually called "test folder". <comment297696> There is also a similar effect when working with the Keychain Access application, just to mention how some common first-party applications act on the OS X platform.