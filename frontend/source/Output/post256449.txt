iTerm2 cursor doesn't return to line beginning <body> I'm not sure if I'm missing some sort of configuration here, but occasionally my cursor is unable to return to beginning of line where command starts. If I press FN+leftArrow, it goes few characters after beginning of command, if I press FN+rightArrow, ot goes way behind end of line. It seems like it thinks that whole line is shifted to the right. See screenshots attached. I was unable to reproduce this on purpose. It happens woth all kind of different commands pretty nondeterministically :-(. Any ideas are welcomed, thanks. img src="https://i.stack.imgur.com/iyoPw.png" alt="FN + left arrow"  img src="https://i.stack.imgur.com/6vChK.png" alt="FN + right arrow"  Matthew  <answer256457> So our debugging session has determined it is your prompt customization, not iTerm2. You said your prompt customization is:  precodeexport PS1="$(tput bold)$(tput setaf 6)\t [\W]$(tput sgr0): " /code/pre  The simple answer is don't use codetput/code to customize your prompt. It's the codesgr0/code reset command that's likely doing more than you want it to do and screwing up buffered text movements.  Let's try doing this with ANSI codes directly. If you use an ANSI color scheme setup like this you can try:  precodeexport PS1="${normal}${bold_blue}\t [\W]${normal}: " /code/pre  That works perfectly for me with Fn-arrow combinations for navigating the line.  codetput/code is a neat idea, but it comes from the codencurses/code package which is a very advanced way of doing UIs in command prompt interfaces by exploiting all kinds of terminal stuff. Best to just stick to ANSI here.  <comment319884> Does this happen if you use a less heavily modified shell prompt? Try switching to a super vanilla shell setup. <comment319888> You mean like plan cmd prompt, not customized one? <comment319890> Yes. If this is bash, try something like `for f in ~/.bash{rc,_profile}; do mv "${f}" "${f}.save"; done` and then get a new iTerm2 window. Do you still have the problem after doing that? <comment319893> Well, that helped :-). However, is there a way how to keep custom cmd prompt and resolve this issue? I'm still unclear why this is happening. I use customized cmd prmpt: `export PS1="$(tput bold)$(tput setaf 6)\t [\W]$(tput sgr0): "` <comment319900> One last thing. I'm trying this prompt, but it gives me error ': bad substitution': `export PS1="${color reset}${color blue bold}\t [\W]${color reset}: "`. Any ideas? <comment319929> Well `color` is a function call but you're trying to use it as some sort of variable reference. Try `export PS1="$(color reset)$(color blue bold)\t [\W]$(color reset): "` instead. <comment319930> Ah, I see now. I actually didn't import any other scripts from GitHub link. I thought that `color` was actually some sort of command (although it didnt work in bash nor zsh). Now I see it's a function. I'll play with it more and we'll see what I can get working. Thanks for all the help :-). <comment319933> If this doesn't work, put a `\[` before each non-printing sequence (i.e. a color code variable) and a `\]` afterward.