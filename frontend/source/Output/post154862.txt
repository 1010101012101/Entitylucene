Adding suffixes to file names according to previous suffixes <body> I have a folder containing files like  ABC - 2001br DEFbr EFG - 2001-2002br HIJbr KLM - 2003br NOPbr QRS - 2004    I want to add the year to all file names that currently have no year suffix. The suffix should always be the one of the last file with a year suffix: codeEFG/codecontains 2001 and the start of 2002, so codeHIJ/code needs the suffix 2002.  How could I do this?  <answer157980> This should do it for the file names you have given. It assumes that the name part consists of uppercase letters, spaces, and dashes. And in the case of two years present, that they are separated by a dash. Also, it assumes that the first file does contain a year (otherwise it has nothing to deduct it from), and it will process every file present in the directory.  Copy&amp;paste to the Terminal, and if you want to check first that it will do it correctly, add an codeecho/code before the codemv/code.  precodefor FILENAME in * do   # remove name part   TRIM=`echo $FILENAME | sed -E 's/[A-Z -]*//'`   # remove possible start year   TRIM=`echo $TRIM | sed -E 's/[0-9]*-//'`   if [ -z "$TRIM" ]   then     # file name didn't include year     mv "$FILENAME" "$FILENAME - $YEAR"   else     # file name did include year     YEAR=$TRIM   fi done /code/pre  <answer158665> precode-- open a finder window to allow the user to select the target folder -- a logfile will be created on the desktop -- set PROCESS_RENAME to true to disable demo mode !!!!  property PROCESS_RENAME : false property DEFAULT_SUFFIX : "XXXX" property DIGITS : {"1", "2", "3", "4", "5", "6", "7", "8", "9", "0"} property LOGFILE : "~/Desktop/renaming.log"  tell application "Finder"     set currentSuffix to DEFAULT_SUFFIX      -- let the user select the target folder     set targetFolder to (choose folder with prompt "Select the target folder:")      display dialog "The following folder files will be renamed: " &amp; linefeed &amp; POSIX path of targetFolder     my logfunc(linefeed &amp; "New folder renaming on folder: " &amp; POSIX path of targetFolder &amp; linefeed)      -- get the target folder files     set folderFiles to name of every file of entire contents of targetFolder      -- iterate on each file found     repeat with targetFile in folderFiles         set fileExtension to ""         set fileBaseName to targetFile          -- extract file base name and file extension         -- expect file extension to be something like ".XXX"         if (targetFile contains ".") then             -- point found so extract base name and extension             set fileExtension to (characters -4 thru -1 of (targetFile as text)) as text             set fileBaseName to (characters 1 thru -5 of (targetFile as text)) as text         end if          -- extract suffix from base file or filename if no extension found         set newSuffix to extract_year_suffix(fileBaseName) of me          -- suffix found on the new file ?         if (length of newSuffix is greater than 0) then             set currentSuffix to newSuffix             set msg to ("FileName: " &amp; targetFile &amp; " &gt;&gt; No name change!")             my logfunc(msg)         else             set newFileName to (fileBaseName &amp; " - " &amp; currentSuffix &amp; fileExtension)              if (PROCESS_RENAME) then                 -- rename file via shell script                 set sourcePath to (quoted form of (POSIX path of targetFolder &amp; targetFile))                 set destPath to (quoted form of (POSIX path of targetFolder &amp; newFileName))                  my rename_file(sourcePath, destPath)             else                 set msg to ("DEMO: Old Name: " &amp; targetFile &amp; " &gt;&gt; New Name: " &amp; newFileName)                 my logfunc(msg)             end if         end if     end repeat     display dialog "End of renaming folder: " &amp; linefeed &amp; POSIX path of targetFolder end tell  to extract_year_suffix(fileBaseName)     set found_suffix to ""     -- check presence of year suffix     if fileBaseName contains "-" then          -- extract the last 4 chars          set theLast4Chars to (characters -4 thru -1 of fileBaseName)         -- check all the last 4 Chars are digits         set allAreDigits to true         repeat with aChar in theLast4Chars             if aChar is not in DIGITS then                 set allAreDigits to false                 exit repeat             end if         end repeat          if allAreDigits then             set found_suffix to (theLast4Chars as text)             return found_suffix         end if     end if     -- no year suffix found     return "" end extract_year_suffix  on logfunc(msg)     do shell script "echo '" &amp; msg &amp; "' &gt;&gt; " &amp; LOGFILE end logfunc  on rename_file(sourcePath, destPath)     try         set shellCommand to "mv -f " &amp; sourcePath &amp; " " &amp; destPath         my logfunc(shellCommand)         do shell script shellCommand     on error line number num         display dialog "rename_file: Error on line number " &amp; num     end try end rename_file /code/pre  Perhaps not the best way to do it, but i'm not an applescript expert. 