AppleScript: How to write to a specific line of a text file? <body> Sample contents of a .txt file on my Mac:  precodeThis is sentence A. This is sentence B. This is sentence C. This is sentence D. This is sentence E. /code/pre  I want to implement a subroutine, like this:   precodewriteTextAtSpecificLine(("This is the newcomer sentence." &amp; linefeed), 4) /code/pre  so that, the text file would consequently look like this:  precodeThis is sentence A. This is sentence B. This is sentence C. This is the newcomer sentence This is sentence D. This is sentence E. /code/pre  hr  I know that I can accomplish my desired result by making each line of the text file its own item in an AppleScript codelist/code object, like so:  precodeset theIndividualLinesOfTextFileAsList to paragraphs of (read theFilepathOfTxtFile) /code/pre  I could then split the codelist/code, based on the desired line number, and then add it all back together.  But, does a more efficient method exist?   My real .txt file is much longer than the sample content above.  <answer287407> Edited version:  precodeset selected_file to ((path to documents folder as text) &amp; "hom.txt") as alias set text_data to "This is the newcomer sentence."  InsertLine(selected_file, text_data, 4)  on InsertLine(the_file, the_data, num_line)     try         set file_id to open for access the_file with write permission         set text_data to read file_id          -- CHECK EMPTY LINE         if (paragraph num_line of text_data) â‰  "" then             set the_offset to (offset of (paragraph num_line of text_data) in text_data) - 1             set remaining_data to (the_data) &amp; (text the_offset thru -1) of text_data             set eof of file_id to the_offset         else -- LINE IS EMPTY             set num_line to num_line - 1             set the_count to (count of (characters of (paragraph num_line of text_data))) - 1             set the_offset to (offset of (paragraph num_line of text_data) in text_data) + the_count + 2             set remaining_data to the_data &amp; linefeed &amp; ((text (the_offset + 1) thru -1) of text_data)             set eof of file_id to the_offset - 1         end if          -- WRITE DATA TO FILE         --write the_data to file_id -- INSERT LINE         write remaining_data to file_id -- WRITE REMAINING DATA         close access file_id     on error         try             close access the_file         end try     end try end InsertLine /code/pre  <answer287454> I'm not sure this is the most efficient way, but this will accomplish what you're looking for.  Works for me on latest version of Sierra  precodetell application "TextEdit" to make new paragraph at after third paragraph of text of document 1 with data "This is the newcomer sentence. \n" /code/pre  <comment362939> When testing this, I only had one document open in textedit therefore "document 1" worked. If you have several documents open, you may need to tweak the code a little bit so it targets the correct document. <comment362940> I forgot to mention that I want to write to the text file **without opening** the file. The file will never be open when the script is run. Hence, I am looking for a more "behind the scenes" method. <comment362965> It seems that this code has a bug. If the line that you want to write to happens to be an empty/blank line, then `the_data` will not be written to the file at all. <comment363048> You're right. I updated it. Can you test it? <comment363242> I have found no issues with the updated code. The subroutine works exactly as I desire. Thanks for the solution! <comment363676> You're welcome. I'm glad it worked!