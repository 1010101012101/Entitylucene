What build flags are available for brew install of gcc? <body> I'm curious as to what build flags are available to me when installing codegcc 4.8/code using codebrew/code.  This question explains how to install gcc 4.8 using brew, but only specifies two possible flags i.e (code--enable-cxx/code and code--enable-fortran/code).   Is there a list of what's available or can someone iterate them for me?  If it matters I am running OS X 10.7.5 on the Intel i5 dual core.  <answer98894> Use codebrew options/code. On my machine I get this:  precodebrew options gcc48 --enable-all-languages         Enable all compilers and languages, except Ada --enable-cxx         Build the g++ compiler --enable-fortran         Build the gfortran compiler --enable-java         Buld the gcj compiler --enable-multilib         Build with multilib support --enable-nls         Build with native language support (localization) --enable-objc          Enable Objective-C language support --enable-objcxx         Enable Objective-C++ language support --enable-profiled-build         Make use of profile guided optimization when bootstrapping GCC /code/pre  <answer98898> I'm not aware of a direct way to list all the possible flags for different software. With codebrew options [formula]/code you can list the build flags you can use directly with codebrew install/code. These options are defined in the codeFormula/code of the software and you can inspect it with codebrew edit [formula]/code (e.g. codebrew edit gcc48/code and search for codeoption/code lines).  However, at least with codegcc/code (and any software that uses Autoconf), you can list emall/em possible flags by following the steps below.  First, use codebrew install -i gcc48/code to get a shell with the package to be installed extracted to a temporary directory. From there, you can use code./configure --help/code to list all possible flags for the particular software.  If you want to use some of the flags not possible with codebrew/code, you can proceed as you would with a normal installation without codebrew/code (code./configure [flags]; make; make install/code). After that, when you codeexit/code, codebrew/code should pick up the finished build and you are done.  If you just codeexit/code after taking a look at the code./configure --help/code, codebrew/code notices that the there is nothing to be installed and exits with an error ("Error: Empty installation"). The same happens when there is some error in the actual build process ("Aborting due to non-zero exit status").  <comment116241> Excellent! Exactly what I wanted to know.