.profile is not loaded on non-login /bin/sh <body> The problem is in the title, but let me add few details here.  I am running on codeOS X 10.10.5 (14F27)/code. Using default codeTerminal.app/code.   hr  h1Content of config files/h1  Content of code/etc/profile/code  precodeecho " # reading /etc/profile" # System-wide .profile for sh(1)  if [ -x /usr/libexec/path_helper ]; then     eval `/usr/libexec/path_helper -s` fi  if [ "${BASH-no}" != "no" ]; then     [ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc fi /code/pre  Content of code/etc/bashrc/code  precodeecho " # reading /etc/bashrc" # System-wide .bashrc file for interactive bash(1) shells. if [ -z "$PS1" ]; then    return fi  PS1='\h:\W \u\$ ' # Make bash check its window size after a process completes shopt -s checkwinsize # Tell the terminal about the working directory at each prompt. if [ "$TERM_PROGRAM" == "Apple_Terminal" ] &amp;&amp; [ -z "$INSIDE_EMACS" ]; then     update_terminal_cwd() {         # Identify the directory using a "file:" scheme URL,         # including the host name to disambiguate local vs.         # remote connections. Percent-escape spaces.     local SEARCH=' '     local REPLACE='%20'     local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"     printf '\e]7;%s\a' "$PWD_URL"     }     PROMPT_COMMAND="update_terminal_cwd; $PROMPT_COMMAND" fi /code/pre  Content of code~/.profile/code  precodeecho " # reading ~/.profile" ... /code/pre  Content of code~/.bashrc/code  precodeecho " # reading ~/.bashr" ... source /etc/profile ... /code/pre  Content of code~/.bash_profile/code  precodeecho " # reading ~/.bash_profile" source ~/.profile source ~/.bashrc /code/pre  hr  h1Output of calling codesh/code and codebash/code/h1  So here is output of invoking codesh/code.  precode$ sh sh-3.2$   sh --login  # reading /etc/profile  # reading /etc/bashrc  # reading ~/.profile d12frosted:~ d12frosted$   $ bash  # reading ~/.bashr  # reading /etc/profile  # reading /etc/bashrc d12frosted:~ d12frosted$   $ bash --login   # reading /etc/profile  # reading /etc/bashrc  # reading ~/.bash_profile  # reading ~/.profile  # reading ~/.bashr  # reading /etc/profile  # reading /etc/bashrc d12frosted:~ d12frosted$  /code/pre  hr  As you can see, when calling codesh/code - it doesn't load any configurations. Is something broken in my environment or it's expected?   <answer208415> This is expected sh only loads ~/.profile when it is a login shell.   From Bash reference manual     If Bash is invoked with the name sh, it tries to mimic the startup behavior of historical versions of sh as closely as possible, while conforming to the POSIX standard as well.      When invoked as an interactive login shell, or as a non-interactive shell with the --login option, it first attempts to read and execute commands from /etc/profile and ~/.profile, in that order. The --noprofile option may be used to inhibit this behavior. When invoked as an interactive shell with the name sh, Bash looks for the variable ENV, expands its value if it is defined, and uses the expanded value as the name of a file to read and execute. Since a shell invoked as sh does not attempt to read and execute commands from any other startup files, the --rcfile option has no effect. A non-interactive shell invoked with the name sh does not attempt to read any other startup files.    Of you want bash running as sh to use ~/.profile when not a login shell (e.g. keep current environment) use  precodeenv ENV=$HOME/.profile /bin/sh /code/pre  <comment251375> I see. Thanks for the quote from `man`. Somehow I was understanding it in a wrong way. <comment251387> So if you want /bin/sh to read your bashrc: `env ENV=$HOME/.bashrc /bin/sh` <comment251393> @glennjackman thanks for the tip!