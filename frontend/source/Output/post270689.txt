How to create a blank RTF file in AppleScript? <body> I want to be able to create a new TextEdit document with an AppleScript file. The AppleScript file will then be triggered by a system-wide keyboard shortcut via FastScripts. Specifically, I want the AppleScript to:  ol liPrompt the user to enter a filename./li liCreate a blank TextEdit file with that filename and save it to a predetermined location. I would like the file to be a rich text document (which is the default type of document created in TextEdit when one clicks "File" → "New")./li liSet the preset font size of that file to be 18./li liOpen the file in TextEdit, with window bounds of {160, 10, 883, 639}. (Note that TextEdit will most likely not already be open when the AppleScript file is run.)/li liEnsure that the blinking cursor is on the emsecond/em line of the document, so that the user can immediately begin typing. (I hate typing on the very first line in TextEdit, from a visual standpoint, and have to first hit kbdenter/kbd every time that I create a new file before I can begin typing.)/li /ol  Here is what I have:  precode-- Getting file name from user:   repeat     set customFilename to the text returned of (display dialog "Save as:" with title "Do you want to create a new, blank TextEdit RTF document?" default answer "")    -- Ensuring that the user provides a name:       if customFilename is "" then         beep         display alert "The filename cannot be empty." message "Please enter a name to continue."     else         exit repeat     end if end repeat    -- Creating the desired file path: set filePath to "/Users/Me/Desktop/" set fullFilepath to filePath &amp; customFilename &amp; ".rtf"    -- Checking if the file already exists: tell application "Finder"      set formattedFullFilepath to POSIX path of fullFilepath      if exists formattedFullFilepath as POSIX file then         tell current application             display dialog "The file \"" &amp; formattedFullFilepath &amp; "\" already exists!" &amp; "  " &amp; "Do you want to overwrite the file?" buttons {"No", "Yes"} default button 1 with title "File Already Exists..." with icon caution              if the button returned of the result is "No" then                 return             end if         end tell     end if end tell /code/pre  That's where I am, at this point.  I'm not sure how exactly to approach the rest. I could create a new TextEdit document within TextEdit itself, and then save the file with the custom filename. Or I could create the RTF file outside of TextEdit, and then open the file with TextEdit.  Similarly, the AppleScript can either insert the blank line by keystroke after the file is opened, or the AppleScript can actually write the line to the file when the file is created.  And I have no idea how to set the preset font size for a specific document in AppleScript (without changing the application-wide default font size), or if it is even possible.  <answer270721> I've taken a different approach aside from the file check. It took me quite a while to figure out how to create the rtf file correctly:  precoderepeat     set filename to (display dialog "Here goes your file name." default answer ("") as string)'s text returned     if filename is "" then         beep         display alert "The filename cannot be empty." message "Please enter a name to continue."     else         exit repeat     end if end repeat  set filepath to POSIX path of ((path to home folder)) &amp; "Desktop/" &amp; filename &amp; ".rtf"  tell application "Finder"     if exists filepath as POSIX file then         tell current application             display dialog "The file \"" &amp; filepath &amp; "\" already exists!" &amp; "  " &amp; "Do you want to overwrite the file?" buttons {"No", "Yes"} default button 1 with title "File Already Exists..." with icon caution             if the button returned of the result is "No" then                 return             end if         end tell     end if end tell  do shell script "cat &lt;&lt;EOF &gt;&gt; " &amp; filepath &amp; " {\\rtf1\\ansi\\ansicpg1252\\cocoartf1504\\cocoasubrtf820 {\\fonttbl\\f0\\fswiss\\fcharset0 Helvetica;} {\\colortbl;\\red255\\green255\\blue255;} {\\*\\expandedcolortbl;;} \\paperw11900\\paperh16840\\margl1440\\margr1440\\vieww12600\\viewh7800\\viewkind0 \\pard\\tx566\\tx1133\\tx1700\\tx2267\\tx2834\\tx3401\\tx3968\\tx4535\\tx5102\\tx5669\\tx6236\\tx6803\\pardirnatural\\partightenfactor0  \\f0\\fs36 \\cf0 \\\\ } EOF"  do shell script "head -n 9 r" &amp; filename &amp; ".rtf" &amp; " &gt;&gt; " &amp; filename &amp; ".rtf" &amp; filepath &amp; " | cut -d ' ' -f 1" do shell script "open " &amp; filepath tell application "TextEdit" to activate tell application "System Events" to keystroke (key code 125) /code/pre  Happy writing!  <answer271014> Having read your question, here is an example of how I would code it.  hr  precode--  # The variables for the target file's fully qualified pathname and custom filename needs to be global as they are called from both the handlers and other code.  global theCustomRichTextFilePathname global customFilename  --  # The createCustomRTFDocument handler contains a custom template for the target RTF document.  on createCustomRTFDocument()     tell current application         set customRTFDocumentTemplate to «data»         try             set referenceNumber to open for access theCustomRichTextFilePathname with write permission             write customRTFDocumentTemplate to referenceNumber             close access referenceNumber         on error eStr number eNum             activate             display dialog eStr &amp; " number " &amp; eNum buttons {"OK"} default button 1 with title "File I/O Error..." with icon caution             try                 close access referenceNumber             end try             return         end try     end tell end createCustomRTFDocument  --  # The openDocument handler opens and set the bounds of the theCustomRichTextFilePathname document while placing the cursor on the second line.  on openDocument()     try         tell application "TextEdit"             open file theCustomRichTextFilePathname             activate             tell application "System Events"                 set displayedName to get displayed name of file theCustomRichTextFilePathname                 if displayedName contains ".rtf" then                     tell application "TextEdit"                         set bounds of window (customFilename &amp; ".rtf") to {160, 22, 883, 639}                     end tell                     key code 125                 else                     tell application "TextEdit"                         set bounds of window customFilename to {160, 22, 883, 639}                     end tell                     key code 125                 end if             end tell         end tell     on error eStr number eNum         activate         display dialog eStr &amp; " number " &amp; eNum buttons {"OK"} default button 1 with icon caution         return     end try end openDocument  --  # Get the name for the RTF document, ensuring it is not blank.  repeat     set customFilename to the text returned of (display dialog "Save as:" with title "Do you want to create a new, blank TextEdit RTF document?" default answer "")     if customFilename is "" then         beep         display alert "The filename cannot be empty!" message "Please enter a name to continue..."     else         exit repeat     end if end repeat  --  # Concatenate the default location (the User's Desktop) with the chosen filename while adding the proper file extension.  set theCustomRichTextFilePathname to ((path to desktop) &amp; customFilename &amp; ".rtf") as string  --  # Check to see if the target file already exists. If it does not exist, create and open it. If it does exist, either open it or overwrite it and open it, based on decision made.  tell application "Finder"     try         if exists file theCustomRichTextFilePathname then             tell current application                 display dialog "The file \"" &amp; POSIX path of theCustomRichTextFilePathname &amp; "\" already exists!" &amp; return &amp; return &amp; "Do you want to overwrite the file?" &amp; return &amp; return &amp; "If yes, the file will be placed in the Trash." buttons {"No", "Yes"} default button 1 with title "File Already Exists..." with icon caution                 if the button returned of result is "No" then                     --  # The file already exists, chose not to overwrite it, just open the document.                     my openDocument()                 else                     --  # The file already exists, chose to overwrite it, then open the document.                     tell application "Finder"                         delete the file theCustomRichTextFilePathname                     end tell                     my createCustomRTFDocument()                     my openDocument()                 end if             end tell         else             --  # The file does not already exist. Create and open the document.             tell current application                 my createCustomRTFDocument()                 my openDocument()             end tell         end if     on error eStr number eNum         activate         display dialog eStr &amp; " number " &amp; eNum buttons {"OK"} default button 1 with icon caution         return     end try end tell /code/pre  hr  strongHow to create the Custom RTF Document Template, codecustomRTFDocumentTemplate/code, used in the codeon createCustomRTFDocument()/code emhandler/em:/strong  In TextEdit create a new Rich Text document and set the font and size as desired, then add any default content, in this case a newline. With this done, press strong⌘A/strong to select all, then strong⌘C/strong to copy this information to the emClipboard/em.  Now in Script Editor use the following emcommand/em to get the emRTF class data/em from the emClipboard/em.  precodeget the clipboard as «class RTF » /code/pre  What is returned will be used as the Custom RTF Document Template by assigning it to a emvariable/em in the actual emscript/em, e.g.:  precodeset customRTFDocumentTemplate to «data» /code/pre  Note that the above template has the default font, Helvetica, with size set to 18 and one blank line as its content. If you want a different font then Helvetica, set both the font and size before adding content, a blank line in this case, then use the info above to get is as emRTF class data/em from the emClipboard/em.  Also note that in the codeon openDocument()/code emhandler/em, the codebounds/code emlist/em is set to code{160, 22, 883, 639}/code not code{160, 10, 883, 639}/code as the second emitem/em in the codebounds/code emlist/em should not be less then the height of the menu bar.  <comment340350> It works great. I found a minor issue, though. If the user supplies a name that contains a space, the AppleScript will give an error. So, you have to add `set filepath to quoted form of filepath` in your code to fix this. Also, if TextEdit does not have the black dot underneath its logo in the Dock, about 1 in every 10 times that I run your script, the cursor is not moved to the second line. Instead, as the file opens, I hear a beep and the cursor remains on the first line. Do you think that the code should contain a `delay` above the final line, to prevent this issue? <comment340353> Also, can you modify your code so that the TextEdit window that is opened has bounds of {160, 10, 883, 639}? Is `tell application "TextEdit" to set bounds of front window to {160, 10, 883, 639}` as the final line the best way to do this? Thank you. <comment340782> @oa-, Aside from the fact that it's malformed, just what exactly is `do shell script "head -n 9 r" & filename & ".rtf" & "  " & filename & ".rtf" & filepath & " | cut -d ' ' -f 1"` supposed to be doing!? Why does it even need to be a part of the script? <comment340835> user3439894 to the rescue! Flawless! <comment340852> @rubik's sphere, I wouldn't say it flawless but thanks, however I've modified the `on openDocument()` _handler_ in AppleScript _code_ to handle whether or not the extension is hidden.  The file should be created with it not hidden however if it gets hidden the _mod_ I made to the _handler_ accounts for it. Note that I could have just said `set bounds of front window to {...}` but I wrote it this way so it only acts on the named window so if there is by chance some error, it's not going to move and resize another TextEdit window that may be open at the same time. <comment340854> On the first point, excellent thinking. On the second point, I concur, the new way is superior; I was actually having some issues with the bounds not always working properly the old way. <comment340901> @rubik'ssphere Thanks for the hint regarding the file name. Yes, changing the delay to 2 or 3 seconds should fix it. <comment340902> @rubik'ssphere Yes, setting the bounds with your code seems alright to me. <comment340903> @user3439894 What do you mean by "malformed"? The line modifies the created file so it becomes a valid rtf file. <comment340970> @rubik's sphere, I was missing a `return` _statement_ in the `on createCustomRTFDocument()` _handler_, so you should update your working _code_. Also the `«data RTF ... »` assigned to `customRTFDocumentTemplate` is just a working example and you should replace it with `«data RTF ... »` created from your system and why I gave instructions on how to get that info. <comment340971> @oa-, It's malformed because when running your _script_ and entering e.g. _test_ for the filename, the `do shell script "head ..."` _command_ is translated to `do shell script "head -n 9 rtest.rtf  test.rtf/Users/me/Desktop/test.rtf | cut -d ' ' -f 1"` and it does absolutely nothing to the file (because it's malformed) that's created in the previous `do shell script "cat ..."` _command_ . If you look at the translated _command line_ you should be able to see where it's malformed without me having to explain what's wrong with it. <comment340972> @oa-, If I create a file with your _script_, as written, and then again commenting out the `do shell script "head ..."` _command_, the two files created are binaurally exact and therefore the `do shell script "head ..."` _command_ does absolutely nothing, as written! So, what explicitly are you trying to do with the `do shell script "head ..."` _command_? <comment341898> I know that this is unrelated, but do you know how I can use a variable in the `set customRTFDocumentTemplate to «data RTF 7B5C72»` statement (I had to truncate the statement in this comment because of the character limit)? I've tried: `set myVariable to "7B5C72"` followed by `set customRTFDocumentTemplate to «data RTF myVariable»`. But it does not work. <comment341949> @rubik's sphere, The short answer is no, it must be used in the form I've presented. The longer answer is to long for comments and not really relevant since it must be passed to the `write` _command_ as shown in my answer. Why do you need to variablize the _data_ for `customRTFDocumentTemplate`? A template is just that, a template and if you need more then one template then create and encode additional templates within the _script_. <comment342032> I created a [new question](http://apple.stackexchange.com/questions/272120/how-to-write-text-to-an-rtf-file-while-maintaining-the-style-of-a-document-temp) to articulate my desire and the issue. I would very much appreciate your help, as always. <comment342288> I think your code has a bug now. When I run your code, the .rtf file is never created, and I am given the error: _"Finder got an error: Can’t get file "Macintosh HD:Users:Me:Desktop:Test Name.rtf". number -1728"_ <comment342330> @rubik's sphere, Sorry, when I updated it to delete the existing file when prompted to overwrite, I added the code to the wrong `else` _block_. It's fixed now.