Extreme slowness after upgrade to Yosemite; is my specific problem happening to others or just for me? <body> Like many, my Mac (iMac) has become extremely slow when performing certain operations and it's making it nearly impossible to get work done. I've been paying close attention trying to find some specific reason and finally think I've identified one issue that seems to cause much of the slowdown that I'm dealing with. Others' descriptions of their own slow machines after upgrading sound enough like mine to make me think what I've found may be more general so I'd like to find out if anyone can verify that their own cause is the same as mine.  It's easy to check for the basic problem and a little more work if the results of that make it worth looking further. I'll list the details here and explain below how and why I think this actually is a bug of some sort (rather than in a self-answer since until more people confirm the problem the answer isn't certain).  I want to know if this is an answer to some of the slow down issues with Yosemite and if fixing it as described helps your machine to run better:  ul liOpen the user Preferences file: code/Users/&lt;name&gt;/Library/Preferences/code (or equivalently if looking in your own home directory, code~/Library/Preferences/code). There are many ways but the easiest is to open the user codeLibrary/code folder in the codeFinder/code by holding holding the codeOption/code key down and selecting codeLibrary/code from the codeFinder's Go/code menu. Then open the codePreferences/code folder that is contained within the codeLibrary/code folder./li liSort the codePreferences/code folder by clicking on the heading of the codeSize/code column. You may have to show the codeSize/code column first. If you're not sure how then use the codeView/code menu to codeShow View Options/code and work with the pop up settings; be sure to codeSort/code and not codeArrange/code the Size column and you may need to sort it so that the largest files are at the top of the list./li liNow look at the large files (sizes greater than 1000KB (1MB) to see if there are any very large preference files (code.plist/code file extension), especially any of the following two:  ul licodecom.apple.sidebarlists.plist/code/li licodecom.apple.recentitems.plist/code/li /ul  If so, then they may be causing much of the slowness so you may want to continue. If not then this probably isn't your speed problem./li liIf you know how to convert and view code.plist/code files then you may want to read below and look for the particular symptoms described./li liOr, you may want to just try moving the large files out of the codePreferences/code folder and put them somewhere such as on your Desktop so that you can put them back if this doesn't help. It's fine to not put them back since OS X will recreate them when restarted though you may have to modify some of your codeFinder/code window preferences or arrangements if you do. You only need to remove the large codecom.appleâ€¦/code preference files; ignore any large third party files you see such as those from Adobe, Microsoft, etc.) -It's probably best to restart your Mac and see if it has helped with the slowdown issue. (If you know how to relaunch the codeFinder/code then that should work though I think I'd advise restarting to be sure.)/li /ul  If this works for you (or doesn't) then if you can add a comment or add further details that you have discovered as another answer maybe we can start to unravel these bothersome problems. I know that this particular situation, when corrected as described really makes my machine feel good to use again.  hr  I wrote the following explanation of the above earlier should it sound odd:  I've noticed that certain operations really slow things down and for me the most noticeable time is when I open up Finder windows or opening documents either from the Finder or from within an application, especially codePreview/code. While looking through my user Preferences directory, code~/Library/Preferences/code I happened to do a Quickview on the codecom.apple.sidebarlists.plist/code preference file and while scrolling down found a particular key's value was extremely long, so much that I never got to it's end before deciding to open it in an editor to see what was happening. I found 8 keys, all named codeBookmark/code, that had huge values ranging from about 2.5MB to 4.3MB in length which is extremely long for a preference file where the rest of the keys are less than 2400 characters long with most of them less than 500.   When I removed this codeplist/code file and let OS X recreate it and modified my sidebar to have the same items as before the resulting file's length was now about 7,000 bytes (down from it's earlier size of 11MB, about 1500 times smaller). And most of the slowness in Yosemite was gone for me. I believe that there were several places that when OS X needed details from that preference file it ended up reading the whole file which as happening while the beach ball was spinning on the screen with nothing else moving. Worse, after watching some file I/O on that file it looks like the whole file is rewritten when a change affects some preference contained in it and the combined reading and writing slowed the whole system beyond use.  After several days, the slowness began to return and I found that several codeBookmark/code keys with large values were back in the same preference file. Today I learned more and think I know what is happening. After examining other large preference files it seems that large codeBookmark/code key values are also being added to the codecom.apple.recentitems.plist/code preference file which affects the speed of operations that access the recent files list, especially if trying to open one of the files that has one of these large keys associated with it. (When I attempted to open one such file it seemed that nothing was happening and it was quite a bit later that a dialog showed up saying that it couldn't be accessed.)  After finally looking at all file system objects affected (defected?) with these long keys it appears that most were files or volumes that are not local to my machine. Several were codePublic/code folders on my partner's iBook, two were virtual Windows disk volumes (one from VMWare Fusion, one from VirtualBox) that they are all references file system) and one left from a USB flash drive. All of the items were no longer accessible but I'm not sure it that mattered; they all just happened to be gone. But there were at least two volumes, one on a constantly connected USB drive and one that resides on the second partition of the internal SSD. (The USB drive was divided into 5 partitions yet only one of them had acquired a huge codeBookmark/code key value; the other partitions were defined normally.  <comment188896> Could you post some slice of the console system log when the issue happens? That might help identify the problem