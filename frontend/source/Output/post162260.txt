Allow only specific AD users/groups to login <body> I've been doing some testing as my company is planning to integrate our mac users into the windows active directory environment.  Joining/removing computers from a windows domain is cake, everything can be done via the Mac's Directory Utility.  Is there a way for us to control which active directory users or groups can login to this mac?  After joining a mac to a windows domain, anyone with a proper domain account can login to the computer. And by proper, I mean anyone from the domain by default.  Thanks!  <answer162393> You can modify the properties of com.apple.loginwindow.netaccounts and com.apple.access_loginwindow to create custom login access.  This can also be achieve through third party vendors.  strongCentrify/strong is a good third party mac AD plugin that allows to set Zones(AD Users/groups) for login access.  There are also MCX and profile options to set login window access.  Below is the way I have gotten to work using the modifying com.apple files for custom access.  Centrify Link  Original Link to guide I used   --- Answer is about half way down in the comments.  You can manually edit and add AD groups with emdseditgroup/em.  First check to see if the two files exist:    strong/private/var/db/dslocal/nodes/Default/groups/com.apple.loginwindow.netaccounts/strong   and  strong/private/var/db/dslocal/nodes/Default/groups/com.apple.access_loginwindow/strong  If those files exist then move on to "emAdding the groups to the access_loginwindow/em" below.  If they don't exist you will need to create them with:  precodedscl . -create /Groups/com.apple.loginwindow.netaccounts dscl . -create /Groups/com.apple.loginwindow.netaccounts PrimaryGroupID $GID1 dscl . -create /Groups/com.apple.loginwindow.netaccounts Password \* dscl . -create /Groups/com.apple.loginwindow.netaccounts RealName "Login Window's custom net accounts"  dscl . -create /Groups/com.apple.access_loginwindow dscl . -create /Groups/com.apple.access_loginwindow PrimaryGroupID $GID2 dscl . -create /Groups/com.apple.access_loginwindow Password \* dscl . -create /Groups/com.apple.access_loginwindow RealName "Login Window ACL" /code/pre  You will need to change strong$GID1 and $GID2/strong in the above script to a free GID number, for both the com.apple.loginwindow.netaccounts and com.apple.access_loginwindow files.  You can use this script to check if a GID is being used by the system.  precodedscl . -list /Groups PrimaryGroupID | grep $desiredGID /code/pre  Change strong$desiredGID/strong to a number you want to check is free. (I used 206 for netaccounts and 235 for acess_loginwindow from the guide linked above, and they were always open)  strong"Adding the groups to the access_loginwindow"/strong  precodedseditgroup -o edit -n /Local/Default -u admin -p -a ADgroup -t group com.apple.loginwindow.netaccounts /code/pre  Change strongADgroup/strong to the name of the Active Directory group you want to allow access to at the login window.  (ex. "Sales Team").  Also change strongadmin/strong to your local user admin account.  It will prompt for password.  Then add the com.apple.loginwindow.netaccounts to the com.apple.access_loginwindow file.  precodedseditgroup -o edit -n /Local/Default -u admin -p -a com.apple.loginwindow.netaccounts -t group com.apple.access_loginwindow  dseditgroup -o edit -n /Local/Default -a localaccounts -t group com.apple.access_loginwindow /code/pre  Again change strongadmin/strong to your local admin account.  The first one adds the file that holds the AD groups nested in it, the second line allows for your local accounts on the computer to log in.  Now if you go to strongSystem Preferences--Users &amp; Groups--Login Options--Options/strong  next to "Allow network users to log in at login window".  You should see the AD groups listed that you want allowed to access the computer.  img src="https://i.stack.imgur.com/jh011.png" alt="Options in SP pane"  img src="https://i.stack.imgur.com/HNK4i.png" alt="Groups added from com.apple.loginwindow.netaccounts"  <comment189685> we don't have that exact situation here, but wouldn't that be controlled by the AD permissions and specifics? <comment189896> good answer (and faster than my almost identical) + from me