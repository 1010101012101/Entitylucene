Remap Ctrl+C, Ctrl+V, and Ctrl-X only <body> I know that I can globally swap the codeControl/code and codeCommand/code in Mac OS and this is not what I need. What I would like to do is keep both buttons as they are and only and make codeCtrl+C, Ctrl+V, and Ctrl-X/code work as if they were pressed with the codeCommand/code button. What is the easiest way to do this?  <answer66971> One option would be to use DefaultKeyBinding.dict, but it wouldn't work in all applications or text views.  precode{     "^x" = cut:;     "^c" = copy:;     "^v" = paste:; } /code/pre  KeyRemap4MacBook would work almost everywhere, and it also allows excluding specific applications.  img src="https://i.stack.imgur.com/V3rzs.png" alt=""  Here's the definition of the remapping selected in the screenshot:  precode&lt;item&gt;   &lt;name&gt;Use PC Style Copy/Paste&lt;/name&gt;   &lt;appendix&gt;(Control+C to Command_L+C)&lt;/appendix&gt;   &lt;appendix&gt;(Control+V to Command_L+V)&lt;/appendix&gt;   &lt;appendix&gt;(Control+X to Command_L+X)&lt;/appendix&gt;   &lt;appendix&gt;(Except in Terminal, VM, RDC, Emacs, X11, Eclipse)&lt;/appendix&gt;   &lt;identifier&gt;remap.copy_paste_winstyle_no_term&lt;/identifier&gt;   &lt;not&gt;EMACS, TERMINAL, VIRTUALMACHINE, REMOTEDESKTOPCONNECTION, X11, ECLIPSE&lt;/not&gt;   &lt;autogen&gt;--KeyToKey-- KeyCode::C, VK_CONTROL, KeyCode::C, ModifierFlag::COMMAND_L&lt;/autogen&gt;   &lt;autogen&gt;--KeyToKey-- KeyCode::V, VK_CONTROL, KeyCode::V, ModifierFlag::COMMAND_L&lt;/autogen&gt;   &lt;autogen&gt;--KeyToKey-- KeyCode::X, VK_CONTROL, KeyCode::X, ModifierFlag::COMMAND_L&lt;/autogen&gt; &lt;/item&gt; /code/pre  <answer192741> Another option would be to use BetterTouchTool.br It is pretty straightforward to use, and you can set it up to trigger any action from a keyboard shortcut: img src="https://i.stack.imgur.com/kGs6O.png" alt="BetterTouchTool screenshot"  However, by doing this, CTRL+C or CTRL+X no longer works as expected inside the terminal. But you can disable BTT for Terminal completely to handle this case.  <answer252764> You can install and configue Karabiner app with the following configuration of codeprivate.xml/code file (edit in emMisc/em tab):  precode&lt;?xml version="1.0"?&gt; &lt;root&gt;   &lt;item&gt;     &lt;name&gt;Copy with Ctrl-C&lt;/name&gt;     &lt;identifier&gt;private.use_ctrl_c_for_copy&lt;/identifier&gt;     &lt;autogen&gt;         __KeyToKey__         KeyCode::C, ModifierFlag::CONTROL_L,         KeyCode::C, ModifierFlag::COMMAND_L     &lt;/autogen&gt;   &lt;/item&gt;   &lt;item&gt;     &lt;name&gt;Cut with Ctrl-X&lt;/name&gt;     &lt;identifier&gt;private.use_ctrl_x_for_cut&lt;/identifier&gt;     &lt;autogen&gt;         __KeyToKey__         KeyCode::X, ModifierFlag::CONTROL_L,         KeyCode::X, ModifierFlag::COMMAND_L     &lt;/autogen&gt;   &lt;/item&gt;   &lt;item&gt;     &lt;name&gt;Paste with Ctrl-V&lt;/name&gt;     &lt;identifier&gt;private.use_ctrl_v_for_paste&lt;/identifier&gt;     &lt;autogen&gt;         __KeyToKey__         KeyCode::V, ModifierFlag::CONTROL_L,         KeyCode::V, ModifierFlag::COMMAND_L     &lt;/autogen&gt;   &lt;/item&gt; &lt;/root&gt; /code/pre  and enable newly created item after reloading the file in the emChange Key/em tab. 