How do I grant irrevocable privacy from user with sudo access? <body> In Unix, any user with sudo access can act as any other user using codesudo su/code. This invalidates any imagined privacy of local files for all other users of the same Mac. Is there any (preferably OS-level) way to work around this and give users of a multi-user Mac privacy from a potentially snooping administrator?  Edit: In my further testing it seems at least Keychain is blocked for the administrator using codesudo su/code. Using codesecurity/code I could see the metadata -- i.e. what websites there were passwords for and titles of secure notes -- but not the contents themselves. And even if I as administrator reset the account password, the login keychain still used the old password. Also of interest, opening GUI apps using codeopen/code will try to open them for the actual user(in their GUI context, and only if it exists), not in the GUI context of the administrator.  Edit2: To get into the right frame of mind, imagine a family with one Mac. The kids have been learning about root access and are asking how they can be sure Mom &amp; Dad can't snoop on their files. How do Mom &amp; Dad avoid buying one Mac per kid?  <answer209505> Basically all files stored locally are accessible by an admin user (or any user who can run a root shell). This also includes locally stored/cached files held in Dropbox, Google Drive, iCloud etc.   If a user wants to prevent an admin looking at his/her file, he/her should create an encrypted DMG using Disk Utility, should not store its password in the Keychain and should take extra care to emalways/em unmount the DMG whenever he/she walks away from the computer.   <comment252640> Are you sure about that? I have never actually considered it before. <comment252647> tjt263: Just tested it after talking about it in a security class in college. Standard Unix stuff. <comment252653> Hmm, that *does* have some rather serious implications. <comment252658> I don't actually know the answer but you might like to investigate `/etc/sudoers.tmp` & `visudo`. Don't forget to check `info` & `man`. You may need root access. <comment252680> There is no way. They are `root` at that point. What you can do, if you're the administrator, is only enable `sudo` for specific actions for specific users instead of giving them full `sudo` access. <comment252704> See my edit. It is actually possible to keep secrets from a user with sudo access(provided they don't use that access to install keyloggers etc). As you can see from my update anything in e.g. Google Docs should be safe, while local files are not. <comment252714> @ErikVesteraas. Locally, maybe. What about Google employees with `root` access on their servers? <comment252715> That's not at all what we are talking about here. You don't have a Unix user account at Google anyway. Added a context description to the question. <comment252717> Not a very user friendly solution, but the best one I have found so far. Though, why not store the password in the keychain? As mentioned I have not managed to read the actual passwords as an admin user(without the keychain password), and it makes things at least a little better. <comment252719> Security and user friendliness are usually at opposite ends of a spectrum. e.g. Windows has a good security model but to make it easy to use the defaults are set to be not that secure <comment252728> Not using Keychain may be overly paranoid, agreed :-)