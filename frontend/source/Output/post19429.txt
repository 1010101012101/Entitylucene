Apple-provided software to measure or estimate the CPU load associated with Core Storage <body> With Mac OS X 10.7 (Build 11A411) alone, or with Xcode 4.1:   h1Q: is there a way to accurately measure, or at least estimate the CPU load associated with Core Storage?/h1  A graphical view of load on a timeline would be useful but not essential.   I would be equally happy with useful results from something run at the command line.   h2Distinguishing this question from others/h2  Popularly-referenced (and well written) sources such as Mac OS X 10.7 Lion: the Ars Technica review (page 13) (2011-07-20) discuss uses of the CPU in ways that are reassuring, for example:     … Whole disk encryption takes advantage of this nearly omnipresent CPU cycle glut to sneak in the tiny chunks of work it requires to encrypt and decrypt data from the disk. Apple also leverages the special-purpose AES instructions and hardware on Intel's newest CPUs, further reducing the CPU overhead. The end result is that regular users will be hard-pressed to notice any reduction in performance with encryption enabled. …   In AnandTech — Back to the Mac: OS X 10.7 Lion Review (page 18) (2011-07-20) there's benchmarking and performance, and screenshots of a CPU graph in Activity Monitor, but those graphs are too broad for this question: any number of things could contribute to peaks of activity. Another set of benchmarks: Filevault 2 Benchmarks : Max Cho (2011-07-22). And so on.   In this question I am:   ul liless interested in benchmarks, less interested in performance. /li /ul  More interested in:   ul liCore Storage-related strongload on CPU that is, I suspect, not presented by Activity Monitor/strong. /li /ul  h2Possible relationships to other questions/h2  Not limited to Ask Different, some users of Lion observe occasions when running of fans to cool the CPU is inexplicably high for the detectable load on CPU.   An answer to this question might help us to assist with questions elsewhere. Currently on my radar:   ul liWhat variable in the operating system determines the fans in OS X?/li /ul  h2Use cases/h2  I would probably begin with measurements during:   ol liforward conversion with passphrase encryption/li liforward conversion without encryption/li libackward conversion with decryption/li libackward conversion without decryption./li /ol  (Around this time — less than two weeks since Lion was released — forward conversion may be most commonly encountered after beginning FileVault 2 encryption of a startup volume, or after beginning Time Machine encryption of a backup volume, but there can be many other applications of Core Storage.)   h2Notes/h2  Apple's manual page (not yet published) for corestoraged(1) offers the following description:      strongcorestoraged/strong manages CoreStorage volumes.  It is invoked by launchd(8) when a CoreStorage volume needs management.   — so whilst corestoraged appears in Activity Monitor, CPU load for that process alone is probably not an indicator of everyday (non-management) uses of Core Storage.   There's the kernel extension, code/System/Library/Extensions/CoreStorage.kext/code but currently in Apple's Kernel Extension Programming Topics there's only one reference to CPU and honestly, I lack the skills to interpret most documentation for developers.   A 2011-07-22 post Re: [Fed-Talk] Lion FileVault (highlights) draws attention to codekernel_task/code but as far as I recall, that process has not been noticeable to me whenever my CPU is hot without explanation.   Not ruling out the possibility of greater attention to codekernel_task/code … an answer to a different question led me to experiment with fs_usage but it seems not applicable to pid 0.   Thank you!  <answer20092> codeiotop/code would be the first place to go if Activity Monitor wasn't getting you an answer. It uses dtrace instead of the activitymonitord and has far superior probing skills without the "needing to learn DTrace" part.  Instruments would be my second choice but it has so many presets, it might be some probing until someone answers with an easy 1, 2, 3 to reveal the specific workload of FileVault 2.  <comment21404> Following [a hint in Ask Different Chat](http://chat.stackexchange.com/transcript/message/1494854#1494854) I searched Stack Exchange and Super User. No clearly matching questions or answers were found. <comment21663> This is out of my depth, but have you looked into [dtrace](http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/dtrace.1.html)? It seems designed to capture the information you're looking for. <comment21701> I'm familiar with [opensnoop](http://developer.apple.com/library/mac/#DOCUMENTATION/Darwin/Reference/ManPages/man1/opensnoop.1m.html) use of dtrace, but I suspect that opensnoop can not work at the required level(s). Learning more about dtrace itself is probably out of my depth at the moment, without certainty that I'm barking up the right tree(s). However: if someone can come up with a dtrace (or related) command that will help us to measure, that could inspire me to focus my learning … <comment22205> Thanks. A day or so ago I did toy briefly with Instruments. CPU System Trace template, without knowing whether it's appropriate. That 1, 2, 3 *is* what I'm hoping for. OTOH maybe I simply haven't paid close enough attention to Activity Monitor (`kernel_task` ?) at the appropriate times. Off-topic, since you mentioned Darwin before joining me here: http://chat.stackexchange.com/transcript/message/1534196#1534196 ;-)