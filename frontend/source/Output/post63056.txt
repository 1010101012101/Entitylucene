Can Applescript be used to automate a screen recording session on OS X? <body> I need to accomplish the following tasks from a script:  ol liInitiate a screen recording (with system audio)./li liAfter a set delay, stop the recording./li liSave out to a file./li liClose the recording./li /ol  I've tried a few different approaches here and ran into roadblocks. One thing I've tried for example was a QuickTime script found here.  precodetell application "QuickTime Player"     set newScreenRecording to new screen recording     tell newScreenRecording         start         delay 10         stop     end tell     set newDoc to last item of (documents whose name contains "Untitled")     set f to "" &amp; (path to desktop) &amp; "quicktimeFile"     export newDoc in f using settings preset "Quicktime Movie" end tell /code/pre  This script doesn't error, but it doesn't save anything either.   In the past I've used iShowU HD, but I've ran into significant performance issues there which have caused me to go back to the drawing board.   I'm willing to pay for a third-party application provided that it meets my requirements, so feel free to suggest anything that could get the job done.  Running OS X 10.8 Mountain Lion.   <answer63074> Try this script:  precodetell application "QuickTime Player"     set newScreenRecording to new screen recording     tell newScreenRecording         start         delay 3         stop     end tell     tell last item of documents         close     end tell end tell /code/pre  It will make a new recording for 3 seconds (edit the codedelay 3/code line to change the length), which gets automatically saved in the emMovies/em directory of your Home directory, then closes the recording window.  If you want to automatically export to a different format, you can do that by adding the line codeexport in ("" &amp; (path to desktop) &amp; "quicktimeFile.m4v") using settings preset "480p"/code before the codeclose/code line. The presets you can choose from are defined in the strongFile  Export/strong dialog:  img src="https://i.stack.imgur.com/UV0sO.png" alt="export options"  Check the actual dialog for further details on the presets (note that they are "up to" the resolution listed - it will fit into the horizontal pixels available, so "480p" gives you 640x400 for a 16:10 recording). As far as I know, you can't make custom presets.  If you want to capture your system sounds, and not mic/line-in audio, check out this question: Can I get system sound along with QuickTime Player screen recording?  For the curious, there are a couple notes about why the original script doesn't work and QuickTime Player's AppleScript peculiarities:  ul liThe codeset newDoc […]/code line tries to grab the most recent document with the string "Untitled" to account for the codenewScreenRecording/code reference becoming invalid once the recording is stopped (which is probably a poor design decision, but oh well). However QuickTime Player under Lion (and possibly Snow Leopard) auto-saves screen recordings as "Screen Recording", "Screen Recording 2", etc., so it was finding no documents. Having it grab just the most recent document solves this, and future proofs it to a degree./li liThe codeexport/code line references a preset that no longer exists (or has been renamed). Unfortunately neither QuickTime nor AppleScript gives any errors about this, it simply fails silently (more poor design)./li liThe AppleScript dictionary for QuickTime Player lists a codesave/code action, but I couldn't get it working—I suspect the functionality was killed, but the dictionary entry wasn't removed. You'll note that there's no Save functionality in the GUI, only export (and auto-save). So if you want to change the save location without exporting a new file, you'll have to get the file location, then move it through the Finder./li /ul  <answer82805> I recently wrote a script which does not depend on the version of QuickTime at all.  It just simulates actual user actions to save/export the movie. It takes as input the directory you want the movie file to be exported to, and the number of seconds you want to recording to go on for.  Check out the script (and the associated blog post) at http://www.neerajkumar.net/blog/2013/02/16/script-to-record-screen-on-mac-osx-and-save-on-disk/  <comment72867> Ok, I was able to get the export line to work thanks to your insight. Now I have another issue: It looks like Applescript does not wait for the `export` line to complete before moving on to the next line. If I close the recording window before the export is finished, it fails. So I guess somehow I need to figure out how long an export will take, delay that amount, then close the window. <comment72873> That's odd, not the behaviour I get. When I run the script (with the `export` after `tell last item of documents` and before `close`), I get a separate export window opening, running the export, then the recording window closes. But it doesn't interrupt the export process. This is using Quicktime X on Lion. <comment72875> Might be because I'm on 10.8 then (should have put that in the description, my bad). I could hard code a delay, but that feels dirty to me. Some videos could take a lot longer to export than others, so I'd be playing a guessing game. <comment72876> Another 10.8 note: My screen recordings _don't_ automatically get saved under `~/Movies`. <comment72893> Ah okay. I unfortunately don't have a 10.8 install handy to test things on. It's possible that the `save` command might work for you (it doesn't appear to do anything on 10.7). You could also just remove the close command and close it manually once the encode is done. <comment72903> The save button didn't appear to do anything for me either. You're probably correct about the functionality being removed. Unfortunately I cannot close the window manually, the entire process from end to end has to be automated. <comment72919> Does it have to be entirely AppleScript? I see that Automator has a QT encode action. Not sure what results you might get, but you could try using Automator with some of the Applescript as actions within (i.e. do the recording with an Applescript action, then use the Automator encode option, then finally close it with another Applescript). <comment72920> It doesn't necessarily have to be applescript, it just has to be something that can be called from code. My application is written in ruby and makes a system call to `/usr/bin/osascript` whenever I need to access the applescript layer. <comment95492> Looks nice, I'll give it a try. I ended up going back to iShowU HD because it allows me to crop to a specific area of the screen for my recording. Do you know if QuickTime allows this? <comment95533> Yes quicktime does allow you to do that. There is an export movie method where you can select the area you want to export. <comment364913> Site is no longer available.