Change "ignore ownership on this volume" from the command line for Mac OS X volume <body> em(This question is a spin-off of another question I asked on this site.)/em  h2New images always ignore owner/group/h2  When creating a new disk image from Disk Utility it is automatically mounted. If you then select the volume in Finder and press Cmd-I (for the info window) you will see this at the bottom of the window:  img src="https://i.stack.imgur.com/U7abf.png" alt="enter image description here"  This means that file owners and groups will be ignored on this volume. This is very convenient for external drives being shared between machines with different user accounts on them. For a backup volume it is not a good idea as you would like to retain the owner/group information for the files backed up.  h2Change this from Finder/h2  To change this, simply uncheck the checkbox and it will remembered after you eject and remount the image.  h2Change from command line (Terminal)/h2  Instead of mounting the image from Finder, you can also mount it from the command line using this command (assuming the image is called codetestimage.sparsebundle/code):  precode$ hdiutil attach testimage.sparsebundle/ /code/pre  Still, owners are ignored on the volume. Adding the code-owners on/code option is (almost) equivalent to unchecking the checkbox in the image above:  precode$ hdiutil attach -owners on testimage.sparsebundle/ /code/pre  However, after unmounting and remounting the volume from Finder (or from the command line without the code-owners on/code option), the checkbox is checked again.  Does anybody know how to make this change persistent using a command-line call?  <answer53243> You use codediskutil/code for that. See codediskutil(1)/code under strongenableOwnership/strong and strongdisableOwnership/strong. Note that this setting is specific to a particular operating system installation, since it is stored in code/var/db/volinfo.database/code. I.e., if you copy the disk image to a new computer the setting won't persist, but it does persist across reboots, mounts, umounts, etc. all on a single computer.  Use codediskutil/code to find the identifier, then change the option:  precode$ diskutil list /dev/disk2    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:                            Disk Image             *41.0 MB    disk2 $ sudo diskutil enableOwnership disk2 File system user/group ownership enabled /code/pre  <answer205365> Use codevsdbutil/code to set it for a path instead of a physical drive:  precodevsdbutil -a /Volume/Diskname /code/pre  Although the codeman/code page suggests it is deprecated, the codeman/code page for codediskutil/code still refers to it and the mechanism appears to be based on Volume codeUUIDs/code not on physical disk/slice ids.  <answer229532> I found that both answers worked for enabling ownership in way that is remembered:  precodesudo diskutil enableOwnership &lt;diskname&gt;s&lt;slicenum&gt; /code/pre  And:  precodevsdbutil -a /Volume/&lt;volname&gt; /code/pre  However, the opposite is not true, at least on OS X 10.11.3:  precodesudo diskutil disableOwnership &lt;diskname&gt;s&lt;slicenum&gt; /code/pre  And:  precodevsdbutil -d /Volume/&lt;volname&gt; /code/pre  Both temporarily change the state, but ownership is re-enabled next time I mount the volume. This appears to be a bug in the operating system. Fortunately I found a solution that works. Eject all external disks that you want to disable ownership for. Then delete the appropriate database using:  precodesudo rm /var/db/volinfo.database /code/pre  <comment80744> I have found that I must re-invoke `diskutil enableOwnership` between mounts, or else I cannot execute binaries and scripts on the mounted volume. <comment83365> This isn't completely accurate - diskutil is going to tell you that you need to specify a disk with a mount point, meaning that you have to point it to the slice for the volume you want to rename. The correct syntax (assuming slice 2 of disk 2) would be: sudo diskutil enableOwnership /dev/disk2s2 If you run: sudo diskutil list you'll be able to see all the disk information, and find the correct disk & slice for your volume.