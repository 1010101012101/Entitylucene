How do I install "R" on OS X using homebrew? <body> How do I install "R" on OS X? Ideally using Homebrew?  There seems to be very little information online.  <answer121402> strongInstall Homebrew (if needed)/strong  precoderuby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" /code/pre  strongInstall R/strong  precodebrew tap homebrew/science brew install r /code/pre  <answer121410> Assuming you strongjust want to install “R” on OS X/strong and are not interested in homebrew:  Just download the binary from CRAN https://cloud.r-project.org/  ol liGo to http://www.r-project.org//li liClick CRAN/li liSelect a mirror/li liClick "download R for (Mac) OS X"/li liDownload and install the latest pkg binary/li /ol  See also the R for Mac OSX FAQ that includes information on installation.  Note also the comments below suggesting that homebrew is often not the best option.  <answer121411> You can download R for Mac OS X simply from here : http://cran.cnr.berkeley.edu  Hit the button : codeDownload R for (Mac) OS X/code  Install the PKG file that came in the download.  This website might help to go ahead and download home-brew / install home brew as well.  https://github.com/Homebrew/homebrew/wiki/Installation   <answer121705> I'm a fan of RStudio. It's an IDE that wraps R, makes visualization, organization, debugging, and other tasks emmuch/em easier. Or, you can just use it as if it were a simple install of R. There's a Mac binary available from that website.  <answer122190> 1.- http://cran.r-project.org/bin/macosx/ and download in Mac-GUI-1.62.tar.gz. 2.- INSTALL  You need R built and installed as a framework: see the 'R Installation and Administration Manual'.  A CRAN binary install of R suffices.  h1 Building R.app/h1  Only Mac OS X 10.6 and higher are supported, and only 64-bit R. The project is called "R.xcodeproj" and requires Xcode 3.2 or higher.  The project can be built by selecting "R" target and "Build" inside the XCode GUI.  Supported configurations are:   SnowLeopard64 (release, current OS X, default)   Lion64 (release, OS X 10.7+, Xcode 4.5+)   MLion64 (release, OS X 10.8+, Xcode 4.5+)   Debug (with debugging output, current OS X)  The configurations differ mainly in the SDK selected (recent versions of Xcode only support the current and immediately previous SDKs, so for example in Mar 2013 the default would build for 10.8, but configuration Lion64 allows building for = 10.7).  To build the project from the command line in the Mac-GUI directory use something like:     xcodebuild -target R -configuration SnowLeopard64  To build the R for Mac OS X FAQ use either     xcodebuild -target Docs or manually in docs folder     makeinfo -D UseExternalXrefs --html --force --no-split RMacOSX-FAQ.texi  The resulting html FAQ file will be found in Mac-GUI/docs directory.  Note about binary compatibility:  The general rules for R apply, that is binary compatibility is given only if the major and minor version numbers match - only the patch level may differ. When using the X.Y.Z version form it means that X.Y must match. For example R-GUIs linked to 3.0.x and 3.1.x are NOT binary compatible.  The compiled R.app is usually bound to a specific version, such as 3.0.1. If you upgrade R removing the older version, let's say using R.app built for 3.0.0 and updating R to 3.0.1, you may need to fix the absolute path to libR.dylib. The nightly builds use a generic path /Library/Frameworks/R.framework/Resources/lib/libR.dylib which points to the latest version of R, but this is done by an additional call to install_name_tool in the building script.  Release versions of the GUI use a fixed-version path as they come with a specific R version (in fact the default behavior doesn't depends on the GUI, but on libR.dylib - changing its own reference entry changes the way R.app is linked).  <answer125848> After following Matt Burns' answer, you can then install the R.app GUI via codebrew/code:  precode$ brew install r-gui $ brew linkapps r-gui  # creates symlinks in /Applications $ open /Applications/R.app  # or via Applications menu /code/pre  <answer207234> I stumbled onto this trying to install R in general and I ended up using MacPorts. If your using MacPorts, try  precodesudo port install R /code/pre  Taken from http://johnlaudun.org/20140721-install-r-with-macports/  <comment141502> I also ran "brew install gfortran" beforehand, but I don't think it was necessary. If someone could please confirm... <comment141503> Indeed, Homebrew should automatically install all required dependencies. <comment141614> With this method are you able to install packages from CRAN? I was unable to get packages from CRAN to install correctly when I installed R using brew. When I switched to a copy of R downloaded directly from CRAN, my problems went away. <comment177221> To use Rstudio, you first have to install R… <comment191632> Warning: r installed this way [may not cooperate with RStudio](http://stackoverflow.com/questions/27659520/). <comment207562> I didn't see gfortran in the dependencies it installs with homebrew. It's not technically a required dependency anyway. It's only necessary if you install packages that require it. <comment221655> Depends on `Caskroom/cask/xquartz` (not automatic) <comment228658> Installing Yosemite (re)moved my old R, and I wanted it back. I initially thought to install R using brew, but after following the instructions on this page I ended up with a trainwreck that didn't work correctly and took a while to remove. Not to mention that it ran for hours overnight installing gcc and lots of other things I didn't need or want. After clearing up and hoping "brew doctor" was right, I when to CRAN and downloaded the installer and within 5 minutes had a fully working R with no fuss at all. All I had to do was re-source my terminal. I should have used CRAN first. <comment243996> Thanks. One thing, though: You might want to edit the last line in your script so that it reads `brew linkapps r-gui` instead of merely `brew linkapps`. <comment270876> Was your old R under Yosemite installed using brew as well? <comment277611> +25: ***Just install via r-project.org package.*** I am a `brew` fan, but it was NOT the right way to install R in my case because of `gcc` dependency catastrophe; save yourself. <comment295884> +1 for your "+25" -- if you're going to get serious with R and take advantage of all it has to offer, choose this answer. <comment314343> If only there were a brew cask for this! <comment318475> this failed miserably for me. Ended up just following this tutorial on youtube https://www.youtube.com/watch?v=Tnhp65hxtZc <comment354726> @PiotrMigdal Currently (April 2017) it works with RStudio again. <comment356847> Note people finding this answer who just want to install R the normal way should see the second [answer](https://apple.stackexchange.com/a/121410/11747) here that mentions how to get the standard installation files. <comment369683> what's it with gcc.. i think i ran into trouble trying to install Octave some time.. does't homebrew ever try to solve these issues <comment369684> I just installed r via brew with no occasion. <comment369685> Thanks @Xiang. i have no occasion installing r via brew so far. what do you say about installing packages as of today? <comment371825> Where is it after this? I'm trying to run R by typing "R" on the command line and it just tells me -bash: R: command not found