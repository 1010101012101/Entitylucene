What steps are needed to create a new user from the command line? <body> What commands (or script) can create a fully functional user account on Mountain Lion, running only from the command line via terminal or ssh.  It looks like an existing pair of answers might work, but I wondered if there were a short script or tool for creating fully functional user accounts on Mountain Lion?  <answer84039> Here is a shell script I wrote at work to handle this as part of the NetInstall process (creating a local administrator account automatically during imaging process).  precode#!/bin/sh . /etc/rc.common dscl . create /Users/administrator dscl . create /Users/administrator RealName "Administrator Account" dscl . create /Users/administrator hint "Password Hint" dscl . create /Users/administrator picture "/Path/To/Picture.png" dscl . passwd /Users/administrator thisistheaccountpassword dscl . create /Users/administrator UniqueID 501 dscl . create /Users/administrator PrimaryGroupID 80 dscl . create /Users/administrator UserShell /bin/bash dscl . create /Users/administrator NFSHomeDirectory /Users/administrator cp -R /System/Library/User\ Template/English.lproj /Users/administrator chown -R administrator:staff /Users/administrator /code/pre  Some notes to mention:  ul liI have this saved as an executable ".sh" file./li liSince it executes during NetInstall it runs as root, and needs to run as root to work properly. You can also subtract the first two lines, add a "sudo" to the beginning of each subsequent line, and manually run these as individual commands in Terminal./li liModify UniqueID from 501 to a number that you will know is safe on all systems (501 is taken by the first account created on a Mac, generally something higher like 550 will probably be safe, depending on how many users you have on your system)./li liPrimaryGroupID of 80 creates an Admin user. Change to PrimaryGroupID of 20 to create a Standard user./li liI've imaged well over 50 Macs this way with no issues. I use this account to run commands via SSH, to push out patches via ARD and to do local desk-side administration./li /ul  <answer97080> I have some updates on the above answer.  precodedscl / -append /Groups/admin GroupMembership newUserName /code/pre  This command can used for making the user have Administrative access. If this command is not provided the user will automatically will be set as standard user.  precodedscl . create /Users/newUserName PrimaryGroupID 80 /code/pre  This sets user's primary group id. 80 means strongadmin/strong  and 20 means strongstaff/strong. And setting to 20 will not make the user standard. Unless the first command is not mentioned.  <answer97081> To further automate this, the following line can be used to get the next "available" user id if you are running on a mac which already has users set up.  precodeLastID=`dscl . -list /Users UniqueID | awk '{print $2}' | sort -n | tail -1`  NextID=$((LastID + 1)) /code/pre  Then, the corresponding line in bispymusic's answer above could be changed:  precode dscl . create /Users/administrator UniqueID $NextID /code/pre  <comment96834> Looks promising - will test it out soon! <comment112466> The problem I seem to have when I try and adapt this script to create regular users by passing variables to the script is that everything except for the last line works just fine. That is, dscl creates the user, and when I use dscl . list /users, the user shows up just fine, but chown does not recognize the user, and since I can't change the home directory permissions properly, it won't let that user log in. Any ideas? <comment112751> I wish I could. One of my weaknesses when it comes to shell scripting is that I never learned the usage of variables very well, mostly because I haven't actually needed to use them for anything at this point in my job. Maybe @bmike or someone else might be able to offer advice. <comment113905> @HackintoshCoat can you post your script?  In your command, you've typed lowercase "/users", when it is in fact "/Users".  I doubt that's the issue with your script; but, fresh eyes checking it might be able to find the problem fairly quickly.  I've got a similar script that actually sets up multiple users, so the usage of variables itself is not a problem. <comment119052> To clarify, either of these commands will accomplish the same thing? <comment121788> I prefer the first command, appending to **/Groups/admin** . <comment139944> Instead of the last two lines (`cp -R ...`; `chown -R ...`), you can use the command `createhomedir -u administrator`. `createhomedir` has a man page, too. <comment169480> Instead of . you can use "/LDAPv3/127.0.0.1" as the data source. An example: dscl "/LDAPv3/127.0.0.1" -list /Users UniqueID. Took me a couple of hours to figure it out ...