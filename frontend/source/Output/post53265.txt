Need menu bar app to show output of Terminal command every 60s <body> I need a menu-bar app* which will show me the output of a terminal command, and run that Terminal command every 60s or so.  Or I need a menu-bar app which will read the contents of a file, and update whenever that file is updated.  (The output would be no more than 3 or 4 digits)  Are there any such apps?   * neither the Dock nor the Desktop are workable alternatives. Needs to be the menu bar.  strongUpdate 2014-06-16:/strong The answer from Jun 9 '12 at 2:15 did not end up working for me after all, so I'm still looking for a solution.  <answer53271> precode#!/usr/bin/env ruby  require "osx/cocoa" include OSX  app = NSApplication.sharedApplication  statusitem = NSStatusBar.systemStatusBar().statusItemWithLength(NSVariableStatusItemLength) while true     statusitem.setTitle(rand(999))     sleep 1 end app.run /code/pre  (If anyone who actually knows Cocoa wants to improve this, feel free to edit.) I more or less just copied the script from taw's blog: Personal experience points and OSX menulets, which was mentioned in display - Is there a way to have AppleScript output displayed in the menubar? - Apple.  <answer135265> Here is the solution in python.br Install rumps framework (linked repository has patch for OS X 10.9.3)br codesudo pip install git+https://github.com/tito/rumps/code  You might need to adjust code$PYTHONPATH/code to include pyobjc (Foundation)br codeexport PYTHONPATH=/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/code  Adjust the following code for your needs:  precode#!/usr/bin/env python import rumps import os import threading   class AwesomeStatusBarApp(rumps.App):     def __init__(self):         super(AwesomeStatusBarApp, self).__init__("Awesome App", "Title")         tail(self)   def tail(self):     threading.Timer(5, tail, [self, ]).start()     self.title = os.popen("tail -1 /var/log/system.log").read()[0:-1][0:50]  AwesomeStatusBarApp().run() /code/pre  Do not forget to limit the length of the string (code[0:50]/code) (or OS X will remove it in favor of menus if they both don't fit), and get rid of the newline in the end (code[0:-1]/code)  img src="https://imgur.com/FVq0DGv.png" alt="enter image description here"  <answer180363> I was searching for such tool many times until I have implemented that for my self: http://shellwrangler.com. No ads, it’s free and you can build anything you like.  <answer181520> I finally found what I've been looking for. In fact, it’s much better than what I was hoping for:  h2TextBar/h2  ul liConfigure TextBar to run multiple scripts/commands/etc and display the results in your menubar. /li liClick the TextBar item to add the text to your clipboard. /li liEnable/disable each item individually. /li liConfigure how often you want each item to be updated./li liadd an icon for each menubar item (or none)/li /ul  I’ve been using this for the past week or so and it’s great.  $3. Demo available at http://www.richsomerfield.com/apps/  <answer230169> There is another recent open source alternative called BitBar (MIT License), which appears very similar to "TextBar" and "ShellWrangler" and amazes through its simplicity.  You can execute scripts at any time interval that is encoded in the script file name (e.g. my_script.60s.py) and it can execute any script you can also execute in your Terminal.  <comment60911> See GeekTool! http://projects.tynsoe.org/en/geektool/ <comment60914> GeekTool = Desktop, not menu bar. <comment60916> You can position output wherever you want it, including the menubar. 3 or 4 digits, small font, two lines, could fit left of apple or right of spotlight icons. <comment60947> Wow, that's pretty awesome. For some reason it works great with `rand` but doesn't update my command (I get the output of the first time it runs, but it never changes after that), but it's a great starting point. Makes me wish I knew Ruby! <comment60993> @TJLuoma The original script used an NSTimer to update the status item, but I couldn't figure it out. (If someone can, edits are still welcome.) <comment61562> I want this information to be visible by glancing at the menu bar, not by me having to go into the menu bar to look at it. Like a clock or Disk Alarm, <comment61568> Yup. GeekTool output floats on top of everything. I think the ruby-driven solution is better, but this would work if your output is not very large. If you need more space add a menu item you don't want to see (volume control?) and have the GeekTool output cover it with a non-transparent background. <comment160372> Thanks! This shows an app in the dock as well as the menu bar. Any idea how to have it show only in the menu bar? <comment160588> Which version of mac OS are you running ? <comment160590> 10.9.3 Mavericks <comment160846> You can use something like [Platypus](https://github.com/sveinbjornt/Platypus) to create an app from your script and adjust it's .plist to not show in dock. <comment161312> Thanks! I was hoping to find something a little more… user friendly? Plug + play? Something. But this is 100% better than what I had, and I appreciate the time and effort to answer it. <comment164105> jaredks/rumps https://github.com/jaredks/rumps is one of the solutions I had seen before but couldn't remember.