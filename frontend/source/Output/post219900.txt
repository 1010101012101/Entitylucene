How do I tell the MacPorts Python to look in /opt/local/lib for dylibs? <body> I'm running a Python script with the MacPorts version of Python (2.7), i.e, I've run:  precodeport select --set python python27 /code/pre  However, when I run my script, it can't find a dylib in code/opt/local/lib/code:  precodeImportError: dlopen(/opt/local/lib/python2.7/site-packages/grgsm/_grgsm_swig.so, 2): Library not loaded: libgnuradio-grgsm.dylib Referenced from: /opt/local/lib/python2.7/site-packages/grgsm/_grgsm_swig.so Reason: image not found /code/pre  The dylib in question resides here:  precode-rwxr-xr-x  1 root  admin    816036 Dec 16 11:24 /opt/local/lib/libgnuradio-grgsm.dylib /code/pre  Setting codeexport DYLIB_LIBRARY_PATH=/opt/local/lib//code doesn't help in this case (nor should it really be necessary for each user on the system to set that environment variable). I've already run codeupdate_dyld_shared_cache/code.  The Python module in question resides in code/opt/local/lib/python2.7/site-packages/code so I made a symlink to it in code/opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages//code.  codeotool -L/code on the loading code.so/code reports:  precodeotool -L /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/grgsm/_grgsm_swig.so  /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/grgsm/_grgsm_swig.so: libgnuradio-grgsm.dylib (compatibility version 0.0.0, current version 0.0.0) /opt/local/lib/libboost_filesystem-mt.dylib (compatibility version 0.0.0, current version 0.0.0) /opt/local/lib/libboost_system-mt.dylib (compatibility version 0.0.0, current version 0.0.0) /opt/local/lib/libboost_thread-mt.dylib (compatibility version 0.0.0, current version 0.0.0) /opt/local/lib/libgnuradio-runtime.3.7.8.1.dylib (compatibility version 3.7.8, current version 0.0.0) /opt/local/lib/libgnuradio-pmt.3.7.8.1.dylib (compatibility version 3.7.8, current version 0.0.0) /opt/local/lib/libvolk.1.1.1.dylib (compatibility version 1.1.1, current version 0.0.0) /usr/local/lib/libosmocore.7.dylib (compatibility version 8.0.0, current version 8.0.0) /usr/local/lib/libosmogsm.5.dylib (compatibility version 7.0.0, current version 7.0.0) /usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 120.1.0) /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1225.1.1) /code/pre  Notice that the library in question doesn't have a path.  <answer220014> Libraries are usually referenced using absolute paths on OS X, making it unnecessary to set any variables. Your codeotool -L/code output on the Python module should thus contain  precode/opt/local/lib/libgnuradio-grgsm.$version.dylib (...) /code/pre  This path is copied from what Apple calls the "shared library identification name" in a library when you link against it. That means that whatever value is in the output of codeotool -L/code on the Python module is the same value that you get by running codeotool -D/code on code/opt/local/lib/libgnuradio-grgsm.dylib/code (or just using codeotool -L/code and looking at the first line). If you do this on your machine, you will notice that it also does not contain an absolute path. That's the root cause of the issue you see.  First, this is a bug in GNU Radio, or MacPorts' packaging of GNU Radio. Please file a ticket so this can get fixed or addressed with the GNU Radio developers.  Second, there are a couple of ways to work around this issue for now:  ul liMethod A: Fix the identification name of codelibgnuradio-grgsm.dylib/code. This can be done using codeinstall_name_tool -id $correctID /opt/local/lib/libgnuradio-grgsm.dylib/code. Note that the absolute path to the unversioned dylib is likely not the correct value for this. codelibgnuradio-grgsm.dylib/code is likely a symlink to another symlink with the major version embedded. This path is the one that should be used as install name. After this change, rebuilding the Python module should solve the issue./li liMethod B: Fix the path in the load command of the Python module. Use codeinstall_name_tool -change libgnuradio-grgsm.dylib $correctID /opt/local/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/grgsm/_grgsm_swig.so/code to do this. code$correctID/code should be chosen as explained in Method A./li /ul  <comment266207> That worked. Thanks! The fault isn't MacPorts'--I compiled that specific module (grgsm) for GNU Radio. `libgnuradio-grgsm.dylib` and `site-packages/grgsm` are both built as part of building grgsm. I should probably reconfigure the cmake files for grgsm, but for now I used both method A and B that you proposed instead of rebuilding grgsm.