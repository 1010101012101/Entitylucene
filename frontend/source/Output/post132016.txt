Most efficient way to 'export' iTunes protected aac to FLAC (for personal use)? <body> What's the most efficient way to export tunes bought with iTunes that are protected aac to FLAC for playing on other music hardware (still for personal use)?  2 methods I can think of so far are:  ol limake a playlist of all the purchased songs in the library, rip to CD, then rip the CD to FLAC. Disadvantage: with 80+ tunes, this would require multiple CDs. But I'm assuming that titles of the tunes are recorded as CD-text, is this true?/li lisame as above but instead of ripping to CD, use SoundFlower to record the output. Disadvantage: no CDs required but will have to manually split the recording into each track and name it./li /ol  Any better ideas? Thanks.  <answer132019> Try uploading all your music to itunes match. In my experience, when you re-download it all of the protection has been removed.  <answer132105> Have you looked at xACT? I think I've been using this software for more than ten years (wow, I can't believe it), and the author is still actively developing it. Its really good stuff.  Also, AAC is lossy, and FLAC is lossless, so converting AAC to FLAC really isn't appropriate. Are you sure that your files are AAC? If the files have a suffix of .m4a, this doesn't mean that the audio necessarily is AAC, as it could also be ALAC, in which case it emwould/em be appropriate to convert from ALAC to FLAC, and xACT can help you do that. First you'd decode your files to an uncompressed format, either AIFF or WAV, then reencode to lossless flac. There is no generation loss with this method.  img src="https://i.stack.imgur.com/O5HHn.jpg" alt="xACT screenshot"  <answer148335> The free solution is to use iTunes playlist to burn to CD but instead of burning to a CD, burn to a "virtual CD", having already installed the Free full-featured 15 day trial of Virtual CD-RW. iTunes will see this like any other regular drive.  Then on a Windows machine (or via BootCamp) use CueTools open source software to extract out to FLAC the audio from the .bin (helped by.cue files) that the Virtual CD-RW application generated.  Then use the playlist .m3u .txt or .xml file to rename the extracted flac files as their artist - song or use MusicBrainz Picard to fingerprint them or write a batch script to rename the files from the iTunes playlist file.  The result should be that you would have FLAC files that have the same audio fidelity when played as playing them from iTunes. Of course, the FLAC files are much larger at around 6 times the size or more than the original protected m4p files but with storage being cheaper: multi-terabyte drives large capacity micro SD cards, this is not so much as an issue compared to when lossy compressed audio files became popular for their smaller size. In any case, my only motivation is for personal use and freedom to play my purchased music on any of my own devices, independent of application, emnot/em to illegally distribute.  <comment155155> +1 @Andrew, never thought of that, though the ~25$or pounds annual cost of iTunes match (which I'd have to pay for at least once to do what you are suggesting) might be something to ponder over. I'll look into it and see if I find I get the same outcome as you. <comment155159> Check into Apple's refund policy. If it is lenient then just upload, download, get refund. I also think (and i may be thinking of google music here) that you can store a small amount for free. <comment155162> Thanks Andrew again, 25 quid or bucks isn't too bad if it vastly speeds up the process of what I'm trying to do. I'm perhaps willing to pay it if I get files that I can play anywhere and if it saves me lots of steps and naming up the files etc. <comment155217> Keep in mind itunes match maxes out at 256 bit, if your source is higher than that then  you'll be losing quailty <comment155289> thanks @chillin I'll take a closer look - my files are purchases iTunes tunes, and are I'm pretty sure they are aac and not the lossless ALAC. The reason why I want to make FLAC copies of them is that this would preserve the original fidelity, rather than making copies of the originals in another lossy format such as aac or mp3, which would not be the exact fidelity of the original when it is played like FLAC is, copies in such lossy formats would have gone through another generation of conversion and introduced artifacts. <comment155290> thanks @dstarh - that would be fine if the tunes offered by iTunes match would be its own version of the tune, rather than making an unprotected copy of the original in lossy format, thus introducing artifacts. So in summary, iTunes match looks like a go-er, still. <comment155401> @therobyouknow Its possible you can just convert using iTunes and Apple Lossless to achieve the same thing. Also, there is [AppleMacSoft](http://tinyurl.com/p4rtllj) and [FairGame](http://tinyurl.com/5acmlb) DRM converters to help you accomplish your goal (the latter is free). <comment174754> Thanks but I won't install AppleMacSoft - there is no detail about 1) the company (raising concerns about product quality) and 2) how the DRM by-passing works. My guess is that  the DRM by-passing isn't, instead I guess they siphon off the uncompressed audio stream just before it's output. At this point, creating a new unprotected file based on this audio would mean it has gone through a further generation of compression, introducing artifacts and not the same as the compressed audio in the original protected file. They say this is legal, but compared with what exactly? <comment174755> The FairGame link looks very old (much earlier versions of OS X) and since then I think Apple have long closed the technical loopholes that FairGame exploited. Again a no go. <comment174756> Presumably @dstarh for this approach to work, once one's protected aac files (m4p) are in the iTunes Match "cloud", Apple can use the same technology that the iTunes application does to unlock these using one's iTunes account credentials, such that they can run audio fingerprinting on the audio to match it to something in the cloud. Audio fingerprinting on the compressed file directly would not work as this is to all intents and purposes another data file which can't be played.