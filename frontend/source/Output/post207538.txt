Using Terminal to truncate filenames in directory <body> I have about a thousand jpegs in a directory that have filenames such as  1300-Kazoo-Pkg.jpgbr/ 1314-Learn-to-Play-Piano-withKid.jpgbr/ 1314-Learn-to-Play-Piano.jpg  I want to shorten them to the numbers before the first hyphen.  I have tried using codefor f in *.jpg; do mv "$f" "${f/-*.}"; done/code but I can't figure out what to add to get done what I want done.  Any suggestions?  <answer207542> To preserve the filename extension in the expected way, you should instead do this:  pre class="lang-sh prettyprint-override"codefor f in *.jpg; do mv "$f" "${f/-*}.jpg"; done /code/pre  That is, use code${f/-*}.jpg/code instead of code${f/-*.}/code.  To deal with the case of multiple files that have the same prefix before the dash, you can do something like this: em[strongNote:/strong For a better version, see the strongUpdate/strong I’ve since added after this.]/em  precodei=0 for f in *.jpg; do   if [ "$(ls -l ${f/-*}* | wc -l | xargs)" -gt 1 ]; then     for g in "${f/-*}"; do       mv "$f" "$g-$((i++)).jpg"     done   else     if [[ $f == *"-"* ]]; then       mv "$f" "${f/-*}.jpg"     fi   fi done /code/pre  That will give you output like this:  pre class="lang-none prettyprint-override"code1300.jpg 1314-0.jpg 1314-1.jpg 1315-2.jpg 1315-3.jpg /code/pre  That is, a emcode-N/code/em suffix will get added, though with the limitation that this simple example just keeps incrementing the codeN/code value across the whole set of files instead of per-prefix.  Also note that you can safely re-run this script multiple times in the same directory and you’ll end up with the same expected filenames in the end (which I think is what you’d want, rather than it monkeying around further with any filenames that are already in the form you want).  hr  h3Update/h3  Here’s a better version that just appends 1-emN/em suffixes to the renamed files if it finds an existing file with the same basename or same basename+emN/em (in which case it increments by emN/em+1 and retries).    precodefor f in *.jpg; do   base=${f/-*}   if [[ -e "${base}.jpg" ]] ; then     i=1     while [[ -e "${base}-${i}.jpg" ]]; do       let i++     done     base=$base-$i   fi   mv "$f" "${base}.jpg" done /code/pre  That gives output like this:  pre class="lang-none prettyprint-override"code1300.jpg 1314-1.jpg 1314.jpg 1315-1.jpg 1315-2.jpg 1315.jpg /code/pre  <comment250364> "I want to shorten them to the numbers before the first” can you clarify what you’d like the output to be? <comment250368> Sorry, that wasn't clear. The first hyphen. <comment250369> What result do you want in the cases where you have filenames with the same prefix? One option is to just skip them. But it seems like you don’t want to do that. So, another option is to append, say, some digits, so that you end up with, e.g.,  `1314-1.jpg`, `1314-2.jpg`, etc. Is that what you want? If so, I can update my answer to show how to do that. <comment250370> Yes the `1314-1.jpg` and `1314-2.jpg` would be great! <comment250371> I responded to your comment. <comment250373> OK, gimme a minute and I’ll write that up (if somebody doesn’t beat me to it). <comment250379> So I did a quick stab at appending a `-1`, `-2`, `-3`, etc., suffix for the cases where there are dupes. Note the limitation I mention in my answer: It just keeps incrementing the suffix value across the whole set of files instead of doing it only per-suffix. I can refine it later if you want but in the mean time anybody else should feel free to either modify my answer with that refinement, or post a follow-up answer with that refinement. (I have to step out for a couple hours now but can help more this later if still needed.) <comment250380> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/29556/discussion-between-sideshowbarker-and-user1470242). <comment250381> I really appreciate the help. I don't know it to go `-1` , `-2` and start over on each set of duplicates if there is a way to just move the duplicates to another folder. <comment250383> I know this question is about a Terminal-based solution, but have you considered using [Name Mangler](http://manytricks.com/namemangler/)? Nice GUI and lots of options. <comment250446> @patrix See my updated version, which takes sort of a completely different approach. I think it’s definitely better than what I had slapped together originally.