In Mountain Lion how do I set, in one place, the PATH environment variable for all newly launched applications? <body> On Ask Different there are many questions regarding the codePATH/code environment variable and how to set it for applications launched by a shell, by spotlight or via the finder (typical questions: How to set PATH for Finder-launched applications or How to change PATH environment variable...).  Answers range from emcodesh/code startup scripts/em to emcode/etc/paths/code/em to emcode/etc/launchd.conf/code/em. Here I am after the answer for a emunified/em setting of codePATH/code for all apps under Mac OS X Mountain Lion 10.8.2.  <answer87283> After many trials with different options I conclude:  Is there a emunified way/em to set the codePATH/code for applications launched by different means (like shell script, Finder and Spotlight)? Well, yes and no:  ul liemNo/em: Setting codePATH/code in shell start up scripts (e.g. code.bashrc/code) works only for apps launched by shells./li liemNo/em: Setting codePATH/code for the current codelaunchd/code process via codelaunchctl setenv PATH &lt;...&gt;/code does not work for me at all./li listrongemYes/em: Setting codePATH/code in code/etc/launchd.conf/code (and restarting the system) will make the appropriate codePATH/code visible in  applications launched by Spotlight, Dock and Finder and subsequently (local) shells./strong /li listrongemNo/em: Remotely invoked shells do emnot/em inherit the environment./strong (See ...why do remote shells via ssh do NOT inherit the environment..) /li /ul  h3Notes for set-up of shells:/h3  ol liFor correct functioning in emlocal/em shells it is important to emswitch off/em the use of code/usr/libexec/path_helper/code, because the default paths in code/etc/paths/code might change the order of the paths in codePATH/code.**/li liTo accommodate emremote/em shells you need to re-import the codelaunchd/code environment into the shell. Use something like this in your code.bashrc/code:/li /ol  pre class="lang-sh prettyprint-override"code# the vexatious path stuff eval $(launchctl export) /code/pre  h3Unfortunate consequences of the whole issue are:/h3  ul liNo way to have these unified settings on a per user basis. (code~/.launchd.conf/code does not work.)/li liNo easy way to construct the PATH from different sources using techniques like home directory expansion et al./li /ul  <answer98077> Expanding on the previous answer, to change the path in code/etc/launchd.conf/code, you'll need to do the following.  ol liMake sure you have Administrator privileges./li liCreate a new text file with the following content, modified to fit your needs:  precodesetenv PATH /usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:/Users/YourUserName/bin /code/pre/li liSave it emin your home directory/em as codelaunchd.conf/code./li liOpen Terminal.app (or your favorite substitute) and type:  codesudo mv ~/launchd.conf /etc/code  Depending on your previous usage of the codesudo/code command, you may get a short "be careful doing what you're doing" message, but either way you'll need to enter your password. All the command does is move the file to the code/etc/code directory, which is not directly accessible when saving a file in TextEdit, for example. codesudo/code (short for "Super User DO") is used because Administrator privileges are needed to write to that directory./li liReboot your computer./li /ol  And you should be all set. Good luck!  <answer204751> You may give https://github.com/ersiner/osx-env-sync a try.  It handles strongboth command line and GUI apps/strong from a strongsingle source/strong. And it works with the emlatest version of OS X/em (Yosemite).  <comment103982> Update: Setting PATH via `/etc/launch.conf` does *not* work for shells logged into remotely via ssh (I assume because the `sshd` does not pass its environment it inherits from its parent `launchd` to the child shell.). - I will edited the answer accordingly. <comment104502> Answer updated with a solution for remote shells. <comment108863> Great answer; You can simplify sourcing of the launchd environment as follows: `eval "$(launchctl export)"`. <comment115104> Thanks for the details, but the question was *not* about ways how to modify `launchd.conf`, but rather about how all applications get the same PATH variable in a unified way. <comment115107> Right, but I originally searched for the question trying to figure out how to set the `PATH` for my GUI apps, and I figured I'd help out whichever poor souls might not know how to effect the change... <comment115206> You have a valid point here; still, I think *integrating* your information in the answer is the better option. - I think this comment thread becomes a meta discussion, so I've opened it on meta.stackoverflow as [What to do with an additional answer...](http://meta.stackexchange.com/q/192192/173882) <comment115208> actually, shouldn't this have been on meta.apple.stackexchange.com? <comment115222> Indeed, meta.apple.stackexchange.com would've been the correct place. I just didn't know that it exists... <comment115241> An easy way to edit `/etc/launchd.conf` is to just run `sudo -e /etc/launchd.conf` (if you are familiar with vi) or `EDITOR=nano sudo -e /etc/launchd.conf` (if you prefer a non-modal editor). <comment246871> Which just automates the other answer using the bit that he says does not work e.g. launchctl setenv PATH ... <comment246940> @Mark This has nothing to do with automating steps of an answer here. This one uses a Launch Agent. I suggest you give it a try. <comment248191> The accepted solution uses the `launchd` system too. Your solution has the same issues as stated in the accepted answer. <comment248204> @halloleo Have you actually tried it? And on which version of OS X?