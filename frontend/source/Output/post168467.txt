Why 2 same files have different size on NTFS? <body> I have 2 same files residing on an NTFS filesystem:  precodeRomans-MacBook-Pro:cut poma$ md5 src.mov  MD5 (src.mov) = 7d59d01e5efffe3a258eff86d8b775a0 Romans-MacBook-Pro:cut poma$ md5 copy.mov  MD5 (copy.mov) = 7d59d01e5efffe3a258eff86d8b775a0 /code/pre  According to codels/code they have same sizes and same attributes:  precodeRomans-MacBook-Pro:cut poma$ ls -l@ total 10681888 ... -rw-r--r--@ 1 poma  staff   290300838 Jan 19 13:56 copy.mov     com.apple.quarantine            22      Mac_Metadata            20  -rw-rw-rw-@ 1 poma  staff   290300838 Jan 19 13:12 src.mov     com.apple.quarantine            22      Mac_Metadata            20  /code/pre  But according to Finder and codemdls/code they have different size:  precodeRomans-MacBook-Pro:cut poma$ mdls src.mov  kMDItemFSContentChangeDate = 2015-01-19 06:12:45 +0000 kMDItemFSCreationDate      = 2015-01-05 04:54:25 +0000 kMDItemFSCreatorCode       = "" kMDItemFSFinderFlags       = 0 kMDItemFSHasCustomIcon     = 0 kMDItemFSInvisible         = 0 kMDItemFSIsExtensionHidden = 0 kMDItemFSIsStationery      = 0 kMDItemFSLabel             = 0 kMDItemFSName              = "src.mov" kMDItemFSNodeCount         = 290301124 kMDItemFSOwnerGroupID      = 99 kMDItemFSOwnerUserID       = 99 kMDItemFSSize              = 290301124 kMDItemFSTypeCode          = ""  Romans-MacBook-Pro:cut poma$ mdls copy.mov  kMDItemFSContentChangeDate = 2015-01-19 06:56:04 +0000 kMDItemFSCreationDate      = 2015-01-19 06:56:04 +0000 kMDItemFSCreatorCode       = "" kMDItemFSFinderFlags       = 0 kMDItemFSHasCustomIcon     = 0 kMDItemFSInvisible         = 0 kMDItemFSIsExtensionHidden = 0 kMDItemFSIsStationery      = 0 kMDItemFSLabel             = 0 kMDItemFSName              = "copy.mov" kMDItemFSNodeCount         = 290300838 kMDItemFSOwnerGroupID      = 99 kMDItemFSOwnerUserID       = 99 kMDItemFSSize              = 290300838 kMDItemFSTypeCode          = "" /code/pre  AFAIK resource forks should appear in codels -l@/code as codecom.apple.ResourceFork/code attribute. There is no such attribute on my file. What may be the difference between them?  strongUPDATE:/strong I didn't notice at first. Both files reside in NTFS filesystem which is accessed through Paragon NTFS driver v12.  <answer169593> This is probably due to how Paragon driver handles native NTFS compression. If I understand their docs correctly, it can un-compress on-the-fly, but cannot actually write the file back in compressed state.    From their faq page:  ol start="14" liHow does the NTFS for Mac® driver handle compressed files?br NTFS supports its own compression feature. It is impossible (without a special copy routine) to copy compressed files or directories “as is” - because after the reading step we get the uncompressed file or directory. However, if the destination folder is compressed (on an NTFS partition), then the file or folder will be compressed too./li /ol  You can confirm your suspicions from Windows, by using standard Windows tools: https://technet.microsoft.com/en-us/library/cc976811.aspxbr (Unfortunately, I haven't found any tools that can confirm it from Paragon)  <answer170164> First thing I'd try is telling Spotlight to reindex the file. Could be the metadata in Spotlight's index is just outdated (never seen this myself before, but you never know). Just run the following command to tell Spotlight to reindex the file.  precodemdimport /path/to/src.mov /code/pre  You can also run it with code-d 1/code up to code-d 4/code for varying amounts of debugging information as following.  precodemdimport -d 1 /path/to/src.mov /code/pre  If that doesn't make any difference, given the different file sizes and the fact that (according to your earlier question) Unison couldn't back up the file I'd suspect corruption in the filesystem.  I believe Paragon adds the ability to Verify and Repair NTFS volumes within Disk Utility. You could try verifying and repairing the volume, then checking the original file to see if the size has been modified. If connecting this volume to a Windows machine is a possibility you could also try running CHKDSK against it.  <comment197755> How did you create the copy (via Finder, via Terminal, something else)? <comment197757> via Terminal using `cp` <comment198057> Were they created on different filesystems? Different filesystems may have different extents or minimum allocation units... <comment198067> No they are in the same folder <comment198922> If you duplicate `src.mov` in Finder, what size does the duplicated file have in `ls` afterwards? <comment198941> All three files list the same sizes (290300838) in `ls`. In Finder and 'mdls` duplicated file has the same size as `copy.mov` and different from `src.mov`. <comment198942> Added important filesystem details to the question <comment199550> The source file was created in OS X, so it cannot be compressed if what you say is true <comment200547> `mdimport` made no difference. And it is not FS corruption because all files created by a certain program (video tool) have such properties. <comment200550> So only the files created by this tool are like this? Which video tool? <comment200582> All files rendered in DaVinci Resolve