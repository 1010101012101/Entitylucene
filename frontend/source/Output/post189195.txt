Script to change Computername/hostname causing bizarre Terminal behavior <body> I have a script (mostly borrowed) which utilizes codescutil/code to rename computers based off of values in a CSV file. It matches the serial number to a computer name, sets a variable, and then renames the codeComputerName/code, codeHostName/code, and codeLocalHostName/code with the variable. For reference, the name will be codeSFO-C2900-MBP/code  Here's the script:  precode#!/bin/bash   echo "-----Starting-----"  # Get serial from ioreg and assign serial="$(ioreg -l | grep IOPlatformSerialNumber | sed -e 's/.*\"\(.*\)\"/\1/')"   #Initialize compName to null compName=''  #Loop through CSV looking for a match while IFS=',' read ser loc; do     if [ "$serial" == "$ser" ]; then         compName=$loc         echo "Serial Matched with name: $compName"     fi done &lt; /Volumes/Macintosh\ HD/Users/Shared/Configuration/names.csv  #If compName is not null, use scutil to rename. Otherwise user must manually rename if [[ -z $compName ]]; then     echo "This computer was not found on the list, you must manually rename it." else     echo "Setting Host Name to $compName"     scutil --set HostName $compName      echo "Setting Computer Name to $compName"     scutil --set ComputerName $compName      echo "Setting Local Host Name to $compName"     scutil --set LocalHostName $compName  fi  echo "-----Finished Renaming-----" /code/pre  Two things are happening from this:  1) An error is thrown when the script attempts to rename the codeLocalHostName/code: codeSCPreferencesSetLocalHostName() failed: Invalid argument/code  2) The Terminal, after quit/reboot/etc, will do the following: img src="https://i.stack.imgur.com/81sKC.png" alt="Terminal showing Question Mark over folder, also missing hostname" Terminal showing Question Mark over folder, also missing hostname  Setting these values manually through terminal using codescutil --set {def}/code work fine and restore Terminal to its normal behavior.  I have tried the following:  ul liRemoving the LocalHostName lines from the script/li liSetting the LocalHostName value to a variable set inside the script and not the CSV file/li /ul  Mostly, the script's issue is what it does to Terminal more than anything - I can work around the LocalHostName issue. Weirdly enough, when you run codescutil --get {def}/code on those, Terminal outputs the correct values.  <answer190063> In the comments, @MorganR wondered if the code that reads from the CSV file was including a strange character within code$compName/code.  One way to test for odd, perhaps non-printable characters is to use codeod/code.  It has an obscure name (stands for "octal dump"), but it is useful.  It shows the detail of each character in an input stream.  I usually start by using code-c/code argument, which causes codeod/code to output each character detail as "C-style escaped characters"... there are other arguments to output as hex, octal (still occasionally useful!), etc.  For example (notice the normally invisible code\n/code is shown):  precode$ echo "foo" | od -c 0000000    f   o   o  \n                                                 0000004 /code/pre  So, if that makes sense, my suggestion is: try adding the line codeecho $compName | od -c/code to the script after the "loop through the CSV" section.  In the comments, the issue has turned out to be an unexpected code\r/code character.  I think the likely cause for this is that the CSV file has CRLF (=code\r\n/code) line endings (was it created on a Windows system perhaps?), but the coderead ser loc/code command in the script is expecting just LF (=code\n/code).   <answer239677> I have completed the same with below string :  codecompName=${loc::9};/code  which actually removes 9th character of the stored variable .  <comment224259> Have you considered quoting your `$compName` variable on the off chance it's being interpreted as an option? Try: `scutil --set LocalHostName "$compName"` <comment224262> @IanC. Nope, same problem on the `scutil --set LocalHostName` line. I'd like to add too that the disappearance of the name in Terminal is fixed by `scutil --set HostName` being run manually via Terminal instead of the script. <comment224264> And you're calling your script with `sudo name of the script` right? <comment224272> @IanC. Yep, same result either way <comment225176> Does the script set the HostName and ComputerName? Just not the LocalHostName? <comment225247> @MorganR correct. It also, for whatever reason, won't register the HostName change correctly. EG if you run `scutil --get HostName` it will show, but Terminal won't work properly until you run `scutil --set HostName` with the right variable, even after reboot. <comment225434> Very strange. I wrote a simple bash script that accomplishes the same task as you, but instead of looping through a CSV, I used grep and awk to isolate the computer name from the SN. I can post it below if you like? Maybe looping through an CSV is picking up a weird character which is causing your issue, although if that were the case, I'd imagine both setting the HostName and ComputerName would break too. <comment225440> @MorganR Sure! Although, the reason we use the CSV is because our computer names are based off of asset tag information, which the script uses the system serial # to match against a list of known computer names. <comment225476> @smoooosher @MorganR One idea to check if a strange character is getting embedded into the variable value: try adding the line `echo $compName | od -c` to the script after the "loop through the CSV" section.  (To experiment with what `od` does, try eg `echo foo | od -c` in Terminal...) <comment225485> @Ashley You. Are. Amazing. There was a \r appended to the field on the CSV which was causing the rename to fail. Using `od` showed the issue and then I used `sed` to remove the extraneous character. Please post your response as an answer and I'll accept :) <comment225533> Great! Very pleased to be able to help. I've written an answer. BTW, I feel that @MorganR deserves some credit here too, but sadly I don't see a way to do that in the bounty system... <comment225534> Ah, I thought it was something like that, but I didn't have any idea how to verify - no need to feel guilty @Ashley! I'm glad the issue is resolved. <comment225814> Sorry, my first bounty. Didn't know there was an extra step beyond accepting the answer. It's all yours now :)