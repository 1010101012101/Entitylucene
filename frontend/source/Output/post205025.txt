rbenv not overriding default Ruby version <body> I used the thoughtbot laptop script to setup a new Macbook Air (OSX 10.10.5), but when I navigate within a Rails project that contains a code.ruby-version/code file, running commands such as coderails s/code returns an errors of: codeYour Ruby version is 2.0.0, but your Gemfile specified 2.2.3/code.  Running coderbenv local/code within the same directory gives the correct version of 2.2.3.  I'm running the commands in zsh with the following .zshrc:  precodeexport PATH="$HOME/.bin:$PATH" eval "$(rbenv init - --no-rehash zsh)"  # recommended by brew doctor export PATH="/usr/local/bin:$PATH" export PATH="$HOME/.rbenv/bin:$PATH" eval "$(rbenv init -)" if which rbenv &gt; /dev/null; then eval "$(rbenv init -)"; fi /code/pre  I just want to be able to run the Rails app locally and will use something other than rbenv for Ruby version management if need be.  <comment247239> Have you got ruby installed via Homebrew as well as rails (i.e. how did you install rails) <comment247252> Neither ruby or rails show up with `brew list`, but rbenv and ruby-build do. <comment274598> You likely are, but are you prefixing your commands with `bundle`? E.g. `bundle install`, `bundle rails s`, etc?