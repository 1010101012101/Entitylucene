Why is sudo taking way too long? <body> I recently updated to macOS Sierra 10.12.4 Beta (16E144f) and it might be what is causing codesudo/code to delay up to 10 minutes as it's the most recent change I recall since this problem occurred. I have never had to wait so long for a basic program and something is clearly wrong. The command eventually succeeds, but after waiting way too long.  I've been using this question as a reference. So far, I've tried adding my hostname to the end of the code127.0.0.1/code line in code/etc/hosts/code as well as. I checked code/etc/resolv.conf/code and I did have some extra entries from when I was on a network that needed manual DNS entries, but I removed them and there has been no difference. I used the codenetworksetup -setdnsservers/code command to restore the original values. Internet still works fine but still a very slow codesudo/code.  I tried the codelogger 'test'/code command thinking it would write to code/var/log/system.log/code, but it looks like it totally deleted that file although it was soon made anew.  I was hoping to use the codestrace/code command to see what was happening while codesudo/code ran but that command is not available on OS X. Has anyone ran into this problem on this operating system before?  /var/log/system.log has the following messages that may be relevant. Again the command does eventually succeed as normal:  precodeFeb  1 00:07:39 mycomputer com.apple.xpc.launchd[1] (com.apple.imfoundation.IMRemoteURLConnectionAgent): Unknown key for integer: _DirtyJetsamMemoryLimit Feb  1 00:07:56 mycomputer com.apple.xpc.launchd[1] (com.apple.quicklook[2355]): Endpoint has been activated through legacy launch(3) APIs. Please switch to XPC or bootstrap_check_in(): com.apple.quicklook Feb  1 00:08:16 mycomputer System Preferences[1886]: I can not do what i want Feb  1 00:11:23 mycomputer com.apple.xpc.launchd[1] (com.apple.opendirectoryd[2335]): Service exited with abnormal code: 70 Feb  1 00:12:07 mycomputer syslogd[54]: ASL Sender Statistics Feb  1 00:16:35 mycomputer com.apple.xpc.launchd[1] (com.apple.opendirectoryd[2395]): Service exited with abnormal code: 70 /code/pre  Any help would be appreciated.  <answer272956> I wish I could have found the actual cause of this, but I could only resolve the problem after restoring the system software. I was previously on the Public Beta of macOS Sierra but now I'm on the main one.  I am slowly loading back all my programs and I will note if I experience a delayed codesudo/code again.  <answer278419> This can occur when upgrading to 10.12.4 if you’ve ever edited the /private/etc/sudoers file.  Easiest solution is:  ol liDrop back to a previous version of the system (you always clone your system before updating, right?)/li liDelete /private/etc/sudoers/li liCopy /private/etc/sudoers~orig to sudoers/li liReset the ownership of sudoers to system/root — read-only/li liUpgrade the system to 10.12.4/li /ol  <answer278483> ErikMH's answer gave me the idea to first just try to revert the sudoers file, without reverting/upgrading my whole system again. So in short:  ol liRun this to get a root shell: codesudo -s/code/li liMake a copy of code/private/etc/sudoers/code/li liRun: codecp /private/etc/sudoers\~orig /private/etc/sudoers/code/li liFix permissions by running: codechmod 440 /private/etc/sudoers ; chown root:wheel /private/etc/sudoers/code/li liMove any files in code/private/etc/sudoers.d//code away from there/li liTest out codesudo/code in another terminal/li liDon't forget to exit this shell to prevent inadvertently running commands as root when you don't mean to/li /ol  Now running codesudo/code should work again.  Next step is to check the differences between the old sudoers file (you copied away in step 2) and the current one and add those changes step by step back to code/private/etc/sudoers/code or code/private/etc/sudoers.d//code, each time running a command using codesudo/code to check if the change breaks it.  In my case, I had specified a nonexistent group in the sudoers file. Correcting that fixed my issue.  <comment340895> Does it matter which command you run through sudo? How do the time stamps in the log relate to your action of executing sudo and on sudo running through? I see opendirectoryd in there, do you work with a local account or a network account? What happens if you switch users (or set up a new one locally), is sudo slow there as well? <comment340896> I'm running the same beta and sudo is fast as always actually. <comment340945> @patrix Ah okay. Yes it very well could be something else. Yes it happens no matter what command I use with sudo, the delay is consistent. Basically,  the command starts around that log line about `com.apple.quicklook` and finally finsihes at the end, so in that example it was about 8 minutes with all those messages in between. The opendirectoryd message seems to occur whenever it finally runs `sudo ls` in my local home directory.  Right now I'm only working with local folders. I only have one user on this computer although I can see what happens with a new account... <comment340967> @patrix I have just made another user with admin privileges. Sadly, that account is having the very same problem. <comment350461> "This can occur when upgrading to 10.12.4 if you’ve ever edited the /private/etc/sudoers file."  Do we know what is actually causing it?