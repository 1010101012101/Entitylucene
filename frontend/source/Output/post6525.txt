Editing iPhoto-specific metadata <body>    Perpetua:2011-01-16 ashley$ mdls IMAG0107.jpg           ...         kMDItemComment                 = "Cat with is tongue out."   So, here's my question.  codexattr/code can be used to modify emsome/em attributes.  For example:   prePerpetua:2011-01-16 ashley$ xattr -l IMAG0107.jpg  com.apple.metadata:kMDItemFinderComment: 00000000  62 70 6C 69 73 74 30 30 50 08 00 00 00 00 00 00  |bplist00P.......| 00000010  01 01 00 00 00 00 00 00 00 01 00 00 00 00 00 00  |................| 00000020  00 00 00 00 00 00 00 00 00 09                    |..........| 0000002a Perpetua:2011-01-16 ashley$  /pre   But this isn't the attribute I want to edit.  I imagine this is because kMDItemComment is an iPhoto-specific piece of metadata.  My question would be, how do I go about editing it?  <answer6799> The OpenMeta project is using the extended attributes to store their tags. The source code is available at https://code.google.com/p/openmeta/. Part of that project are open meta command line tools.   This command line tool does operate on pre-defined set of attributes used by OpenMeta, but as it is open source, it can be easily adapted to allow additional command line setting for setting/reading other extended attribute.  Not direct solution, but a path to a solution ?  <answer6805> com.apple.metadata:kMDItemFinderComment is in binary property list format. Using codexattr -p -l -x | tail +2/code gives you just the hex dump of the attribute. You can then pipe that into codexxd -r/code to turn that back into a binary file.  From there you can open that file in Apple's Property List Editor, assuming you have the Developer Tools installed. You can then edit the property visually.  You should then be able to reapply the edited value to the file using codexxd -p -x/code and codexattr -w -x/code.  This is all much more messy than one really wants for a single property that's just a string.  <answer64514> One can do this in the "Mac" way (by AppleScript), using the following script codesetFinderComment.scpt/code  precode#!/usr/bin/osascript on run argv     set filePath to POSIX file (item 1 of argv)     set fileComment to item 2 of argv     set theFile to filePath as alias     tell application "Finder" to set comment of theFile to fileComment end run /code/pre  Then you make it executable codechmod a+x setFinderComment.scpt/code and use as  precodesetFinderComment.scpt filename comment /code/pre  <comment6795> The above file is a photo, with a description that I added from within iPhoto. <comment6797> I take it you've tried http://apple.stackexchange.com/questions/6438/remove-specific-text-from-multiple-descriptions <comment6799> @Nathan In fact, I was trying to answer that question, that's how I figured out where/how the metadata was stored.  Now I am curious as to how one edits it myself..  and I will point the author of that question over this way if someone has a solution.  :-) <comment6801> You mean how to edit the XML files, or how to get your changes to stick? <comment6806> @Nathan G. Neither.  The description field in iPhoto actually edits the file metadata (as shown above).  The data stored inside that xml file I believe is just iPhoto caching the metadata.  Reading the info in from the XML file is obviously faster than recursively going through what could be thousands of photos and reading the metadata from each. <comment7001> Not sure but I do notice that `mdls` return `kMDItemComment` and xattr is showing `kMDItemFinderComment` which are different attributes. <comment7011> @mankoff Yes, and that's the problem.  kMDItemFinderComment comes from com.apple.metadata.. kMDItemComment seems to be from elsewhere, and I'm not sure where.  I suspect iPhoto-specific metadata, but I don't know how to access it properly in order to write it. <comment7012> Have you tried using the "-x" flag to xattr? <comment7018> @mankoff - Er.. I just did.  Clearly you're getting at something and I'm missing it.  What should that do for me?.. <comment7033> Oh no I'm not being obscure. Sounds like a difficult problem. <comment7042> @mankoff Gotcha.  Yeah, the -x flag, interestingly shows there's a kMDItemFinderComment, which seems to just be some hex.. definitely a weird problem. <comment7144> @Mira A.  I just checked - there's only one command line tool.  It only seems to support one extended attribute, and that's the one OpenMeta uses for ratings and such.  Thanks for pointing it out, but it doesn't look like it'll do what I want... <comment7147> Hmm.  I can already get the ASCII/Binary equivalent by doing xattr -l foo.jpg.  The string comes back to "bplist00P".. which I'm not sure what to do with. <comment7153> That's not the string. That's the "magic" at the start of the binary property list file format. In the example above, the string is actually the empty string. <comment7254> If you're working with binary `plist` files, then `plutil -convert xml1 file.plist` might be helpful. <comment7460> I haven't been able to make this work.  Thanks for the suggestions though.