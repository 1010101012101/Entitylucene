Changing terminal color <body> I would like to know how to change the terminal color, so whenever I run  codels/code it will return the name of:  ul liDirectories in red/li liFiles in blue/li liExecutable files (those you do code./file/code) in light green/li /ul  How do I do that?  <answer100298> Usually this is done with  precodels -G /code/pre  Personally I'm using an alias, e.g. in code.bash_aliases/code which is loaded by code.bash_profile/code  precodealias ls="ls -G" /code/pre  However, there's another option, i.e. turning on codeCLICOLOR/code in your shell, e.g. by adding the following to your code.bash_profile/code  precodeexport CLICOLOR=1 /code/pre  <answer100304> See this article "ls, colors, and Terminal.app" to customize the default codels/code colors.  Basically, what you need to do is change the value of the codeLSCOLORS/code variable (default is codeGxfxcxdxbxegedabagacad/code on OS X). Each letter represent a color:  ul lia = black/li lib = red/li lic = green/li lid = brown/li lie = blue/li lif = magenta/li lig = cyan/li lih = grey/li liA = dark grey/li liB = bold red/li liC = bold green/li liD = yellow/li liE = bold blue/li liF = magenta/li liG = cyan/li liH = white/li lix = default/li /ul  And each two-letter group the foreground and background color for a type of entry. For example, the first two letters make your directories being shown as Cyan (codeG/code) on a default (codex/code) background (ie. the background color of your term).  The positions are:  ol lidirectory/li lisymbolic link/li lisocket/li lipipe/li liexecutable/li liblock device/li licharacter device/li liexecutable with setuid set/li liexecutable with setguid set/li lidirectory writable by others, with sticky bit/li lidirectory writable by others, without sticky bit/li /ol  So to get the output you asked in your question, setting codeLSCOLORS/code to codebxfxcxdxcxegedabagacad/code should do the trick, except for the "normal files" colors, which it seems can't be changed this way.  emAll credits to Jonathan Dance for the blog post linked earlier, most of this answer is copied from it./em  <comment146693> I would use the "export CLICOLOR=1" version because this may also affect other commands whereas the "alias ls="ls -G" solution will "only" affect ls