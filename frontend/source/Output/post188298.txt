How to periodically show alert message *in foreground*? <body> I want to have an alert / dialog box to fire up periodically strongin foreground/strong.  I tried a combination of AppleScript and codelaunchd/code and managed to have the script (actually converted to a app) fired up periodically via launchd. However, the alert box does not show up in front of all other windows (rather totally hidden until I tab to it â€“ though it emdoes/em get started via codelaunchd/code). How can I get it in front?  My script is as follows:  precodeon run     activate me --&gt; tried to get alert in foreground                 --&gt; didn't help, though     display alert "Should show up in foreground..." end run /code/pre  My launch.plist is (in code/Users/bernhard/Library/LaunchAgents//code):  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;bernhard.sitstraight.plist&lt;/string&gt;      &lt;key&gt;Program&lt;/key&gt;     &lt;string&gt;/Users/bernhard/programming/periodic.app/Contents/MacOS/applet&lt;/string&gt;      &lt;key&gt;RunAtLoad&lt;/key&gt;       &lt;true/&gt;      &lt;key&gt;StartInterval&lt;/key&gt;     &lt;integer&gt;1200&lt;/integer&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <answer188571> Your code seems to work ok on my 10.6.8 (Snow Leopard), though I didn't launch it from codelaunchd/code.   I did something very similar to monitor my battery. The script automatically hibernates my system after giving a 60s count down using a 'flashing' dialog box.  Because, like you, the dialog box would sometimes get buried, I gave the dialog box a timeout and would re-display it.  Here is the relevant code applescript code from my bash schell script...  precode   userResp="`/usr/bin/osascript 2&gt;&amp;1 &lt;&lt;-EOF     tell application "System Events"         activate         display dialog \             "Battery below min safe level of ${minBattLvl}%" \             &amp; "\\n\\nForcing hibernation in: ${cntDown} seconds." \             as text buttons {"Cancel","$btntext"} \             default button "$btntext" \             with icon caution \             with title "WARNING: Battery Monitor" \             giving up after $dlgTimeout     end tell EOF`" /code/pre  <answer188632> Try using codeopen/code instead of launching the program directly. codeopen/code more closely matches double-clicking to launch the AppleScript application.  h2codeopen/code your application/h2  To do this, replace the codeProgram/code key value pair in your launchd job ticket with a codeProgramArguments/code array to provide the path to your AppleScript application:  precode&lt;key&gt;ProgramArguments&lt;/key&gt; &lt;array&gt;     &lt;string&gt;/usr/bin/open&lt;/string&gt;     &lt;string&gt;/Users/bernhard/programming/periodic.app&lt;/string&gt; &lt;/array&gt; /code/pre  By default, the codeopen/code command attempts to bring the launched application to foreground.  <comment223316> My problem is that the box does not show up in front in the first place (actually not at all until I tab to it). Without launching it via `launchd` it works fine for me as well. I guess it has something to do with the combination of firing it up with `launchd` and the the program being a app... <comment223321> Thanks! That's almost the solution. However, the `ProgramArguments` need some program name (passed as `argv[0]`) as first argument (see [launchd.info](http://launchd.info) - Configuration). With this modification it works :) <comment223327> Great to hear the `open` approach worked. I have updated the answer. <comment223727> Gotcha. Mine was intermittent and sometime accidental - by clicking on another window at the moment the dialog appeared :( . I wonder though if using `System Events` to display the dialog box makes a difference. In any case I'm happy you found a working solution.