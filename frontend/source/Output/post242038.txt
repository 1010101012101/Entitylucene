Encrypt Time Machine backups without deleting old backups? <body> I'm on Mavericks (10.9.5). I have an external USB drive that I use exclusively for Time Machine backups.  I just realized that the backups are unencrypted. Is there a way to configure Time Machine to encrypt all backups on this drive, both existing backups and future backups, without erasing the existing backups?   This answer indicates that it can be done with "sparsebundles", but the post is 5 years old and it seems risky.  Is there an easier way?  Update: I was mistaken that the backups were unencrypted -- they are actually encrypted. I was fooled because Time Machine preference window includes the word "encrypted" below the listed backup disks, but strongonly if the backup disk is plugged in./strong If the backup disk is not plugged in, Time Machine still lists the backup drive, but it loses the label "encrypted". Doh! In Disk Utility, I verified that the disk is encrypted with FileVault2; moreover, OS X prompts me for a password when I plug in the disk. Would still like to know the answer to my original question though.  <answer266519> One of the above-mentioned links indicates that converting an unencrypted TM backup drive to encrypted form will erase the disk: "If you previously used a Time Capsule or networked disk for unencrypted backups and want to turn on encryption now, Time Machine must first erase the unencrypted backup before starting an encrypted backup."  from Sep'15 version of emChoose a backup disk and set encryption options/em  <answer273016> Try at your own risk, but this might work:  ol liRename the code{machine}.sparsebundle/code to code{machine}-unencrypted.sparsebundle/code/li liShow package contents on the sparsebundle/li liMake a backup of codecom.apple.TimeMachine.MachineID.plist/code  ul liCopy it to codecom.apple.TimeMachine.MachineID.plist.original/code/li /ul/li liOpen codecom.apple.TimeMachine.MachineID.plist/code/li liSet some placeholder value in codecom.apple-backup.HostUUID/code, for example codeseedotoriginal/code/li liSave and close/li /ol  This should allow you to start making a new encrypted backup. Eventually code{machine}.sparsebundle/code should appear next to the previous one (code{machine}-unencrypted.sparsebundle/code).  If you need to restore from the unencrypted backup, you can replace codecom.apple.TimeMachine.MachineID.plist/code with codecom.apple.TimeMachine.MachineID.plist.original/code.  Once the encrypted backup procedure has completed, you can delete the unencrypted backup sparsebundle (watch out, that may take quite long).  Note that it might be still possible to fetch the deleted, unencrypted data from the disk. I would recommend getting another disk so that you can properly clean the disk from unencrypted files by writing zeros to it a couple of times, before starting to make encrypted backups on it.  <comment297558> I found two Apple documents that while they're for OS X Yosemite nonetheless may work on OS X Mavericks. You'll need to verify carefully although it does state "_When you switch locally connected disks (such as external disk) to encrypted backups, your data is preserved and encrypted._" in [OS X Yosemite: Keep your Time Machine backup disk secure](https://support.apple.com/kb/PH18852). Also review [Choose a backup disk and set encryption options.](https://support.apple.com/kb/PH18836). <comment297561> Thanks. I was heartened to see that line you quoted, but the following line is *"If you want to change from unencrypted to encrypted backups, you must remove your backup disk and then set it up again."* which involves clicking "Remove Disk" which seems like it would remove my existing backups :-0 <comment297564> I do not believe it removes the data however it (the disk) has to be removed from Time Machine as a backup disk in order to add it back and encrypt it in the process of adding it back.  If I had an extra empty HDD I test it for you under Mavericks and then post everything as an answer instead of as a comment.  I just don't have an extra HDD to test with at the moment. <comment297681> Thanks for your help. It turns out the backups were actually encrypted after all, see my update. But it would be good to get an answer for other folks.