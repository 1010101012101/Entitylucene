Easy way to execute shell script <body> I want to be able to search in Spotlight for a shell script (or something that calls a shell script) and that such shell script opens a Terminal window so the output is shown live (and I can interrupt with kbdctrl + C/kbd).  Right now, I have a codebackup.sh/code  precode#!/bin/bash caffeinate -s \   rsync -hva --progress --stats --delete "/path/to/source/" "/path/to/destination" /code/pre  that I've renamed to codebackup.command/code so I can doubleclick in Finder and it works perfectly. But I cannot search for it in Spolight because I want Spotlight to only search for Applications, System Preferences and Contacts, and if I mark Developer then it shows codebackup.command/code but also a lot of unwanted files that are just unnecessary.  h2What can I do?/h2  I tried to appify it but then it runs on the background, and doesn't open a new Terminal window so I can't see the progress of how is it going, and also I can't stop the progress with kbdctrl + C/kbd. Any suggestion?  <answer226069> strongAppifying with Platypus:/strong  Download Platypus and create an app from the shell script.  Example:  img src="https://i.stack.imgur.com/SIyF0.jpg" alt="enter image description here"  The settings above create an app with a progress bar (including details) and it can be quitted - the rsync process has to be canceled (killed) manually though.   img src="https://i.stack.imgur.com/FqW0S.jpg" alt="enter image description here"  The app itself can be found with Spotlight.  hr  strongSimple AppleScript solution:/strong  In Mavericks (and probably later) you have to allow the AppleScript app to control the computer in "System Preferences - Security &amp; Privacy - Privacy - Accessibility"  Open ScriptEditor, enter the code snippet below and export it as an application with a unique name:  precodetell application "Terminal"     delay 2     set newWindow to do script "caffeinate -s rsync -hva --progress --stats --delete /path/to/folder /path/to/folder2"     activate end tell /code/pre  If you need root permissions prepend emsudo/em - "sudo caffeinate -s ...."  You can refine the AppleScript app by checking if Terminal already has open windows and create a new one to run the shell script:  precodeset myScript to "caffeinate -s rsync -hva --progress --stats --delete /path/to/folder /path/to/folder2" tell application "System Events"     if exists (window 1 of process "Terminal") then         tell application "Terminal"             set newWindow to do script myScript             activate         end tell     else         tell application "Terminal"             delay 2             set Window1 to do script myScript             activate         end tell     end if end tell /code/pre  The AppleScript app can be found with Spotlight.  hr  In Mountain Lion you have to enable "System Preferences - Accessibility - Enable access for assistive device" and change it a little bit to get the AppleScript app solutions running properly:  precodeset myScript to "caffeinate -s rsync -hva --progress --stats --delete /path/to/folder /path/to/folder2" tell application "System Events"     if exists (window 1 of process "Terminal") then         tell application "Terminal"             reopen             activate             set newWindow to do script myScript         end tell     else         tell application "Terminal"             reopen             activate             do script myScript in window 1         end tell     end if end tell /code/pre  hr  strongAppleScript with "external" shell script (backup.sh):/strong  This is the final approach the OP is using. Taken from here. In Mavericks (and probably later) you have to allow the AppleScript app to control the computer in "System Preferences - Security &amp; Privacy - Privacy - Accessibility". One can load the full code.sh/code (placed inside the app in codeContents/Resources/backup.sh/code) with:  precodeset bashFile to path to resource "backup.sh" tell application "Terminal"     delay 1     activate     set newWindow to do script "bash " &amp; quoted form of (POSIX path of bashFile) end tell /code/pre  You can refine the AppleScript app by checking if Terminal already has open windows and create a new one to run the shell script:  precodeset bashFile to path to resource "backup.sh" tell application "System Events"     if exists (window 1 of process "Terminal") then         tell application "Terminal"             delay 1             set newWindow to do script "bash " &amp; quoted form of (POSIX path of bashFile)             activate         end tell     else         tell application "Terminal"             delay 2             set Window1 to do script "bash " &amp; quoted form of (POSIX path of bashFile)             activate         end tell     end if end tell /code/pre  <answer226186> Run codechmod 755 NameOfYourScript/code from terminal, then code./NameOfYourScript/code  If you codels/code it will appear green  <comment274453> maybe this is possible: appify an script, which opens a terminal and execute your script inside this terminal. <comment274456> You can exclude directories containing unwanted **Developer** files from beeing shown in Spotlight. You can do it in Spotlight - Privacy (You can drag folders from finder there also). <comment274459> @hirnwunde That would be great, but I don't know how. <comment274461> @MateuszSzlosek I would like to exclude *everything*. <comment274462> No easy way to do this without any extra app? <comment274471> @Manuel With your rigid Spotlight prefs I don't see any other possibility. An AppleScript app is the other possibility. <comment274477> Is there some good reason why you can't just call it `backup`, place it in the `$PATH` and just call it from a Terminal by typing `backup` and press Enter?  Also why not just use Time Machine, it seems it would be much easier then all you've been going through to get this to work. <comment274483> The “rigid prefs” is logic, I don't need anything else, and I don't want to spam my searches just because I want to be able to launch `backup.sh` or `backup.command`. In any case, how would that AppleScript solution work? <comment274484> @user3439894 I don't really care where to put it or what name to use, but what I want to avoid is opening the Terminal to call the script. Also, I don't need Time Machine since this is a script to duplicate the contents of a thumb drive into another thumb drive (in fact I don't *want* Time Machine, plus I think it doesn't work for that). <comment274497> Yes Time Machine would not work on that and I thought you were backing up from internal to external not external to external, sorry.  Anyway, so you don't want to call it from Terminal, then place it on the Dock or the Desktop then you don't need to use Spotlight.  Although I know you're going got say you don't want to place it in the Dock or on the Desktop, so without enabling Development in Spotlight, then klanomath's answer is probably the best solution to use Spotlight without enabling Development in Spotlight. <comment274502> I added `activate` to bring the Terminal window to the front.  If that's not okay, then of course you can delete it. <comment274518> @klanomath I will try the AppleScript with the help of this [question](http://apple.stackexchange.com/q/121495/34487), and come back ;) <comment274645> I want to avoid opening from terminal. <comment274653> @Manuel its called a shell script for a reason, that will definitely be the easiest way <comment274670> @klanomath The script gave me `error -25211` when Terminal was open but [I solved it with the help of this question](http://stackoverflow.com/questions/10140334/applescript-system-events-error-access-for-assistive-devices-is-disabled). In any case, if Terminal is not running two windows are opened when script is run. I'm running Mountain Lion. <comment274733> @Manuel Hmm it doesn't work for me but you can edit in yourself: please add an addendum like: in Mountain Lion replace the lines xyz of the script with the content blublublu by blablabla