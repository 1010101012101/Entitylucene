How can I add a private key to my keychain? <body> I am trying to add codemyRepositoryKey/code to my Mac keychain utility so . I exported this item in OpenRSA format from Putty. When I try to use codeImport Items/code, the file is unselectable. What do I need to do to import into my keychain? Does the file need a specific extension?  <answer9011> You have to create a code.p12/code file. In order to do that you need your private key and a certificate for that key. Then run the following on your console:  precodeopenssl pkcs12 -export -clcerts -inkey private.key -in certificate.crt -out MyPKCS12.p12 -name "Your Name" /code/pre  where codeprivate.key/code is your existing private RSA key, codecertificate.crt/code is your existing certificate and codeMyPKCS12.p12/code is the name of the file to create. This file can then be imported into your keychain.  If you need your key for SSH access (SFTP, SCP or similar), it doesn't have to be in your keychain. Simply copy your private key to code~/.ssh//code and edit/create the code~/.ssh/config/code file. There you would put something along these lines:  precode# replace the host, location of the private key and the remoteUserName # with valid values. Host remote.domain.com     IdentityFile ~/.ssh/private.key     User remoteUserName /code/pre  <answer21585> Well I don't get that "need a certificate for the key" either...  I just do codessh-add -K /path/to/private/key/code.  However, make sure you're using Mac's built-in codessh-add/code and not Macports' one (if you ever needed to upgrade OpenSSH).  So, just do code/usr/bin/ssh-add -K /path/to/private/key/code.  Hope that helps.  <answer71078> I've tried to import a .p12 using Keychain's GUI just to be silently ignored under Lion. So just for completeness, I'd like to this post in Stephan's Blog  http://www.arlt.eu/blog/2009/12/01/importing-iphone-keys-p12-and-pem-into-snow-leopards-keychain/  In short, this should do the trick every time:  precodesecurity import priv_key.p12 -k ~/Library/Keychains/login.keychain security import pub_key.pem -k ~/Library/Keychains/login.keychain /code/pre  <answer202859> Considering all in PEM format, private key file is server-key.key and certificate file is server-cert.pem.   precode# create .p12 formatted file with key and certificate using openssl.  openssl pkcs12 -export -in server-cert.pem -inkey server-key.key -passout pass:password -out certificate.p12 -name "SCProxy"  # should use -T appPath. -A means this key is accessible for all apps.  sudo security import certificate.p12 -A -P password -k "/Library/Keychains/System.keychain" sudo security add-trusted-cert -d -r trustRoot -k "/Library/Keychains/System.keychain" server-cert.pem /code/pre  <comment9575> What do you mean by a certificate for the key? Would I have to involve a signing authority? <comment9578> Yes, or sign one yourself, although I would not recommend that for anything else than personal use. <comment29932> Correct: the built-in SSH must add the key, then both the built-in SSH and the MacPorts SSH can use it. <comment123984> Just an FYI, the command worked for me using a *.pem* rather than a *.crt* for the certificate. I first tried to convert the *.pem* to a *.crt*, which failed, then just tried the *.pem* in the command you've shown directly and that actually worked! <comment127558> it did create p12 file in my case but with this error "unable to load certificates" what does that mean? <comment232310> Note that you might encounter that "Permission %%%% for ... are too open. [...] This private key will be ignored." Take a look [on this answer](http://stackoverflow.com/a/9270753/2442804) to fix that issue. <comment347011> `-T` no longer works in Sierra http://stackoverflow.com/questions/39868578/security-codesign-in-sierra-keychain-ignores-access-control-settings-and-ui-p