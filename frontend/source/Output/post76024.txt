Can homebrew and RVM agree on a $PATH? <body> I'm trying to install Yeoman.io and part of it requires Homebrew to be installed. I am on Mountain Lion (10.8) and things seemed to install correctly except when I run code$ homebrew doctor/code it complains with the following message:  precodeWarning: Homebrew's sbin was not found in your path. Consider amending your PATH variable so it contains: /usr/local/sbin /code/pre  Here is what my strong~/.bashrc/strong looks like:  precode#PATH=$PATH:$HOME/.rvm/bin # Add RVM to PATH for scripting setenv PATH=/usr/bin:/usr/local/bin:/opt/local/sbin:$HOME/.rvm/bin:$PATH /code/pre  and my strong.bash_profile/strong looks like:  precode[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm" /code/pre  I use RVM so it's written in its own stuff in case that affects the homebrew installation.   <answer76032> Your path (as shown) doesn't contain code/usr/local/sbin/code. Add that in the line where you set the path. Also, bash doesn't use codesetenv/code; just use codePATH=.../code.  <answer76150> The OS X Terminal loads ~/.bash_profile instead of ~/.bashrc.   So it is common (and even recommended) to put your customizations into ~/.bash_profile and then source it from ~/.bashrc with:  precode[ -n "$PS1" ] &amp;&amp; source ~/.bash_profile /code/pre  <answer121915> Future Googlers, what if you've already amended your .bash_profile and one change or another makes either brew or rvm mad?  .bash_profile for a happy rvm.  precodeexport PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin  [[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function* export PATH=$PATH:/usr/local/bin /code/pre  .bash_profile for a happy homebrew.  precodeexport PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin  [[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function* export PATH=/usr/local/bin:$PATH /code/pre  Open up your /etc/paths in your editor so that usr/local/bin is in the top slot here's mine  precode/usr/local/bin /usr/bin /bin /usr/sbin /sbin /code/pre  And then use the $PATH which makes RVM happy.  <comment88208> Can we assume $PATH does actually contain /usr/local/sbin and when you reboot and open a new terminal window? <comment88218> when I run `echo $PATH` I get the following output:     `/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/Users/fazal/.rvm/bin` <comment88225> Last question about e question? Did you choose a shell other than bash (the default shell on OS X?) <comment88249> I'm using the standard shell via terminal. <comment88254> I've edited **~/.bashsrc** to look like:     `PATH=$PATH:/usr/local/sbin:$HOME/.rvm/bin` however when I do `echo $PATH` it returns this:     `/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/Users/fazal/.rvm/bin` is there some sort of caching issue going on? <comment88258> Did you quit the shell after making the changes? Also, you may want to make these changes in ~/.bash_profile too (if you use Terminal) <comment88260> (Can't edit my previous comment). See this for the difference between bash_profile and bashrc: http://apple.stackexchange.com/questions/51036/what-is-the-difference-between-bash-profile-and-bashrc <comment88325> I edited **~/.bash_profile** and restarted, finally it all seems to be working. thanks! <comment121523> See http://apple.stackexchange.com/questions/69223/how-to-replace-mac-os-x-utilities-with-gnu-core-utilities?lq=1 for another way