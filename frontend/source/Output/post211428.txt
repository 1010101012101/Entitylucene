Need script to automatically export Skim PDFs with embedded notes <body> I have a folder with a few thousand PDF files, most of which have Skim annotations (e.g., highlights and notes). If I had fewer files, I'd just go through each one, export the PDF with embedded notes, and be on my merry way, having the ability to read my annotations with Adobe Reader on a PC (this is the goal).   But since there are so many files, I need a script that will automatically go through this folder, perform the "export as PDF with embedded notes" function for each PDF that has Skim annotations, and then give the new file the name of the original file plus "with skim notes" (or some other designation to indicate it's the version with embedded notes). Secondly, if I make further annotations to the original PDF, it'd be great if the script could update the exported file with the embedded notes.  I assume this is possible, as it appears Skim has great applescript support, but I have no idea  how to create one.  Thank you so much for any help you can offer. WG  <answer211483> I have uploaded a script, which contains a command-line utility downloaded from skim, and uses this code (note, it won't work without the utility!):  precodeon open dropped_files     set app_path to POSIX path of (path to me)     repeat with current_file in dropped_files         do shell script quoted form of (app_path &amp; "Contents/Resources/skimpdf") &amp; " embed " &amp; quoted form of POSIX path of current_file &amp; " " &amp; quoted form of (((characters 1 through -5 of (POSIX path of current_file as string)) as string) &amp; " with skim notes.pdf")     end repeat end open /code/pre  You can download it from here. Drag all the PDFs (the files, not the folder) onto the droplet extracted from the zip file, and it should convert everything almost instantly!  Note: You'll have to right-click the app and open it once from the Finder, in order to bypass the "unknown developer" warning, and use the droplet. After that, you'll be all set!  <answer237587> This is the method I used on my entire Zotero library (~3GB of PDFs).  Note that the only annotations I use are highlighting (single color) and comments.  Whether or not this successfully converts more complicated annotations depends on the detail of the skimembed script, which I don't know much about.  h2What worked/h2  The original skimembed script converts a single PDF with skim annotations (which are in the form of "extended attributed") to a single PDF with embedded annotations.  It is a shell script you run from the command line (terminal) using this notation  precodesh skimembed pdf_with_skim_annotations.pdf /code/pre  or more generally  precodesh /path/to/scripts/folder/skimembed /path/to/pdf/folder/pdf_with_skim_annotations.pdf /code/pre  Here, codesh/code is the shell program you use to interpret the script codeskimembed/code.  This script basically is just an automated way of using codeFile &gt; Export...PDF with embedded notes/code from the Skim menu.  However, it does not make a second copy of the pdf; the new version replaces it and has the same name.  I then Googled around for a shell script that lets you apply skimembed recursively to all pdf files in a folder (including subfolders):  precode#!/bin/bash  find $1 -type f -name "*.pdf" | while read f ; do  sh /path/to/scripts/filder/skimembed "$f" done /code/pre  Here, code$1/code denotes the path to a folder, the first (and only) argument this script expects to receive.  The codefind/code command returns all normal (code-type f/code) files in that folder with the pdf ending (codename "*.pdf"/code).  The results are piped (code|/code)  to a codewhile/code loop indexed by codef/code.    I saved the above text in a file called recursiveskiembed.sh and then ran  precodesh recursiveskiembed.sh /path/to/pdfs/folder /code/pre  In my case, the folder I choose was code/Users/username/Library/Application Support/Zotero/Profiles/xxx123.default/zotero/storage/code.  This takes every single PDF with Skim annotations in the folder and replaces them with normal, embedded PDF annotations.  h2What didn't work/h2  I tried the user-submitted Skim scripts and in particular the skimalot script (which is a successor to skimembed) and the FilingEagle script and some other. But I couldn't get any of them to work.  (Note that the sugarsync.com hosted files are dead links now.)  Likewise, the half dozen AppleScript scripts emalways/em seem to fail with completely inscrutable errors.  The clobbergaurd script is supposed to check a large directory for filenames that differ only in ending to prevent you from overwriting stuff using skimalot, but I couldn't get it work.  (The sugarsync link is dead, but a Google search turned up this Dropbox copy.)  So I just backed up my zotero library and I crossed my fingers.  <comment290998> The link ("You can download it from here") is dead. <comment291062> I couldn't get this AppleScript to work for the life of me.  My solution below is less elegant, but it's guaranteed to work and allows you to leave PDFs arranged in a folder hierarchy. <comment301846> Apologies. I had accidentally removed it. I updated the link, and it should now work again. <comment358064> not sure why, but this does not appear to work (any longer). The script executes, but the notes are not actually embedded in the resulting pdfs.