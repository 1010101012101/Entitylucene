Passing a password to an Automator application <body> I have written an Automator application with the following shell script to open an FTP connection on my system:  precodesudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist osascript -e 'tell app "Finder" to display alert "SFTP Opened"' /code/pre  This works exactly as expected except that the strongsudo/strong command needs a password. When the same command is run on Terminal, it prompts me for a password but when run as an Automator app, doesn't prompt me for any input. Is there anyway to programmatically pass the password to this sudo within the Automator script? I know this is not a safe practice but I still want to do it as my system is reasonably secure and untouched by anyone other than me.  A "do shell script...with administrator privileges" method is giving the following error:  img src="https://i.stack.imgur.com/DUUXR.png" alt="enter image description here"  <answer130311> AppleScript should let you do this by using codewith administrator privileges/code:  precodeosascript -e 'do shell script "sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist" with administrator privileges' /code/pre  This doesn't pass the password, but prompts for it with a standard OS X prompt:  img src="https://i.stack.imgur.com/hbD2Z.png" width="443"  You can use this in your Automator workflow in one of the two following ways:  img src="https://i.stack.imgur.com/ZFJNR.png" width="516"  <answer130312> h1expect/h1  You could instead use a tool like expect to script the interaction with codesudo/code. codeexpect/code is designed for this situation.     expect - programmed dialogue with interactive programs   The following shell script may be enough for your two commands:  precode#!/usr/bin/expect -f spawn sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist send "my-secret-password\n" /code/pre  h1AppleScript and with administrator privileges/h1  An alternative approach is to use AppleScript's strongdo shell script/strong command. The command offers a strongwith administrator privileges/strong option. Apple's Technical Note 2065 covers do shell script in detail.  h1echo/h1  Other common approaches to this problem involve using codeecho/code to pass the password to codesudo/code with a pipe. This StackOverflow answer discusses this and other related approaches, How to provide password to a command that prompts for one in bash?  <comment152702> This is throwing a syntax error: "A unknown token canâ€™t go after this identifier." <comment152704> It's still giving the same error :( <comment152706> Yes it's a single line...please see the screenshot in the question update. <comment152707> @Amit osascript is for bash :) If you want pure AppleScript in the AppleScript Automator action, remove the osascript like this: `do shell script "sudo -s launchctl load -w /System/Library/LaunchDaemons/ftp.plist" with administrator privileges` ([Do one of the following from this picture](http://i.stack.imgur.com/93lLV.png)) <comment152709> Yes, this worked like charm! Thanks for your patience...silly me!