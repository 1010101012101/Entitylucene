curl command can't be found, OSX utilities have been replaced by GNU coreutils... how to start from scratch? <body> I recently installed homebrew and I was having a hard time because I could not install it as curl command couldn't be found, someone pointed me to use wget and that worked to install homebrew but now I am trying to figure out how to get the curl command back.  I was patching an android rom with openpdroid and ran into a problem and in the process I found out when working out the error with the developer of autopatcher that I somehow or another the bundled OSX/BSD utils were replaced with GNU coreutils.  I have no idea if the osx/bsdutils or GNU coreutils have anything to do with curl.    I tried   precode$ brew install curl ==&gt; Installing curl dependency: pkg-config ==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/pkg-config-0.28.mountain_lion.bo Warning: Bottle installation failed: building from source. ==&gt; Downloading http://pkgconfig.freedesktop.org/releases/pkg-config-0.28.tar.gz Error: /usr/bin/curl is not executable /code/pre  Keep in mind that I like a toddler just learning my first words when it comes to working with the terminal shell.  also so you know  precode$ curl --version -bash: curl: command not found /code/pre  Is there a way to get back to having OSX bundled utilities as default if that is what I need to install curl.   <answer105733> Check your path -- homebrew often instructs you to modify path and installs into codeusr/local/bin/code. The default curl executable is code/usr/bin/curl/code.   Or try running it as code/usr/bin/curl/code  strongEdit/strong: Another thing to try. Do you have xcode installed?  You can go into Xcode Preferences-Downloads-Components and install the command line tools for xcode which I emthink/em should include your original curl executable.  <answer105867> Something seems to have changed your codecurl/code binary. To fix it, run  precodesudo rm -f /usr/bin/curl-wrapper sudo mv /usr/bin/curl.bin /usr/bin/curl /code/pre  <comment124305> It's possible that Homebrew has simply modified your PATH variable to point to its binaries instead of the built-in utilities. Can you post the content of your PATH variable (`echo $PATH`?) <comment124306> $ echo $PATH /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/local/git/bin <comment124307> The curl command was lost prior to having homebrew installed at which time I used wget. <comment124309> $ echo $PATH /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:/usr/lo‌​cal/git/bin <comment124310> The curl command was lost prior to having homebrew installed at which time I used wget. <comment124316> @user2821160 see update to answer <comment124318> What does `ls -l /usr/bin/curl` return? <comment124433> `$ ls -l /usr/bin/curl` `lrwxr-xr-x 1 root wheel 21 Sep 23 23:57 /usr/bin/curl - /usr/bin/curl.wrapper` <comment124437> Is `curl.wrapper` a shell script (`file /usr/bin/curl.wrapper`)? And what does `ls -l /usr/bin/curl*` return? <comment124438> `file /usr/bin/curl.wrapper` -- `/usr/bin/curl.wrapper: cannot open` `/usr/bin/curl.wrapper' (No such file or directory)` <comment124439> $ `ls -l /usr/bin/curl*`  -- `lrwxr-xr-x 1 root wheel     21 Sep 23 14:57 /usr/bin/curl - /usr/bin/curl.wrapper -rwxr-xr-x 1 root wheel   3759 Jan 28  2013 /usr/bin/curl-config -rwxr-xr-x 1 root wheel 139056 Sep 23 14:55 /usr/bin/curl.bin` <comment124450> Ok so I can use `/usr/bin/curl.bin`  my question now is why do I need the curl.bin rather just curl