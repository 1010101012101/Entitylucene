Move .ssh folder from /var/root/ <body> I tried to set up a ssh key for easily logging into the server which is hosting my website : codessh-keygen -t dsa -b 1024/code. The keys (public and private) have been saved in code/var/root/.ssh/code which I dont like because I have to codesudo -s/code prior to rsync for accessing the private key.  Is there any easy and safe way to move the ssh folder from code/var/root/.ssh/code to my user folder, so that I can use the keys even if not root ? what location to move it ? what is the command for newbie to be used for the relocation ? (for mac os 10.10) Thank you.  <answer204578> Open Terminal while logged in as your usual user, then run  precodemkdir ~/.ssh sudo sh -c 'mv /var/root/.ssh/* /Users/'$USER'/.ssh/' sudo chown $USER ~/.ssh/* sudo chgrp $(groups | cut -d \  -f 1) ~/.ssh/* chmod 700 ~/.ssh chmod 600 ~/.ssh/* /code/pre  strongThis assumes that you haven't created any ssh key pairs as your usual used (and therefore don't already have files in code~/.ssh/code)./strong  PS: Some explanations:  ul liFirst codesudo/code moves the content of root's .ssh folder into the one of the current user. Needs to be done by calling a subshell (codesh -c/code) because the wildcard part (code/var/root/.ssh/*/code) only works after the codesudo/code has changed the current user to root. code$USER/code is an environment variable containing the name of the current user/li liThird codesudo/code changes group ownership of the copied files to the primary group of the current user. As there is no convenient environment variable for this, the output of codegroups/code (which lists all groups a user belongs to) needs to used. Please note the two space characters after the code\/code./li /ul  <answer204699> If you've simply created a DSA key as root, it would be safest to do the following (from a terminal as your own user):  precodemkdir -p ~/.ssh sudo cp -av /var/root/.ssh/id_dsa /var/root/.ssh/id_dsa.pub /Users/$USER/.ssh/ chown -v $USER: ~/.ssh/id_dsa* chmod -v 600 ~/.ssh/id_dsa /code/pre  This will create a code.ssh/code configuration directory in your homedir (codemkdir -p/code won't make loud noises if code~.ssh/code already exists, and won't do anything), copy the public and private key files from coderoot/code's homedir to your own, then set the correct permissions and ownership on your files.  This is non-destructive (you're not moving anything, you're just copying); once you're happy the key-pair is letting you connect to your remote host successfully as your normal login user, you can codesudo rm -fv /var/root/.ssh/id_dsa /var/root/.ssh/id_dsa.pub/code This also doesn't affect any other files in either account's code.ssh/code folder.  <comment246606> I understand the plan, Patrix, yet I can't get line number 2 working : when logged as `xxx:~gilles$` it asks me my password, and fails : No such file or directory. Remark, if I write `sudo -s`, prompt is : `bash-3.2 #` and then I can list (ls) `/var/root/.ssh` <comment246636> Ah, bugger. Edited, please try again. <comment246664> It looks like it is successfull post. In my first attempt in copying your commands, I failed because I did not take care at the syntax (`cut -d \  -f 1`) where there are 2 needed blank spaces. I will test it tomorrow and try to understand the basics ;). <comment246975> I have used this solution, yet following (untested) neuro's answer seems safer, at least for blind newbie.