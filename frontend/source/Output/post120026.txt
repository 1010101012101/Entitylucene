How to create a Package, which runs a shell script? <body> While searching for a good (better) solution for this Solution, I try to solve my problem with Packages, but with no success.  My concrete problem looks simple:   ol liCopy a file to code/tmp/code (it's an configuration script)/li liExecute the following command:  precodesudo installer -allowUntrusted -pkg "esets_remote_install.pkg" -target / /code/pre/li /ol  So there are some (or a lot of questions):  ol liTo solve this problem, have I chose emDistribution/em or emRaw Package/em?/li liOn a emRaw Package/em (which also could included in distribution, I can choose codeRequire admin password for installation/code, if this is checked, do I still need codesudo/code before codeinstall/code?/li /ol  My first try was to add the pkg and the file for temp to emDistribution/em codeAdditional Resources/code in codeRequirement &amp; Resources/code and run the script via codeRequirement/code. Did not work. My second try was to put it into the emRaw Package/em codePayload/codeand run the script via codePre-installation/code. Again, no success. Even adding the package and the configuration to codeAdditional Resources/code seems not solve my problem.  Thank you very much for all solutions and ideas. Even a console solution via codepkgutil/codeis welcome.  <answer120028> Could you do this with Platypus? I use it to package small executables with a shell script into an install app, which uses the shell script to move executables into the target folder on run. You're still going to have issues with your intended result however as I can't see any way around running a package install without requiring admin access IF the package normally modifies files that require admin permission, but you should be able to put the package, the configuration file, and the install script together into one app using Platypus. End users can then run the app to install the package with your desired configuration.  The setup is really simple, the output is minimal. This is not a program designed to do anything complicated but it is free and has been really useful for distributing self-written script-based apps.  <comment139993> PS if you go this route, scripts run in Platypus will start in the program itself, so you don't need to specify path to any of the included files in the packaged app, just path to where they need to be moved on run. <comment140014> Platypus is an amazing tool. Give it a spin. <comment140094> Perfect, exactly what I'm searching for. THX a lot <comment369779> Platypus is awesome tool. too easy to use & understand. only thing you cannot restart machine in middle of script. if do , after restart script will run again from beginning. (I have no idea if any setting I missed :)...