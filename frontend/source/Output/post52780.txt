Filter launchctl standard err/out to add timestamp to log messages <body> I have a Launch Daemon running, happily logging to a couple of files specified using the codeStandard(Error|Out)Path/code entries in the property list file.  Now, the problem is that the particular program that is running doesn't include a time stamp when logging messages. Consequently, the log files show a long list of otherwise helpful messages, logged emsometime between now and whenever/em.  Is there any way to somehow include the time stamp to these messages? For example, is there an option that I could set somewhere, or a program that I could route these messages through (which would be trivial to write, but how would this routing work)?  <comment60378> Depending on the frequency of log messages and the buffering applied to log writes, a simple script to write a time stamp into the log files every minute might be enough. <comment60691> Yeah, that's how I was doing it in the meantime. Thanks, matrix! Other than that, I was looking for a UNIX-y thing where you can write to a script as if to a file, but letting the script handle the input instead. <comment60767> For future reference, it seems like this is possible using a [named pipe](http://en.wikipedia.org/wiki/Named_pipe), which can be created as a file-like object in the file system using the `mkfifo mypipe` command. Once created, read from it with eg. `cat  path/to/mypipe`, and write to it _(try in another terminal window)_ with eg. `echo 'Foo!'  path/to/mypipe`. _(NB. Auto-corrupt botched up my thank you in the previous comment. Sorry about that, patrix...)_ <comment60804> Also, instead of using the named pipe, the LaunchDaemon plist program can run complex shell commands using `bash -c [shell command]`. This command can contain redirection, piping, and everything. Consequently, I was able to pipe the first program's output through a script that added time stamps. (Answer found in [this other question](http://superuser.com/questions/285264/how-to-get-a-launchd-plist-to-diretly-run-a-complex-1-line-bash-command).)