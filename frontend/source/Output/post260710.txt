What is the canonical directory in which to install parallel versions of LLVM? <body> I am looking to build and install several versions of clang simultaneously, including a build from svn. I do not wish to interfere with the existing Apple LLVM which I would keep available as the default codeclang/code, codeclang++/code, codec++/code emet c./em invocations. So where would the logical place to put these multiple versions be?  I could place it in something like code~/llvm/svn//code but placing them under code~//code seems mildly unaesthetic.  <answer260720> There is no real standard.  Your choice of your home directory is easiest for compiling them. The only comment here is why the svn part of the directory I would just use ~/llvm.   If you are the only user that the home directory makes sense however if your system is multi-user then they could be placed in /usr/local/llvm. As Unix is multi user and I suspect before OSX very few machines had one user the Unix standard is /usr/local and even now systems administrators and distributions have to assume multi user uise.  I would also consider using package managers like Macports or Homebrew. From reading Macports mailing lists compiling and using llvm is not just a simple compile and the porters wioll have worked out the issues or can work with you to fix problems.  <comment327111> Thanks for your answer. The `svn/` subdir (in `~/llvm/svn/`) would be necessary to disambiguate the newest svn build of llvm from other builds of llvm I would have available simultaneously. As it happens several other sources have suggested that the ‘correct’ place for a large contiguous package to be installed would be `/opt`, so `/opt/llvm/head/` for the latest revision, which of course seems obvious once it is mentioned. I do agree that the source should remain somewhere in `~`. <comment327120> Note that /opt/llvm makes the same sense as /usr/local/llvm - just depends on which Unix like OS you are copying :) But both are for multi user - if only you then ~ is OK