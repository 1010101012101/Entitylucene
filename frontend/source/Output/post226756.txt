How to differentiate between Terminal scripted launch and manual launch for .bash_profile settings <body> I have some code.bash_profile/code settings that restore my last working directory every time I log in to my shell. However, I also use a program that opens a terminal window in the current directory open in Finder, and it does this by sending an event to Terminal using SBApplication.   Is there a way I can detect which way the Terminal was opened in my code.bash_profile/code? Right now the bash settings override the cd to app.   precode# Setting PATH for Python 3.4 # The orginal version is saved in .bash_profile.pysave PATH="/Library/Frameworks/Python.framework/Versions/3.4/bin" export PATH  # My settings trap 'printf %s "$PWD" &gt; ~/.storepwd' EXIT  cd "$(&lt;~/.storepwd)" /code/pre  <answer226771> You can display BASH variables on your code.bash_profile/code. Then compare the output when you manually open the terminal with output when cd to app opens the terminal.  I meant append at the beginning of your code.bash_profile/code the bash variables listed on the website:  precodeecho $BASH echo $BASHOPTS echo $BASHPID ... echo $TMPDIR echo $UID /code/pre  Then open manually the terminal and save the output. Open the terminal from cd to and save the output.  Compare the files.  hr  The proper variable for the above example is DIRSTACK.  Here are the new settings for those passing through:  precode# My settings if [ $DIRSTACK = "~" ]; then     trap 'printf %s "$PWD" &gt; ~/.storepwd' EXIT     cd "$(&lt;~/.storepwd)" fi /code/pre  <comment275393> Could you elaborate a bit on this, maybe include a working example too? <comment275551> `BASHOPTS` isn't set in the standard `bash` on OSX. <comment275555> Please edit your question adding the settings you've added to your `.bash_profile` that are relevant to this question. <comment275819> Thanks @jherran! The variable I was looking for is $DIRSTACK. <comment275820> Please add an answer instead of editing a solution into your question. You might add it to the accepted answer or the user jherran can do it <comment275821> BTW "PATH="/Library/Frameworks/Python.framework/Versions/3.4/bin" ...  export PATH" will probably break your PATH <comment275822> @klanomath thanks, new to this site. Yes, I quickly edited out some stuff in my path that I didn't think was relevant to the question and forgot to leave the :${PATH} at the end :P