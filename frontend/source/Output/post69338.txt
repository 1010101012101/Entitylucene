Upgrade from Snow Leopard to Mountain Lion in non personal & large scaled development environment <body> My company is still running Snow Leopard and we're thinking of upgrading to Mountain Lion soon. We are developing iOs and MacOsX applications and have a small break between the old projects and the new projects. What this means is, that we can start over with the new applications on the new version. But what happens to the old versions? They don't have ARC, Storyboards etc... I know you can switch off ARC but we want to make sure that we will still be able to commit updates to our old projects and we can't efford to put lots of time and effort in the conversion process.  I spent some time reading the user comments below the xCode update on the AppStore and read that the new Version deleted old projects. Of course we have a backup but this makes me uncertain if it's the right step.  Does anybody have experience how this works in a non personal environment? At home I'm running Mountain Lion and xCode converted small projects by itself. I'm just not sure about large scale projects...  <answer70051> strongTipps what to consider when doing an upgrade:/strong  hr  h2Before you start/h2  ul listrongTake your time for a good backup!/strong - You can regard data which is only located on one harddrive as non existend./li listrongStart with one system first/strong and try out everything before doing the major upgrade./li /ul  hr  h2Installation/h2  ul listrongConsider it takes way more time than it does at home!/strong The strongMountainLion Download took 5 hours/strong because of a symmetrical internet connection. strongInstallation time was ~1 hour/strong (MacMini 2009 - 4Gigs Ram 1067). strong+ xCode Downloadtime ~1hour/strong/li liBefore you install the new xCode make sure all your projects and your old xCode Dev Folder are backupped./li liWhen the installation routine asks you to delete your old xCode do so (I didn't do it and now I have to manually assign each project to the new xCode. I've to delete the old version manually too and it's a bit more complicated if you have to do the research which files you are allowed to delete and which not)/li liThen you have to download the different xCode libraries. There goes strongat least 1 additional hour/strong./li /ul  img src="https://i.stack.imgur.com/GOw4x.png" alt="Downloading the libraries"  ul listrongTime of the downloading- and installation process so far: ~8 hours. (Keep in mind we've a slow internet connection)/strong/li /ul  hr  h2Projects/h2  ul liCopy your projects and don't run your conversion and tests on the original./li liWhen you open the project you'll probably receive lots of warnings. strongDon't Panic!/strong/li liWhen clicking on the strongem"Validate Project Settings"/em warning/strong xCode will suggest to convert your project for you. I've done this for 3 iOs applications (Build Target: 4.3) now and it worked every single time. Let it create a snapshot for you. Just in case./li liIf your app has already been code signed you'll probably receive the strong"Target Integrity" warning/strong. In every single case it worked for me to edit the path for the "entitlement.plist". (Just click the warning and edit the path at "Code Signing Entitlements") img src="https://i.stack.imgur.com/kLIi8.png" alt="Code Signing Entitlements"/li liIt may happen that you've to change the deployment-target. To do so go to the strongProject Navigator/strong (strongemcmd + 1/em/strong), strongclick on your project's name/strong and then strongSummary/strong. There you can edit your Deployment Target./li liIf you get warnings on strongdeprecated methods/strong you should search stackoverflow.com for your particular case. If it has to do with strongemNSURLConnection/em/strong look here./li /ul  strongemTo be continued.../em/strong  <comment80572> The particulars and parculiarities of your applications and workflows can not be easily communicated, recreated or tested on anyone's machines but yours. I recommend you get a non-critical (and backed-up) machine and try to upgrade and use it normally in your shop for a while and see if anything comes up. <comment80573> That's what we were considering... Do you have any tips? Things we should keep in mind when migrating? <comment80575> You may lose the ability to compile ARMv6 applications? I'm not especially well-equipped to actually answer this question so you're welcome to ignore my totally unjustified opinion, but I genuinely think the best way to solve this is to just dive in. You will never prepare yourself fully by reading suggestions for things to look out for, and there's nothing to lose by just trying it on one or two machines. When you have, you will be able to come back and add a pretty useful answer to this question.