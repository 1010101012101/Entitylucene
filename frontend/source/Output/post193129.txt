Setting a clipboard kind without setting "styled Clipboard text" <body> I am developing a tool to add a HTML-ized version of a text to the clipboard. Currently, I'm using applescript to manipulate the clipboard.  Unfortunately, I realized that in addition to the entries I ask it to add, it also adds the entry codestyled Clipboard text/code. This, I believe, causes applications like Pages to fail to paste the HTML-ized version.  To see the current state of the clipboard I use (with the word "while" in the clipboard).  precode$ osascript -e "the clipboard as record" «class utf8»:while, «class ut16»:while, string:while, Unicode text:while /code/pre  I add the HTML variant as follows (the HTML is encoded as a hex string):  precode$ osascript -e "set the clipboard to ((the clipboard as record) &amp; {«class HTML»:«data HTML3c6d65746120636861727365743d277574662d38273e3c7072653e3c7370616e207374796c653d22636f6c6f723a20236364303063643b223e7768696c653c2f7370616e3e3c2f7072653e0a»})" /code/pre  After adding the HTML variant, the clipboard contains:  precodeUnicode text:while, string:while, styled Clipboard text:«data styl01000000000010000E00030000000C00000000000000», «class utf8»:while, «class HTML»:«data HTML3C6D65746120636861727365743D277574662D38273E3C7072653E3C7370616E207374796C653D22636F6C6F723A20236364303063643B223E7768696C653C2F7370616E3E3C2F7072653E0A», «class ut16»:while /code/pre  Pasting this into Pages (-09) cause the plain text version of the text to be inserted.  However, when copying the same from the gmail editor in Chrome it can be pasted with highlight information into Pages. In this case the clipboard contains:  precode«class utf8»:while, «class HTML»:«data», «class ut16»:while, string:while, Unicode text:while /code/pre  My conclusion is that the difference is the codestyled Clipboard text/code entry.  So, over to the real question. How can I set the HTML entry without setting the codestyled Clipboard text/code entry.  I have tried several approaches. For example, I have tried to set the clipboard to only contain a string and a HTML entry, but still the extra entry is included. I have also tried to set the codestyled Clipboard text/code entry to the empty string but that also set all the plain-text entries to the empty string as well.  I don't think the codepbcopy/code command line tool is powerful enough to do this, as it set the clipboard to a new value.  While I'm currently using applescript to do this, I'm open to using any tool available, preferably a scriptable one (so that I don't have to ask the users to perform a compilation).  <answer193224> After some investigation I found that you can manipulate the Pasteboard from Python, without having it introduce the codestyled Clipboard text/code entry. I reimplemented the ruby/applescript module in Python, so now I can copy syntax highlighted text from Emacs and paste it either into dumb applications like the terminal window or applications that can handle formatted text, like Pages.  <comment355118> Would you be willing to share a snippet of the Python? GitHub or here or on SO? Lots of people get very stuck on multiple clipboards on macOS. <comment355236> Yes, just click on the word "reimplemented" in the answer above.