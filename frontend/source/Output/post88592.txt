How to turn off the dictation beep? <body> For dictation on OS X, you have double-tap a key (I've set mine to codefn/code) to start dictating. It then does a strongvery irritating beep noise/strong. And when you hit return, it does another strongvery irritating beep noise/strong.  How do I turn off this strongvery irritating beep noise/strong, without turning down the system volume?  <answer89493> Tested:  ul liThere are 3 sound files for the 3 functions: start, cancel, and stop./li liThey are called:br codedt-begin.caf/code, codedt-cancel.caf/code, and codedt-confirm.caf/code (respectively). These have a mid, low, and high tone (respectively)./li liThey are located in: code/System/Library/PrivateFrameworks/AssistantServices.framework/Versions/A/Resources//code/li liYou can make a functional code.caf/code audio file by simply changing the extension of a code.aif/code/code.aiff/code file to code.caf/code./li liYou can convert from another format or create a code.aif/code/code.aiff/code in iTunes, Garageband, most audio editing programs, etc./li liIf you put a store-bought music CD in your computer you will often see the tracks as code.aiff/code, not code.aif/code files. However, they are the same format. An analogy is code.jpg/code and code.jpeg/code. The only difference I know of being you can set different programs to open each by default./li /ul  Power users should mostly be able to take it from here, and/or skip to emStep 10/em.  For the rest:  Notes for novice audio conversion folks:br AIFF stands for Audio Interchange File Format.br If you put a CD in your computer the files will have .aiffbr If you convert files with iTunes you will end up with .aif (missing second 'f')br If you convert files with other programs you may be able to choose, or set ahead of time, or will simply get what the devs decided you get.  To convert a bit of (optionally silent) audio in iTunes 11 to an aiff file:br Turn off Dictation: (System PreferencesSystem(tab)Dictation&amp;Speech(button))  ol liiTunes(menu)Preferences(menu-item)brGeneral(tab)Import Settings...(button)Import Using(menu)  brchange to: AIFF Encoderbr click codeOK/code (button)./li liFind a song with a silent intro (fastest), or segment, or any sound that you like./li liGet Info on the song (command-i, or right-click, or control-click, or File(menu)Get Info). Go to the codeOptions/code tab./li liEdit the Start and Stop times to bracket the portion you want for the new sound (this may be 10 milliseconds of silence, up to you). The check-box(es) will automatically tick themselves if you edit the time(s). Click codeOK/code. (Do not worry, this is non-destructive and the times will be reset back to the correct ones down to the thousandth of a second if you uncheck the boxes and click OK again, I will remind you at the end to do this.)  ul li**If you want NO sound, DO NOT simply remove the relevant files from the framework. Follow the directions herein and make a "silent" piece of audio from a quiet part of a song./li liYou can use any combination of the default sounds and your own./li liYou can use emother/em built-in system sounds, like alerts, etc. Just go to code/System/Library/Sounds/code and copy your favorite alert sound(s) and rename as appropriate (see the following steps)./li /ul/li licontrol-click, or right-click, or File(menu)Create New Version and select codeCreate AIFF Version/code. Then from either menu from the first sentence of this step select codeShow In Finder/code, or hit command-shift-r./li liGo to Finder and open a new Finder window (command-shift-n) so you have two windows open. In the new window, navigate to emthe/em directory with the default dictation sounds (for the novice do this: by highlighting, then copying (command-c) the following line (it works, it's different from the emactual/em directory path, given at the top of the answer, if you want you can use that one instead, the codeResources/code in the following string is merely an in-built emalias/em or emsym-link/em):br code/System/Library/PrivateFrameworks/AssistantServices.framework/Resources/codebr hit command-shift-g, then command-v to paste in what you just copied, then hit return)/li liBack-up the original files (they are called:br codedt-begin.caf/code, codedt-cancel.caf/code, and codedt-confirm.caf/code) by dragging them to a folder you create somewhere specifically for the purpose of backing up in case something goes wrong or you don't like your new custom sound files. Sometimes I like to name the folder the the path to the directory where the system files came from with modifications like this. Since you can now include the code//code character in filenames this is not a problem (typically). If you want the best of both worlds simply make an empty directory in your backup directory with the path-as-name next to the files you just backed up, so if there's a problem with some third-party backup program it will fail copying an empty directory, no great harm. emDirectory/em and emfolder/em are interchangeable terms herein. Once they're backed up, delete them from the codeResources/code folder. You will have to authenticate as an admin since they are protected system files. /li liNow, in the other window showing the new music file you created (in your iTunes library somewhere) rename the file to whatever sound file you are replacing. If replacing all three default sounds with the same file, duplicate it by highlighting it and hitting command-d twice, or three times if you want to keep the ORIGINAL filename/file in your iTunes library for any reason. Then rename them appropriately, as per step 7. Confirm you want to change the extension. Then hold down option to emcopy/em them to the codeResources/code folder. You will have to authenticate again./li liCleanup time (before we forget. This is the second to last step):  ul libackup the 3 (or 4) files you just made/renamed to a folder as well. This way you should always be deleting or REPLACING the files in the codeResources/code folder by emcopying/em and you'll always have a backup of your custom set and the original set./li lidelete the renamed custom files from the iTunes library folder they were in if you didn't emmove/em them in the sub-step before this one where you backed them up./li liif you don't want the original modified song file in iTunes you can move it too, or you can leave it in there for reference. If you moved it in the previous sentence or at the beginning of cleanup, then highlight it in iTunes and hit the 'Delete' key, then confirm, I would move to trash if it's there still and you don't want it./li ligo back into iTunes and emGet Info/em on your emoriginal/em song file, and go back to codeOptions/code to change the Start/Stop times back to original by unchecking the boxes and hitting 'OK' (iTunes will automatically get the correct Stop time, don't worry!), like in step 4./li /ul/li liNow that you've changed the files with Dictation strongoff/strong you can either:  ul lia) Reboot (if Dictation was turned on since the last time you booted up, or if you don't know, or just to be as sure as possible you're having a good shot)br/li lib) kill the 'strongassistantd/strong' process owned by 'you'. (If you don't know what this means, just reboot, there's been enough hand-holding so far.)br/li liOnce your computer comes back on, log-in and go to System Preferences to Re-Enable Dictation./li /ul/li /ol  Power User / Activity Monitor Notes:br  ul listrongDO NOT/strong simply remove the relevant files from the framework if you want a 'silent' notification (replace them with silent sound files). This will cause a crash of the relevant processes, and spawn the ReportCrash process, and dictation will fail to recognize any audio input, and assistantd will have 'unexpected' behavior./li liThree (3) Principle processes are launched when Dictation is turned on (all run by the user):  ol listrongassistand/strong is launched first, and doesn't quit on its own./li listrongDictation/strong is then launched a few seconds later, and auto-quits ~6 seconds after Dictation is turned off normally (in System Preferences)./li listrongABAssistantService/strong is launched a few seconds after strongDictation/strong and I believe it is gathering and then passing to emassistantd/em to upload some amount of emAddressBook/em data, then quits. This happens if it's been ~45 seconds since the last launch. (See this question on A.SE for more research me and others did.)/li /ol/li liIf you kill the strongassistantd/strong process while Dictation is turned on in System Preferences it will just relaunch./li lias a side note, multiple strongcom.apple.audio.ComponentHelper/strong and strongcom.apple.audio.SandboxHelper/strong (a duplicate of an older process owned by _coreaudiod) were spawned with user ownership when playing around a bit too heavy handedly with changing the code.caf/code files emsometimes/em, emusually/em together. /li /ul  <answer268519> Here's an even easier way. It works for dictation in general, across all apps (including Siri): http://www.iphonehacks.com/2012/10/adjust-sirs-volume-independently-from-iphone-volume.html     It’s very simple (and actually very obvious). There is a separate volume control for Siri, just the way there is a separate volume control for media, and for the ringer &amp; alerts.      In case you haven’t figured it out yet, then here’s how to adjust Siri’s volume:      Press the Home button until Siri launches   Now use the volume buttons on the side of your iPhone and iPad to adjust Siri’s volume. [Interestingly, you can’t turn the volume down completely, just to the last notch]"   <comment125215> Fantastic answer, detailed, well-formatted, in-depth. <comment353927> This was great to read. Thanks! <comment353930> On iOS, you can also replace the system .caf with the method outlined in NOTjust's post. However, the location of this file I have currently forgotten.