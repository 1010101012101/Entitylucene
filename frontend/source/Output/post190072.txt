Is there any way to upgrade brew cask <body> Is there any way to upgrade all codebrew cask/codes? Something like codebrew cask upgrade/code?  <answer190075> From the codehomebrew cask/code documentation:     Since the homebrew-cask repository is a Homebrew Tap, you'll pull down   the latest Casks every time you issue the regular Homebrew command   codebrew update/code. Currently, homebrew-cask cannot always detect if an   Application has been updated. You can force an update via the command   codebrew cask install --force/code. We are working on improving this.   The following should be enough to upgrade both brew formulaes and casks.  precodebrew upgrade --all  /code/pre  <answer215224> As the quote in the other answer says, there is currently no way to upgrade all updated casks.  The second part of the answer is wrong, though: codebrew upgrade --all/code cannot upgrade casks.  The only way to upgrade all casks is to get a list of the installed casks and force them to be reinstalled - including those that have not changed!  In fish, you could do that like this:  precodefor app in (brew cask list)     brew cask install --force $app end /code/pre  hr  edit:    Atais created a script that works: Bash script to upgrade packages.br Please upvote his answer rather than this one.  <answer220476> Here's what I have in my .bash_profile that I run to do a full upgrade pass of homebrew. I "pin" a couple items to keep gigantic downloads from being repeatedly fetched for every update, because their versions are always "latest" or they shouldn't be upgraded.  precodeboop() {   brew update &amp;&amp; brew upgrade &amp;&amp; brew cleanup \     &amp;&amp; cask-upgrade &amp;&amp; cask-retire &amp;&amp; brew cask cleanup \       &amp;&amp; brew doctor &amp;&amp; brew cask doctor }  __is_pinned() {   local pinned=";pixate-studio;sketchup;skype;"   [[ *";${1};"* != "${pinned}" ]] &amp;&amp; return 0 || return 1 }  cask-upgrade() {   while read -r; do     reply=(${REPLY})     name="${reply[0]}"     vers="${reply[1]}"     if ! __is_pinned "${name}"; then       if [[ "${vers}" == "latest" ]]; then         brew cask install "${name}" --force       else         brew cask install "${name}" 2&gt; &gt;(grep -v "re-install")       fi     fi   done &lt; &lt;(brew cask list --versions) }  cask-retire() {   room="/opt/homebrew-cask/Caskroom"   while read -r; do     reply=(${REPLY})     name="${reply[0]}"     vers="${reply[1]}"     if ! __is_pinned "${name}"; then       for inst in $(ls "${room}/${name}"); do         if [[ "${inst}" != "${vers}" ]]; then           echo "Removing ${name} version ${inst}"           rm -r "${room}/${name}/${inst}"         fi       done     fi   done &lt; &lt;(brew cask list --versions) } /code/pre  <answer231020> h2strongBash script to upgrade packages/strong/h2  eminspired by Pascal answer/em   precode#!/usr/bin/env bash  (set -x; brew update;)  (set -x; brew cleanup;) (set -x; brew cask cleanup;)  red=`tput setaf 1` green=`tput setaf 2` reset=`tput sgr0`  casks=( $(brew cask list) )  for cask in ${casks[@]} do     version=$(brew cask info $cask | sed -n "s/$cask:\ \(.*\)/\1/p")     installed=$(find "/usr/local/Caskroom/$cask" -type d -maxdepth 1 -maxdepth 1 -name "$version")      if [[ -z $installed ]]; then         echo "${red}${cask}${reset} requires ${red}update${reset}."         (set -x; brew cask uninstall $cask --force;)         (set -x; brew cask install $cask --force;)     else         echo "${red}${cask}${reset} is ${green}up-to-date${reset}."     fi done /code/pre  strongWhat it does/strong  ul liupdate brew/brew cask, cleanup/li liread the casks list/li licheck the codebrew cask info/code for the newest version/li liinstall new version if available (and removes all old versions!)/li /ul  strongsource:/strong https://gist.github.com/atais/9c72e469b1cbec35c7c430ce03de2a6b  strongone liner for impatient:/strong   precodecurl -s https://gist.githubusercontent.com/atais/9c72e469b1cbec35c7c430ce03de2a6b/raw/36808a0544628398f26b48f7a3c7b309872ca2c6/cask_upgrade.sh | bash /dev/stdin /code/pre  strongsave as/strong code/usr/local/bin/cask-upgrade/code, so you can run it locally as codecask-upgrade/code later  <answer235666> To reinstall brew cask apps in zsh:  precodebrew cask update;  for app in $(brew cask list); do     brew cask uninstall --force ${app}     brew cask install --force ${app}     done /code/pre  <answer236482> precodefor app in $(brew cask list); do     cver="$(brew cask info "${app}" | head -n 1 | cut -d " " -f 2)"     ivers=$(ls -1 "/opt/homebrew-cask/Caskroom/${app}/.metadata/" | tr '\n' ' ' | sed -e 's/ $//')     aivers=(${ivers})     nvers=$(echo ${#aivers[@]})     echo "[*] Found ${app} in cask list. Latest available version is ${cver}. You have installed version(s): ${overs}"     if [[ ${nvers} -eq 1 ]]; then         echo "${ivers}" | grep -q "^${cver}$" &amp;&amp; { echo "[*] Latest version already installed :) Skipping changes ..."         continue; }     fi     echo "[+] Fixing from ${ivers} to ${cver} ..."     brew cask uninstall "${app}" --force     brew cask install "${app}" done /code/pre  <answer248470> This has really irked me so I created this script to update all Brew apps and allow the user to choose which Cask apps to update. You can exclude apps from consideration too.  https://github.com/derrekyoung/ScriptsAndUtils/blob/master/brew-cask-upgrade.sh  <answer253717> h2stronghomebrew-cask-upgrade/strong/h2  strongI think this is by far the best solution to upgrade the casks./strong br emsource:/em https://github.com/buo/homebrew-cask-upgrade  strongInstallation &amp; usage/strong  precodebrew tap buo/cask-upgrade brew update brew cu /code/pre  (Optional) Force upgrade outdated apps including the ones marked as latest:  precodebrew cu --all /code/pre  <answer258600> I recommend @eduncan911's answer in the counterpart question on Stack Overflow.  In short:  ul li$ codebrew-cask.sh/code just lists an output similar to Homebrew's codebrew update/code. the list above shows all packages installed, with a green codeâœ”/code indicating any pending updates./li li$ codebrew-cask.sh/code upgrade will force the upgrade of those packages./li /ul  Install from his repo with:  precode$ curl -L https://raw.githubusercontent.com/eduncan911/dotfiles/master/bin/brew-cask.sh --create-dirs -o ~/bin/brew-cask.sh $ chmod 755 ~/bin/brew-cask.sh /code/pre  Then use it like this:  precode$ brew-cask.sh $ brew-cask.sh upgrade /code/pre  <answer270114> I made such script by myself. Please look at the github https://github.com/pesh1983/brew_cask_upgrade. It has pretty good description, but if you have any additional question, feel free to ask me. It does fair upgrade: uninstall and install, so any necessary cleanup will be performed by 'brew' itself.  <comment265125> Well, mind that it will actually reinstall all your apps, not just update the outdated :( <comment282141> Worked like a charm.  Would be nice to query for a list first of out of date packages first though.  Easy enough to tweak the script to do it. <comment289393> This is unreadable - also needs explanation of what it does <comment289512> This isn't very good for users who might have a lot of `brew cask` installations that require user input _(e.g. - quartz)_. Also, it's not necessary to uninstall every application before re-installing it. Ideally you should also run an update like `brew cask update` first. <comment289513> To upgrade cask listings, you should run `brew cask update` then follow the earlier response to upgrade only the packages that are currently out of date here: http://apple.stackexchange.com/a/231020/49601 <comment289626> @Danijel-JamesW I rolled your change back because it was wrong. It might be the way to do it in other shells, but it isn't in fish. <comment289873> Thank you! Have you tried to get this integrated directly into Homebrew Cask? I just converted it to fish and it works for me as well. It also revealed to me that some old versions were still present after I had installed the current ones. <comment292155> You need to run `brew cask uninstall --force` before installing the new version if you do not want the old version to stay there. <comment292157> @Danijel-JamesW Unfortunately it is if you do not want the old version to stay. <comment292429> @Pascal yeah I noticed I have a lot of old versions stacked here too. Soon I will add uninstall command. <comment326633> @Atais does the deinstallation still consistently work for you? Some casks now leave an empty folder with the version number with my script, which messes with the version checking. <comment326767> @Pascal to be honest I am now using homebrew-cask-upgrade :) <comment336538> This is not true anymore. `brew upgrade --all` is equivalent to `brew upgrade` now. Casks are not upgraded by that command.