How to create own filename extension? <body> I want to have an extension, named .content, to store all files in it that are linked to the filename. The extension ".content" should be recognized by the OS as a file extension rather than a regular map. The files in the extension should be only reached by opening the extension by the option "Show Package Contents". I hope someone can offer me a solution to my problem.  <answer90079> OS X ships with a set of extensions that map to specific applications (and most of these map to Apple provided apps) so you could petition Apple to make the change, but that would be unlikely.  The other mechanism to inject a specific .extension to Application mapping into the Launch Services database is to install an Application that tells the system to map certain file types and extensions to that specific Application.  So, to keep things on-topic here let's just direct you to Stack Overflow to ask how to make your own Application. If you're not looking to develop an application,  you could also just modify the app you want to open your custom file extension by changing it's interal info.plist file:  ul liAbout Information Property List Files for OS X Applications/li /ul  Sorry if this level of detail is more technical than you want, but I wanted to answer this for anyone that needs to know how to modify things.  <answer90117> Folders that end with .bundle already act that way. They are opened in Terminal by default though.  img src="https://i.stack.imgur.com/XLgFr.png" alt=""  The file type is defined in code/System/Library/CoreServices/CoreTypes.bundle/Contents/Info.plist/code:  precode&lt;dict&gt;     &lt;key&gt;UTTypeConformsTo&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;com.apple.bundle&lt;/string&gt;         &lt;string&gt;com.apple.package&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;UTTypeDescription&lt;/key&gt;     &lt;string&gt;bundle&lt;/string&gt;     &lt;key&gt;UTTypeIdentifier&lt;/key&gt;     &lt;string&gt;com.apple.generic-bundle&lt;/string&gt;     &lt;key&gt;UTTypeTagSpecification&lt;/key&gt;     &lt;dict&gt;         &lt;key&gt;com.apple.ostype&lt;/key&gt;         &lt;string&gt;BNDL&lt;/string&gt;         &lt;key&gt;public.filename-extension&lt;/key&gt;         &lt;string&gt;bundle&lt;/string&gt;     &lt;/dict&gt; &lt;/dict&gt; /code/pre  To make folders that end with .content be treated as packages, add an entry like this:  precode&lt;dict&gt;     &lt;key&gt;UTTypeConformsTo&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;com.apple.bundle&lt;/string&gt;         &lt;string&gt;com.apple.package&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;UTTypeIdentifier&lt;/key&gt;     &lt;string&gt;my.content&lt;/string&gt;     &lt;key&gt;UTTypeTagSpecification&lt;/key&gt;     &lt;dict&gt;         &lt;key&gt;public.filename-extension&lt;/key&gt;         &lt;string&gt;content&lt;/string&gt;     &lt;/dict&gt; &lt;/dict&gt; /code/pre  Then rebuild the Launch Services database to apply the changes:  code/System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/Support/lsregister -kill -domain local -domain system -domain user/code  img src="https://i.stack.imgur.com/4oyCx.png" alt=""  You could also add this to a CFBundleDocumentTypes array in the Info.plist of any application:  precode&lt;dict&gt;     &lt;key&gt;CFBundleTypeExtensions&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;content&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;CFBundleTypeRole&lt;/key&gt;     &lt;string&gt;None&lt;/string&gt;     &lt;key&gt;LSTypeIsPackage&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; /code/pre  To apply changes, rebuild the Launch Services database or touch the application bundle. If the application is signed, modifying the Info.plist invalidates the code signature though.  <comment105742> This is Off topic here this is a question about writing an application. SO better on StackOverflow. However as a start look at Apple's bundle [doc](http://developer.apple.com/library/mac/#documentation/CoreFoundation/Conceptual/CFBundles/DocumentPackages/DocumentPackages.html#//apple_ref/doc/uid/10000123i-CH106-SW1) <comment105745> Mark - If the implied question is how to develop an app, then yes, this is off-topic, however there is lots of room to answer _how_ things work and perhaps let the OP edit an existing app to see if they can tweak the launch services database to suit their needs. It's more of a "not detailed enough" question and I wouldn't object to it being closed for that reason since more detail is needed to really know what the OP wants.