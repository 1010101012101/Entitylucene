Submenu for services <body> I have written a small application and want to allow other applications to share data with it.   My first idea was to integrate it into the service menu. However, I need dynamically populated submenus and the Apple dev page for System Services states that "There are no submenus in the Services menu" since 10.6.  Are there any alternatives for integrating into the context menu of other applications strongand/strong having submenus?  <answer80759> A better place to ask is probably the programmer forum https://stackoverflow.com/questions/tagged/osx  But offhand I think you can make a few different variants of your code.app/code each one registering their own Services action.  Those variants could then launch your "main" app to do the heavy lifting.  These variants could be bundled stronginside/strong the main application, like I see some examples here:  pre /Applications/Adium.app/Contents/Frameworks/Sparkle.framework/Versions/A/Resources/finish_installation.app /Applications/Android File Transfer.app/Contents/Frameworks/Breakpad.framework/Versions/A/Resources/crash_report_sender.app /Applications/Android File Transfer.app/Contents/Resources/Android File Transfer Agent.app /Applications/Android File Transfer.app/Contents/Resources/Android File Transfer Agent.app/Contents/Frameworks/Breakpad.framework/Versions/A/Resources/crash_report_sender.app /Applications/Google Chrome Canary.app/Contents/Versions/26.0.1400.0/Google Chrome Framework.framework/Resources/app_mode_loader.app /Applications/Google Chrome Canary.app/Contents/Versions/26.0.1400.0/Google Chrome Framework.framework/Resources/crash_report_sender.app /Applications/Google Chrome Canary.app/Contents/Versions/26.0.1400.0/Google Chrome Helper EH.app /Applications/Google Chrome Canary.app/Contents/Versions/26.0.1400.0/Google Chrome Helper NP.app /Applications/Google Chrome Canary.app/Contents/Versions/26.0.1400.0/Google Chrome Helper.app /Applications/Quicksilver.app/Contents/Resources/QSDroplet.app /Applications/Stainless.app/Contents/Helpers/StainlessClient.app /Applications/Firefox.app/Contents/MacOS/crashreporter.app /Applications/Firefox.app/Contents/MacOS/plugin-container.app /Applications/Firefox.app/Contents/MacOS/updater.app /Applications/TextMate.app/Contents/SharedSupport/Bundles/ActionScript.tmbundle/Support/bin/XTrace.app /Applications/TextMate.app/Contents/SharedSupport/Support/bin/CocoaDialog.app /Applications/TextMate.app/Contents/SharedSupport/Support/bin/CommitWindow.app /Applications/Xcode.app/Contents/Applications/Accessibility Inspector.app /Applications/Xcode.app/Contents/Applications/Application Loader.app /Applications/Xcode.app/Contents/Applications/FileMerge.app /Applications/Xcode.app/Contents/Applications/Instruments.app /Applications/Xcode.app/Contents/Applications/OpenGL ES Performance Detective.app ... /pre  <answer81124> One alternative might be the AppleScript menu. It presents all scripts in the code~/Library/Scripts//code folder, and preserves the hierarchy of subfolders.  Issues:  ul liYou'd have to build AppleScript support into your app./li liYou'd have to build a bunch of AppleScripts to expose your functionality./li liThe AppleScript menu is disabled by default./li liIt's a kludgy hack./li /ul  <answer81126> Another alternative would be to expose only the top-level services, and then make it your app's responsibility to display the "submenu" choices.  This lends the benefit of putting you in control of keyboard shortcuts for the secondary choices. The user also gains a cleaner list of services.  <comment93558> That's probably the way I'll go as the other solutions also don't allow dynamic creation of entries. <comment93560> Nice idea but doesn't allow dynamic population of submenus (sorry for adding this requirement just now!). <comment93561> Didn't know about this possibility, great find! But it doesn't allow dynamic population of submenus (sorry for adding this requirement just now!)