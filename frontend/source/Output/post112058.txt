Why is my 'launchd' task not responding to changes in watched files? <body> I have a codelaunchd/code task that is not triggering when a file changes, and can't figure out why it's failing.  When I load the code.plist/code below with  precodelaunchctl load /Users/Rax/Library/LaunchAgents/com.crashplan.status.plist /code/pre  the specified script is executed (once) and runs as expected (I can also run it successfully directly from the command line). But when the file on the watch path (code/Library/Logs/CrashPlan/history.log.0/code) changes, nothing happens.  What could be missing that prevents the this task from responding to the file change?  hr  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.crashplan.status&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Users/Rax/Library/Automation/Shell/crashplan_status&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;WatchPaths&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Library/Logs/CrashPlan/history.log.0&lt;/string&gt;     &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <answer112373> FWIW I tried it here and it seems to be working for me. Any time I manually appended something to /Library/Logs/CrashPlan/history.log.0 the script did get triggered.  As such, this isn't really an answer, but it’s more a series of tips for debugging codelaunchd/code:  h2A few tips for diagnosing launchd:/h2  1) Use the codestdout/code and codestderr/code paths and see if anything gets logged to them. You can do that by adding these lines to your codecom.crashplan.status.plist/code file.  precode&lt;key&gt;StandardErrorPath&lt;/key&gt; &lt;string&gt;/tmp/com.crashplan.status.stderr.log&lt;/string&gt; &lt;key&gt;StandardOutPath&lt;/key&gt; &lt;string&gt;/tmp/com.crashplan.status.stdout.log&lt;/string&gt; /code/pre  (If multiple people use the same Mac, you might want to use a different path than /tmp/ but if it’s only you then it is as good of a place as any.)  2) With #1 you might also want to adjust your script (/Users/Rax/Library/Automation/Shell/crashplan_status) to include debugging info such as when it started and when it finished. That can be as simple as something like this added near the top of the script:  precodeecho "$0: started at `date`" /code/pre  and something like this near the end  precodeecho "$0: finished at `date`" /code/pre  3) With #2 you might also want to use something like terminal-notifier to show you when your script is being called, at least until you get past the debugging stage.  4) If none of that helps, you should check the exit status of whatever commands that you are calling in codecrashplan_status/code and see if those are exiting properly. For example, let's say that you were running codeecho/code in your codecrashplan_status/code   5) Is your environment in codelaunchd/code different from your shell in some way? This is best verified by adding this line near the top of your launchd script:  precode/usr/bin/printenv | /usr/bin/open -ef /code/pre  which will cause the codeprintenv/code to be sent to the stdout and the results opened in TextEdit.  The most common 'environment' problem that I run into is not having the $PATH set properly for launchd. It’s usually set in your shell init files such as .bashrc and inherited by any shell scripts you run from Terminal, but won't be for codelaunchd/code.  strongYou can see the path that codelaunchd/code is using by:/strong  precodelaunchctl getenv PATH /code/pre  strongIf you want to set it, you can set it by/strong  precodelaunchctl setenv PATH /code/pre  for example, for my system it would be:  precodelaunchctl setenv /Users/luomat/Dropbox/bin:/usr/local/bin:/usr/bin:/usr/sbin:/sbin:/bin /code/pre  If you don't want to have to remember to set that every time you start your computer, you can add it to code/etc/launchd.conf/code by adding a line this:  precodesetenv PATH /Users/luomat/Dropbox/bin:/usr/local/bin:/usr/bin:/usr/sbin:/sbin:/bin /code/pre  obviously change that to match your system. Also, don't be surprised if code/etc/launchd.conf/code doesn't exist on your system. You may have to create it. To do that, I recommend a simple:  precodesudo pico -w /etc/launchd.conf /code/pre  and when you are done editing, press kbdcontrol/kbd + kbdX/kbd and follow the prompts to save the changes.  <answer158422> I know this is an old post, but as it has no real answer, I'll just post a suggestion.  Do you still have the problem or has it been solved finally ? If not I may have a clue as I experimented the same problem.  In terminal, check if your watched file has extended arguments by using this command :  precodels -l@ /code/pre  If your file has extended arguments like this :  precodecom.apple.quarantine    32 /code/pre  try and type this command to remove extended arguments (use sudo if necessary) :  precodexattr -d -r com.apple.quarantine /Library/Logs/CrashPlan/history.log.0 /code/pre  in your case…  Looks like launchd watchpaths ignore files that have quarantine extended argument…  Hope it can help. 