Change background image with Time <body> I created 288 different earth renders depending on sun position (one for every 5 earth minutes) based on this file from blendswap. It the image sequence starts at noon and ends at noon. I would like to set at each time of day the correct image as background image on OS X (eg at 12.00 it should be image No 1 at 18:00 it should be image No 72 ). How could I do that.  (The Original Idea was to use the "change background image every 5 minutes" setting in OS X background settings, but it only changes the picture if the computer is awake. Therefore the sequence would be out of sync every time I shut down the computer  btw I uploaded the Files   https://dl.dropbox.com/u/19023009/Blender/background.zip  They are at full Retina resolution at 650MB. + blendfile + license.  <answer57179> This might be an unfortunate answer, but i'd suggest making a Quartz composition for this, turn it into a screen saver, and use one of many available tricks for running screen savers as a wall paper.  <answer57271> Thank you for your input  So finally I managed to do it (at least I think so)   I embedded an Applescript to change the background in a shell script which I added it to launchd.    This is what it looks like:  Script "scriptly.sh"  precode#!/bin/bash osascript -e ' set myhour to get the (hours of (current date)) set myminutes to get the (minutes of (current date)) set mypicturenumber to (myhour - 12) * 12 + myminutes / 5 as integer if mypicturenumber &lt; 0 then     set mypicturenumber to (288 + mypicturenumber) end if set picnumber to 0 if mypicturenumber &gt; 99 then     set picnumber to "0" &amp; mypicturenumber end if  if (99 ≥ mypicturenumber) = (9 &lt; mypicturenumber) then     set picnumber to "00" &amp; mypicturenumber end if if 9 ≥ mypicturenumber then     set picnumber to "000" &amp; mypicturenumber end if tell application "Finder"     set desktop picture to {"Macintosh HD:users:USERNAME:Individualfile:backgrounds:earth:earth24h" &amp; picnumber &amp; ".png"} as alias end tell ' /code/pre  launchd file "com.individual.Background.plist"  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.individual.Background&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/bin/sh&lt;/string&gt;         &lt;string&gt;/Users/USERNAME/Individualfile/scriptly.sh&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;StartInterval&lt;/key&gt;     &lt;integer&gt;300&lt;/integer&gt;     &lt;key&gt;UserName&lt;/key&gt;     &lt;string&gt;USERNAME&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  command to put it in action  launchctl load /Users/USERNAME/Individualfile/com.individual.Background.plist   EDIT:   The last command is there to load the script directly, however It will not be executed on startup. To do That you have to copy the file   com.individual.Background.plist  to the ~/Libary/LaunchAgents/ folder.  <answer57305> Here's a shorter version of the script:  precode#!/bin/bash  n=$(((($(date +%H)-12)*12)+$(date +%M)/5)) [[ $n -lt 0 ]] &amp;&amp; n=$((n+288)) n=$(printf %04d $n)  osascript -e "tell app \"Finder\" to set desktop picture to POSIX file \"/Users/username/Desktop/background/earth24h$n.png\"" /code/pre  You could run the script every five minutes by editing the crontab with codeEDITOR=nano crontab -e/code and adding a line like code*/5 * * * * ~/script.sh/code. Unlike the LaunchAgent, it wouldn't be run after waking up from sleep though.  <comment65615> Can you please revise your question to clearly state the problem you are trying to solve? As it's written now, it doesn't really make sense. <comment65618> yep you are right and there is even a error in my thought <comment65628> I would recommend to separate the scheduling from the picture selection to avoid the sleep issue. Just have a launchd job running a shell script every 5 minutes, the script can then figure out which image needs to be displayed. <comment65645> yes my thoughts as well thanks. Do you know what the difference is between a Cron job and a launchd job? And how I add one. I am close to finishing the apple script to change the background. Soon I will need to figure out how I can run it on shedule. The good thing is, that it doesn't need to be exact because the image barely changes in 5 minute steps. And I would need it to run everytime I wake up/start the computer. <comment65646> launchd handles wake up scenarios better than cron so I would definitively go with launchd. I don't know whether you can execute Applescripts from either one though. <comment65729> Good idea in general,I would need to look how I can make a time dependent screensaver. <comment65736> Quartz Compositor probably has goodies in the library for tracking time (can't confirm right now) <comment65740> Just finished the Applescript. I am going to add a launchd job to run the script every 5 minutes <comment65755> You want a third party app suggestion which can do this or you want to write a script for this ? <comment65756> I would rather write my on script, I found some third party apps myself already but I don't believe it would be to hard to do it myself. I already now how to change a background image with applescript (at least I believe) the interesting part is to execute it every 5 minutes according to system time <comment65757> I think I am going to mix [this](http://superuser.com/questions/44849/user-friendly-way-to-schedule-jobs-in-mac-os-x) together with the automator action of changing the background <comment65808> The third condition in the script looks wrong. You could also run the AppleScript directly with something like `stringosascript/stringstring/Users/username/script.scpt/string`. The `UserName` key is not needed in per-user services saved to `~/Library/LaunchAgents/`. <comment65834> Thanks for that, it told me in the console, that it the private key was not necessary and would be ignored, so I didn't change it. And the I wasn't sure if I could launch it directly with osascript, because osascript was throwing errors because of some permission to change user things when I ran it from the commandline <comment65835> nice shell coding. I don't have that kind of skill level.