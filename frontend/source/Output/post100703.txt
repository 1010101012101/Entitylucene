How do I run sudo command from standard account? <body> From what I've read, it is good security approach to have two accounts, one admin and one standard.  I am trying to run the following command in terminal on my standard account  precodesudo mv /System/Library/CoreServices/Search.bundle /System/Library/CoreServices/Search.bundle.bak killall SystemUIServer /code/pre  It asks for a password at which point the process fails because the current user "is not in the sudoers file."  Is it asking for my admin account password or root password?  Do I have a root account/password if I haven't explicitly set one up? How do I temporarily elevate my access to execute the command without necessarily enabling root?  <answer100704> The system is asking for the password of your account and then verifies whether you are allowed to run sudo based on the content of code/etc/sudoers/code. By default only Administrators (which have the option ticket in Preferences) are allowed to do this.  In case you want to run shell commands with sudo without having to switch users all the time you have several options:  ul liUse codessh &lt;any-admin-user&gt;@localhost/code to log in as an admin user and run sudo then /li liAdd your non-admin user to code/etc/sudoers/code by logging in as an admin user, executing codesudo visudo/code in Terminal, duplicating the code%admin    ALL=(ALL) ALL/code line and replacing code%admin/code with your username. This will allow you to use sudo in Terminal without giving you full admin access. Using codevisudo/code instead of editing the file directly will ensure that the file gets checked for syntactical correctness on save (an error in code/etc/sudoers/code might lock you out of your system completely)/li /ul  <answer108960> Open Terminal and login to your administrator account. It should look like this:  precodeMyComputer:~ MyStandardAccount$ login MyAdminAccountName Password: &lt;enter password here&gt; --The text you type will be invisible so no one can see the password MyComputer:~ MyAdminAccount$ sudo mv /System/Library/CoreServices/Search.bundle /System/Library/CoreServices/Search.bundle.bak killall SystemUIServer Password: &lt;enter password here&gt; --Text will be invisible again MyComputer:~ MyAdminAccount$ logout MyComputer:~ MyStandardAccount$ /code/pre  <answer126420> I answered a similar question here  hr  Seems like you could use the strongSU/strong command to switch to another user in Terminal. Once you've switched to the admin user you can use sudo commands coupled with the admin account's password.  For example, when I'm at one of my end user's Macs and I need to run something with elevated privileges (chown for example) without logging out and into the admin account (ladmin) I would use something like this (in bold):  emMr-Rabbits-Mac:~ notadminuser$/em strongsu ladmin/strong  This will prompt for the ladmin account's password, once entered you will see a bash command prompt.  From here I can run any sudo commands desired, entering ladmin's password as needed...  embash-3.2$/em strongsudo chown user2 /some/folder/strong  This will run the chown command using the now logged in ladmin user, prompting for the ladmin account's password.  Once finished you can type strongexit/strong to return to your logged in user's prompt.  Screenshot of similar process, only using sudo to run the ls command (just for example). img src="https://i.stack.imgur.com/E5St9.jpg" alt="enter image description here"  <comment127573> ssh is a bit overkill for this, and requires that you actually have sshd running. `su ` would be better. <comment129657> If the asker has lost control of this account, just register a new account and flag this for moderator assistance in merging the accounts if the self-merge portion of [help] doesn't work.