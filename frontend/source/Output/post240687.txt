Log file that `sudo last` accesses? <body> The bash command codelast/code (needs sudo) prints out logs, which contain information on when different users log in/out of the shell.  I have been looking for the file that stores this information, that codelast/code would access. I have checked code/var/log/system.log/code and other files within code/var/log/code.  I have looked everywhere on the internet as well, and cannot find the location.  I have, however, confirmed that the file is within code/var/log/code, because when I did coderm -rf /var/log//code, codesudo last/code showed empty output until the next time I logged in.  Which file is it? Thanks.  (I am using OS X Mavericks if it makes a difference.)  <answer240690> The file (executable) in question is code/var/run/syslog/code  If we execute codeman last/code we get  precodeSEE ALSO      lastcomm(1), utmpx(5), ac(8) /code/pre  We can find codeutmpx/code in the code/var/run directory/code  Utmpx is a user accounting database of strongcurrent/strong login information.  The key here is this statement found in the codeman/code page for codeutmpx/code     Traditionally, separate files would be used to store the running log   of the logins and logouts (wtmpx),        and the last login of each user (lastlogx).  With the availability of the Apple system log facility        asl(3), these separate files can be replace with log entries, which are automatically generated when        utmpx entries are written.   So, codeutmpx/code is generating log entries to the OS X's syslog function.   Execute the following command:  codesyslog | grep 'login\['/code  And you will get a list of all login events since the OS was installed (truncated)  precodeMay 26 17:03:12 Allans-iMac login[5572] &lt;Notice&gt;: USER_PROCESS: 5572 ttys003 May 26 17:26:15 Allans-iMac login[5572] &lt;Notice&gt;: DEAD_PROCESS: 5572 ttys003 May 27 10:10:57 Allans-iMac login[5196] &lt;Notice&gt;: DEAD_PROCESS: 5196 ttys002 May 27 10:10:58 Allans-iMac login[4741] &lt;Notice&gt;: DEAD_PROCESS: 4741 ttys001 May 27 10:11:18 Allans-iMac login[6253] &lt;Notice&gt;: USER_PROCESS: 6253 ttys001 May 27 10:25:45 Allans-iMac login[6281] &lt;Notice&gt;: USER_PROCESS: 6281 ttys002 May 27 17:17:15 Allans-iMac login[6281] &lt;Notice&gt;: DEAD_PROCESS: 6281 ttys002 May 27 17:17:21 Allans-iMac login[6253] &lt;Notice&gt;: DEAD_PROCESS: 6253 ttys001 May 28 13:40:06 Allans-iMac login[7123] &lt;Notice&gt;: USER_PROCESS: 7123 ttys001 May 30 09:11:25 Allans-iMac login[1213] &lt;Notice&gt;: USER_PROCESS: 1213 ttys000 May 30 09:11:25 Allans-iMac login[1220] &lt;Notice&gt;: USER_PROCESS: 1220 ttys001 May 30 09:23:19 Allans-iMac login[1220] &lt;Notice&gt;: DEAD_PROCESS: 1220 ttys001 May 30 09:23:19 Allans-iMac login[1213] &lt;Notice&gt;: DEAD_PROCESS: 1213 ttys000 May 30 20:57:16 Allans-iMac login[1695] &lt;Notice&gt;: USER_PROCESS: 1695 ttys000 May 30 20:57:39 Allans-iMac login[1695] &lt;Notice&gt;: DEAD_PROCESS: 1695 ttys000 May 31 22:33:30 Allans-iMac login[2592] &lt;Notice&gt;: USER_PROCESS: 2592 ttys000 Jun  3 16:46:28 Allans-iMac login[2592] &lt;Notice&gt;: DEAD_PROCESS: 2592 ttys000 Jun  4 20:44:43 Allans-iMac login[1789] &lt;Notice&gt;: USER_PROCESS: 1789 ttys000 /code/pre  hr  For additional user accounting info, we can use the command codeac/code  Executing codeman ac/code gives us   precode    NAME      ac -- display connect-time accounting  SYNOPSIS      ac [-d] [-p] [-w file] [users ...]  DESCRIPTION      A record of individual login and logout times are written to the system log by login(8) and launchd(8),      respectively.  The program ac examines these records and writes the accumulated connect time (in deci-      mal hours) for all logins to the standard output. /code/pre  So, according to codeman ac/code login information is written to the system log.  Executing codeac/code gives us "If no arguments are given, ac displays the total amount of login time for all active accounts on the      system."  precode$ ac total     2477.23 /code/pre  To break it out by user:  precode$ ac -p testguy      0.04 _mbsetupuser     0.39 allan     2476.74 root         0.07 total     2477.24 /code/pre  <answer240692> codelast/code derives its output by examining the *.launchd.events.*.stats files in em/private/var/log/com.apple.launchd/em.  Removing the files usually restricts the codelast/code output to the last login after rebooting. Consequently some additional file/database/in-memory structure has to exist.  Removing the files doesn't work consistently.  The stats files in the respective user folders (e.g. com.apple.launchd.peruser.0 or com.apple.launchd.peruser.501) are irrelevant!  <answer249564> codelast/code is using code/var/log/asl/*/code files.  Firing within one codeTerminal/code window:  precode/usr/bin/sudo opensnoop /code/pre  and in another one:  precodelast /code/pre  will show you this in detail.  If you want to read it from the source, here it is:  precodehttp://opensource.apple.com/release/os-x-1011/ /code/pre  download:  precodeLibc-1081.1.3 /code/pre  extract this compressed tar file:  precodetar fjx Libc-1081.1.3.tar.gz /code/pre  and read:  precodeLibc-1081.1.3/gen/utmpx-darwin.c /code/pre  <comment295964> While `system.log`does store login information, I am unsure whether it is accessed by `last`, because when deleting the file, the `last` output persists. Does the same thing happen on your computer? <comment295968> It's not the `system.log` it's `syslog` <comment295970> @Allan Sorry that was too harsh. I didn't see the syslog part because I didn't properly refresh your answer. <comment296963> Hmm... do you know their format? <comment296991> Shouldn't this be `/private/var/log/com.apple.xpc.launchd/`? Or has this changed more recently? <comment296993> @thepiercingarrow Have a look at `utmpx.h` for a bunch of functions to access it. Or at `http://opensource.apple.com/source/adv_cmds/adv_cmds-163/last/last.c` directly :-) <comment309593> @patrix: this is the source code of `last`. The guts are in the `libc`. <comment349952> Regarding `_mbsetupuser` see [this question](http://stackoverflow.com/q/33391174/656912).