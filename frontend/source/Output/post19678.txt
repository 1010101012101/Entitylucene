What redundant, on-site, low-downtime backup strategies exist for servers? <body> I'm helping manage a OSX snow leopard server for a small company and one of the first things we did was setup time machine to get backups going.  However, having at least one more of the copy of the data seems prudent. It's starting to keep me up at night.  The thing we like about time machine is that it's so hands free and doesn't interfere.  I realize that we could shut down the server every week and do a full clone of the drive but I'm hoping for something much simpler and without any downtime.   Can anyone recommend simple to manage and cost effective strategies for redundant backups of OSX systems? In our case since we are really bandwidth constrained (low throughput + high cost), online backup isn't a practical solution.  Was hoping for a solution to automatically get the data to another drive located somewhere else within the building.  <answer19679> CrashPlan and TimeMachine have been very helpful for almost all the situations I've seen where one copy isn't enough.  Crash Plan software is very good - watch your java CPU usage until you're comfortable things are running smoothly in incremental mode, but it's as good as any of the other software that's out these days. The software will run on both the sending and the receiving computer elsewhere on your campus/building.  You can of course back up to your offsite storage but once you've got it to the other computer, tapes, off site drive cloning and other non-bandwidth consuming options can work well.  Just watch Java CPU usage when you have large file changes - you can throttle things if needed, but it's pretty self-sufficient with the out of the box settings.  <comment21621> Cheers for the prompt helpful response.  I was hoping for a solution that didn't involve having to run another server but instead just to a network drive. Also, since our server is really just a mac mini (not the i7 kind), I'm concerned about you flagging CPU usage as a potential problem.  However, I'll definitely check it out and let you know how it works for us.  Thanks again! <comment21625> It's not at all a problem - I'm just overly cautious asking anyone to load anything on their server. You can start with one small folder and test - the software is great. You don't need another server - just any plain old PC / linux / mac with enough disk space. <comment21628> If your TimeMachine backups are not packaged into a .sparseBundle, be very careful if copying them. They use some special filesystem functions to manage data de-duplication, and most utilities are not aware of this. Rsync asplodes when copying a raw time machine backup, even with command line switches to copy soft-links. <comment21629> Near as I can tell, managing backups of your time machine backups is a god-awful nightmare. Even if you do manage to back up all your time-machine backups, if you recover to from them, sometimes your mac will decide to create a new .sparseBundle, and start over again. Because it can, apparently. <comment21632> Good to hear feedback on how things can go wrong with backing up time machine backups.  Guess I could just have the secondary backup do the primary drive instead of the time machine drive. Any problem with that? <comment21638> Backing up the time machine backups is probably easiest, particularly since time machine can only backup to one target at a time. Just make certain your setup *can* restore the backup-backups before committing to it as a backup methodology. I have had time machine sparsebundle copies work, and have had them not work. It's all made much worse by the lack of documentation on how time machine decides whether to use a certain sparsebundle, and the complete lack of configuration options or diagnostic info about time machine, though.