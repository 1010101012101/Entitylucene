Is this really a null pointer dereference? <body> I found a crash and it is supposedly a null pointer dereference, but I don't understand how it can be a null pointer dereference if when it crashes the logs say:   precodeKERN_INVALID_ADDRESS at 0x00000000000009e0 /code/pre  From what I understand after a null pointer dereference crash logs should clearly say that the program attempted to dereference 0x0, so it should instead be:  precodeKERN_INVALID_ADDRESS at 0x0000000000000000 /code/pre  For a crash to be a null pointer dereference does kern_invalid_address always have to be 0x0 or can it be other values, such as for example 0x9e0? All I want to do is either know if it is a null ptr dereference or not, based on this are any of those two options discarded or not. Thank you.  <comment347099> Welcome to Ask Different.  Could you explain why null pointers are key to your question? Basically what's the practical next step or what you're trying to do? Based on that, we might get this to stack overflow. <comment347101> Pointing at a section of https://developer.apple.com/library/prerelease/content/technotes/tn2151/_index.html or https://developer.apple.com/library/prerelease/content/technotes/tn2004/tn2123.html might help us help you <comment347102> Is this your own code you've written or are you using an app? If it's the former, this isn't the place for you. If it's the latter, why have you obfuscated the process name and identifier?