Why can't I use `launchctl setenv` from `tmux`? <body> If I'm running within codetmux/code and I try to update an environment variable with codelaunchctl/code, I see an error like this:  precode$ launchctl setenv GIT_SSH /opt/local/bin/ssh Not privileged to set domain environment. /code/pre  But it works fine from outside of codetmux/code... any idea why that is, or if there's any sort of workaround?  <answer182017> You need to run it from a privileged account i.e.  precode$ sudo launchctl setenv GIT_SSH /opt/local/bin/ssh /code/pre  And enter your password when prompted. This can only be done from an admin account by default.  <answer281325> Running tmux as root is probably not a good idea. Someone has created a solution and explanation:  https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard  After configuring tmux to use reattach-to-user-namespace you can use launchctl setenv as yourself within tmux.  <comment216565> It works fine w/o `sudo`, when I run it outside of `tmux`... I'll see if `sudo` is somehow necessary from within `tmux`, but that doesn't really seem like the sort of thing I'd want to include in my `~/.bashrc`... <comment216580> How did you launch tmux? If from command line, launch tmux with sudo. If it is an app, `sudo open /path/to/tmux.app` <comment216599> Try running tmux with sudo(`sudo tmux`) to give it admin privileges <comment216616> Yes, running through `sudo` seems to work, but I still don't like it... For now, I'm just going to wrap the calls to this in my `~/.bashrc` in `if [[ -z "$TMUX"]] ; then ...` <comment354083> FWIW, I found that several years ago, and just didn't remember to answer my own question... But, yes, the `tmux-pasteboard` package from MacPorts does the trick.