How to ssh to remote web server without using a password <body> I'm new to OS X.  As per title, I'm having trouble connecting to my web server through SSH. My server accepts keys and we don't use passwords.br/ I've come from windows, and on windows I used PuTTY to connect to my server using a .ppk file generated using PuTTYGen.  On the Mac, I've generated using ssh-keygen -t rsa -b 2048 and made a key.ppk file in ~/.ssh and pasted the contents of my Windows .ppk file into it.  I also made a config file with the following contents...br/  precodeHost domain.com   IdentityFile ~/.ssh/key.ppk   User username /code/pre  When I try to connect, Terminal prompts me for a password (why?) then when I enter nothing and press ok it fails with message  precodePermission denied (publickey,gssapi-keyex,gssapi-with-mic). /code/pre  Any help on what I'm doing wrong will be great! Thanks for reading and thanks in advance for any tips.  <answer48687> h1On Reusing Your Windows codekey.ppk/code File/h1  The PPK file is a PuTTY-specific private key. It's not a portable private key that works with any ssh-based application. It just works with PuTTY. You need to convert it first. I've found some instructions for converting it to a proper public/private key pair here. You'll need to do this from your Windows machine.  That will give you a private key, codekey.ssh/code, that will work with ssh on your Mac. Put the codekey.ssh/code file in your code~/.ssh//code directory. Make sure the permissions are correct:  precode% chmod 400 ~/.ssh/key.ssh /code/pre  And then you can use it with your code~/.ssh/config/code file like so:  precodeHost domain.com   IdentityFile ~/.ssh/key.ssh   User username /code/pre  If you no longer have access to your Windows machine you'll need to generate a fresh public/private key pair to use with your web server.  h1On Generating a Fresh Keypair To Use With Your Mac/h1  Honestly, this is the best way to go here.  Password-less authentication with shared keys requires that both machines have a piece of the shared/public key pieces. Here's a complete recipe for setting up a shared key authentication scheme with two servers. It's not really OS X-specific. It's ssh-specific.  These instructions assume emhost1/em is your Mac and emhost2/em is your web server.  Generate a shared key on host1 (the shared key will be code/Users/you/.ssh/webserver.pub/code and the private key will be code/Users/you/.ssh/webserver/code):  precode% ssh-keygen -t rsa -b 2048 -f ~/.ssh/webserver Generating public/private rsa key pair. Enter passphrase (empty for no passphrase):  Enter same passphrase again:  Your identification has been saved in webserver. Your public key has been saved in webserver.pub. The key fingerprint is: 98:b7:fa:0f:0d:e7:7f:50:cc:9b:b4:57:db:8d:b4:03 ian@Ian-Chesals-iMac.local The key's randomart image is: +--[ RSA 2048]----+ |                 | |                 | |             o   | |       o    E * .| |      o S .  = *=| |       . *  . B.+| |        o o  . o | |       . . .  .  | |      ..... ..   | +-----------------+ /code/pre  Note: I didn't enter a password for the key because I don't want to have to use a password when I use the use.  Now you need to append the code~/.ssh/webserver.pub/code public key to the code~user/.ssh/authorized_keys/code file on emhost2/em, your webserver.  precode% ssh user@host2 'mkdir ~/.ssh;echo '`cat ~/.ssh/webserver.pub`' &gt;&gt; ~/.ssh/authorized_keys' /code/pre  For this to work you emwill/em need password access to the remote host. If you don't have this you can give code~/.ssh/webserver.pub/code to someone who emdoes/em have access to the box and ask them to append it to the codeauthorized_keys/code file for you perhaps. Or do it from your windows machine where you still have access.  Now make sure your private key is safe on your Mac:  precode% chmod 400 ~/.ssh/webserver* /code/pre  ssh can get complain-y if your private/public keypairs are world readable or writeable.  Finally, you can add the following to your code~/.ssh/config/code file to invoke the right key combination when you try to ssh in to your web server:  precodeHost domain.com   IdentityFile ~/.ssh/webserver   User username /code/pre  This will get you the password-less, keypair-based authentication you desire.  <comment55748> What is key.ppk? Are you sure that's an 2048-bit RSA private key? <comment55749> Have you remembered to copy the public key into `.ssh/authorized_keys` on the server? (Also, try giving the `-v` flag to `ssh` to get some more information.) <comment55750> The .ppk file is PuTTY-specific. It won't work with anything else. I've included instructions for converting it in my answer. <comment55753> WOW. Great answer! THANKYOU! <comment56380> Ian, Thanks for this answer - Just put it into practice and it works perfectly! <comment56396> @MattClarke awesome!