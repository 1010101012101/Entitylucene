How to Programmatically Find, Kill, and Restart a local DynamoDB Process <body> I'm working with Amazon's DynamoDB and I can't figure out how to programmatically kill the process reliably by name or PID.   I need to restart it since I'm holding all data in memory and I can delete the entire thing by just easily restarting the process. Problem is I can't figure out how to kill it as easily as starting it.  codeps -ax | grep "Dynamo"/code returns code19355 ttys001    0:28.31 /usr/bin/java -Djava.library.path=./DynamoDBLocal_lib -jar /Users/user/workspace/lib/DynamoDBLocal.jar -sharedDb -port 8000 -inMemory/code   But when I try codekillall DynamoDBLocal.jar/code I receive codeNo matching processes belonging to you were found/code and the PID changes every time it's started up.  How can I programmatically find the PID to send to codekill -9 PID/code or properly codekillall/code by name?  EDIT: Finished! Here's my work to share with others:  precodealias start_dynamo='java -Djava.library.path=./DynamoDBLocal_lib -jar /Users/user/workspace/lib/DynamoDBLocal.jar -sharedDb -port 8000 -inMemory &amp;'  alias end_dynamo="kill `ps -ax | grep Dynamo | grep -v grep | awk '{print $1}'`"  alias restart_dynamo='end_dynamo; start_dynamo' /code/pre  <answer277179> precodekill `ps -ax |grep Dynamo |awk '{print $1}'`  /code/pre  should do it. note, this will kill any proc that matches Dynamo  <comment348881> this works great but do you know how to convert it into an alias? the escaping of special characters is not trivial unfortunately. <comment348885> I've successfully adopted your command @skarface. Added `grep -v grep` to ignore the grep command and attempted to escape the command correctly to use in an alias. I get some lengthy bash noise but it's not the end of the world. Would like to remove it if possible but I'm accepting your answer regardless since it worked. <comment348996> Try wrapping the {print $1} in single quotes rather than double quotes to avoid shell interpolation of the $1 <comment349010> hey that worked! thanks skarface!! i swapped my single quotes in the alias for double quotes and used single quotes around `'{print $1}'`. i've edited my answer with the updated aliases. thanks again. <comment349027> quoting for the shell has always been .... enjoyable  :)