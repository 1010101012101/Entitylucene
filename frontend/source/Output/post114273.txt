How to prevent html5 videos from using built in mac fullscreen <body> The mac fullscreen mode has a slow animation which I have tried disabling but it seems that there is no way to do that as of now, so my question is, does anyone know of a way to disable html5 videos from using the mac fullscreen and just go instantly fullscreen like flash videos do?  Edit: If anyone is aware of some API in javascript which can make the videos go fullscreen instantly I may be able to write a chrome plugin that detects a native fullscreen api request, cancel it and initiate an instant fullscreen. Or if someone knows some type of workaround that can be done mac side, either from terminal or perhaps an objective-c native app I will develop them if necessary and post for all.  <answer114302> I'm afraid that's not possible.  Since all major browsers (Chrome, Firefox, Opera and Safari) all use the native Fullscreen API, you're stuck with the slow animation...  I researched wether there were any work arounds or tricks but there doesn't seem to be. You're not alone in being annoyed.  Only thing you can do is to use Flash when available, or, upgrade to Mavericks where the animation is minimal and quite a bit faster. 10.9 happens to be free so the entry barrier isn't that high.  <answer114853> Maybe try looking into this website? http://davidwalsh.name/fullscreen  <answer129455> I found a legitimate fix to this. It's surprising that it's hidden... but it's there!  Go to: chrome://flags/#enable-simplified-fullscreen  and Enable "Enables simplified fullscreen"  Click "Relaunch now" at the bottom.  Problem solved.  <answer130191> I agree, the HTML5 videos (mainy YouTube) are horrible: eats CPU like crazy and going to fullscreen stutters. I didn't find any usable parameter at chrome but at least found a dirty workaround, which lucky works for me and fallbacks HTML5 videos to Flash.  I just deleted one of Chrome libraries codeffmpegsumo.so/code:  ol liQuit Chrome/li liMake a backup copy of your Chrome/li liRemove the library  precodeMy-MBP:~ jhartman$ cd '/Users/jhartman/Tools/Internet/Google Chrome.app/' My-MBP:Google Chrome.app jhartman$ find . -name  *ffmpegsumo* ./Contents/Versions/35.0.1916.86/Google Chrome Framework.framework/Libraries/ffmpegsumo.so ./Contents/Versions/35.0.1916.99/Google Chrome Framework.framework/Libraries/ffmpegsumo.so My-MBP:Google Chrome.app jhartman$ rm "./Contents/Versions/35.0.1916.86/Google Chrome Framework.framework/Libraries/ffmpegsumo.so" My-MBP:Google Chrome.app jhartman$ rm "./Contents/Versions/35.0.1916.99/Google Chrome Framework.framework/Libraries/ffmpegsumo.so" /code/pre/li liStart Chrome/li /ol  Works like charm (at least - for me...).  <comment134516> his api just calls the mac api resulting in the same problem <comment154757> This seems to do the trick for me. Thanks. <comment154758> This still uses OS X's built-in API and still flashes other screens black.