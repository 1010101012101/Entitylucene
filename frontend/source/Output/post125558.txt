Make Emacs-style shortcuts behave differently than arrow keys. <body> This is a bit of a weird question, I'll admit, but this is something that really annoys me. I have come to rely on the Emacs shortcuts (mainly kbdctrl ^/kbd+kbdA/kbd, kbdctrl ^/kbd+kbdE/kbd, kbdctrl ^/kbd+kbdB/kbd, and kbdctrl ^/kbd+kbdF/kbd) and the behavior of kbdctrl ^/kbd+kbdP/kbd and kbdctrl ^/kbd+kbdN/kbd is very different than in Emacs. With Emacs, going up a line will ignore soft wrapping and go to the next actual line, not the next displayed line. I've just gotten used to it, I guess. Is there any way to make the Cocoa/Emacs up and down keybindings behave like the real Emacs (preferably only kbdctrl ^/kbd+kbdP/kbd and kbdctrl ^/kbd+kbdN/kbd, not the arrow keys)?  <answer125567> I don't know any way to do that in DefaultKeyBinding.dict.  For example codeselectLine:/code selects a wrapped or visual line and codeselectParagraph:/code selects a non-wrapped or hard line, but I couldn't find methods for moving a non-wrapped line up or down.  One thing you can do is to make command-delete and command-forward delete act on non-wrapped lines:  precode{   "@\U007F" = deleteToBeginningOfParagraph:;   "@\UF728" = deleteToEndOfParagraph:; } /code/pre  You can't remap command-left or command-right, so for example this doesn't work:  precode{   "@\Uf700" = moveToBeginningOfParagraph:;   "@\Uf701" = moveToEndOfParagraph:; } /code/pre  <comment146941> As of Emacs 23.1: ** The C-n and C-p line-motion commands now move by screen lines, taking continued lines and variable-width characters into account. Setting `line-move-visual' to nil reverts this to the previous behavior (i.e., motion by logical lines based on buffer contents alone). <comment146967> @AlanShutko Heh, I guess I haven't updated Emacs in a while, I'm usually using the command line version anyway. Maybe if I update I'll get used to it. <comment147007> I'll admit, I set line-move-visual back to nil because I was used to the old way too! I just found it amusing. <comment147032> @AlanShutko amusing? <comment147034> I wasn't expecting anything... oh well... <comment147035> Amusing that you want OS X to act like Emacs, when Emacs recently changed to act like OS X. <comment147037> @AlanShutko I guess :)