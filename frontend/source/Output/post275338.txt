Relinking/restoring still-open unlinked (deleted) file <body> On Linux, if a running process has a handle on a deleted file, and one knows the file descriptor number for that handle, one can create a hardlink from the handle in procfs (ie. codeln "/proc/$pid/fd/$fdnum" ./undeleted/code).  Does any similar functionality exist in MacOS X? That is to say, if a running program still has an open handle on an unlinked file, is there a way to create a new directory entry pointing to that same inode, thus effectively undeleting the file?  hr  There are several related questions here -- How do I cat a deleted file which is still open by its inode? is the closest, but with a few distinctions:  ul liIdeally, I'd like to relink the still-existing inode directly, rather than cat'ing the contents. (This is something like an 80GB file; creating a second copy of its contents will require quite a bit of temporary space and time)./li liNot being familiar with the concurrency semantics of the codeicat/code tool suggested in the answer there, I'm not clear as to whether this is safe to run with the partition mounted read-write, and thus whether a destination on the same filesystem (which has space to emstore/em an 80GB file) is feasible./li /ul 