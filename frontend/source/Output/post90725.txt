For iTerm2, how do I make the working directory appear in the window title? <body> I recently switched to iTerm2 from the default Terminal app and have a usability issue.    On Terminal, the working directory you are in shows up on the title bar along with the process and pixel size.  For example, when you click on Window to switch between different Terminal sessions, you'd see: working_directory - process - pixel_size.    On iTerm2, unfortunately only the process shows in the title bar.  So if I'm working in multiple iTerm2 windows on different directories, I can't easily differentiate which is which when I click on Window to choose one.  I know I can easily switch between iTerm2 windows once I select one, but I'd like to identify exactly which window I want right away.  (By the way, I use Witch, and Command-tabbing doesn't help either because here again only the process shows up on the list).    Any suggestions?  I looked through all the preferences and didn't see anything.  Creating profiles isn't exactly what I'm after--I'd just like to see the current working directory in iTerm2 window titles.    <answer90737> With the code\033]0;TEXT\007/code escape sequence.  Example of use in Bash: codeecho -ne "\033]0;$PWD\007"/code  Which you could add to your code$PROMPT_COMMAND/code if you use Bash, or otherwise attach to you codePS1/code so it gets re-evaluated often.  Example: codeexport PROMPT_COMMAND='echo -ne "\033]0;$PWD\007"'/code  <comment106890> This works. Just to be pedantic, add the export line listed above to your ~/.bashrc file. <comment107094> This is awesome.  Thanks so much; this helped me understand that the answer is really about bash programming and has nothing to do with iTerm vs Terminal.  As a follow up for anyone else, please see http://www.faqs.org/docs/Linux-mini/Xterm-Title.html#s3 and http://www.linfo.org/echo.html.  Thanks again! <comment134372> and to get just the last segment of the path `echo -ne "\033]0;${PWD##*/}\007"` (with thanks to https://github.com/barryclark/bashstrap for showing the way) <comment264193> @Spencer: There is no reason to export the PROMPT_COMMAND shell variable, and in general one should not export a shell variable unless you have a specific need to share the variable with _every program run by the shell_. By default, variables that are used by the shell should not be exported; only export variables that are meant to be transmitted to other processes. `~/.bashrc` will be run by every interactive shell, so they don't need to inherit the variables set by this script. <comment264295> Well, exporting is how you use PROMPT_COMMAND... And it is generally better for complicated things [link](https://stackoverflow.com/questions/3058325/what-is-the-difference-between-ps1-and-prompt-command)