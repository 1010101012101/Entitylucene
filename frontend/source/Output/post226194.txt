terminal: how do i pipe the results of grep to open a file <body> I'd like to codegrep/code and codeopen/code a file in just one terminal command.   Suppose I'm in this directory:  precode$ ls 1.txt   2.txt   3.txt   4.txt   5.txt /code/pre  and I want to open code3.txt/code  I thought I could do codels | grep 3 | open/code   but it looks like codeopen/code doesn't accept piped input. Is there any way to do this?   <answer226196> Try codeopen $(ls | grep 3)/code. Depending on your specific needs, you can also skip the codegrep/code part and use codeopen $(ls *3*)/code (or even codeopen *3*/code) directly.  <answer226208> Another option  precodefind . -name "*3*" -exec open {} \; /code/pre  Will run open on any file with 3 in it's name from the current directory down.  The spaces and backslash matter in this case.  <comment274652> What is the difference between `open $(ls *3*)` and just `open *3*`? <comment274658> None in this case, good point :-). I assume that the OP had more complex patterns in mind. <comment274666> Pro Tip: Always add a `--` before the glob * when doing `ls`, `rm`, `open` and so on. And never create files named "-rf"... <comment274708> Parsing `ls` to produce file name arguments is a bad idea. You can get undesirable results if the directory contains file names with spaces that match the pattern/glob.