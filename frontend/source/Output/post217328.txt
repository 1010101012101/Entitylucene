Remap Space and Command <body> Basically, what I want to achieve is the second example here:     As an example, we can make the space bar work as an additional ctrl key when held (similar to Space2ctrl) with the following sequence of commands.      — https://github.com/alols/xcape#examples   Or here:     This little hack for X turns the spacebar key into another control key when used in combination. When used alone, it behaves like the ordinary space bar on the key release event. Especially useful with Emacs.      — https://github.com/r0adrunner/Space2Ctrl   So:  ul likbdSpace/kbd+kbdx/kbd should send kbdCommand/kbd+kbdX/kbd, /li liwhile kbdSpace/kbd pressed strongand released/strong should send one space character./li /ul  <answer217329> ol liInstall strongKarabiner/strong./li liPlace this in your private.xml (code~/Library/Application Support/Karabiner/code)  precode&lt;item&gt;         &lt;name&gt;Use Space as Command modifier&lt;/name&gt;         &lt;identifier&gt;private.space_command_key&lt;/identifier&gt;         &lt;autogen&gt;__KeyOverlaidModifier__ KeyCode::SPACE, KeyCode::COMMAND_L, KeyCode::SPACE&lt;/autogen&gt; &lt;/item&gt;  /code/pre  It goes in between the code&lt;root&gt;/code and code&lt;/root&gt;/code tags.  If you want to remap it to Control instead, you can change the codeKeyCode::COMMAND_L/code to codeKeyCode::CONTROL_L/code./li liLaunch Karabiner, press ⟳ ReloadXML, and check the box /li /ol  <comment262717> Just out of curiosity, why? Is your control key broken? <comment262718> @Arc676, there should be several whys in the docs I linked to. It’s because I want to avoid Emacs-related RSI. And I’ve been using this setup on Linux, so I’m quite used to it. :) <comment262776> Awesome. ♥ Thank you!