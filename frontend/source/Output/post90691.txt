Hot File Clustering with multiple partitions <body> I'm planning a performance-oriented clean install of OS X 10.6 and I was wondering if the emhot file clustering/em feature will exists only on the emboot partition/em or if there will be one for each partition (even if it won't be on the most external part of the hard disk).  <answer90701> According to the very detailed OS X internals book and website by Amit Singh, the optimizations for hot files require only HFS+  ul liTen Things Apple Did To Make Mac OS X Faster /li /ul  I seem to recall that only the boot volume was optimized for working sets and hot files, but can't find a good link to any other authoritative document to back up my recollections. We are talking about things written in 2004 and a lot has changed. The good news is that you should be able to find the codehfsdebug/code binary and poke around to your heart's content while analyzing your particular filesystems as you are determining how it is and is not performing. Furthermore, if you partition your boot volume, the hot file "optimization" will be far less helpful than if you just let the entire drive be allocated so that the OS can guess what part of the drive is physically the fastest for access speeds.  Some very astute engineers have opined that 10.6 was the "fastest feeling" OS although I've not seen any good benchmarks comparing 10.6.8 to 10.8.3 or 10.7.5. Snow Leopard clearly doesn't have all the layers of subsystems that Lion and now Mountail Lion have - so from a unix based perspective, you should have great control and understanding of what's going on in the OS most if not all of the time.  I would also be remiss if I didn't mention that you might want to review John Siracusa's awesome reviews of each OS release to read up on the various filesystem performance improvements. Since hot file adaptive clustering was introduced at 10.3, the performance wars have moved on to building smarter storage technologies rather than smarter OS. An especially good article on this aspect would be also from Ars Technica:  ul liHow SSDs conquered mobile devices and modern OSes/li /ul  <comment106533> I know the great work of Mr Singh and I have tried just now to make a ~11 GBs journaled HFS+ image (with `hdiutil`) but, by running `hfsdebug` (lite), it give me the following _"/dev/rdisk1s2 is a non-boot volume: Hot Files not supported."_ however I don't know if _rdisk_ make difference from common _disks_. <comment106534> The generic blue section on Singh's website says that is needed only a generic journaled HFS+ volume with 10+ GBs; However, his book also says that the volume must be the root one (it's not clear to me if _root volume_ is only equals to _boot partition_ or to the entire primary HDD) and without only read permission.  |  I'm concerned with partitions mostly (but not only) due to fragmentation issues (after 3+ year of usage) so I think that part of the HFC benefits are easily sacrificablesâ€¦ <comment106536> There you go - so root means only / is optimized. All other partitions that mount on /Volumes or /mnt or wherever else would not be optimized. My belief is the hot files is placed where a physical disk would normally be fastest as oppose to the OS knowing precicely where the fast parts of a partition of the disk might lie. You'll want a filesystem and OS like AIX for that level of storage control.