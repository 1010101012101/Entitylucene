Sharing a single Dropbox between multiple accounts on one Mac - possible? <body> This seems like it should be easy, but...  My partner and I use a single Dropbox.com account to keep all of our joint projects synced up between our computers - and this has been working great for years. We've now added a MacBook Air to the mix, and we each have accounts on it and can grab it and go when we need to do some remote work.  I've been trying to get the Dropbox synced to the Air - but I want to have it in the "Shared" directory so that we both can access it - it shouldn't matter who is logged in. This doesn't seem to be working.  I can located the Dropbox in the shared directory fine - but when I change the user who is logged in that user has no permissions to sync the Dropbox or access the files.  I can get it to work if I create a separate ~/Dropbox folder for each user, but this ends up with 50GB duplicated twice over if the entire Dropbox syncs - a particularly ridiculous waste of space on an SSD.  Any ideas how to make this sharing work????  <answer70547> One method I've used with some success is to set the permissions on the folder to allow multiple user accounts to "Read &amp; Write" to the code/Users/Shared/Dropbox//code folder.  You can do this by:  ul liGoing to the codeGet Info/code (kbdCmd/kbd+kbdi/kbd) window on the code/Users/Shared/Dropbox/code folder/li liUnlocking to edit permissions/li liClicking on the "+" icon to add another user account and setting the "Privilege" to "Read &amp; Write"/li liClick on the gear triangle dropdown to the left of the lock icon, choose "Apply to enclosed items..." and confirm that you wish to do this (irreversible) change/li /ul  I'm not very sure, but you may still have some permission related issues if you get files from another Mac's user account. That may require assigning ownership correctly.  <answer83786> You can use umask to set up restriction to file permission. Default setting is 022 so file mask is 644 (or 755 for dirs). Simple way is to set umask 002 (in file /etc/profile or some others), but this leads to security issue.  Oops, this is answer on the file permission problem when 2 users work under one Dropbox account on the same PC.  And the second one remark Mac users must edit umask in files /etc/launchd-user.conf or /etc/launchd.conf (see http://support.apple.com/kb/ht2202 for details)  <answer89714> While not a complete solution, you can choose which dropbox folders to sync on your second account, thus reducing the amount of HDD space required and unnecessary duplicate files.   <answer89738> My first thought would be to partition the HD (or SSD). One partition would have OS X, apps, user folders, etc., and the second would have only the Dropbox folder. Select the icon for the partition and check Ignore Permissions, and both users should have access. However, I've had volumes where I've checked Ignore Permissions revert so other users can't access this, but it's a quick fix.  <answer99116> You can do this using ACLs, which will avoid permissions problems when new files are created:  precodesudo chmod -R +a "$USER allow read,write,append,delete,list,search,add_subdirectory,delete_child,file_inherit,directory_inherit" "$DIR" /code/pre  where code$USER/code is the username of the other user, and code$DIR/code is whatever directory (Dropbox or otherwise) you want the other user to have full permissions in.  We use this to share a single Dropbox folder between four users (2 adults with full access, 2 kids with access to their subdirectory only), and it has been working well for us.  The only limitation is that the user running Dropbox has to be logged in and running Dropbox.  The other users don't have the Dropbox icon and status info in the menu bar.  <answer130464> This is simple actually.   ol liLogin to 1st account./li liSync dropbox to the shared directory. Let's say /user/shared/dropbox./li liGive permission to this shared directory to 2nd account. (to give 2nd account permission to edit/delete)/li liLogin to 2nd account./li liSync dropbox to shared directory. ul liIf you do this directly you will get an error that dropbox folder already exists./li liTherefore, delete the folder first./li liSync shared directory again./li /ul/li liSince 2nd account is the creator of the shared directory now. Make sure 2nd account gives permission to this shared directory to 1st account./li /ol  <answer130484> You can also leave the Dropbox folder in the default location and symlink the ~/Dropbox into /Users/Shared/ and enable permissions with Terminal.app thusly:  precode    user@mac: ~$ ln -s ~/Dropbox /Users/Shared/Dropbox     user@mac: ~$ chmod -R 777 ~/Dropbox /code/pre  <answer206751> I wanted to use this same solution to work around a Dropbox for Business account with the "Allow only one Dropbox account per computer" restriction enabled.  The ACL solution is promising, but I encountered frequent permissions issues; it turns out ACLs are not inherited by existing files that are copied/moved into a directory, which is a deal breaker.  Here's the solution on which I eventually settled; this assumes all local administrator users will share access to the Dropbox.  ol liChoose a user to run Dropbox. The Dropbox folder will reside in this user's Home folder, and the user must be logged in for the Dropbox to sync./li liChange the codeumask/code for user applications to code002/code. This will make new files group-writable by default; this should not be dangerous, since your user's group is probably codewheel/code, and all members of codewheel/code already have codesudo/code permissions.  For OS X Yosemite 10.10.3 and up:  precodesudo launchctl config user umask 002 /code/pre  For older versions, see the Apple Support article Setting a custom umask in OS X./li liRestart your computer for the codeumask/code change to take effect./li liRecursively modify the permissions of your shared Dropbox folder to give full permissions to both user and group:  precodecd $HOME sudo chmod -R ug=rwX Dropbox/ /code/pre/li listrongFor each user/strong, add the group write permission to all pre-existing user files:  precodecd $HOME sudo chmod -R g+w Desktop/ Documents/ Downloads/ Movies/ Music/ Pictures/ Public/ Sites/ sudo chmod g-w Desktop/ Documents/ Downloads/ Movies/ Music/ Pictures/ Public/ Sites/ /code/pre  The first codechmod/code applies group write recursively; the second codechmod/code removes group write from the directories themselves to keep them protected./li /ol  Everything should now work as intended. The second user can add the first user's Dropbox to the Finder sidebar, and Dropbox runs surprisingly well on the background user account. Only the Finder integration and menu bar status are missing.  Since each OS X user account can use this method to share its own Dropbox, this essentially provides for unlimited Dropbox accounts on a single machine.  <comment81903> This seems to work - but if I add new files to the Dropbox they end up causing sync issues for the second user until I do this again. <comment92984> Seems like an edge case. You're asking Dropbox (and its associated file permissions) to work in a way for which it wasn't designed. I appreciate your wish to not dupe 50gb of data on an Air, but I'd fear possible problems introduced by *solving* this. The risk if data corruption isn't worth itâ€”at least to me. <comment92986> Dropbox would probably suggest [Dropbox for teams](https://www.dropbox.com/teams/features) <comment95231> Allowing to specify a user group to give R&W to for new files would likely solve this.  I've been manually resetting R&W to the Staff group on my machine for months without problems (similar to what MK suggests below).  It would just be nice to have DB do this for me. <comment96436> This answer is confusing - why is the second paragraph here and the beginning of the third para is not clear either <comment106638> I can see this working - but partitioning a drive just for Dropbox is a pretty heavyweight solution. Though...  I wonder if a DMG disk image file could work as the home for it? <comment116490> This is precisely what we do at home. My wife's folder is shared with mine, and she shares out to me only the content that she wants shared. From my account, I do likewise. So, for example, her photos are only on her machine, but 1Password's data, and our TextExpander configuration are shared between both devices. <comment152947> What happens if user #1 logs in again after the last step? How does syncing work then (with all files owned by user #2)? <comment282955> What happens if setup ACLs and you run the dropbox app on all user accounts on the ACL? Does it mess up syncing? I wish there was a way this could be done without always having one account logged in.