How can I convert .ichat logs to text files? <body> How do you convert the iChat transcript files that Messages creates into human-readable text files that can be opened without the Messages app?  For reference, these are the conversation files located in code~/Library/Messages/Archive/code.  Simply opening the .ichat files in a text editor includes a bunch of additional strings and hashes. Opening them in Messages and copy-pasting into a text editor works, but I'd prefer to automate the process if possible.  <answer73643> This wouldn't be a perfect solution, but I notice that the messages are always between codeÄ_/code and code_$/code. You could write a script to extract all the text which started and ended with those characters. (any language with rexex support would do)  <answer73645> If you select print from the file menus, when the print box opens in the lower left is a pdf button with a drop down. From here you can save as pdf, post script, mail as pdf or send to iTunes.  <answer80025> If you are familiar with sqlite, you can just export the messages directly from the database on Mountain Lion iMessage.  precodesqlite3 /Users/(username)/Library/Messages/chat.db /code/pre  From the database, you can send sql commands to get any and all messages and associated fields you have interest. Further, you can change the output settings to write directly to a file.  Also, in addition to the database, all photos are stored in the Attachments folder.   <answer126595> This seems like an ideal application of Automator workflows or AppleScript, since both of those can do "press buttons onscreen" style behavior. You'd say "take file as input," and use something under "print" or "messages" if there are either of those, or use AppleScript to tell it to open the file and press file and print and save as pdf and then close the file.  <answer183122> The files that Messages saves have an codeichat/code file extension.  But from the command line you can inspect them to see they are actually binary plist files:  precode$ file transcript.ichat transcript.ichat: Apple binary property list /code/pre  Turns out, you can easily convert binary plist files into human-readable XML documents:  precode$ plutil -convert xml1 transcript.ichat /code/pre  Now, when you run codefile/code again, you can see it's an XML file:  precode$ file transcript.ichat transcript.ichat: XML document text /code/pre  Go ahead—open it and see for yourself:  precode$ open transcript.ichat /code/pre  <answer196427> Check out my project that will take all of your conversations and convert them into one readable text file. It won't convert just a single iMessage, but it will collect all of your messages and attachments, back them up, and put them into a human-readable format.  https://peterkaminski09.github.io/baskup  <answer264276> I've created a command line tool for converting these ichat files to newline-separated JSON  The tool extracts the bare essential information: message, sender, date  You can view the source code and/or download binary at https://github.com/kfatehi/ichat2json  <comment218209> iChat transcripts (`.ichat` files) are not SQLite databases. <comment234640> Does it work with iChat log files? <comment234696> It uses your iChat log files found in your ./Library/Messages/chat.db to convert into a text file. <comment291797> This worked nicely for me, thanks! I notice it can skip the very beginning of message histories though if you have conversations that are VERY long (unless they are forever lost if iMessage doesnt keep all messages like i thought). Nevertheless still got the job done! <comment291906> I think the main problem I've noticed is that when you open your macbook after having sent many messages on your phone, there is that delay between iMessage on mac and phone, and this causes the messages to get cut off. <comment293272> Could you provide a better description of your answer. That's suggestive but not showing any particular answer for the user with steps. <comment349484> This looks very useful, but is there a way to delete older messages once they have been exported/archived/whatever ?