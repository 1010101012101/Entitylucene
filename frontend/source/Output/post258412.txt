How to check if cron job works? <body> I use codecrontab -e/code without codesudo/code to edit cron jobs and add the following line there -   precode20 22 23 10 * date "+%Y-%m-%d %H:%M:%S" &gt;&gt; ~/Documents/log.txt /code/pre  then I check the log file and it doesn't contain the date and time.   I tried to edit codecrontab/code as root, but it also doesn't update the file. What could be wrong here? Is there any way to see the log of cron jobs execution?  P.S. Update crontab created under root:  precode0/5 * * * * /bin/date "+%Y-%m-%d %H:%M:%S" &gt;&gt; /tmp/log.txt 0/5 * * * * echo &gt;&gt; /tmp/log2.txt /code/pre  codelog2.txt/code is created now.  <answer258429> Your codecron/code error message are sent to the codemail/code account of the user that is running the codecron/code job.  Type codemail/code at the command line to see the messages. For a list of codemail/code commands, see man mail.  You should be getting mail with an error message something to the effect of:  precode/bin/sh: -c: line 0: unexpected EOF while looking for matching `"' /bin/sh: -c: line 1: syntax error: unexpected end of file /code/pre  As for you command and why it's not working, it's because the "%" sign is a "newline" character, meaning that it tells the shell to "go to the next line."  So, after it encounters the first "%" it goes to the next line and it never sees the rest of the command.  This is confirmed by the "unexpected EOF while looking for the matching ' "  '(double quote).  The local man page for crontab (codeman crontab/code)is quite sparce with details and I am speculating it's because codecron/code has been deprecated for codelaunchd/codesup1/sup.  However, the crontab manpage from developer.apple.com explains it      The "sixth" field (the rest of the line) specifies the command to be   run.  The entire command portion of the line, up to a newline or % character, will be executed by /bin/sh or by the shell specified in the SHELL variable of the cronfile.  Percent-signs (%) in the command, unless escaped with backslash (\), will be changed into newline characters, and all data after the first % will be sent to the command as standard input.  The command can optionally be prefixed by "code@AppleNotOnBattery/code" to tell cron not to run the command when functioning on battery power.  For example, the "sixth" field when using this option would appear something like code"@AppleNotOnBattery /usr/bin/touch /tmp/foo"/code   br strongYour fix:/strong  So, what you need to do, is "escape" the "%" character with a backslash (\) so that it tells it to interpret it literally.    Your command should be:  precode0/5 * * * * /bin/date "+\%Y-\%m-\%d \%H:\%M:\%S" &gt;&gt; /tmp/log.txt /code/pre   hr  sup1/sup From codeman crontab/code:  em(Darwin note: Although cron(8) and crontab(5) are officially supported under Darwin, their functionality has been absorbed into launchd(8), which provides a more flexible way of automatically executing commands.  See launchctl(1) for more information.)/em  <comment323024> crontab does not understand ~ you need to give the full path <comment323025> @Mark, I used full path (instead of ~) with root crontab - the result is the same, no record in the file. <comment323026> Also path might not be set use the full path to date - also note for OSX launchd is preferred to cron <comment323033> @Mark, I am trying to use `/bin/date` and `echo` now (see updated question).