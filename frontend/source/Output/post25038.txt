command-backspace deletes a whole line. Is there a way to disable this? <body> When I type command-backspace in a Cocoa text field, it deletes everything from the start of the current line to the cursor point. Can this be disabled? It's driving me nuts because I hit it all the time by accident.   I've tried adding the following to code~/Library/KeyBindings/DefaultKeyBinding.dict/code:  precode&lt;key&gt;@\010&lt;/key&gt;&lt;!-- cmd-backspace --&gt; &lt;string&gt;deleteWordBackward:&lt;/string&gt; /code/pre  or:  precode&lt;key&gt;@\177&lt;/key&gt;&lt;!-- cmd-delete --&gt; &lt;string&gt;deleteWordBackward:&lt;/string&gt; /code/pre  or:  precode&lt;key&gt;@\U007F&lt;/key&gt;&lt;!-- cmd-backspace --&gt; &lt;string&gt;deleteWordBackward:&lt;/string&gt; /code/pre  ... all to no apparent effect. I can't tell if I'm getting the keycode for backspace / delete wrong, or if I'm wrong that code@/code is the command key, or if something else is wrong.   Finally - and I hesitate to mention this because of the source, but it's just the only clue that I have - some random commentor on this TextMate-related blog post says:      unfortunately most of the key combinations which include the command modifier never reach the control which have focus (they're eaten by the menu manager code).      So these bindings generally do not work :(      I go through hoops to get as many keys as I currently do in TextMate, and here I still can't get command backward delete (⌘⌫).   Is there something else I can try?  edit: realize I had pasted the wrong info in as the configs that I've tried. If you notice changes up there, I'm changing the question to match what I actually did. The behavior didn't change :).  <answer25042> Make the contents of your code~/Library/KeyBindings/DefaultKeyBinding.dict/code look like the text below    precode/* my keybindings */  { "@\U007F" = "deleteWordBackward:"; /* delete backwards one word */ }   /code/pre  ul li'@' represents the kbdcommand/kbd key  /li li'\U007F' represents the kbddelete/kbd key/li li'deleteWordBackward' is a keyword which Cocoa applications understand/li /ul  Once you restart any Cocoa app, this will now just delete one word to the left of the cursor instead of everything between the beginning of the line and the cursor.  <answer33526> code\U007f/code and code\177/code are specific to old-style property lists. On XML plists you'd need to use code&amp;#x007f;/code or a literal codeDEL/code:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;@&amp;#x007f;&lt;/key&gt;     &lt;string&gt;noop:&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <comment28201> That seemed to work, thanks. Any idea why that didn't work in plist format? (Am I going to regret migrating the rest of my `DefaultKeyBinding.dict` away from plist format?) <comment28203> I don't know why it didn't work in the XML format, could you amend your question to include the full contents of your file and maybe I could help?  Or better yet, ask a new question which shows both versions in full and I or somebody else might be able to tell you. <comment28204> +1 for the awesome answer - better to ask a new question and leave this simple and correct as asked... <comment28217> OK, I asked a new question as suggested [over here](http://apple.stackexchange.com/questions/25051/defaultkeybinding-dict-old-style-next-format-vs-xml-plist-format). Thanks for your help, guys. <comment28239> I _love_ helping people that have such well researched questions - these two are great! <comment167959> Rebinding it to another combination isn't really a good suggestion: he'll hit it anyway by mistake, and he'll have anyway to undo, as he's doing now. <comment168564> Lohoris, this might not be a 'smart' thing to do, but it does what the user asked for.  Feel free to add your own, more appropriate answer and we'll happily upvote it.  That is how the site works after all, the best answers rise to the top.