How do I edit Mac OS X terminal history? <body> How do I edit my bash history in Mac OS X? I entered a password in that window by mistake and do not want to remove my whole history.  <answer87890> Editing the code.bash_history/code is just a matter of opening the file with an editor. There are a couple of ways you could achieve this.  ol liIn the strongTerminal/strong just type codevi ~/.bash_history/code, then edit the file as you want, and save. This option could be tricky, if you're not used to emvi/em, of course./li liMake the file emvisible/em by following these instructions, for instance, open it as any other file, modify it, and save. /li liIn the strongTerminal/strong just type codeopen ~/.bash_history -a /Applications/TextEdit.app/code. This command will open the file with strongTextEdit/strong, you can choose any other text editor, of course. Modify the file and save./li /ol  For the changes to be noticeable just restart the bash.  <answer107892> In terminal type codehistory/code and note the line number. Next call codehistory -d noted-line-number/code. You can check that the line is deleted using codehistory/code again.  <answer114693> I think that Dmitry's answer is ideal if done before emsaving/em the history - by default, saving occurs on shell/terminal exit.    If you may have already emsaved/em the history to ~/.bash_history, then I prefer Thecafremo's answer, but I would suggest adding a step of exiting Terminal to ensure that none of the bash instances have loaded the history and will re-save it.  This is especially tricky if you have multiple terminals and have enabled any sort of command-by-command history update.  Background:  ul libash saves the history within an instance of the shell/li libash can write this history to a file, which typically happens when you exit the shell/Terminal/li libash can read from a file into the history, which typically happens when you open a shell/Terminal/li liit's possible to change the default behavior so that history propagates sooner, which can migrate your BAD_TEXT to the file and to other windows /li /ul  Regardless of which method you use, I would add one step: verify success!  ol liExit Terminal.app/li liRe-open Terminal.app/li liConfirm the offending text is not in the history - preferably in a way that will not create additional history.  That is, don't codegrep BAD_TEXT .bash_history/code!  This new command would go into history.  I'd just open .bash_history in your favorite editor and search within that for BAD_TEXT./li /ol  This should give you peace of mind that you have eliminated BAD_TEXT no matter what kind of crazy bash setup you may encounter.  <comment102839> I am getting "permission denied". When I do a sudo, I am not able to see all the commands entered. <comment102841> @KarthickS You're getting that doing what exactly? <comment263292> This does not work on Yosemite with ZSH. <comment279819> The question was about bash, not zsh. Read carefully! <comment279977> @DmitryDupelov you are right, sorry to bother.  Anyway, it's a reminder to future readers (that may miss that detail as well). Thank you for correcting my comment.