How can I force default DNS query to work in TCP mode? <body> In China, the so-called GFW often contaminates DNS results like  precode$ dig @8.8.8.8 archive.org   ;; QUESTION SECTION: ;archive.org.           IN  A  ;; ANSWER SECTION: archive.org.        2662    IN  A   159.106.121.75 /code/pre  Here code159.106.121.75/code is a fake IP. We have to use the TCP mode for DNS query:  precode$ dig @8.8.8.8 +tcp archive.org  ;; QUESTION SECTION: ;archive.org.           IN  A  ;; ANSWER SECTION: archive.org.        237 IN  A   207.241.224.2 /code/pre  Now we get the real IP code207.241.224.2/code.  In kbdSystem Preferences/kbd - kbdNetwork/kbd, the kbdAdvanced.../kbd button can open a tab for setting DNS. However, I can only add the IP addresses of DNS servers but cannot do anything else. So my question is: stronghow can I force the default DNS query working in the TCP mode?/strong  strongPS/strong: I don't want to modify the code/etc/hosts/code file to circumvent this problem as it's inconvenient. If there's any elegant method that can solve this problem, it will save me much time :) Thanks.  <answer219862> AFAIK it's not possible to force the mDNSResponder to use TCP instead of UDP.  I've found a workaround though. The method outlined below uses a local DNS-proxy (dnschef) forced to use TCP for outgoing DNS-requests.  ul liDownload and unzip dnschef-0.3./li liDownload and unzip dnslib/li liDownload and unarchive IPy-0.76/li licodecd/code to the emdnslib/em folder:   precodecd ~/Downloads/paulc-dnslib-04713cc4a9df  /code/pre/li liinstall emdnslib/em:  precodesudo python ./setup.py install /code/pre/li licodecd/code to the emIPy/em folder:   precodecd ~/Downloads/IPy-0.76  /code/pre/li liinstall emIPy/em:  precodesudo python ./setup.py install /code/pre/li liOpen System Preferences - Network, replace your current DNS-server(s) (e.g. 8.8.8.8/8.8.8.4) by a local one with the IP 127.0.0.1 and apply the changes./li licodecd/code to the emdnschef/em folder and start it:  precodecd ~/Downloads/dnschef-0.3  sudo ./dnschef.py --nameservers 8.8.8.8#53#tcp /code/pre/li /ul  If the last command is too troublesome or ugly (well, it is ugly because you have to open Terminal.app and start the DNS-proxy), you can move the dnschef.py and .ini to another path and create a launch daemon to start the DNS-proxy while booting.  Example:  ul licodesudo mkdir /usr/local/python/code/li licodesudo cp ~/Downloads/dnschef-0.3/dns* /usr/local/python//code/li licodesudo rm /usr/local/python/dnschef.exe/code/li licodesudo touch /Library/LaunchDaemon/local.dnschef.plist/code/li licopy and paste the following content into the newly created file with an appropriate editorbr (e.g codesudo nano /Library/LaunchDaemon/local.dnschef.plist/code):  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;local.dnschef&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/usr/local/python/dnschef.py&lt;/string&gt;         &lt;string&gt;--nameservers&lt;/string&gt;         &lt;string&gt;8.8.8.8#53#tcp&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre/li liLoad the file with codesudo launchctl load -w /Library/LaunchDaemons/local.dnschef.plist/code  All files and folders created must be owned by root:wheel./li /ul  <comment265955> I haven't tested this, but I'm pretty sure you'll need quotes around `8.8.8.8#53#tcp` (in the interactive start version; the .plist file looks fine as it is). <comment265957> @GordonDavisson I've tested it and quotes (i.e "8.8.8.8#53#tcp")  break the launch daemon. The `sudo ./dnschef.py --nameservers 8.8.8.8#53#tcp` command works. <comment265958> Right. Quotes are needed interactively to keep the shell from interpreting `#` as a comment marker; launchd doesn't use a shell so quotes are not needed there (and will, as you say, break it because there's no shell to remove them). <comment265997> Thank you for the detailed answer. Haven't tried it yet but I completely believe it works :D