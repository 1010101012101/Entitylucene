The encryption of an external drive in 10.7.5 does not seem to work. "Conversion Status: NoConversion" <body> On a Mac running OS X Lion 10.7.5 I have attempted to encrypt an external drive using Disk Utility.  Since this is 10.7, there is no option of right-clicking to encrypt in Finder. Also, there's no option to create an encrypted partition when formatting. So, here's what I did:  ol liI reformatted the drive like this:  precode/dev/disk1    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:      GUID_partition_scheme                        *2.0 TB     disk1    1:                        EFI                         209.7 MB   disk1s1    2:                  Apple_HFS Heap                    1.7 TB     disk1s2    3:                  Apple_HFS Time Machine            300.0 GB   disk1s3    4:       Microsoft Basic Data EXCHANGE                49.5 GB    disk1s4 /code/pre/li liThen I wanted to encrypt all codeApple_HFS/code partitions, starting with codeHeap/code. The only way to accomplish this using the GUI seems to be the following:  ol liSelect the volume you want to encrypt in the sidebar on the left side./li liSelect the tab "emerase/em" on the right side./li liChoose an option of your liking in "emFormat:/em" img src="https://i.stack.imgur.com/ChuKo.png" alt="enter image description here"/li liClick "emErase.../em" to reformat the partition as an encrypted volume. You have to create a password to continue./li /ol/li liIf this were Mountain Lion, this would be it. All I'd have to do is waiting for the encryption to finish. So, I checked the status in the terminal using:  precodediskutil cs list /code/pre  And to my surprise there's no conversion happening:  precodeSequence:               2 Encryption Status:      Unlocked Encryption Type:        AES-XTS Encryption Context:     Present Conversion Status:      NoConversion       // OH NOES!!! WHY THIS? WHY ME? :( Has Encrypted Extents:  Yes Conversion Direction:   -none- /code/pre  But I did expect something like this:  precodeEncryption Status:           Unlocked     Encryption Type:         AES-XTS     Conversion Status:       Converting    // This is what I expected.     Conversion Direction:    forward     Has Encrypted Extents:   Yes     Fully Secure:            No     Passphrase Required:     Yes /code/pre/li /ol  h2Question/h2  What is going on here? Am I just interpreting the codediskutil/code output the wrong way?  <answer73450> I believe you need a Recovery HD on that volume to let FileVault 2 do it's business. Here's the article on how to FileVault 2.  ul liOS X: About FileVault 2/li /ul  I believe the section where it says emFileVault 2 requires OS X Lion or Mountain Lion and Recovery HD installed on your startup drive/em is not technically correct, since the keys to decrypt an external drive would only be stored on the internal drive of the Mac doing the encryption.  I know this isn't true since I've had encrypted external drives that I've taken to several Mac and had all of them read it. You could start by letting Time Machine encrypt the external drive since that's the canonical GUI manner to get FileVault 2 on an external drive.  You can do everything in terminal though. Here is your recipe - bookmark this guy's web site - Rich is an asset to the community for documenting how to wrangle encryption and many other things.  ul liEncrypting 10.7 non-boot volumes without erasing them /li /ul  Here is what a functioning external without FileVault 2 looks like to me (warning - this is all on Mountain Lion).  precode/dev/disk2    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:      GUID_partition_scheme                        *500.1 GB   disk2    1:                        EFI                         209.7 MB   disk2s1    2:                  Apple_HFS HEAP                    10.0 GB    disk2s2    3:                  Apple_HFS Time Machine            300.0 GB   disk2s3    4:       Microsoft Basic Data EXCHANGE                189.6 GB   disk2s4 /code/pre  So, you can convert things thusly:  precodeAir:~ me$ diskutil cs convert /Volumes/HEAP -passphrase New passphrase for converted volume: Confirm new passphrase: Started CoreStorage operation on disk2s2 HEAP Resizing disk to fit Core Storage headers [ | 0%..10%.............................................. ] /code/pre  After a short delay, the progress will end and you will get this notice:  precodeAir:~ me$ diskutil cs convert /Volumes/HEAP -passphrase New passphrase for converted volume: Confirm new passphrase: Started CoreStorage operation on disk2s2 HEAP Resizing disk to fit Core Storage headers Creating Core Storage Logical Volume Group Attempting to unmount disk2s2 Switching disk2s2 to Core Storage Waiting for Logical Volume to appear Mounting Logical Volume Core Storage LVG UUID: 4FA72C96-80B5-4794-B6C9-D5E94B3194C8 Core Storage PV UUID: A60F4F77-18F7-4972-9A37-4873390BE326 Core Storage LV UUID: 02A09627-7955-4671-84F7-BD26FE1D9B93 Core Storage disk: disk3 Finished CoreStorage operation on disk2s2 HEAP Encryption in progress; use `diskutil coreStorage list` for status /code/pre  Setting aside whether Lion has the same output (since it likely will not end the command until the encryption is done) - here is the end result of what the codediskutil list/code command shows once the external has been encrypted:  precode/dev/disk2    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:      GUID_partition_scheme                        *500.1 GB   disk2    1:                        EFI                         209.7 MB   disk2s1    2:          Apple_CoreStorage HEAP                    10.0 GB    disk2s2    3:                 Apple_Boot Boot OS X               134.2 MB   disk2s6    4:                  Apple_HFS Time Machine            300.0 GB   disk2s3    5:       Microsoft Basic Data EXCHANGE                189.6 GB   disk2s4 /code/pre  It appears that disk2s6 gets shaved off the 10.0 GB disk2s2 and serves to hold the keys for [en|de]crypting HEAP.  <comment85337> Thank you very much for this answer. I will try this solution. Still, I can't exactly follow your argument for why there needs to be a recovery partition on the external drive (is it the one called 'Boot OS X' volume?) Every Mac that wants to read the external encrypted volume still needs a password to unlock the drive.