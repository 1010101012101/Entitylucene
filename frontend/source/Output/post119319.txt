How to manually start a service without having a controlling terminal? <body> I maintain an application that runs as a background service, started either on boot as a StartupItem or manually from the command line. I want to know how to launch it manually without having a controlling terminal, or completely detach after launching.  Using TextEdit to illustrate, I know that if it's launched from Terminal, it blocks the prompt until the program is quit, and will close if the terminal window is closed.   precode/Applications/TextEdit.app/Contents/MacOS/TextEdit /code/pre  Both can be avoided by adding codenohup/code and code&amp;/code to the command, respectively:  precodenohup /Applications/TextEdit.app/Contents/MacOS/TextEdit &amp; /code/pre  Or codedisown/code can be used instead of codenohup/code:  precode/Applications/TextEdit.app/Contents/MacOS/TextEdit &amp; disown $! /code/pre  Although TextEdit will stay running if the terminal window is closed, a warning will still be thrown. This is because TextEdit still has a controlling terminal, as indicated by codeps -ax/code:  precode$ ps -ax | grep TextEdit 28390 ttys003    0:00.12 /Applications/TextEdit.app/Contents/MacOS/TextEdit /code/pre  It's not until the terminal window is closed that TextEdit finally is TTY-free.  precode$ ps -ax | grep TextEdit 28390 ??         0:00.12 /Applications/TextEdit.app/Contents/MacOS/TextEdit /code/pre  I know it's possible to start the service without a controlling terminal with direct system calls, because when the StartupItem is used to start the service (either on boot or with SystemStarter), it starts without a TTY. My question is, can this also be accomplished using just the command line? 