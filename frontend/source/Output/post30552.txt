OS X computer name not matching what shows on terminal <body> My computer name in System Preferences  sharing is set to "archos" but is showing as "iphone" on the terminal. It just started doing this after I loaded Xcode for doing iPhone development.  precodeLast login: Mon Nov  7 14:46:55 on ttys001 iphone:~ travis$  /code/pre  Any ideas what could be causing this?  <answer30561> It's perfectly normal for this to occur; when you login Terminal remotely bash does a reverse DNS lookup. It will only be the same if the hostname is not specified on the network you're connecting from and there is no reply from the DHCP server, or the reverse lookup against the remote DNS server fails to resolve.  You can easily over-ride the default setting by using this command in Terminal:  precode# sudo scutil --set HostName archos /code/pre  You can check it by using:  precode# nslookup nn.nn.nn.nn ( or ) # host nn.nn.nn.nn /code/pre  (where nn signifies your Mac's ip address)  <answer53042> You may also want to change some other things using the scutil command:  precodesudo scutil --set ComputerName "newname" sudo scutil --set LocalHostName "newname" sudo scutil --set HostName "newname" /code/pre  <answer90874> In addition to Jeffrey J. Hoover's tip (above),  I would add these last two steps:   ul liFlush the DNS cache by typing: codedscacheutil -flushcache/code/li liRestart your Mac./li /ul  <answer117647> I agree that Jeffrey Hoover's tip was the correct answer. Flushing the DNS cache and restarting the Mac is a nice step too. This is variant of Jeff Hoover's reply:  precodesudo -i  for n in HostName ComputerName LocalHostName; do     scutil â€“set $n new_hostname done  exit /code/pre  <answer129674> There are two potential reasons for the shell (code$HOSTNAME/code variable, code'\h'/code in code$PS1/code) and the codehostname/code utility to report a hostname that differs from the one shown in codeSystem Preferences &gt; Sharing/code:  ul licodesudo scutil --set HostName newName/code was used to persistently change the hostname - unfortunately, this value is emindependent/em of the codeLocalHostName/code value set by System Preferences behind the scenes - strongeven though codeman hostname/code suggests this method, DO NOT USE IT/strong for that reason; strongrun codesudo scutil --set HostName ''/code to remove it/strong, at which point codeLocalHostName/code should again be reported; for background, see this post by @Lauri Ranta./li li[emUpdate: The following is no longer true as of OSX 10.10/em] If your code/etc/hosts/code file has an entry that matches your machine's IP address, emthat/em entry's name will be reported./li /ul  Only if neither of the above is true will the shell and codehostname/code reflect the value set via System Preferences.  hr  If you want to strongchange your hostname from the shell/strong, run emboth/em of the following:  ul licodesudo scutil --set LocalHostName &lt;newName&gt;/code/li licodesudo scutil --set ComputerName &lt;newFriendlyName&gt;/code/li /ul  where code&lt;newFriendlyName&gt;/code can be a friendlier version (spaces, punctuation) of code&lt;newName&gt;/code (alphanumerics and dashes only).  <answer162727> As mentioned in a separate answer, another option is to override the default PS1 prompt, like executing the following line (or adding it to your ~/.bash_profile file):  precode $ PS1="$(scutil --get ComputerName):\W \u\\$ " /code/pre  refs:  https://superuser.com/a/414903/39364  http://www.cnet.com/news/keep-your-command-prompt-host-name-static-in-os-x-and-other-unix-systems/  <answer173324> System Preferences - Sharing - Computer Name -- set it to whatever  And then restart your computer. No console commands were necessary. Works for OS X 10.10.2  <answer177104> I had the problem that only the shell itself (codezsh/code in my case) failed to show the correct computer name. Simply restarting the shell solved it:  precodeexec /bin/zsh /code/pre  <answer218078> Use this  precodesudo systemsetup -setcomputername $name /code/pre  <answer219209> In addition to the previous answer, remember that you can use a static address in your router. You have to enter the static IP and the MAC address of your network card, then you set a name for it. The hostname will be automagically updated to the specified name. That's it.  <comment35024> what do you get when you type echo $HOSTNAME <comment35025> this is weird...I am getting 'archos.local' for echo $HOSTNAME.  I did the initial writeup when I was at the office, but on my home network it is back to normal.  I wonder if this has something to do with my work network? <comment37420> How can you undo that? <comment106714> @Gio Delete the HostName key under System from /Library/Preferences/SystemConfiguration/preferences.plist. See [this answer](http://apple.stackexchange.com/questions/88463/terminal-bash-name/88466#88466). <comment130360> By changing the name in System Preferences-Sharing and then using `scutil` to set `HostName`, both `ComputerName` and `LocalHostName` were already set to the new name for me (in Mavericks). Nice to know that these other settings exist, though. <comment151757> @JimStewart: Indeed, that's why it's better to NEVER set `HostName`, because doing so will make that value persist even when you later try to change your hostname via *System Preferences*. Conversely, the `LocalHostName` _is_ picked up by the shell and `hostname`, so `HostName` is never needed. <comment151758> @Gio: @Lauri's post has excellent background info, but if you want a shortcut: to delete, run `sudo scutil --set HostName ''`. <comment151759> Setting `HostName` is not advisable, because it creates a separate value that then persists even when you later try to change the hostname via `System Preferences  Sharing`. By contrast, setting `LocalHostName` updates the same value, and is normally also picked up by the shell and `hostname` (the `ComputerName` value should be updated in tandem). Or does setting `HostName` behave differently in a way that is advantageous here? <comment151867> You're missing a `-`: it must be `--set` to work. Also, as I commented at Jeff's answer: it's probably better to not set `HostName`. <comment182404> My fix for this was to remove a dhcp entry on my router and then reboot (the router).  It had an old name for my mac cached (well, actually I had a fixed assignment in the dhcp settings)  After the router rebooted my mac apparent hostname (in bash prompt for e.g.) matches the one I set in Preferences-Sharing and I can see the new name registered in the dhcp display on the router.  PS. This difference only happened since installing Yosemite.  It is a sensible change but one that will confuse people. <comment190276> unfortunately, just setting those two didn't seem to be enough in my case: https://gist.github.com/rdp/71d5368087b94b5ea55a <comment190279> @rogerdpack: And you've run `sudo scutil --set HostName ''` first (case matters) and made sure that there's no entry in `/etc/hosts`? `scutil --get HostName` should report `Hostname: not set`. <comment190311> yeah `scutil --get HostName HostName: not set` /etc/hosts seems benign... <comment190321> @rogerdpack: Silly question: your `PS1` variable doesn't happen to have a _hard-coded_ hostname rather than using `\h`, does it? As an aside: `/etc/hosts` is no longer consulted as of OSX 10.10 (I've updated my answer). <comment190329> doesn't seem to `echo $PS1 \h:\W \u\$` my DNS system just be more messed up than is typical :) <comment190346> I believe you will want to set your HostName to match your `System Preferences  Sharing  "Computers on your local network can access your computer at: XXX.local"` name (ex: --set HostName 'XXX.local'), otherwise some reverse lookups may fail. <comment216741> Beautiful. Removing the hostname (by setting it to the empty string as you suggested: `sudo scutil --set HostName '' `) again allows OS X to map the computer name to its IP address (e.g., this now works `ping computername`). <comment243613> another to test the host name is `hostname -f` <comment267198> I had this difficulty on 2 machines and the ideas proposed in the answer by J.Hoover below, and in the comment by by mklement0 above, did not work.  Namely, you are both advising that one only change the LocalHostName and the ComputerName, however, changing these never changed the Terminal to reflect the Computer Name specified in the System Preferences.  I believe the reason for this, in my case, is that both machines were Time Machine backups and retained the locally stored credentials from the old image despite me renaming at a later date. Only HostName worked for me.  FYI to others. <comment340643> In my case I had an incorrect LocalHostName value. Running `sudo scutil --set LocalHostName ''` deleted LocalHostName and now my prompt is using ComputerName, which has the correct value.