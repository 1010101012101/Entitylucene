Update Preferences Panel after using default write <body> I am using default write to set/unset Block all incoming connections option of OSX firewall.  precodesudo defaults write /Library/Preferences/com.apple.alf globalstate -int 2 sudo defaults write /Library/Preferences/com.apple.alf globalstate -int 1 /code/pre  I realised that the option is not set if the preference panel is open.br Is there a way avoid this behaviour, possibly refreshing the Preference Panel UI after setting the new value?  <answer186649> Depends on whether you want to stick with shell, or use applescript. This applescript script gives you a popup for password:  precodedo shell script "defaults write /Library/Preferences/com.apple.alf globalstate -int SomeInteger" with administrator privileges tell application "System Events" to if (first application process whose name is "System Preferences") exists then     tell application "System Preferences"         quit         delay 1         activate         set current pane to pane "com.apple.preference.security"     end tell     tell application process "System Preferences" to tell window 1 to tell tab group 1 to tell radio button "Firewall" to perform action "AXPress" end if /code/pre  In Terminal, it looks messy:  precodesudo defaults write /Library/Preferences/com.apple.alf globalstate -int SomeInteger; osascript -e 'tell application "System Events" to if (first application process whose name is "System Preferences") exists then' -e 'tell application "System Preferences"' -e 'quit' -e 'delay 1' -e 'activate' -e 'set current pane to pane "com.apple.preference.security"' -e 'end tell' -e 'tell application process "System Preferences" to tell window 1 to tell tab group 1 to tell radio button "Firewall" to perform action "AXPress"' -e 'end if' /code/pre  Replace codeSomeInteger/code with a value.  Update:  precodeset firewallState to do shell script "defaults read /Library/Preferences/com.apple.alf globalstate"  if firewallState is "1" then     tell application "System Events" to display notification with title "Switching Firewall from This to That"     set newState to "2" end if  if firewallState is "2" then     tell application "System Events" to display notification with title "Switching Firewall from That to This"     set newState to "1" end if  do shell script ("defaults write /Library/Preferences/com.apple.alf globalstate -int " &amp; newState) with administrator privileges  tell application "System Events" to if (first application process whose name is "System Preferences") exists then     tell application "System Preferences"         quit         delay 1         activate         set current pane to pane "com.apple.preference.security"     end tell     tell application process "System Preferences" to tell window 1 to tell tab group 1 to tell radio button "Firewall" to perform action "AXPress" end if /code/pre  <comment220400> Interesting. But I noticed you must guarantee Automator access to Accessibility to reopen the Preferences Panel: is this necessary? <comment220403> @pasine Yes, It's called GUI Scripting. You effectively allow the script to takeover cursor and perform actions for you. I forgot the part where you said "the option is not set if the preference panel is open". Sorry. It code has to be updated to overcome that. Maybe later. <comment220408> I think your solution is better than mine. But I don't like the idea to quit the preferences panel without alerting the user, so I added a dialog box before closing it and applying the option: what do you think? https://gist.github.com/pasine/2361dbe0c147698ca926 <comment220415> @pasine in the spirit of convivial one-upmanship, see update. <comment220436> Nice, check my new version. I prefer to check that the option has been set correctly before notify to the user. <comment220443> @pasine bravo, sir. I personally loathe dialog window. It's ungainly to look at and laborsome to click. If you choose to use `display dialog`, may I suggest deleting `with administrator privileges`? Display one warning window with a hidden-character text field that asks nicely for password, and pipe the resulting string into `sudo defaults write`. <comment220503> I have updated the gist with my definitive version. I am using it with Alfred, so I decided to keep the opportunity to set the option to on/off or toggle the current state. Thanks for your support, you really helped me figure out a lot of things. <comment221869> Hey @fartheraway, as I have noticed you have good experience with Applescript, can you explain me why is this happening? https://apple.stackexchange.com/questions/187101/modifing-a-preference-via-applescript-changes-file-group