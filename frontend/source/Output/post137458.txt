Using dd on video DVDs gets permission denied after about 700MB <body> I bought three movies on DVD on eBay. I am trying to make .iso backups onto my external hard drive. The first one I tried using Disk Utility, but it only produced a partial copy (without generating any errors) so I switched to using codedd/code, which worked on the first movie. For both the second and third movie, codedd/code only partially ran through before giving the following error:  codedd: /dev/disk2: Permission denied 1438432+0 records in 1438432+0 records out 736477184 bytes transferred in 212.743197 secs (3461813 bytes/sec)/code  The number of records/bytes is similar, but not exactly the same, for both movies. I have no clue what else to try, since codedd/code is as low-level a program I know to use. I have no idea why the error would be generated mid-copy like that. Googling for this kind of error leads to answers regarding improper filesystem permissions (I'm running codesudo dd/code) and unmounting first (I'm also running codesudo umount/code), and AFAIK neither would lead to codedd/code working emfor the first 700MB/em and then getting that error.  Also, I have watched these movies all the way through without incident, so the filesystem appears to be good.  <answer137459> While writing this question, I remembered something I did different with the first disk and think I figured it out. For the second two disks I was using codesudo umount /Volumes/DISK_NAME/code to unmount the DVD before running codedd/code, which generated the permissions error, so I tried codesudo umount /dev/diskX/code. This works, but only once per boot (it would fail again after one successful codedd/code, until I rebooted). But can anyone explain emwhy/em it worked? I thought the two invocations of codeumount/code were equivalent.  <comment241856> I ran into this problem, too. Indeed, it seems like the only solution is to reboot. I think the `umount` argument may be a red herring.