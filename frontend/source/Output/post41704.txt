Can you repair a Leopard sparsebundle in Lion? <body> I have a MacBook that runs Leopard and uses Time Machine to backup to a linux based server.  For a long time this setup has worked perfectly, but apparently it stopped working over a week ago.  It seems the sparsebundle has been corrupted, checking /var/log/fsck_hfs.log when trying to mount or attach it has proven as much.  To fix this I had connected the MacBook via gigabit ethernet so that fsck can run as per various guides online.  The sparsebundle is 424GB.  But for some reason after around 12 hours the ethernet connection drops and a self-assigned IP address is selected. Rebooting my router to see if this helps has had no affect, the problem definitely seems to be with the computer.  A wireless connection could end up taking days to complete, and I have no confidence it would not break that connection too.  But I have a 2011 Mac Mini and so am wondering whether it is safe to use fsck on that, as it obviously runs Lion?  The reason for my concern is that I know there are minor differences to sparsebundles with successive versions of OS X.  So although it should repair the corruption (if it is fixable), I do not want to risk it making the backup incompatible with Leopard.  <comment47318> Maybe this helps: http://blog.jthon.com/?p=31 <comment47320> That is one of the online guides I was trying to follow. Unfortunately the problem is my MacBook not being able to keep a ethernet connection long enough to be able to complete a run of fsck. <comment50014> Having not gotten an answer, I managed to free up a 1TB USB drive, transferred the sparsebundle to that, and so repaired it with Leopard that way.  The bundle was around 550MB and fsck took around 40 hours to run, so taking it off the network may have been for the best anyway.  But it was successfully repaired and Time Machine accessed it with no complaints.  So if anyone else finds themselves in the same position as me, that is what I would recommend. <comment76630> @Michael: you can add this as an answer, and accept it, so that it's clearer for others that your problem is solved