OS X application start/stop hook <body> How can I have a script automatically ran when I start or stop an app without using 3rd party tools?   I'm not developing the application myself, it's a general question that applies to any installed apps.  Clarifications: The application is started/quit be any means possible. The script and the application should be ran serially.   <answer118617> Assuming answers to my clarification questions above are that you want:  ol lithe script to run emanytime/em a specific application is run, regardless of how or by what process or user, and/li lithe script to run in an asynchronous, non-blocking way (e.g. for logging purposes)/li /ol  ...there may be a few ways to do it.  None I can think of are terribly elegant or turnkey and all require some sort of demonized process running as root which act to monitor the system for launch events.  h2Monitoring codeexec/code calls via codefs_usage/code/h2  One possible way is to create a daemon (LaunchDaemon) which runs continuously, monitoring a running codefs_usage/code command for codeexec/code events.  You can see the kind of information you get by running the following command:  precodesudo fs_usage -f exec /code/pre  Here's the relevant line when I opened Safari:  precode17:30:14.465075  posix_spawn    /Applications/Safari.app/Contents/MacOS/Safari    0.000352   launchd.51630812 /code/pre  Here's the output when I opened ran codeopen /Applications/Maps.app/code from the command line:  precode17:35:51.594849  execve       /usr/bin/open                                 0.003680 W bash.51635318 17:35:51.642212  posix_spawn  /Applications/Maps.app/Contents/MacOS/Maps    0.003158 W launchd.51635324 /code/pre  Note that nearly all "Applications" (/Applications/*.app) are launched via codeposix_spawn/code by codelaunchd/code and the file used to launch them is code/Applications/FOO.app/Contents/MacOS/FOO/code (where codeFOO/code is the application's name). So, theoretically, you could have your LaunchDaemon monitoring this command and triggering your script whenever it outputs the path to the app you're monitoring:  precodesudo fs_usage -w -f exec | perl -lne 'm/.*posix_spawn +(.*?) +[0-9.]+ . launchd.\d+/sm &amp;&amp; print $1' /code/pre  h2Monitoring codelaunchservicesd/code via codelsappinfo/code/h2  I wasn't terribly happy with the above because it's kinda hacky, watching for filesystem events instead of the launching event that triggered them. And then I realized, "codelaunchd/code"!  Enter Launch Services:  ul lilaunchservicesd(1) manpage/li lilsappinfo(8) manpage/li /ul  Leading to:  precodelsappinfo listen +all forever /code/pre  And Voilà, you not only have launching, but also get notified when an app quits. The keys you care about are the following:  ul likLSNotifyApplicationLaunch/li likLSNotifyApplicationBirth/li likLSNotifyLaunchFinished/li likLSNotifyApplicationDeath/li /ul  <comment138359> As far as I know, you can’t. It’s easily done with Keyboard Maestro but I don’t know of any way to do it without 3rd party software. <comment138362> Two questions of clarification since you didn't really say WHY you might want to do this: 1) Are you interested in having the script run ONLY when YOU launch/quit an app via the Finder, Dock, launcher, etc or would you want it to be run ANYTIME an application is launched or quit by any means and any user?  2) Would you want this script to be run FIRST and then the app, serially, or just run asynchronously (e.g. for logging purposes). <comment138369> Is it one specific app or all apps?