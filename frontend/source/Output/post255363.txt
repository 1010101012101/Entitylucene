SSH tunnel restricted to "root" in El Capitan? <body> A common pattern for tunneling HTTP traffic over SSH goes as follows:  term1: codessh -D 51000 user@remotehost.com/code  term2: codecurl -x socks5://localhost:51000/ 'https://api.ipify.org?format=json'/code  As of El Capitan, attempting this gets an error in term2:  codecurl: (7) Failed to receive SOCKS5 connect request ack./code  and the following shoved into term1:  codeopen failed: administratively prohibited: open failed/code  Now, you might be thinking to yourself "Hey, dummy; turn on codeAllowTcpForwarding/code on coderemotehost.com/code." Well, thanks for the vote of confidence, but I have two answers for that:  1) codegrep -i '^allow' /etc/ssh/sshd_config/code on remotehost.com says codeAllowTcpForwarding yes/code  2) If I run ssh as sudo on the OS X box, it WORKS:  term1: codesudo ssh -D 51000 user@remotehost.com/code  term2: codecurl -x socks5://localhost:51000/ 'https://api.ipify.org?format=json'/code  code{"ip":"a.b.c.d"}/code  It's not specific to port 51000; I have tried several thousand ports 1024, in case it was some other service squatting on that port; I have also tried with other remote servers being the target of the SSH command, in case that was related. In each case, a user who is an "Administrator" strongcannot/strong open a DynamicForward port, but coderoot/code can.  Obviously, running everything via sudo all the time is undesirable. Can anyone recommend somewhere I can read about whatever might be the underlying cause of this issue? 