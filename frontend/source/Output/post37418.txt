How can I open port 80 so a non-root process can bind to it? <body> I want to run a web server on my Mac as a non-root process. Normally only root processes can bind to port 80 (or to any port below 1024).  Can I open port 80 specifically so that non-root processes can listen on it?  <answer37499> What you should be able to do is open port 80 on your router and point it to the local IP address of your web server. Then on your Mac, enable Web Sharing from the System PreferencesSharing preference pane and point it to the directory of your choosing. This has worked for me in the past until switched over to 10.6 Server.  <answer46804> This is difficult to do by design, and unless you have root access to your machine none of the following will work as they require root to setup the changes.  Once changed, though, userspace programs will have access without having root.  There are two common ways to accomplish this, and which you choose will depend on why you're trying to work around the restriction:  h3Point port 80 to another port, such as 8080/h3  By reconfiguring your machine to pass all port 80 traffic to port 8080, or any port of your choosing, then you can allow user space servers to receive root privilege ports in the area they are given access to.  The process is straightforward:     Step 1: View current firewall rules.  precodesudo ipfw show /code/pre      Step 2: Add port forwarding rule (80 to 8080)  precodesudo ipfw add 100 fwd 127.0.0.1,8080 tcp from any to any 80 in /code/pre      If you want to remove your firewall rules run:      sudo ipfw flush   (source)  This is a temporary change, and will revert once you reboot, or flush as indicated int he last line.  You can make the change permanent, or you could add the command as a startup line prior to starting your server, which is probably safer from the standpoint of security.  h3Use Authbind/h3  Authbind was designed specifically to allow one program access to lower level ports without giving it full root access.   There is an OS X port:  https://github.com/Castaglia/MacOSX-authbind  It may still be limited to IPv4 traffic, though, you may have to do some additional investigation to find if it meets your needs.  <answer46809> You can use codencat/code to forward traffic from a web server running on some other port:  precodesudo ncat -l -p 80 -c ' ncat -l -p 1234' /code/pre  This will forward traffic on port 80 to localhost:1234. This is a bit of a kludge however, I wouldn't use it anywhere beyond quick testing and definitely not in production.  Note that this won't allow a non-root process to bind to it, but by picking a port the process can bind to, 1234 in this example, it will look like it is bound to port 80. This is doing the equivalent of forwarding port 80 to port 1234 with a firewall, but on a far more temporary basis.  <answer253320> You can also use ssh to do port forwarding.  So if you have a server running on 8080, you can forward traffic from port 80.  Here is a script I use, which stops native apache if it's running and forwards traffic:  forward8080to80.command:  precodeecho "You may close this terminal and the forwarding will continue." echo "To stop, kill the ssh process found by `sudo lsof -i ':80' | grep LISTEN`" sudo apachectl stop sudo ssh user@127.0.0.1 -L 80:127.0.0.1:8080 /code/pre  <comment42569> I'm looking for this as a solution for my own dev machine. Since I have to work at places where I don't have control over the router, this solution could not work for me. I suspect it should work if you're setting up a server and for some reason do not have root access. <comment42570> So, just to be clear, you're trying to set up a web server at different client sites, but don't have the access to open port 80? How will you get the port open on the router if you don't have access? Am I understanding correctly or am I way off base? <comment42571> I'm just trying to use port 80 on my own development machine not on a production server. I deploy on heroku anyway. <comment42888> Related: [link1](http://stackoverflow.com/questions/413807/is-there-a-way-for-non-root-processes-to-bind-to-privileged-ports-1024-on-l), [link2](http://serverfault.com/questions/112795/how-can-i-run-a-server-on-linux-on-port-80-as-a-normal-user) <comment134036> This is a good workaround. NB. `ncat` comes with `nmap` which can be installed via Mac Ports with `sudo port install nmap`. MacPorts itself can be installed from http://www.macports.org/install.php. <comment155199> LOVE MacOSX-authbind... It lets you run, for example, a web server on port 80 - as a "regular Administrator".  i.e. in your `launchd` `.plist`... `  `"ProgramArguments": [ "path/to/authbind", "/usr/bin/php", "-c", "/www/.router.ini", "-S", "0.0.0.0:80", "-t", "/www", "/www/.router.php"]` Woohoo! <comment177681> OS X Yosemite removes `ipfw`. [This gist](https://gist.github.com/zhoutong/8adca7038639f0f5fb0e) describes an alternative solution using `pf`. <comment237033> This just gives me bind: address already in use errors. <comment244130> Note that redirecting traffic to unprivileged port can be insecure if you're on a shared environment; another process may bind to that port before your program does or if your program unbind the port even momentarily for a quick restart. <comment257917> more like http://unix.stackexchange.com/ question, isn't it? <comment264613> authbind ist really a great solution, thanks! <comment266436> why unix if it's on a macos system? <comment271775> Same here - didn't work. This did the trick: http://unix.stackexchange.com/a/187038 <comment336355> Ssh port forwarding can be quite low performance, and the security features don't make a lot of sense in a local-local environment. Better to use osx's built in port forwarding, or something like ncat.