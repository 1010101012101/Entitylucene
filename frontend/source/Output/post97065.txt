how do I write a homebrew recipe? <body> What are the key features of a homebrew recipe?   If I want to contribute a recipe, e.g. this one for udunits to the the hombrew-science repository, how would I convert a command-line script like this:  precodewget ftp://ftp.unidata.ucar.edu/pub/udunits/udunits-2.1.24.tar.gz tar -xvf udunits-2.1.24.tar.gz cd udunits-2.1.24 ./configure  make  make check make clean /code/pre  into a valid recipe?  <answer97205> This Homebrew README gives these steps (with links to more information):     h2Contributing/h2      In short:      ol   liFork Homebrew./li   licodebrew create http://example.com/foo-0.1.tar.gz/code/li   licodegit checkout -b foo/code/li   licodegit commit Library/Formula/foo.rb &amp;&amp; git push/code/li   liPull Request./li   /ol      In long:      ul   liFormula Cookbook/li   liAcceptable Formulae/li   /ul   Homebrew formulas are written in Ruby (tested against Ruby 2.0.0). Knowledge of Ruby certainly helps, but you might be able to get a feel for how to do basic procedures like you outline above just by reading a few existing formulae.  Getting a formula accepted also requires a little knowledge of Git and GitHub pull requests, but is covered How to open a Homebrew pull request (and get it merged)  <comment146226> To the 'Homebrew formulas are written in Ruby point' -- I've seen a bunch of formulas now that use Ruby as a caller in to an installation routine written in another language. So at a minimum you need to know enough Ruby to do the install/uninstall routines and the rest you can do in insert language of your choice here by calling out to a helper script. <comment146242> That's good to know. <comment146715> Brew will extract and `cd` automatically. You don't need to run `make clean`, because the build directory is temporary. The current answer has the rest. <comment153405> The amount of Ruby you need to know to create a recipe is practically nothing, about 0.00001% of the full Ruby language.  You're basically setting a few parameters, but the big benefit of it being written in Ruby is that you have all of Ruby available to you to do whatever you need.  (People who spread FUD about Homebrew or Vagrant or Puppet *etc.* using Ruby are either clueless or dishonest, as in all cases you can get by with composing something about as complex as an .INI file, but you are not limited to that.)  Bottom line: don't be intimidated.  You don't need Ruby experience.