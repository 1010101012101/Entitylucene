Measure Mouse Polling Rate on Mac <body> How can I measure the polling rate of my USB mouse on OS X (10.7.5)?  I am looking for something like this, but for OSX.     "...a lightweight program that can tell you how often the position of your mouse is sent to the other applications. This parameter is quite important when you are using tools or games with high frame rates..."   Basically, windows has a WM_MOUSEMOVE event that signifies that the system has detected cursor movement and the program displays that to the end user. Would a similar program on Mac tell me similar data?  <answer100906> I work with "TylerAndFriends". We know that the average mouse is polled every 8-10ms, but you can buy "gaming" mice that are emsupposed/em to be polled more often (1-2ms). If you plug in one of these better mice, is there a way on OS X to check the actual polling rate of the mouse?  For example, I know you can do this on a PC by running the freeware program mouserate.exe by Oliver Tscherwitschke, http://www.softpedia.com/get/System/System-Miscellaneous/Mouse-Rate-Checker.shtml  Is there an equivalent or simple way to check the rate at which your USB device (i.e. mouse) is being polled besides emassuming/em that the device is doing what it's supposed to be doing?  <answer146437> You can use Mouse Rate which is written in java and therefore runs on OS X, Windows and Linux .  img src="https://i.stack.imgur.com/bcHjm.jpg" alt="Mouse Rate"  The source is on github.  <answer244033> There is a OS X  shareware App that can modify pooling rates for USB devices: http://www.usboverdrive.com/USBOverdrive/Devices.html     Supported devices:      The USB Overdrive works with any compliant input device so there's   really no way to list them all. In general, the USB Overdrive should   work with the following kinds of devices:      ul   liMouse, Trackball, Trackpad and other pointing devices/li   liGamepad, Joystick, Racing Wheel and other gaming devices/li   liExternal keyboards (built-in MacBook keyboards are not supported)/li   liMany multimedia controllers/li   liMany generic devices with compliant buttons and controls/li   /ul   <comment118776> Often it's best to link to what you googled and how it didn't answer your question. That helps others know if they have similar problems and also helps us from suggesting something you already tried. See [help] for more info. <comment118777> Can you bit more specific. <comment118781> Edited the question with an example. <comment118785> @TylerAndFriends Awesome - that helps immensely. I tried to put some more detail in - let's see what people come up with for an answer now. <comment118788> This is not an answer. <comment118789> Welcome to Ask Different! This would make a much better edit to the main question. Normally we delete non-answers, but let's leave this around for 24 hours to see what we can get for an answer. If you want to delete it sooner and incorporate the details here into the question - that would be ideal. <comment118790> @BartArondson You are correct, however let's let things slide for a few hours until jsalmon and tyler get used to edit tools and process. There's a great question here, and it's not clear to me there even is one set polling interval. The mouse itself has a poll interval. It marshals that data and tries to send it over USB (where it's subject to the USB controller and other traffic pre-empting it) and finally there's the layers of software between the human interface drivers and any app that registers for and gets mouse events. This isn't a simple question and more details will help us all...