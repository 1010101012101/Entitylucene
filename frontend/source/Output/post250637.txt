Use Automator to copy single folder to multiple locations <body> I have several website project folders in a structure like this:  precodeClient Work  |- Client 1   |- client1site     |- admin       |- core  |- Client 2   |- client2site     |- admin       |- core  |- Client 3   |- client3site     |- admin       |- core /code/pre  The diagram above just shows the key folders, there are others. There are also more than 3 clients, but the structure is the same for all.  The core folder is part of a CMS, and is identical on all sites. This is updated regularly.  I would like to be able to use Automator to copy a single instance of this core folder, stored somewhere else on my computer (can be anywhere), and replace all of the instances of /admin/core in my Client Work folder.  Is this possible?  Thanks for any help!  <answer250648> Yes this can be done in strongAutomator/strong.  Create a new strongWorkflow/strong and add a strongGet Specified Finder Items/strong emaction/em adding the strongcore/strong emtemplate folder/em to it.  Add a strongCopy Finder Items/strong emaction/em, one for each of the emClient/em sites.  For each strongCopy Finder Items/strong emaction/em, do the following  ul liCheck the strong[✓] Replace existing files/strong emcheck box/em./li liIn the strongTo:/strong emlist box/em, select: strongOther…/strong  ul liIn the strongChoose/strong emdialog box/em:  ul liNavigate to the strongadmin/strong emfolder/em of the appropriate emClient (number)/em./li liClick the strongChoose/strong embutton/em./li /ul/li /ul/li /ul  Having done this for each emClient/em the emworkflow/em will then emcopy/em the strongcore/strong emtemplate folder/em to the strongadmin/strong emfolder/em of each emClient folder/em, thus replacing it and it now having the contents of the updated strongcore/strong emtemplate folder/em in each of the emClient folders/em at the designated location.  hr  If you want to be able to know, more easily, which Client the strongCopy Finder Items/strong emaction/em is for, do the following instead:  ul liCheck the strong[✓] Replace existing files/strong emcheck box/em.  ul liIn the strongTo:/strong emlist box/em, select: strongNew variable…/strong/li liIn the strongVariable Options/strong emdialog box/em:  ul liChange the emtext/em for strongName:/strong to an appropriate designator, e.g.: PathToClient1/li liIn the strongPath/strong emlist box/em choose strongOther…/strong, then navigate to the strongadmin/strong emfolder/em of the appropriate emClient (number)/em./li liThen click the strongChoose/strong embutton/em./li /ul/li /ul/li /ul  By creating a emvariable name/em for each emClient folder/em there is no ambiguity which strongCopy Finder Items/strong emaction/em is for which emClient folder/em. Although this does assume you select the proper target folder for each. ;)  hr  Folder structure before strongAutomator/strong emworkflow/em:  img src="https://i.stack.imgur.com/WLt81.png" alt="Folder structure before Automator workflow"  strongAutomator/strong emworkflow/em:  img src="https://i.stack.imgur.com/ZHAsZ.png" alt="Automator workflow"  Folder structure after strongAutomator/strong emworkflow/em:  img src="https://i.stack.imgur.com/i0kZf.png" alt="Folder structure after Automator workflow"  Folder structure after updating the strongcore/strong emtemplate folder/em and running the strongAutomator/strong emworkflow/em again:  img src="https://i.stack.imgur.com/gF8Vz.png" alt="Folder structure after Automator workflow"  <comment311312> I've updated my answer, you do not necessarily need to create a _variable_ for each _target_. I had forgotten to check the [✓] Replace existing files _check box_ on one and it didn't complete properly and though I need to use a _variable_ instead, which in this use case it wasn't necessary. Sorry for any confusion. That said, using a _variable_ for each does help in knowing which Client is the _target_ where as just selecting the target folded they all look the same. <comment312487> Just a thought. Wouldn't it be simpler and easier to use aliases or something in each client folder to point to an external copy of the admin/core folder, since you seem to want it to be identical across clients?