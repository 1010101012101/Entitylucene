Associating Protocol handler in Mac OS X <body> Many tools support an item link feature using protocol; with a given link, I can open the page with the tool that created it.   For example, I can open the DEVONthink page that I made:   precodeopen -a "DEVONthink Pro.app" x-devonthink-item://2AD2E3D2-58B5-455F-99D4-C91D68C5F959 /code/pre  Can I teach Mac OS X that the codex-devonthink-item/code is the "DEVONthink" protocol to make the command like this?   precodeopen "x-devonthink-item://2AD2E3D2-58B5-455F-99D4-C91D68C5F959" /code/pre  <answer253202> Protocol handlers are registered with OS X in application bundles (specifically, in the info.plist file in the bundle's codeContents/code directory). This should be done by the application that supports it. In other words, you should be able to straight-up run the second command and have it open DEVONthink. Based on this page it sounds like that's how it works, but you say it doesn't, so there's a relatively easy way to do it for any program.  If not, or if you just want to register your own handler, here are some steps (modified from Launching External Applications using Custom Protocols under OSX).  Create an AppleScript file that contains the following.  precodeon open location this_URL     do shell script "open -a 'Applications/DEVONthink Pro.app' this_URL" end open location /code/pre  On the second line, you are defining what should happen when your protocol is called. codethis_URL/code will be the full URL entered (on the command line or elsewhere), including the protocol. In your case, you want to pass the whole URL including codex-devonthink-item/code into DEVONthink. If you were creating your own protocol, you might only want to pass part of the string, so keep that in mind.  Save the AppleScript as an Application bundle. Once saved, find it on disk, right-click on it, and choose Show Package Contents. Inside the Contents folder there will be a file called info.plist. Open this in a text editor (emnot/em TextEdit, as it will almost certainly screw up the file format).  At the bottom of the file will be  precode&lt;/dict&gt; &lt;/plist&gt; /code/pre  Directly above this, add the following:  precode    &lt;key&gt;CFBundleIdentifier&lt;/key&gt;     &lt;string&gt;org.personal.dttrick&lt;/string&gt;     &lt;key&gt;CFBundleURLTypes&lt;/key&gt;     &lt;array&gt;         &lt;dict&gt;             &lt;key&gt;CFBundleURLName&lt;/key&gt;             &lt;string&gt;Pass To DEVONthink&lt;/string&gt;             &lt;key&gt;CFBundleURLSchemes&lt;/key&gt;             &lt;array&gt;                 &lt;string&gt;x-devonthink-item&lt;/string&gt;             &lt;/array&gt;         &lt;/dict&gt;     &lt;/array&gt; /code/pre  Save and double-click on your app. Nothing should happen, and that's fine - but in the background, it's registered the protocol with the OS.  Finally, back in Terminal, run your desired command:  precodeopen "x-devonthink-item://2AD2E3D2-58B5-455F-99D4-C91D68C5F959" /code/pre  DEVONthink should open with the specified item. I don't have DEVONthink and couldn't test it; I am relying on the command you originally provided as working. If not, you'll need to modify the shell script in the AppleScript to reflect what the actual command needs to be.  <comment315074> The ideal solution would be for DEVONthink to appropriately register their custom protocol with the system. Short of that...