How is the Y value for the Memory Pressure graph in Activity Monitor calculated? <body> How is codevm.memory_pressure/code's value bounded / calculated on OS X 10.10.2 - Yosemite?  I've researched several answers to this question and am trying a few things on the command line to get exact values rather than looking at the graphs in Activity Monitor.  With the system under light load:  precode~ ❯❯❯ sysctl -a vm | grep page_free &amp;&amp; sysctl vm.memory_pressure &amp;&amp; sysctl kern.memorystatus_vm_pressure_level vm.vm_page_free_target: 4000 vm.page_free_wanted: 0 vm.page_free_count: 2683717 vm.memory_pressure: 0 kern.memorystatus_vm_pressure_level: 1 /code/pre  The kern.memorystatus_vm_pressure_level looks right, and appears to be what it uses to color the graph (green for 1-NORMAL, yellow for 2-WARN, red for 4-CRITICAL). However, vm.memory_pressure is 0 and the graph has some amount of green to it, and it's jagged, meaning the value is clearly changing over time, not just sitting at 0.  Under heavy load it looks like this:  precode❯❯❯ sysctl -a vm | grep page_free &amp;&amp; sysctl vm.memory_pressure &amp;&amp; sysctl kern.memorystatus_vm_pressure_level vm.vm_page_free_target: 4000 vm.page_free_wanted: 0 vm.page_free_count: 32572 vm.memory_pressure: 1693 kern.memorystatus_vm_pressure_level: 4 /code/pre  Or this...  precode~ ❯❯❯ sysctl -a vm | grep page_free &amp;&amp; sysctl vm.memory_pressure &amp;&amp; sysctl kern.memorystatus_vm_pressure_level vm.vm_page_free_target: 4000 vm.page_free_wanted: 0 vm.page_free_count: 5431 vm.memory_pressure: 277 kern.memorystatus_vm_pressure_level: 4 /code/pre  Or this...  precode~ ❯❯❯ sysctl -a vm | grep page_free &amp;&amp; sysctl vm.memory_pressure &amp;&amp; sysctl kern.memorystatus_vm_pressure_level vm.vm_page_free_target: 4000 vm.page_free_wanted: 3220 vm.page_free_count: 805 vm.memory_pressure: 1 kern.memorystatus_vm_pressure_level: 4 /code/pre  Here's where I'm confused. None of these values alone could possibly be the Y value of the graph for a couple of reasons.  First, vm.memory_pressure just sits at 0 almost all the time under normal load, and the graph doesn't sit at 0.  Second, they are not consistent with one another. Looking at the memory_pressure value, it is lower when it actually had wanted pages (3220 wanted and pressure of only 1) than when it had 5431 free and none wanted (pressure was 277). And somehow that's even lower pressure than when it had 32572 free (and had 1693 pressure).  So, when it plots that graph, what's the calculation for the Y value, and how can I get the data I need to calculate it from the command line? I'm looking to make a command line tool that will spit out a percentage of how high the current line would be on that graph, so I need to know how to calculate the value at any given time, as well as what the range of possible values are.  <comment200111> Great question. The Activity Monitor shows pressure on a scale from 0% to 100% but I've not found any reference on the command line comments of this. I'll see if I can dig up enough for an answer this week. Can we presume you are interested in 10.10.x only? <comment200113> Thank you. And yes, I'm on 10.10.2, so that's the only one I'm concerned with for this. <comment265747> Fascinating data points. It's still not clear to me how the algorithm is designed or coded - or even if it's remaining the same from version to version. See http://apple.stackexchange.com/questions/107126/what-scale-or-measure-does-mavericks-and-yosemites-memory-pressure-adhere-to for some nice commentary and more data on this. <comment359619> Possible duplicate of [What scale or measure does Mavericks' and Yosemite's "memory pressure" adhere to?](https://apple.stackexchange.com/questions/107126/what-scale-or-measure-does-mavericks-and-yosemites-memory-pressure-adhere-to)