Add AppleScripts to Git repository <body> I have a few AppleScript files that I would like to share with the community on GitHub.    The files are located in two distinct directories:  ul li~/Library/Scripts/li li~/Library/Application Support/Microsoft/Office/Outlook Script Menu Items/li /ul  With this structure preserved, I could edit the files in situ, without having to constantly move files to/from a unified, script directory. a Questions:  ol liCan a single repository contain multiple, unrelated directories?/li liIf a contributor forks my repository (code$ git clone https://github.com/username/applescript.git/code), will the directory structure be preserved?/li /ol  ** edit 1 **  ol liLogistically speaking, how and where would I create the local Git repository?  Seems like adding it to ~/Library/Scripts would be the easiest./li liDo the individual applications emeven/em recognize scripts that have been located in the ~/Library/Scripts/Applications/* folder?  Or is this merely for organizational purposes.  /li /ol  Unfortunately, Outlook for Mac 2011 does seem to recognize the scripts located in the code~/Library/Scripts/Applications/Outlook/code folder, aliased (haven't tested a symlink) to the code~/Library/Application Support/Microsoft/Office/Outlook Script Menu Items/code folder.  ** edit 2 **  The scripts referenced by a symbolic link are not recognized by Outlook's AppleScript menu.  precode$ cd ~/Library/Application Support/Microsoft/Office/Outlook Script Menu Items $ ln -s ~/Library/Scripts/Applications/Outlook Outlook /code/pre  <answer101096> Ideally, AppleScripts should be saved as text (with the .applescript extension) to take full advantage of the features of git which works best with text files.  You could possibly add AppleScripts as binaries (with the .scpt extension) that would work.  I mean you could check the binaries in and out of a git repository.  I believe that you could place your local git repository in a common super-directory such as:  ~/Library  ol liCan a single repository contain multiple, unrelated directories?/li /ol  Yes.  ol liIf a contributor forks my repository ($ git clone https://github.com/username/applescript.git), will the directory structure be preserved?/li /ol  I believe so. The other user would have to place the forked repository in the right place: ~/Library for the scripts to work like yours do.  Although they could place the forked repository anywhere if they wanted to.  You could try forking the repository in another account on your own computer to test how this would work for other people.  An alternative to what you are proposing is to have two local git repositories, one for each folder.  <answer101103> I recommend keeping git out of your code~/Library/code folders, both to keep things simple for people using your scripts, and for stability's sake (I'd argue that the Library's contents should be considered an implementation detail of OS X that you can't rely on not to change on you in future versions).   Instead, I would just copy all the scripts in their textual form into a separate folder for the git repo (code~/applescripts/code, for example), share that, and include instructions for where the user should install the scripts in your README file.  <comment119014> To keep things simple for people using your scripts, I would just copy all the scripts into a separate folder for the git repo (`~/applescripts`, for example), share that, and include instructions for where the scripts should be placed in the README. <comment119016> I agree: it's better to version control the `.applescript` files.  I can add instructions to the README file on how to compile it (âŒ˜K). <comment119042> +1 "I recommend keeping git out of your ~/Library folders"  I think that you make a good point about not putting the git repository into the ~/Library folder.