Open app in current directory when another app with the same name exists, from command line <body> I have an app name codefoo.app/code I want to open from command line (using codeopen/code).  My folder structure is like this:  precode~ +---bar      +--- foo.app +---baz      +--- foo.app /code/pre  I want to open the app located in the codebar/code folder, however if I do codeopen -a foo.app/code, the app located in the codebaz/code folder will open, even if my current working directory is in the codebar/code folder.  codeopen -a ./foo.app/code or codeopen -a ~/bar/foo.app/code doesn't work either.  <answer39311>    open bar/foo.app/Contents/MacOS/foo   If you're using the -a parameter to codeopen/code, then you need to omit the .app extension.  <answer39361> In this case, codeopen -a/code is strongNOT/strong what you want; the code-a/code option is for launching known applications (indexed in the Launch Services database that lets you open a document and get the right application) by name, not by pathname, or for opening files with a given application.  What you are looking for is just plain strongopening/strong codefoo.app/code, just like you double-clicked it in the Finder. To do that,  precodeopen foo.app /code/pre  This will open exactly that application, without involving the Launch Services database at all.  <comment44465> It doesn't matter if I omit the .app extension and what if the executable is not named foo? How would I get the executable name? Example :`bar/foo.app/Contents/MacOS/foobar` <comment44466> Typically the .app bundle and the actual executable file (in the Contents/MacOS/ directory) have the same name. So if the top-level directory is named foo.app, I would expect the executable file to be foo.app/Contents/MacOS/foo . <comment44467> But in this case it doesn't... <comment44469> Then you will need to go into the .app directory and determine the name of the executable file in order to type the correct `open` command. How did you obtain these apps? <comment44470> It's a jar bundled inside an app so the executable name is actually `JavaApplicationStub`. I also found out that the executable name is stored in the Info.plist as `CFBundleExecutable`. <comment44471> Ah, well I recommend you write questions using the actual data whenever possible. Sometimes, fictional examples can get in the way of getting the problem solved.