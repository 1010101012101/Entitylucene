Make a python program an application <body> I would like to make a Python program executable, like in Windows, when you use a program like codecx_Freeze/code to make Python programs become code.exe/code. I would like to do the same for Mac, I would like to make it an app...  I know I can put as first line of the file, a sheebang, or that I can change the mode of the file, but this does not make the program an independent application...  <answer153828> You can do that with Automator.  ol liOpen Automator up/li liCreate a new "Application" document img src="https://i.stack.imgur.com/8B4Ww.png" alt="New Automator document"/li liAdd a "shell script" action to your workflow img src="https://i.stack.imgur.com/oHx5W.png" alt="Find shell script" img src="https://i.stack.imgur.com/uLVhD.jpg" alt="Drag to workflow"/li liYour shell script should look like this: img src="https://i.stack.imgur.com/kjxmf.png" alt="Shell command"/li liSave it wherever! You can put it in code~/Applications/code for example./li /ol  <answer153863> You might want to take a look at Platypus. It is a developer tool for OS X that lets you wrap your Python/Perl/shell/etc script with an application framework that makes your Python script appear and run like it was a native OS X application.  Though I believe you can do the same thing with Automator, there are a few extra nice things about Platypus from what I remember. For example, you can create a custom icon for the application where I think Automator's output would probably have to be modified after the fact.  <answer232600> ol liOpen automator/li liAdd a 'run shell' action/li liThere should be a drop down list that says '/bin/bash' click and switch to /usr/bin/python/li liwrite your text and your set!!!/li /ol  <comment181084> Isn't cx_freeze crossplaform? or use the other apps mentioned on the cx_freeze homepage <comment181111> Keep in mind, depending upon how you have your system configured, you may need to manually source your shell configuration files within Platypus to ensure environment variables are correct. <comment181134> @tubedogg, yes, you do need to be extra careful in your scripts. For example, make sure you're pulling the correct version of Perl/Python/whatever and that any libraries you're expecting are there as well. My experiments with Perl required me to make sure I was hitting the right version based on OS and 32/64bit-ness. If you're going to distribute it, don't assume someone else has same environment variables. Wasn't hard, but worth being mindful about. <comment284268> How does this differ or improve on the earlier answer http://apple.stackexchange.com/a/153828/237