Creating a symbolic link in /bin is not working <body> I've tried three different ways to create a symbolic link to Sublime Text on my Mac and, after restarting terminal each time, it still keeps telling me command not found. I'm using a Mac with Yosemite (OSX Yosemite, 10.10). How can I create a symbolic link so I can open Sublime with the codesub/code command?  strongOne/strong  precodeln -s 'Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl' /bin/sub /code/pre  strongTwo/strong  precodeln -s "Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl" /bin/sub /code/pre  strongThree/strong (no quotes)  precodeln -s Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /bin/sub /code/pre  <answer175774> You're missing the '/' at the beginning of your app and codesudo/code as code/bin/code is owned by coderoot/code and you can't actually write to it as a normal user. As you currently have it, it would only work if your present directory was the system root. This assumes of course that the Sublime Text app is in your main Applications folder.  Try this…  precodesudo ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /bin/sub /code/pre  hr  One afterthought: It's considered bad practice to change the content of code/bin/code and code/usr/bin/code because any upcoming OS X upgrade may wipe the content there. code/usr/local/bin/code is the usual place to install user-provided binaries in, so  precode[[ -d /usr/local/bin ]] || sudo mkdir /usr/local/bin sudo ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/sub /code/pre  might be the better option.  Or (as you probably never need to run Sublime Text from within a shell script), simply define a bash alias  precodealias sub=/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /code/pre  which should be added to your bash startup file to make it stick  precodeecho "alias sub=/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl" &gt;&gt; ~/.bashrc /code/pre  <answer296333> Late to the party. I encountered the same issue when setting up my Mac and tried a few things. Here is what worked for me.   precodeln -sv "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl /code/pre  For more information, go to this github repo.  <comment207395> does the link actually create something in /bin called sub? try sudo? <comment207396> You need to use `sudo` and if you are going to quote the pathname then don't use backslashes to escape spaces! <comment207413> If you use quotes, you do not want the backslash.  If you don't use quotes, the backslash is necessary.  You also need the leading slash on `/Applications/…`, as pointed out in the answer, and you need root privileges to write in `/bin` (hence `sudo`).  The residual question is whether it is sufficient to run the executable like that.  Are you sure you don't want a shell script that does something like `open "/Applications/Sublime\ Text.app"` instead as the contents of the file in `/bin`? <comment374266> Aside from the fact that your command will fail, since you didn't use `sudo` and it's required in this case, how is this any different then what's already been offered within mockman's answer? Other then that fact that he choose to use `sub` vs. `subl`, so as to type one less character repeatedly to use it, it's really not from what I can see! <comment374282> @user3439894 sudo is not a requirement. **AND** the command above uses `/usr/local/bin` not `/usr/bin` as the commands above. `/usr/local/bin` is the recommend directory for user applications whereas /usr/bin is used for distribution-managed user programs. So, `sub` vs `subl` is **not** the only change, it simply depends on user preference; what they want to write. I apologize if it causes confusion.. <comment374289> 1. Running your command as is from an admin account, returns **`ln: /usr/local/bin/subl: Permission denied`** 2. I'd suggest you reread mockman"s answer as it absolutely has `/usr/local/bin/` in the second `sudo ln -s` command in his answer!