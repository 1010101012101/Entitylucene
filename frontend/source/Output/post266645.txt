Sort files in Terminal like finder <body> Is it possible in the command line to have the same sort order for files/folders as Finder. If I run codefind . -type d/code, I get as output:  precode./Folder 1 ./Folder 10 ./Folder 11 ./Folder 2 ./Folder 3 ... /code/pre  I tried codefind -s . -type d/code, and also added some codesort/code options. No luck.  What I want is this:  precode./Folder 1 ./Folder 2 ./Folder 3 ... ./Folder 10 ./Folder 11 /code/pre  <answer266724> Can also do  precodels -v /code/pre  which sorts files by version numbers in names by natural order.  From codeman ls/code  precode-v     natural sort of (version) numbers within text /code/pre  <answer266727> If you look at what codefind/code says about sorting:      pre -s   Cause find to traverse the file hierarchies in  lexicographical order, i.e., alphabetical order within each directory.   Note: `find -s` and `find | sort` may give different results./pre  This means we need to pipe it to codesort/code so that we can manipulate it a bit more.  As you have already seen, a simple alphanumeric sort won't work because it's comparing everything as an ANSI character not as numbers.  What we need to do is just compare the numbers.  We can do this with the code-k/code option of codesort/code  codefind . -type d | sort -k2.3/code  What the codesort -k2.3/code command is doing is sorting on the second field (delimited by the space) ending at the 3rd position.  This is the result using your folder naming conventionsup1/sup:  precode. ./Folder 1 ./Folder 2 ./Folder 3 ./Folder 4 ./Folder 5 ./Folder 6 ./Folder 7 ./Folder 8 ./Folder 9 ./Folder 10 ./Folder 11 ./Folder 12 ./Folder 13 ./Folder 14 ./Folder 15 /code/pre  hr  sup1/sup To create this folder structure, I used the command in my home folder:  precodemkdir test; cd test; for n in {1..15}; do mkdir "Folder $n"; done /code/pre  <comment334338> Is there a specific reason why you use `find` instead of `ls`? <comment334471> macOS does not come with GNU ls installed. <comment334583> GNU ls can be installed via Homebrew. <comment334624> Thanks, I didn't know the `-k` option. However, that didn't meet my requirements. I made [this small python program](https://gist.github.com/doekman/4f266ccfe9cb0d300e00ca73ef6cddf4) to solve this problem.