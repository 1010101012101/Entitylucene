How do I start TextEditor from the command line? <body> I work a lot at the command line in a Terminal and would like to start a text editor on a certain file. I'm from Linux Land and normally use kwrite or gedit from a bash shell.  Trying to find the Mac equivalent, as a guess, tried   precodeuser&gt; textedit somefile.txt /code/pre  and  precodeuser&gt; texteditor somefile.txt /code/pre  and  precodeuser&gt; TextEditor somefile.txt /code/pre  and other variations.  I can't seem to find the proper name of the text editor app. (No, vi isn't to my liking.)  Oddly, the guy at an Apple store didn't know this.     <answer16594> There are two ways:  If your default text editor is TextEdit, you can simply use  precodeopen -t file.txt /code/pre  to open it in TextEditor.  If your default text editor is not TextEdit, and you want to open it in TextEdit specifically, you can use  precode/Applications/TextEdit.app/Contents/MacOS/TextEdit file.txt /code/pre  Either of those can be made an alias in your shell config file, of course.  <answer16595> The default text editor is TextEdit. You can open a text file in there by using open -a:  precode$ open -a TextEdit hi.txt /code/pre  If you want to use another app, just put it's name in, like this:  precode$ open -a Coda index.html /code/pre  <answer16598> Here are some possible answers, all using the 'open' command-line utility.  The strong-a/strong option means "open the file argument with the named application":  codeopen -a TextEdit file.txt/code  The strong-e/strong option means "open the file argument with the TextEdit application":  codeopen -e file.txt/code  The strong-t/strong option means "open the file with the default application for editing text files, as determined via LaunchServices". By default, this will be /Applications/TextEdit.app; however, it's possible for this setting to get overridden:  codeopen -t file.txt/code  Finally, any file that's of the "text" type will get opened by the application bound to the text type if you just say codeopen file.txt/code. You can use the "file" command to reveal what the operating system thinks the file type is: codefile file.txt/code. So, for example, if you renamed "file.txt" to just "textfile" then codeopen textfile/code would still open it in the default text-file editing application, as long as codefile textfile/code still thought that "textfile" was actually a text file.  A short 'help' file on codeopen/code can be found by running  precodeopen --help /code/pre  Or you can read the whole manual with  precodeman open /code/pre  <answer116788> If you search for a comfortable way with more "linux feel" add something like the following to your code~/.profile/code:  precodealias textmate='open -a TextMate' /code/pre  or  precodealias textedit='open -a TextEdit' /code/pre  depending on your editors.  <answer116794> If you already started to write in terminal and you want to continue on your favorite editor you can press kbdctrl/kbd+kbdX/kbd, kbdctrl/kbd+kbdE/kbd and continue working in emacs or your default bash editor.   If you want to change the default editor, change the environment variable EDITOR to your favorite one:  precodeEDITOR=vim;export EDITOR /code/pre  <answer121249> See if you have the vim editor, I didn't even realize my terminal could use it.   Try:  precodeuser&gt; vimtutor  /code/pre  to figure out its controls.   You can edit files pretty well with it. The syntax looks something like:  precodeuser&gt; vim foo.txt /code/pre  <comment18141> Both Nathan and mipadi provide answers, but I think they're only partial answers, so I added one. I'm not sure if it would have been better to combine their responses somehow, and if so, how to have done that. <comment18142> Notice that I'm not sure that the convention of passing the file name argument directly to the application's name on the command line may not work for all applications. Only applications that are built to accept filenames on the command line as valid arguments for opening will work this way. I *think* that the more general `open` command uses a more thorough method to get an application to "open" the file argument passed to the open command (i.e. it depends on the same functionality by which the Finder's "double click to open" action works). <comment18144> @Viktor Haag: Both of those will work with TextEdit. <comment18155> @Viktor it generally isn't good to re-post things that people have already said, and exact duplicates are removed. Since you had something to add, good ways to go would be an answer saying "In addition to Nathan and mipadi's techniques...", or comments on those answers with your addendums. What you've done here is okay, but not exactly a 'best practice'. Thanks for asking; now you know for the future :-). <comment163904> I put this into my .bash_profile: "alias o='open -a Sublime\ Text\ 2'" and then I can simply type at the command prompt: "o text.txt". It's very easy on the fingers ;) <comment175430> `open` is the only 'right' way to do this. <comment175431> Although `.profile` works, `.bash_profile` is more common on OS X.