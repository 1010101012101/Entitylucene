How to make an executable .py available everywhere on OS X? <body> I have this directory strong/foo/bar//strong. Inside, I have a python file named strongmyfile.py/strong. I made it executable by adding (at the top):  precode#!/usr/bin/env python /code/pre  Then, I made it executable by issuing   precodechmod +x myfile.py /code/pre  I edited my path by issuing  precodesudo nano /etc/paths /code/pre  I added strong/foo/bar//strong to it.  The problem is that although I can run myfile.py by typing strong./myfile.py/strong while I am inside strong/foo/bar//strong, it doesn't work from any other location. What am I doing wrong?  Thank you.  <answer94277> You need to add code/foo/bar/code to your code$PATH/code environment variable. Navigate to your home directory by typing codecd/code at the prompt, then type codenano .profile/code. Inside this file, add the following line:  precodeexport PATH=$PATH:/foo/bar /code/pre  then save and quit. Exit Terminal.app (or whichever term program you're using) and restart it. code/foo/bar/code should now be in your search path, to make sure type codeecho $PATH/code and see if it's at the end. You should now be able to run codemyfile.py/code from anywhere.  <answer94466> At your terminal type:  precodewhich python /code/pre  make sure that this path in the shebang at in the 1st line of your .py file. On my system it is  precode#!/usr/local/bin/python /code/pre  then 1st try:  precodeexport PATH=$PATH:/path/to/where/your/script/is /code/pre  in any terminal  check that the PATH actually stuck by checking:  precode$PATH /code/pre  should have path to your script in there now.  you should now be able to launch you script form anywhere.  the PATH will reset once you close terminal though so you should get pay do get it added permanently to your PATH.  good solution is to have the following bit of code in you .bash_profile:  precodeif [ -f ~/.bashrc ]; then    source ~/.bashrc fi /code/pre  see writeup e.g. http://www.joshstaiger.org/archives/2005/07/bash_profile_vs.html  this will ensure that .bashrc is loaded every time the terminal is launched as well as when you launch a subshell.   Put the export  precodeexport PATH=$PATH:/path/to/where/your/script/is /code/pre  line somewhere in your .bashrc file.   quit and restart terminal.   That should sort everything out  <comment110518> It is at the end of my $PATH (it already was but I tried adding what you proposed to .profile as well). When I type "myfile.py" anywhere, it tells me "command not found". <comment110554> First, make sure everything is spelled correctly - `/usr/loacl/bin` has gotten me before :). I assume you're using `bash` as your shell, right? Type `source ~/.profile` (to make sure it's being read), then type `hash` to refresh the shell's memory of the search path. <comment110736> When I type source ~/.profile, all I see is a blank line. So I guess it is not being read as when editing it, I see the export PATH=$PATH:/foo/bar line in it. What should I do? <comment110737> You won't see anything when typing `source ~/.profile`. What the `source` command coes is read the file and execute what's contained within it. After you run the `source` command and run `hash`, are you able to run `myfile.py`? <comment110767> Yes! It works finally. Thank you! I'll accept your answer as the correct one even though the solution is in comments. <comment110811> I'm glad everything finally worked out. I'm not sure what was wrong initially, as my original instructions should have worked, but at least you got to learn some more terminal commands :)