How does the sudo key symbol work? <body> I'm trying to write a script that requests the user password for some codesudo/code-related commands. My goal is to emulate the default method that OS X uses to obtain the user's password, codePassword:/code followed by a key-like symbol, as seen in the screenshot attached below:   img src="https://i.stack.imgur.com/nXrSU.png" alt="key symbol"  I tried the answer from How to get a password from a shell script without echoing over on Stack Overflow that uses coderead -s/code, but that results in codePassword:/code without the key symbol strongwhen run from a script/strong, but displays the symbol when run from the Terminal itself . What is this key symbol, and can I find it under the Characters menu?  <answer237663> The simplest answer is just write the script without sudo  then tell the user to run it with sudo e.g. codesudo script/code  the script will run with root privileges  `this has the advantage that the user knows what asks for and where the password is used, if in your script you could be taking a copy or leaving it in memory  <answer237665> I get the key symbol when running coderead -s/code in Terminal.  As this seems to work the same for coderead -s/code as for codesudo/code, I assume this is a feature of Terminal (to display a key symbol whenever input is requested in silent/hidden mode).  <answer238760> I think it has something to do with whether the terminal echo option is disabled. I tried running codestty -echo; cat; stty echo/code in my terminal and then typing something, and the key symbol showed. I then pressed kbdCtrl/kbd+kbdD/kbd and it went away.  <comment291189> Thanks for your prompt reply. While I understand that you can run a script in its entirety as a root user, I would like to emulate the password-obtaining mechanism of `sudo`. I apologise if I was unclear. <comment291190> You were clear but I think it is a bad idea <comment291191> I get the key symbol when running `read -s` in Terminal, so I assume this is actually a feature of bash. Maybe a look into the source code (http://opensource.apple.com/source/bash/bash-99/bash-3.2/builtins/read.c) might give more clues. <comment291193> @patrix I see, now I understand. I did not have `read -s` set up correctly in my script. Thanks for your help! <comment291195> @patrix Kindly do add an answer if you don't mind. <comment291197> Check. And it's probably a feature of Terminal even.