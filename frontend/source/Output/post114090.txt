Switching the desktop enviroment <body> Would it be possible to change the default environment to something like Cinnamon? Or to a window manager like openbox or awesomewm?  <answer114095> Yes. Reference the XQuartz Project, which is developing an OS X friendly version of Xorg: http://xquartz.macosforge.org/trac/wiki  Awesome WM has been successfully installed by at least this user: http://permalink.gmane.org/gmane.comp.window-managers.awesome/7939  They go on to list a step by step. Your mileage may vary, but it looks like it is possible to replace the default:  Once Xquartz was installed, set the following prefences:  precode CHECK option key sends alt instead of mode_switch  UNCHECK enable key equivelants /code/pre  I installed the following ports from macports  precode port install awesome  port install xmodmap  port install xev  port install rxvt-unicode /code/pre  Then, I made the following configuration file changes to get it configured with the X server.  B  .xinitrc  precode  cd /Users/â‰¤username&gt;  xmodmap .Xmodmap  exec /opt/local/bin/awesome /code/pre  .xmodmap  precode remove mod1 = Alt_L  add mod4 = Alt_L /code/pre  Now, create an rc.lua file based on the stock version from macports, and make a few changes to set the keys up  precode mkdir -p ~/.config/awesome  cp /opt/local/etc/xdg/awesome/rc.lua ~/.config/awesome /code/pre  Making it more Mac-like  precodeDefine the commandkey as a variable.  Also set urxvt-unicode as /code/pre  the default terminal:  precode    commandkey = "mod2"     terminal = "/opt/local/bin/urxvt"  Command-W to close a window, like the default MacOS shortcut      awful.key({ commandkey }, "w", function (c) c:kill() end) /code/pre  Fixing the Tag navigation  precodeThe Mod4 + N key combination doesn't actually send you to tag N using the default rc.lua.  You must add the following      tagkeys = { "1", "2", "3", "4", "5", "6", "7", "8", "9" }  and then change      "#" .. i,  to     tagkeys[i],  In the section where the awful.keys() functions switch tags /code/pre  There are still some quirks with this setup, but overall I find it better than having to resize and place terminal windows by hand.  <answer114096> the answer to all the suggestions you have made is basically no.   This is these are X11 based desktops or window managers. OSX does not use X11 as its main desktop. It uses is called Aqua to manage the desktop (I can't find the Apple doc that describes this - a newer one is here which describes the Cocoa application layer.     The term Aqua refers to the overall appearance and behavior of OS X. The Aqua look and feel is characterized by consistent, user-friendly behaviors combined with a masterful use of layout, color, and texture. Although much of the Aqua look and feel comes for free when you use Cocoa technologies to develop your app, there are still many steps you should take to distinguish your app from the competition. To create a beautiful, compelling app that users will love, be sure to follow the guidance provided in OS X Human Interface Guidelines.   You can run X11 applications on OSX using the normal OSX desktop but it will do the window management. I think you can run X11 on a background and so can use an X11 window manage to manage X11 windows but not anyones written to Apple's GUI APIs. (I think you can also boot OSX to a console (you are then just running Darwin) and then run X11 as the only graphics the you can use the environment you mentioned but again no  apps using Apple's GUI APIs)   <comment133779> Looking at my and @cksum different answers suggests that the question is not clear and you need to explain how you want to use the desktop and window managers <comment133791> Aqua is the visual theme, not the default window manager. Quartz Compositor is the actual display server/window manager used by OS X.