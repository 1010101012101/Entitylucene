How can I have xterm execute my .login file when it opens? <body> The title says it all.  I'm running Yosemite 10.10.3 with XQuartz 2.7.7.  Thanks for the help! Expanded:  When a new terminal opens (e.g. terminal or item, which I mostly use) the file ~/.login is executed.  This sets up environment variables, etc, that I use.  When xterm opens it does not execute ~/.login, so I have to source it before beginning any work. So far so good.  Obviously, if i can get the .login file executed when the xterm opens I'd save a bit of time.  The problem is when I spawn a command to execute a shell command that is defined in the .login file.  This does not work if the .login file is not executed when the shell opens.  This is painful.  I've tried creating a .xinitrc file, but that does to seem to work 100%.  I need something better.  Of course, if I were a real unix person I'd probably know this, but...  I'm using tsch.  btw: if .login is the wrong file I'm happy to get the job done some other way that works.  <answer186779> From codeman xterm/code:  precode-ls This option indicates that the shell that is started in the xterm      window will be a login shell (i.e., the first character of argv[0] will be a dash,      indicating to the shell that it should read the user's .login or .profile). /code/pre  From codeman tcsh/code:  precodeA login shell begins by executing commands from the system files /etc/csh.cshrc and /etc/csh.login. It then executes commands from files in the user's home directory: first ~/.tcshrc (+) or, if ~/.tcshrc is not found, ~/.cshrc, then ~/.history (or the value of the histfile shell variable), then ~/.login, and finally ~/.cshdirs (or the value of the dirsfile shell variable) (+). The shell may read /etc/csh.login before  instead of after /etc/csh.cshrc, and ~/.login before instead of after ~/.tcshrc or  ~/.cshrc and ~/.history, if so compiled; see the version shell variable. (+)  Non-login shells read only /etc/csh.cshrc and ~/.tcshrc or ~/.cshrc on startup. /code/pre  So in your case you can either make sure that codexterm/code is called as codexterm -ls/code (to have it act as a login shell) or rename code.login/code to code.cshrc/code (or code.tcshrc/code).  <comment220583> Which shell program are you using, `bash`? <comment220585> ~/.login is I think a c shell file - are you really using csh or tcsh? Also it will only be called if via login so might be the wrong file anyway