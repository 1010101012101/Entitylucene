Huge number of anonymous.xpcd? <body> When I list out launchctl, I'm seeing nearly a hundred instances of iterations of:  Command: codesudo launchctl list | grep --invert-match com.apple/code yields:  precode1   -   0x7fb4b0f38e50.anonymous.launchd 711 -   0x7fb4b3e4dd70.anonymous.xpcd /code/pre  What might these be or how would I go about prying open these to see what they are precisely and why there are so many instances of these?  <answer130352> From Apple's launchctl manual page (emphasis added):     Note that you may see some jobs in the list whose labels are in                 the style "0xdeadbeef.anonymous.program".  These are jobs which                 are not managed by launchd, but, at one point, made a request to                 it.  launchd claims no ownership and makes no guarantees regarding these jobs. strongThey are stored purely for bookkeeping purposes./strong   <answer130380> I looked up and have those as well and many more but those are associated with app name.(like Skype, Mail and others)  One way to find more is to use console and type xpcd in search.  I did that and it found some apps without correct permission.  So the suggestion is to restore the permissions that might stop the xpcd events.  I also found a good answer and explanation here.     That isn't actually launchctl creating a new process; it's most likely   dnsmasq (or other apps) itself. If it fork()s into the background, launchd can't tell;   then when it talks to launchd, launchd creates an anonymous entry for   it. Make sure example dnsmasq doesn't background itself.      (The - listed for the regular launchctl list output indicates that the   original dnsmasq process exited.)   <comment186746> "type xpcd in search" - How is this done?  `mdfind xpcd`?