Why can't my Mac Pro connect to an SMB share over the network? <body> I have a really weird problem. I have a Raspberry Pi running an SMB server that shows up in the sidebar of the Finder. I usually can just click on it and connect. Just today, it stopped working and gives me the error "Connection Failed". It has worked fine in the past. I'm running OS 10.8.4 on a Mac Pro. Our MBP (also 10.8.4) connects just fine, no problems. I see log messages in Console.app as such:  precode9/10/13 7:14:43.869 PM com.apple.kextd[12]: Request from non-root process 'netbiosd' (euid 222) to load /System/Library/Extensions/smbfs.kext - not allowed. 9/10/13 7:14:43.870 PM netbiosd[84]: Loading com.apple.filesystems.smbfs status = -603947004 /code/pre  Thoughts?  <answer101783> You might want to restore file/folder permissions. It generally helps when things stop working.  Go to codeApplications/Disk Utility/code Click on your boot volume on the left hand side, then "Repair Permissions" on the right.    It emmay/em work.  <answer101800> I've made a sequence of troubleshooting suggestions in the comments, which I'm recording as an answer below.  If we find a solution, I'll edit this answer.  strong1. Ensure OSBundleAllowUserLoad is true/strong  Apple's man page for codekextload/code says     For most kexts, kextload must run as the superuser (root). Kexts installed under /System/ with an OSBundleAllowUserLoad property set to true may be loaded via kextload by non-root users.   So I'm wondering if that property has somehow been changed on your Mac Pro. On my 10.8.4 system, codecat /System/Library/Extensions/smbfs.kext/Contents/Info.plist/code gives the longish listing shown at the bottom of this answer.  (The last line should be code&lt;/plist&gt;/code... you might need to scroll to see it.)  Note that my listing includes the following:  precode    &lt;key&gt;OSBundleAllowUserLoad&lt;/key&gt;     &lt;true/&gt; /code/pre  If your file doesn't include these lines (which state the key and the associated value mentioned in the man page above), I'd suggest:  ol listrongBack up the file/strong - for example by using codecp -p /System/Library/Extensions/smbfs.kext/Contents/Info.plist ~/Desktop//code (the code-p/code argument preserves the dates and other metadata on the file)/li liEdit the file to include the lines I mention above.  Because the file is owned by root, you can't simply edit it in TextEdit.  You could use codesudo nano /System/Library/Extensions/smbfs.kext/Contents/Info.plist/code.  Or there are workarounds allowing the use of TextEdit: see this answer.  (By the way: I suspect it is possible to do this using codedefaults write/code, but I'd rather avoid the risk of invisibly writing to the wrong file by mistake.)/li liReboot and test./li /ol  I don't know how that key and value could have gone missing, but adding it back again seems worth a try.  (I don't know if this'll work - I haven't tried it, and code signing might prevent this kind of modification.)  Also: please be careful to back up and edit only this one file!  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;BuildMachineOSBuild&lt;/key&gt;     &lt;string&gt;12E53&lt;/string&gt;     &lt;key&gt;CFBundleDevelopmentRegion&lt;/key&gt;     &lt;string&gt;English&lt;/string&gt;     &lt;key&gt;CFBundleExecutable&lt;/key&gt;     &lt;string&gt;smbfs&lt;/string&gt;     &lt;key&gt;CFBundleIdentifier&lt;/key&gt;     &lt;string&gt;com.apple.filesystems.smbfs&lt;/string&gt;     &lt;key&gt;CFBundleInfoDictionaryVersion&lt;/key&gt;     &lt;string&gt;6.0&lt;/string&gt;     &lt;key&gt;CFBundleName&lt;/key&gt;     &lt;string&gt;smbfs&lt;/string&gt;     &lt;key&gt;CFBundlePackageType&lt;/key&gt;     &lt;string&gt;KEXT&lt;/string&gt;     &lt;key&gt;CFBundleShortVersionString&lt;/key&gt;     &lt;string&gt;1.8.4&lt;/string&gt;     &lt;key&gt;CFBundleSignature&lt;/key&gt;     &lt;string&gt;????&lt;/string&gt;     &lt;key&gt;CFBundleVersion&lt;/key&gt;     &lt;string&gt;1.8.4&lt;/string&gt;     &lt;key&gt;DTCompiler&lt;/key&gt;     &lt;string&gt;&lt;/string&gt;     &lt;key&gt;DTPlatformBuild&lt;/key&gt;     &lt;string&gt;4F250&lt;/string&gt;     &lt;key&gt;DTPlatformVersion&lt;/key&gt;     &lt;string&gt;GM&lt;/string&gt;     &lt;key&gt;DTSDKBuild&lt;/key&gt;     &lt;string&gt;12E53&lt;/string&gt;     &lt;key&gt;DTSDKName&lt;/key&gt;     &lt;string&gt;&lt;/string&gt;     &lt;key&gt;DTXcode&lt;/key&gt;     &lt;string&gt;0440&lt;/string&gt;     &lt;key&gt;DTXcodeBuild&lt;/key&gt;     &lt;string&gt;4F250&lt;/string&gt;     &lt;key&gt;NSHumanReadableCopyright&lt;/key&gt;     &lt;string&gt;Copyright Â© 2004-2013 Apple Inc. All rights reserved.&lt;/string&gt;     &lt;key&gt;OSBundleAllowUserLoad&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;OSBundleLibraries&lt;/key&gt;     &lt;dict&gt;         &lt;key&gt;com.apple.kext.triggers&lt;/key&gt;         &lt;string&gt;1.0.0d1&lt;/string&gt;         &lt;key&gt;com.apple.kpi.bsd&lt;/key&gt;         &lt;string&gt;9.0.0&lt;/string&gt;         &lt;key&gt;com.apple.kpi.iokit&lt;/key&gt;         &lt;string&gt;9.0.0&lt;/string&gt;         &lt;key&gt;com.apple.kpi.libkern&lt;/key&gt;         &lt;string&gt;9.0.0&lt;/string&gt;         &lt;key&gt;com.apple.kpi.mach&lt;/key&gt;         &lt;string&gt;9.0.0&lt;/string&gt;         &lt;key&gt;com.apple.kpi.private&lt;/key&gt;         &lt;string&gt;10.0.0d1&lt;/string&gt;         &lt;key&gt;com.apple.kpi.unsupported&lt;/key&gt;         &lt;string&gt;9.0.0&lt;/string&gt;     &lt;/dict&gt;     &lt;key&gt;OSBundleRequired&lt;/key&gt;     &lt;string&gt;Safe Boot&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  The original poster (OP) tried this, but it didn't work.  strong2. Ask codekextutil/code for some diagnostics/strong  First, unload the kext (just in case... this doesn't do any harm if it is already unloaded):  precodesudo kextunload /System/Library/Extensions/smbfs.kext /code/pre  Then, ask codekextutil/code to show some diagnostics (code-verbose 6/code is the highest "amount of output" choice):  precodesudo kextutil -print-diagnostics -verbose 6 /System/Library/Extensions/smbfs.kext /code/pre  strong3. The diagnostics output showed a dependency on a different kext, which was missing/strong  The OP's output included the following:  precode... /System/Library/Extensions/smbfs.kext - no dependency found for com.apple.kec.corecrypto. ... Dependency Resolution Failures:     Only Apple kexts may link against com.apple.kpi.private.     No kexts found for these libraries:         com.apple.kec.corecrypto /code/pre  ... and we concluded that code/System/Library/Extensions/corecrypto.kext/code was missing, although we don't know why.  strong4. Copy across the missing codecorecrypto.kext/code from another machine (running the same version of OS X)/strong  The OP copied across the missing kext, rebooted and retested.  We still hadn't found a solution.  However, the codekextutil/code diagnostic output had changed, now showing the (complete listing) below:  precodeKext user-space log filter changed from 0xff2 to 0xfff. Kext kernel-space log filter changed from 0xff2 to 0xfff. Kext library architecture set to i386. No kernel file specified, using '/mach_kernel'  Kext library recording diagnostics for: validation authentication dependencies warnings. /System/Library/Extensions/smbfs.kext has an Apple prefix but no copyright. /System/Library/Extensions/smbfs.kext has an Apple prefix but no copyright. /System/Library/Extensions/smbfs.kext has an Apple prefix but no copyright. Diagnostics for /System/Library/Extensions/smbfs.kext: Dependency Resolution Failures:      Only Apple kexts may link against com.apple.kpi.private. /code/pre  strong5. Perhaps the codesmbfs.kext/code bundle is corrupt?/strong  My guess, based on the above output, is that the OS thinks codesmbfs.kext/code is not an Apple extension (when it actually is).  I suggested the OP restore codesmbfs.kext/code from a backup, or copy from another machine.  Results currently unknown.  For comparison, on my machine, where SMB seems to be working properly, the complete output of codesudo kextutil -print-diagnostics -verbose 6 /System/Library/Extensions/smbfs.kext/code is:  precodeKext user-space log filter changed from 0xff2 to 0xfff. Kext kernel-space log filter changed from 0xff2 to 0xfff. Kext library architecture set to x86_64. No kernel file specified, using '/mach_kernel'  Kext library recording diagnostics for: validation authentication dependencies warnings. /System/Library/Extensions/smbfs.kext appears to be loadable (not including linkage for on-disk libraries). Loading /System/Library/Extensions/smbfs.kext. Reading load info for 8 kexts. Reading loaded kext info from kernel. (kernel) User-space log flags changed from 0x0 to 0xfff. (kernel) Received 'Get Loaded Kext Info' request from user space. (kernel) Returning loaded kext info. Loaded kext info: { "com.apple.kpi.mach" = {     "OSBundleWiredSize" = 2188     "CFBundleIdentifier" = "com.apple.kpi.mach"     "OSBundleUUID" = &lt;4edbbc26 0d734a03 b9f2131a ac114ede&gt;     "OSBundleLoadAddress" = -551895728128     "OSBundleLoadTag" = 5     "OSBundleStarted" = true     "OSBundleCompatibleVersion" = "8.0.0d0"     "OSKernelResource" = true     "CFBundleVersion" = "12.4.0"     "OSBundlePath" =          "//System/Library/Extensions/System.kext/PlugIns/Mach.kext"     "OSBundleRetainCount" = 90     "OSBundlePrelinked" = true     "OSBundleIsInterface" = true     "OSBundleLoadSize" = 2188 } "com.apple.kpi.libkern" = {     "OSBundleWiredSize" = 39416     "CFBundleIdentifier" = "com.apple.kpi.libkern"     "OSBundleUUID" = &lt;5cfa490e 7e0540f5 bb983f3e 8ca54d37&gt;     "OSBundleLoadAddress" = -551895687168     "OSBundleLoadTag" = 4     "OSBundleStarted" = true     "OSBundleCompatibleVersion" = "8.0.0d0"     "OSKernelResource" = true     "CFBundleVersion" = "12.4.0"     "OSBundlePath" =          "//System/Library/Extensions/System.kext/PlugIns/Libkern.kext"     "OSBundleRetainCount" = 104     "OSBundlePrelinked" = true     "OSBundleIsInterface" = true     "OSBundleLoadSize" = 39416 } "com.apple.kpi.bsd" = {     "OSBundleWiredSize" = 26732     "CFBundleIdentifier" = "com.apple.kpi.bsd"     "OSBundleUUID" = &lt;ed0f756e c36b41ee 9e630573 11c12b4e&gt;     "OSBundleLoadAddress" = -551895646208     "OSBundleLoadTag" = 1     "OSBundleStarted" = true     "OSBundleCompatibleVersion" = "8.0.0b1"     "OSKernelResource" = true     "CFBundleVersion" = "12.4.0"     "OSBundlePath" =          "//System/Library/Extensions/System.kext/PlugIns/BSDKernel.kext"     "OSBundleRetainCount" = 71     "OSBundlePrelinked" = true     "OSBundleIsInterface" = true     "OSBundleLoadSize" = 26732 } "com.apple.kpi.iokit" = {     "OSBundleWiredSize" = 112620     "CFBundleIdentifier" = "com.apple.kpi.iokit"     "OSBundleUUID" = &lt;bd6bb21a 080d4f2b a6590437 d164ecde&gt;     "OSBundleLoadAddress" = -551895605248     "OSBundleLoadTag" = 3     "OSBundleStarted" = true     "OSBundleCompatibleVersion" = "7.0"     "OSKernelResource" = true     "CFBundleVersion" = "12.4.0"     "OSBundlePath" =          "//System/Library/Extensions/System.kext/PlugIns/IOKit.kext"     "OSBundleRetainCount" = 99     "OSBundlePrelinked" = true     "OSBundleIsInterface" = true     "OSBundleLoadSize" = 112620 } "com.apple.kpi.unsupported" = {     "OSBundleWiredSize" = 9164     "CFBundleIdentifier" = "com.apple.kpi.unsupported"     "OSBundleUUID" = &lt;0a01a811 58284493 99b48233 fd6edeaa&gt;     "OSBundleLoadAddress" = -551895699456     "OSBundleLoadTag" = 7     "OSBundleStarted" = true     "OSBundleCompatibleVersion" = "8.0.0b1"     "OSKernelResource" = true     "CFBundleVersion" = "12.4.0"     "OSBundlePath" =          "//System/Library/Extensions/System.kext/PlugIns/Unsupported.kext"     "OSBundleRetainCount" = 54     "OSBundlePrelinked" = true     "OSBundleIsInterface" = true     "OSBundleLoadSize" = 9164 } "com.apple.kext.triggers" = {     "OSBundleWiredSize" = 20480     "CFBundleIdentifier" = "com.apple.kext.triggers"     "OSBundleStarted" = true     "OSBundleCPUType" = 16777223     "OSBundleCompatibleVersion" = "1.0.0d1"     "OSBundleUUID" = &lt;e376df1d 63633e78 af0820ba bbf94701&gt;     "OSKernelResource" = false     "CFBundleVersion" = "1.0"     "OSBundleLoadTag" = 109     "OSBundleLoadAddress" = -551874535424     "OSBundleDependencies" = (         1         4         3         7         6         5     )     "OSBundlePath" = "//System/Library/Extensions/triggers.kext"     "OSBundleRetainCount" = 1     "OSBundleCPUSubtype" = 3     "OSBundlePrelinked" = true     "OSBundleIsInterface" = false     "OSBundleLoadSize" = 20480 } "com.apple.kpi.private" = {     "OSBundleWiredSize" = 20492     "CFBundleIdentifier" = "com.apple.kpi.private"     "OSBundleUUID" = &lt;9a83c9f5 ff6145e6 837c7cf7 e10f3654&gt;     "OSBundleLoadAddress" = -551895724032     "OSBundleLoadTag" = 6     "OSBundleStarted" = true     "OSBundleCompatibleVersion" = "8.0.0b1"     "OSKernelResource" = true     "CFBundleVersion" = "12.4.0"     "OSBundlePath" =          "//System/Library/Extensions/System.kext/PlugIns/Private.kext"     "OSBundleRetainCount" = 40     "OSBundlePrelinked" = true     "OSBundleIsInterface" = true     "OSBundleLoadSize" = 20492 } }  /System/Library/Extensions/System.kext/PlugIns/BSDKernel.kext (version 12.4, UUID ED0F756E-C36B-41EE-9E63-057311C12B4E) is loaded. /System/Library/Extensions/System.kext/PlugIns/BSDKernel.kext (version 12.4): is started. setting load address of /System/Library/Extensions/System.kext/PlugIns/BSDKernel.kext to 0xffffff7f8074c000 /System/Library/Extensions/System.kext/PlugIns/Mach.kext (version 12.4, UUID 4EDBBC26-0D73-4A03-B9F2-131AAC114EDE) is loaded. /System/Library/Extensions/System.kext/PlugIns/Mach.kext (version 12.4): is started. setting load address of /System/Library/Extensions/System.kext/PlugIns/Mach.kext to 0xffffff7f80738000 /System/Library/Extensions/System.kext/PlugIns/Libkern.kext (version 12.4, UUID 5CFA490E-7E05-40F5-BB98-3F3E8CA54D37) is loaded. /System/Library/Extensions/System.kext/PlugIns/Libkern.kext (version 12.4): is started. setting load address of /System/Library/Extensions/System.kext/PlugIns/Libkern.kext to 0xffffff7f80742000 /System/Library/Extensions/System.kext/PlugIns/IOKit.kext (version 12.4, UUID BD6BB21A-080D-4F2B-A659-0437D164ECDE) is loaded. /System/Library/Extensions/System.kext/PlugIns/IOKit.kext (version 12.4): is started. setting load address of /System/Library/Extensions/System.kext/PlugIns/IOKit.kext to 0xffffff7f80756000 /System/Library/Extensions/System.kext/PlugIns/Unsupported.kext (version 12.4, UUID 0A01A811-5828-4493-99B4-8233FD6EDEAA) is loaded. /System/Library/Extensions/System.kext/PlugIns/Unsupported.kext (version 12.4): is started. setting load address of /System/Library/Extensions/System.kext/PlugIns/Unsupported.kext to 0xffffff7f8073f000 /System/Library/Extensions/triggers.kext (version 1.0, UUID E376DF1D-6363-3E78-AF08-20BABBF94701) is loaded. /System/Library/Extensions/triggers.kext (version 1.0): is started. setting load address of /System/Library/Extensions/triggers.kext to 0xffffff7f81b6e000 /System/Library/Extensions/System.kext/PlugIns/Private.kext (version 12.4, UUID 9A83C9F5-FF61-45E6-837C-7CF7E10F3654) is loaded. /System/Library/Extensions/System.kext/PlugIns/Private.kext (version 12.4): is started. setting load address of /System/Library/Extensions/System.kext/PlugIns/Private.kext to 0xffffff7f80739000 Omitting loaded kext /System/Library/Extensions/System.kext/PlugIns/BSDKernel.kext from mkext for kernel load. Omitting loaded kext /System/Library/Extensions/System.kext/PlugIns/Mach.kext from mkext for kernel load. Omitting loaded kext /System/Library/Extensions/System.kext/PlugIns/Libkern.kext from mkext for kernel load. Omitting loaded kext /System/Library/Extensions/System.kext/PlugIns/IOKit.kext from mkext for kernel load. Omitting loaded kext /System/Library/Extensions/System.kext/PlugIns/Unsupported.kext from mkext for kernel load. Omitting loaded kext /System/Library/Extensions/System.kext/PlugIns/Private.kext from mkext for kernel load. Omitting loaded kext /System/Library/Extensions/triggers.kext from mkext for kernel load. Adding /System/Library/Extensions/smbfs.kext to mkext. /System/Library/Extensions/smbfs.kext added 245568-byte noncompressed executable to mkext. Created mkext for architecture x86_64 containing 1 kexts. Loading /System/Library/Extensions/smbfs.kext. (kernel) User-space log flags changed from 0x0 to 0xfff. (kernel) Received kext load request from user space. (kernel) Received request from user space to load kext com.apple.filesystems.smbfs. (kernel) Loading kext com.apple.filesystems.smbfs. (kernel) Kext com.apple.kpi.bsd is already loaded. (kernel) Kext com.apple.kpi.mach is already loaded. (kernel) Kext com.apple.kpi.libkern is already loaded. (kernel) Kext com.apple.kpi.iokit is already loaded. (kernel) Kext com.apple.kpi.unsupported is already loaded. (kernel) Kext com.apple.kext.triggers is already loaded. (kernel) Kext com.apple.kpi.private is already loaded. (kernel) Allocated link buffer for kext com.apple.filesystems.smbfs at 0xffffff7f949c1000 (229376 bytes). (kernel) Kext com.apple.filesystems.smbfs executable loaded; 56 pages at 0xffffff7f825c1000 (load tag 146). (kernel) Kext com.apple.filesystems.smbfs calling module start function. (kernel) Kext com.apple.filesystems.smbfs is now started. (kernel) Kext com.apple.filesystems.smbfs loaded. Successfully loaded /System/Library/Extensions/smbfs.kext. /System/Library/Extensions/smbfs.kext successfully loaded (or already loaded). /code/pre  <answer102115> strongFirst, try to restart File Sharing in the Sharing Preference Pane./strong  There is a bug in OS X that still lives in 10.8.5, where a race condition can cause File Sharing to start before an auth configuration is done, causing it to fail any SMB connection to network shares with any sort of privileges.  If this solved your problem, one way to automatise this process is to create a codelaunchd/code agent with the following contents:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;com.mcdado.restart_smb&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;         &lt;string&gt;/bin/bash&lt;/string&gt;         &lt;string&gt;-c&lt;/string&gt;         &lt;string&gt;sleep 60;touch "/Library/Preferences/SystemConfiguration/com.apple.smb.server.plist"&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Save this file to code~/Library/LaunchAgents/com.mcdado.restart_smb/code, then load it by running the following command: codesudo launchctl load ~/Library/LaunchAgents/com.mcdado.restart_smb/code  Source: SMB and Lion | Oceanside Coding  <answer102175> Essentially:   h1The operating system has lost its integrity/h1  ul liat least one bundle âÂ the codecorecrypto.kext/code kernel extension â is missing/li lithere's no explanation for the loss./li /ul  Can you be sure that all other parts of the OS are integral?   h2Recommendations/h2  Verify the file system: use Disk Utility.   Verify the disk more thoroughly. For this you might use badblocks, or something likeÂ DriveÂ Genius.   Use App Store to download the full OS X Mountain Lion installer for OSÂ XÂ 10.8.5.   Reinstall the OS.   <comment119538> Have you already tried to connect directly to a directory in the share (Finder - Go - Connect to Server - SMB://ipadress/share)? <comment119584> Yes. And that works on both our MBP (10.8.4) and our other MB (10.6.8), just not on the Mac Pro <comment119605> Apple's man page for kextload says _"For most kexts, kextload must run as the superuser (root). Kexts installed under /System/ with an OSBundleAllowUserLoad property set to true may be loaded via kextload by non-root users."_  So I'm wondering if that property has somehow been changed on your Mac Pro.  On my 10.8.4 system, `cat /System/Library/Extensions/smbfs.kext/Contents/Info.plist` shows a line `keyOSBundleAllowUserLoad/key` followed by `true/`.  What does that show on your Mac Pro? <comment119865> You can use defaults read  /System/Library/Extensions/smbfs.kext/Contents/Info OSBundleAllowUserLoad in Terminal to get the answer of Ashely's question. The result is easier on the eyes. :-). a Result of 1 equals true, 0 equals false <comment119867> Wow. I don't even have a key named thatâ¦ <comment119917> Ooh good suggestion. Even though it's supposedly not a "fix-all" solution, it may helpâ¦ <comment119919> @Ashley Can you drop in [the chat](http://chat.stackexchange.com/rooms/38/ask-different-chat) and paste the contents of the `.plist` file? I'll try pasting that into mine. Maybe the key will helpâ¦ <comment119939> I tried it, both adding just the key and pasting the whole file. Neither works :/ <comment119952> :( Ah well, thanks for trying! <comment119955> OK, here's a different idea... what does `sudo kextunload /System/Library/Extensions/smbfs.kext; sudo kextutil -print-diagnostics -verbose 6 /System/Library/Extensions/smbfs.kext` show? <comment119963> http://pastebin.com/RxXQHk8B <comment119976> Ah, thanks: are you perhaps missing `/System/Library/Extensions/corecrypto.kext`? <comment119977> My output is [here](http://f.cl.ly/items/0R252F3m3Q1P1Y1X1r1s/kextutil%20output.txt) by the way. <comment120068> Can you edit some of the commentary into the question? And as there's no unload, include the output of `sudo kextutil -print-diagnostics -verbose 6 /System/Library/Extensions/smbfs.kext` <comment120069> @grgarside that was built on a computer with a pre-release build of Mavericks. Are you sure that it's from Mountain Lion? <comment120071> @GrahamPerrin Oops, was on my iPad and must have ssh'd to the wrong computer :) <comment120103> @Ashley Yep, I'm missing corecrypto.kextâ¦ <comment120147> OK, I'm guessing that smbfs.kext requires it.  I would try copying corecrypto.kext across from your MBP (assuming both machines are still at the same OS X version), then reboot and see if that makes any difference.  Fingers crossed!  If it still doesn't work, please repeat the -print-diagnostics trick from above and post the updated results. <comment120248> Didn't work :( Here's the output: http://pastebin.com/4euNSYKn <comment120328> Unfortunately that didn't workâ¦ <comment120329> When I tried connecting to the SMB share over the CLI as shown in the linked post, I got this: `mount_smbfs: failed to intitialize the smb library: Device not configured` <comment120370> I verified the FSâ¦and as far as I can tell, everything *is* intactâ¦ <comment120400> Do you still have the modification to the smbfs.kext Info.plist that I suggested?  I say this because (the following is all educated guesswork) the log output suggests the OS thinks smbfs.kext is not an Apple extension (when it actually is).  So, I'm guessing that this might originate with a modification to smbfs.kext (because code signing checks for modifications).  So... try restoring your backup of the Info.plist file, reboot and retest.  If that fails (or perhaps you've done that already), try copying smbfs.kext across from your MBP, reboot & retry. <comment121499> Verification of an HFS Plus file system is not an assurance of integrity of data within that system. <comment123765> No accepted answer yet, so I'll assume this is still not working. Have you attempted connecting to the SMB with **someone else's** mac? This will just verify that the issue is with your mac, and not with the device in question. <comment123780> "Our MBP (also 10.8.4) connects just fine, no problems." <comment123781> @Ashley Sorry, I thought I responded. I tried copying the smbfs.kext from the MBP. No go :/ <comment124158> Ok, so after looking through comments and reading what has been checked and tested, I would suggest Graham's Answer of reinstalling the OS. **Alternatively** Wait around for a few weeks and get Mavericks (I'd recommend a _full_ re-install, either way)â¦ Obviously, this isn't an optimum solution, but considering we can't determine why corecrypto doesn't want to work, I feel there is little other choice. :( <comment124371> Okay thanks for the suggestionâ¦seems like my only option right now; I just don't want to take the time to do that :) <comment292746> For anyone that comes from Google, I expanded the answer. It might help you, it might not.