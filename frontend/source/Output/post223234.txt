OS X 10.6.8 direct IP translation and DNS issues <body> This is the situation:  I have a web server on my LAN that serves up beta versions of my documentation for my free software.  This web server, via my router, responds to an external IP address. Imaginary IPs for the purpose of explanation:  ul liMy web server is on my LAN at code192.168.10.100/code/li liMy WAN static IP is code200.100.50.25/code/li /ul  Externally, DNS is strongnot/strong set up so that some name resolves to code200.100.50.25/code. Nor will it be. So you can't get there the usual way.  So, I provide URLs to my beta testers in this form:  precodehttp://200.100.50.25/mybetadocs/webpage.html /code/pre  This works fine. My testers out in the world can get to my server and all is good. For them.  Here's the problem: on emmy/em machine, if I try to get to that URL, for instance, when I click on a  link on a web page that contains it,  my machine tells the router to NAT to code200.100.50.25/code, and that's the end of that - it goes nowhere.  The router does not appear to have any loopback capability to let it know that indeed, code200.100.50.25/code is, in fact, on my LAN (although frankly, I think it should know that already, since that's its external IP and that's where I'm trying to get to. It used to work fine on my old router. But anyway.)  So what I'm looking for is a way to tell OS X here on my local machine that when I reach out to code200.100.50.25/code, I'm actually trying to reach code192.168.10.100/code so that my web server will respond to me here on my machine, directly via the LAN.  hr  Simply put, on my machine only, I need the following,...  precodehttp://200.100.50.25/mybetadocs/webpage.html /code/pre  ...to reach here:  precodehttp://192.168.10.100/mybetadocs/webpage.html /code/pre  hr  Previously, I had my users set up a codehosts/code file entry for an imaginary servername of the form someweirdname.com, like this...  precode200.100.50.25 someweirdname.com /code/pre  ...and then put all my links up in the form...  precodehttp://someweirdname.com/mybetadocs/webpage.html /code/pre  ...which actually works fine, but ran into a fairly severe user problem where setting up a codehosts/code file was completely beyond them, hence no access to the docs.  Using the IP requires nothing of the user but clicking the link, and as I said, it works fine for them. But it locks emme/em out, which is highly inconvenient for me - I can't follow URLs out on other web servers back  to various places in my beta docs without dragging out my cellphone, turning off its access to  wifi, and going after those links via 4G so my router sees the request coming in from outside the LAN.  When I'm just reading my docs here, I just use someweirdname.com to get to them, and it's all relative from there, and that works fine too.  I just can't to them from other server's web pages out on the net. And for... reasons... I need to test those URLs to make sure they go where they are supposed to go.  Is there a solution for this conundrum that doesn't involve buying yet another servername, costing me yet more money to expose my local beta docs, and dealing with the resulting DNS maintainance churn?  I can live with it as it is, and have been, but I hate it.  <answer223240> strongArpanet: At Work Since 1969/strong - editing your own hosts file is the method of choice.  precode## # Host Database # # localhost is used to configure the loopback interface # when the system is booting.  Do not change this entry. ## 127.0.0.1   localhost 255.255.255.255 broadcasthost ::1 localhost fe80::1%lo0 localhost /code/pre  -  precode## # Host Database # # localhost is used to configure the loopback interface # when the system is booting.  Do not change this entry. ## 127.0.0.1       localhost 192.168.10.100  someweirdname.com www.someweirdname.com 255.255.255.255 broadcasthost ::1 localhost fe80::1%lo0     localhost /code/pre  You might have to flush the DNS cache using codesudo killall -HUP mDNSResponder/code and codesudo dscacheutil -flushcache/code.   <answer223506> Your only hope to me seems to make a static route on your Machine to have 200.100.50.25 routed to 192.168.10.100 but I'm guessing that won't work without some network trickery on the web server side to actually listen to the packets instead of routing them on to the router that has issues on your client.  In the interim, you might try setting up a free dynamic DNS service to associate 200.100.50.25 with a host name that will resolve for all your external testers to the IP you choose for the server.  Then you can avail yourself of the normal editing of code/etc/hosts/code trickery to have that name resolve to your choice of internal IP rather than going to the DNS servers in general.  Basically strongmove away from hard coding the IP address/strong into the URL and use a name that you can override more easily.  <answer223536> It's not the emideal/em solution and doesn't solve any of the actual problems per se, but if all you want is to leave everything as is and have a way to strongtest the links/strong, you could initiate a VPN connection. At that point, you should be able to hit your public IP from outside and port forwarding will work the way you want it to.  <comment270625> Why don't you edit **your** hosts file? <comment270877> No, doesn't work. Same result: nothing comes back. weirdname.com comes back, but the IP does not. <comment270899> the host pings fine. the LAN IP pings fine. The website works fine. But my browser can't get to the WAN IP from inside the LAN. **the WAN IP pings fine INSIDE the network, so apparently the modem is forwarding... but the DNS stuff is somehow not happening <comment270900> ok, and the ping went right there. So... apparently the hosts table thing IS working, but not through the browser. I mean, it's one hop. So that's right to the machine. <comment270902> also perhaps of interest, wget can't see the server at the WAN IP either. it sees it fine at the LAN IP. <comment270904> I did. Didn't work. See below. <comment270932> @fyngyrz you are right with the 200... entry in the hosts file. It doesn't work! But i will find another solution. What's your OS X version? <comment270969> Ah, good to know it isn't just me. :) I'm running 10.6.8 - the last version Apple released with PPC emulation support, sigh. <comment270977> This is asking for some major network breakage to get the system to ignore http://200.100.50.25 and instead do a DNS lookup. What's the reason for not making the link a DNS name - even using a free dynamic DNS service so that you can put a name there and use the normal hosts file trick? <comment270978> Your post is a bit unclear: You say your web server is responding to a public IP address, but the description doesn't really match. Your **router** has a public IP, and everything behind is NAT'd through that, right? What model router do you have—it probably will require custom configuration to achieve what you want. <comment270979> Many ISPs have DNS entries that will point to the IP address, like aa.bb.cc.dd-isp-name-location.net or something similar, where the public IP is aa.bb.cc.dd or dd.cc.bb.aa. In that case, his users could use the DNS name for his router and he could set his hosts file to the private IP address… right? Since it sounds like a dynamic DNS name is not what he wants. <comment270982> @samh My understanding is the OP wants one URL that can be published/embedded into documents or code that resolves to one IP address for most users and to another IP address for himself. A real DNS name would be better than dynamic dns, but those aren't free and simple to set up in 30 minutes time. The aa.bb.cc.dd-isp-name-location.net will break for external users since they can't route to 192.168.10.100 as it is a non-routable IP. <comment270983> @samh That might work - program the router to intercept the outgoing packet and instead have a "[next hop](http://www.cisco.com/c/en/us/support/docs/ip/border-gateway-protocol-bgp/27082-ip-static-routes.html)" at the local server IP? <comment270995> "doesn't involve buying yet another servername" tells me you're already own a domain name.  You should be able to create a subdomain and point it to your WAN IP.  If your webhost or domain registrar doesn't offer you this for free, IMHO it's time to move to a different hosting company. <comment271035> Users don't need a route to 192.168.10.100. Right now those users are going to http://200.100.50.25/mybetadocs/webpage.html and it works. Changing nothing, they should be able to go to http://200-100-50-25.myisp.region.net/mybetadocs/webpage.html and it should work. Then fyngyrz just adds an entry for that address in the hosts file pointing to 192.168.10.100 and his computer won't ever hit the gateway for that traffic. <comment271036> @bmike it's been a while since i've programmed a router so I can't recall the exact terminology but there is a way for a router to intercept traffic that would normally end up going external and routing it internally instead. <comment271188> I'm working this. I can't seem to find that kind of DNS with my ISP, so I've oped a techj ticket with  them asking what the deal is. Will get back here when I know more.