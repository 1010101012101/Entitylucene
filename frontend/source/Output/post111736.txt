Defaults utility: how to get xcode project info <body> I have found that utility codedefaults/code can get info from .plist file.br But how can I canonically pass as parameter to it codepath to .plist file/code ?  I read about code&lt;domain&gt;/code parameter but still don't have enough understanding of it.br If I go to project directory where .plist file of projects is placed and input command  code&gt; defaults read ./Project.plist/code  I will see error that this domain  Domain code./Project.plist/code is not exists  <answer111737> I didn't know that the codedomain/code parameter is a full path to a file with .plist extension  So, the correct way to pass parameter codedomain/code which points to specific project is this:  code&gt; defaults read ~/FULLPATHTOPROJECT/Project.plist/code  But I will glad to see your answers of defaults-utility best practices  <answer111738> You will find a lot of information about this in the man page for codedefaults/code (just run codeman defaults/code in Terminal):  precode Specifying domains:   domain    If no flag is specified, domain is a domain name of the form com.companyname.appname.  Example:                   defaults read com.apple.TextEdit   -app application            The name of an application may be provided instead of a domain using the -app flag. Example:                   defaults read -app TextEdit   filepath  Domains may also be specified as a path to an arbitrary plist file, with or without the '.plist' exten-            sion. For example:                   defaults read ~/Library/Containers/com.apple.TextEdit/Data/Library/Preferences/com.apple.TextEdit.plist             normally gives the same result as the two previous examples.  In the following example:                   defaults write ~/Desktop/TestFile foo bar             will write the key 'foo' with the value 'bar' into the plist file 'TestFile.plist' that is on the            user's desktop. If the file does not exist, it will be created. If it does exist, the key-value pair            will be added, overwriting the value of 'foo' if it already existed.             WARNING: The defaults command will be changed in an upcoming major release to only operate on prefer-            ences domains. General plist manipulation utilities will be folded into a different command-line pro-            gram. /code/pre 