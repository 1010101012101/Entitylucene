How to deal with duplicate file names when moving files in terminal? <body> So I'm trying to move images of a specific dimension to another folder. But working with a huge number of files, the same filename once and a while presents itself. And I have been using this script:  precode#!/bin/bash targetDir="$HOME/Documents/pixx"  find "$targetDir" -iname '*.jpg' -o -iname '*.png' -o -iname '*.bmp' -o -iname '*.jpeg' 2&gt;/dev/null | \ while read -r filename; do     hw="$(sips -g pixelHeight -g pixelWidth "$filename" 2&gt;/dev/null)"     h="$(awk '/pixelHeight/{print $2}'&lt;&lt;&lt;"$hw")"     w="$(awk '/pixelWidth/{print $2}'&lt;&lt;&lt;"$hw")"     if [[ $h -eq 270 ]] &amp;&amp; [[ $w -eq 360 ]]; then         mv "$filename" "$targetDir/hehe"     fi done /code/pre  I found out that codemv/code had a backup command codemv --backup=t/code but that is just for linux, so I can't use that. But it would be great to have some sort of equal function in this script above.  So how can I add a incremental number if the same filename appears?  <answer283338> If you are already a homebrew user, you could install GNU coreutils and get quick access to GNU mv. This is installed as codegmv/code so that it doesn't break any scripts that rely on BSD mv's syntax.  If you don't use homebrew and do not want to install it, you'll need to do tests with code[ -f ${filename} ]/code etc. (which I expect is what you wanted).  Once you have homebrew installed, run,  codebrew install fileutils /code  Then you can codegmv --backup=t/code as you wished to.  <answer283364> This isn't that difficult to do. You need to test if the file exists in the target directory then add an increment to the file name and test if that name exists.  Replace codemv "$filename" "$targetDir/hehe"/code in your code with:  precodebase=$filename##*/}     # same as using basename but                         # with parameter expansion  if [ -e "${targetDir}/hehe/${base}" ] then     echo "File exists; $base needs to be renamed.."     i=1                 # initialize the counter     shortname=${base%.*} # file name without extension     ext=${base##*.}     # the file extension      while [ -e "${targetDir}/hehe/${shortname}_{$i}.${ext}" ]     do         ((i++))     done      echo mv -- "$filename" "${targetDir}/hehe/${shortname}_{$i}.${ext}"  else     echo "$base does not need renaming..."     echo mv -- "$filename" "$targetDir/hehe"  fi /code/pre  This code will only echo the codemv/code statements and will not rename any files. Please test thoroughly. If you are confident that output will give you the desired results then remove the echo in front of the codemv/code statements. 