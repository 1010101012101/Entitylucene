What functionality do 'marks' offer in the El Capitan Terminal? <body> Since upgrading to OS X El Capitan, I've noticed a change in the Terminal: Executed lines show an opening bracket on the left, and a closing bracket on the right, as shown in this screenshot:  img src="https://i.stack.imgur.com/h6yLA.png" alt="Terminal"  Similar questions have been asked here:  ul lihttps://superuser.com/questions/974714/previous-commands-wrapped-with-square-brackets-in-os-x-terminal/li lihttps://stackoverflow.com/questions/32888295/why-is-a-being-added-to-my-prompt-after-upgrading-to-os-x-10-11/li liChanges to Terminal in El Capitan/li liWhy is there a left bracket before my bash prompt?/li liNew Terminal behavior after upgrading to OS X 10.11/li /ul  Some of the questions are referring to these brackets as emmarks/em, and the Terminal's emEdit/em menu has a couple of entries related to emmarks/em, for example:  ul liemEdit  Marks  Mark as Prompt and Send Return/em/li liemEdit  Clear to Previous Mark/em/li liemEdit  Navigate  Jump to Previous Mark/em/li /ul  img src="https://i.stack.imgur.com/mdfKq.png" alt="Edit Menu"  Is there a summary of what these marks can be used for? I have not seen any reference to this new feature in any of the El Capitan feature overviews.   <answer209640> Looks like a form of 'quick/light bookmarking'. I guess disabling 'Automatically mark prompt lines' makes its function more evident. After doing that, Cmd-Enter explicitly saves the mark, and Cmd-Up/Down jumps between them.  As you can convert marks to bookmarks and vice versa, I'd see them as lightweight or second-level bookmarks.  <answer209907> h1Marks in the Terminal/h1  The new Terminal emmarks/em (available starting with OS X 10.11 - El Capitan) are similar to emBookmarks/em, which are also available in the Terminal, allowing you to mark window positions and then giving you the option of going back at a later point.  Marks (or Bookmarks) don't refer to your command history, but to the scroll buffer used in the Terminal window/tab.  h1Marking a Line/h1  By default, every time you press kbdEnter/kbd in the Terminal window, the line is emmarked/em, which is displayed using an opening bracket at the beginning of the line and a closing one at the very end. This default behavior can be turned off using the emEdit  Marks  Automatically Mark Prompt Lines/em menu entry. When this is disabled, you can still manually execute and mark a command using kbdCmd+Enter/kbd (or with the emEdit  Marks  Mark as Prompt and Send Return/em menu entry).  If you have automatic marking enabled and want to run a command without marking it as a emprompt/em, you can do this using kbdCmd+Shift+Enter/kbd (or with the emEdit  Marks  Send Return Without Marking/em menu entry).  h1Disabling Marks/h1  Automatic marking of lines can be disabled using the emEdit  Marks  Automatically Mark Prompt Lines/em menu entry.  From the command line, the same can be achieved using  precodedefaults write com.apple.Terminal AutoMarkPromptLines -int 0 /code/pre  h1Hiding Marks/h1  If you want to use the emmark/em functionality, but don't want to see the brackets at the beginning and end of the line, you hide them using the emView  Hide Marks/em menu entry. This will keep the below functionality intact, but will no longer show the brackets.  h1Jumping between Marks/h1  Once a line has been marked, you can quickly jump to the previous mark using kbdCmd+Up/kbd or to the next one using kbdCmd+Down/kbd. Similar options are provided for Bookmarks, and for selecting to the next/previous mark:  img src="https://i.stack.imgur.com/A3HlW.png" alt="Edit Menu"  h1Manually Marking a Line/h1  In addition to the automatic marking, you can also manually add marks by selecting a line in the terminal output using the mouse, and then selecting the emEdit  Marks  Mark as Prompt/em menu entry (or kbdCmd+U/kbd).  h1Use Cases/h1  The emMarks/em functionality is useful if some of your executed commands produce lots of output, and you quickly want to scroll to the position where you entered the command. Pressing kbdCmd+Up/kbd will take you there. Pressing it repeatedly will take you further up, while pressing kbdCmd+Down/kbd will take you back down again. The target location is conveniently highlighted as you jump/scroll around.  img src="https://i.stack.imgur.com/s9K5X.gif" alt="Marks Usage"  h1Selecting Content/h1  The same emmarks/em functionality can be used for selecting Terminal output. Pressing kbdCmd+Shift+Up/kbd will select the content up to the previous mark, while kbdCmd+Shift+Down/kbd will select down to the next mark. This is useful when wanting to copy log output or other content from the Terminal.  This functionality is also available from the emEdit  Navigate/em menu while pressing the kbdShift/kbd key:  img src="https://i.stack.imgur.com/wRb4T.png" alt="Navigate Menu"  h1Summary/h1  Having used this for a couple of days now, I find it incredibly useful. Scrolling up through hundreds of lines of output to find the beginning of the command's output has suddenly become a lot easier.  I wonder why this new feature isn't mentioned more prominently - I haven't seen it in any of the El Capitan walkthroughs. The Terminal help currently does not provide any details on this feature either.  <comment252888> That doesn't seem entirely accurate. When I use _Cmd+Up_, it doesn't cycle through my history, but scrolls the whole Terminal window to the previously _marked_ command. <comment252937> I do not have El Capitan installed (yet) and my answer is a bit off-topic.  If this is a history search feature like mentions by @fonso, it looks like Apple reengineered the old kbdCTRL/kbd-kbdR/kbd feature of bash, where you could do a reverse interactive history search. And Apple seems having visualized it. <comment252941> No, it's not. As I have said in my comment, it does not have any overlap with the CTRL+R history search. It looks like the _marks_ feature works as a kind of automatic bookmark, letting you scroll up through the terminal window's buffer quickly. <comment253187> Sorry, you're all completely right, it's marking the scroll point, not history! I'll edit the answer. <comment256198> If only we had found a better way to pay Siracusa enough to scrutinize the OS for months on end.... <comment256767> Great answer. Just to add a little bit, Bookmarks can be named too, so think of Bookmarks as Chapters in a book and marks as Paragraphs. You could create a new Bookmark when starting a new task in the same Terminal, handy in recalling exactly where you started and what you did. <comment286571> This is actually really useful. Thanks for this great explanation! I was wondering why I observed the same thing months back, but I ignored it, until I realized it had nothing to do with my modified PS1. Great!