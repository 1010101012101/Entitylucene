copy last command in terminal <body> I can see last command in terminal by pressing codeup arrow/code as in following example:  I typed codecd //code:  precodeMakss-Mac:~ maks$ cd / /code/pre  ... pressed codeenter/code, command codecd //code executed and now I can press codeup arrow/code and see command codecd //code again:  precodeMakss-Mac:/ maks$ cd / /code/pre  I want not only see last command but copy it to clipboard.   Maybe exists shortcut that not only show last command in terminal (as codeup arrow/code do) but at the same time copy it to clipboard.   Or maybe there is shortcut for selecting all from current terminal line. And so I will be able to copy last command (after pressing codeup arrow/code) by pressing codesuper+c/code. Of course I can select it by mouse. But when commands are in 10 times longer than codecd //code it can be too time-consuming, especially if you do it every 30 seconds.  Or maybe there is way to write plugin for Terminal  <answer110349> Put this into your code~/.bashrc/code code~/.bash_profile/code or where-ever you like it:  precodealias copyLastCmd='fc -ln -1 | awk '{$1=$1}1' | pbcopy ' /code/pre  After opening a new window (or running codesource ~/.bash_profile/code) you should be able to run codecopyLastCmd/code and have the command in the clipboard.  To explain what's going on: you're basically using "fix command" (codefc/code) to get you the last command, remove both leading and trailing whitespace for nicer formatting with codeawk/code and then copy it into your Mac's pasteboard with codepbcopy/code.  strongEDIT:/strong  Now that we know that you want to copy to paste into another terminal tab, there's another option: Add these lines to your code~/.bashrc/code code~/.bash_profile/code or where-ever you like it:  precodeshopt -s histappend PROMPT_COMMAND='$PROMPT_COMMAND; history -a; history -n' /code/pre  Then, once you have some new tabs open (let's call them "tab A" and "tab B"):  ol liExecute any command in tab A/li liSwitch to tab B, press enter on an emempty/em line, giving you a "fresh" new line (and thus re-evaluating the history)/li liuse the up arrow once and you should have the command you've just entered in tab A./li /ol  strongEDIT 2:/strong I've replaced the usage of codesed/code with codeawk/code in the original answer above, to take care of both leading and trailing whitespace .  <answer110350> You can set your history to ignore commands that start with a space:  precodeexport HISTIGNORE=' *' /code/pre  And then run the following command to git the last command to the clipboard (make sure you have a space at the beginning):  precodehistory 1 | cut -d " " -f 4- | pbcopy /code/pre  You probably would then want to save the command as an alias to make it easier to remember.  <answer110541> Here's another take based on the answer by @Asmus. To make his alias work in my bash script, I had to use a bit of quoting, since single quotes don't work in a single-quoted alias without some additional quoting:  precodealias copyLastCmd='fc -ln -1 | awk '\''{$1=$1}1'\'' | pbcopy' /code/pre  The code'\''/code will basically close the current quote, then add an escaped quote, and then open the actual quote again.  The above version will copy the last command to your clipboard, and once you paste it, it's immediately executed, since it will have a emnewline/em at the end.  To get rid of the newline at the end, so you can actually edit the command before running it, you can do the following:  precodealias copyLastCmd='fc -ln -1 | awk '\''{$1=$1}1'\'' ORS='\'''\'' | pbcopy' /code/pre  The codeORS=''/code (that's without the quoting) will strip off the trailing newline character, so you can edit the pasted text before running it.  <comment129974> It might be easier to find a solution here if you could add some details about what you intend to do with the content of the clipboard afterwards. Where are you going to paste it to? <comment130027> yes to paste it to another terminal tab <comment130084> That's a great alias! To cut off the trailing new line, so you can edit the command after pasting, I used `awk`: `alias copyLastCmd='fc -ln -1 | sed '1s/^[[:space:]]*//' | awk 1 ORS="" | pbcopy '` <comment130087> @nwinkler: OH you're right, should've used awk: `fc -ln -1 | awk '{$1=$1}1'` will remove both trailing and leading whitespace. <comment286331> had to modify the alias for special chars `alias copyLastCmd="fc -ln -1 | awk '{\$1=\$1}1' | pbcopy"`. still gets my upvote