OSX: Is there a built-in scheduler program? <body> I would like to schedule a task to execute with parameters at a specific time/date in the future.  Does OS X include any such tool (even if it's command-line)? If not, are there any free or relatively cheap tools out there to accomplish this?  <answer4715> There are two Unix command-line tools that do what you want.  codeat/code will allow you to schedule a task to execute once at a specific time in the future.  Of course, part of the task could be to schedule another task.  codecron/code allows you to schedule tasks to regularly execute at the same time, based on time of day, day of the week, etc.    One thing to note is that both of these will not run tasks if your machine is not running at the time they are scheduled.  There are alternatives, such as anacron, that will run scheduled tasks the next time the machine boots.  <answer4717> While KeithB's answer is correct, actually, codecron/code is being deprecated in favor of the OS X specific codelaunchd/code.  Commands to be run via codelaunchd/code are described in Apple "plists", or property lists, which are really just XML files:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple. com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;       &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.apple.periodic-daily&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;          &lt;string&gt;/usr/sbin/periodic&lt;/string&gt;         &lt;string&gt;daily&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;LowPriorityIO&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;Nice&lt;/key&gt;     &lt;integer&gt;1&lt;/integer&gt;     &lt;key&gt;StartCalendarInterval&lt;/key&gt;     &lt;dict&gt;           &lt;key&gt;Hour&lt;/key&gt;         &lt;integer&gt;3&lt;/integer&gt;         &lt;key&gt;Minute&lt;/key&gt;         &lt;integer&gt;15&lt;/integer&gt;     &lt;/dict&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Having said that, it's not a very user friendly (nor Mac-like) way of scheduling commands to be run. This question on SuperUser lists a few GUI alternatives, including:  ul liLingon (http://sourceforge.net/projects/lingon/) (Free, may not work on 10.6)/li liLingon (http://www.peterborgapps.com/lingon/) (Not free, works on 10.6)/li /ul  img src="https://i.stack.imgur.com/8lozv.png" alt="Lingon Screencap"  launchd Editor ($5 Shareware)  img src="https://i.stack.imgur.com/xHr7e.png" alt="Screen Capture"  <answer4718> You can also start Automator workflows with iCal if you just want something simple. Otherwise I would do it through launchd.   <answer7577> iCal can be used to run AppleScripts, launch applications, and perform tasks to a schedule.  There are limitations to using iCal, but it is included with Mac OS X and relatively easy to set up. The limitations and a visual walk through on how to set up a scheduled AppleScript are included in the link above.  img src="https://i.stack.imgur.com/BHli2.jpg" alt="Setting up a scheduled AppleScript with iCal on Mac OS X"  <comment4602> The only issue with iCal is that you have to be logged in for the task to run (correct?) <comment4616> yes, I think you must be logged in to do this. I would recommend the launchd process over this, but some people would rather just use iCal and are always logged in. <comment4627> iCal is a much easier solution! See the screen caps I posted. I sure can see how they could be intimidating :-) <comment4653> just for clarification, your screenshots are for launchd setup, correct? <comment4680> It's not a fair characterization that launchd is "proprietary." Apple eagerly open sourced it at http://launchd.macosforge.org/ and it has been ported to FreeBSD. <comment4681> @ohmantics: Ok, fair point. Is "specific" a better description? <comment4682> Close enough. :-) Apple created it, but I expect it will see wider adoption across BSD-like OSes. <comment5186> @calavera: Thanks for the edit. I hate it when documents on major websites are removed like that. I added a new link which is sadly less relevant, it doesn't specifically mention `cron` being deprecated :-( <comment5189> np... unfortunately Apple seems to do it a lot :/ <comment8148> Note that, by default, the "at" command is disabled. Use "man atrun" to figure out how to enable it.