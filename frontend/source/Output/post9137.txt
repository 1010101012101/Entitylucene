Microsoft Remote Desktop through ssh-forwarded port <body> I have a situation where I provide access to a Windows server by forwarding the remote desktop port 3389 with ssh from my Mac to the "inside" of an otherwise inacessible network.  I can now connect with the emWindows/em version of Remote Desktop, but the emMac/em version of Remote Desktop time out and do not provide access.  This is even when using the IP-number as the host to connect to.  Any idea why this happens and how I can work around it?  <answer9186> Don't forward local port 3389, various versions of Remote Desktop are too smart for their own good.  My usual steps involve forwarding local 3390 to remote 3389. Then, in MacRDC I use: codelocalhost:3390/code as the address to connect too.  I don't know if you're using anything to assist in the ssh connection setup, but from the command line, it would be something like:  codessh -L 3390:172.16.5.32:3389 jason@remote.net/code  Where;br  - code3390/code is the local forwarding port on my box.br  - code172.16.5.32/code is the remote windows host. and;br  - code3389/code is the Remote Desktop Port (obviously).  <answer10282> Forwarding to port 3389 is bound to give you trouble. The system will recognize what you're trying to do and basically short circuit itself. This is the drawback of DIY Remote Desktop, imho.  <answer88576> The Windows Remote Desktop implements more authentication and encryption algorithms specific to Windows. This happened to us often, in fact we're forced to use Windows Remote Desktop by our network administrators as we're using authentication methods OSX doesn't implement. Let's cross fingers and hope Microsoft releases a match for the Windows-grade Remote Desktop asap.  <answer88583> Sometimes just Updating the software solves the problem.  img src="https://i.stack.imgur.com/0uNhG.png" alt="enter image description here"  Pending your OS you should make sure to have the correct version of WRDC.   Since you have the outdated 2.1.0 you should update to one of the following. Ver. 2.1.1 from Microsoft or the latest ver. 2.1.2. from below.  http://www.cloud9realtime.com/Guides/Macintosh%20RDP%20Guide.pdf  img src="https://i.stack.imgur.com/IEyiv.png" alt="enter image description here"  If updating software does not help and if you cannot connect with the IP address, the host name, or the computer name, then it is likely that strongport 3389 is blocked somewhere in your WAN./strong  To test your ssh tunneling setup try strongtelneting/strong to the port on your local machine.  <answer88596> Did you try to disable requirement for "Network Level Authentication" from "Control Panel - System - Allow Remote Access" on the target machine?  img src="https://i.stack.imgur.com/ExrE9.png" alt="Native Level Authentication"  <answer88893> Try CoRD: enter link description here  I've found it works better than the official RDP client, and tends to handle imperfect setups smoother.  <answer89182> On your mac, perhaps try out this solution:  ul liinstall sshuttle ( implements ssh tunnel/proxy, but also implements some routing changes ) ( https://github.com/apenwarr/sshuttle.git )/li liconfigure sshuttle to only route for the ip address of the windows box you want to reach:  sshuttle --dns -r YourUserName@YourSSHBox.com 1.1.1.1/32   Replace:  1.1.1.1/32 with the ip address of the windows host. If there are a number of hosts you need to access and they are in the same subnet, you can just change the /32 to something wider, say /24. /li liFire up your Mac RDP client and attempt to access the IP address of the Windows machine. Perhaps can use the hostname if you are also forwarding DNS queries to the box you are using as a bridge./li /ul  This is a variation of the -D3389 method, but employs the socks proxy features of ssh.  <answer123521> The OSX Microsoft Remote Desktop client does not seem to support the default authentication method used by Windows 7+  The solution is to do the following on the Windows machine:  ul liStart - Edit Group Policy/li liComputer configuration   ul liAdministrative Templates  ul liWindows Components  ul liRemote Desktop Services/li liRemote Desktop Session Host  ul liSecurity  ol liChange strongem'Require use of specific for remote desktop (RDP) connections'/em/strong to strongemEnabled/em/strong and choose strongemRDP/em/strong from the dropdown./li liChange strongem'Require user authentication for remote connections by using Network Level Authentications'/em/strong to strongemDisabled/em/strong/li /ol/li /ul/li /ul/li /ul/li /ul/li /ul  Now you should be able to connect using the OSX Remote Desktop Client without any problems through the SSH tunnel.  <comment9737> I had a go at this, but unfortunately going through port 3390 didn't work either :(  I tried adding the host name of the windows server to /private/etc/hosts (aliased to 127.0.0.1) to see if I could fool any "look for HOST" mechanism, but no.  What Windows version is this against and what version of Remote Desktop for Mac? <comment9778> MacRDC 2.0.1, Windows RDC it's been so long I couldn't tell you. I seem to remember it happening with stock mstsc from Windows XP and forward. <comment9821> Your original comment means that `localhost:3390` in the RDC window didn't work? And you tried `myhost:3390` (with myhost aliased in the 127.0.0.1 line in hosts file) as well, also to no avail? <comment9822> Also, do you get any output in your terminal window? Channel failures or anything of the sort? Any error messages external to the MacRDC app? <comment10744> Then why does it work with Windows Remote Desktop but not the Mac version of Remote Desktop (from Microsoft too)? <comment103672> I now had a look at this again, including the "myhost-localhost" hack, and it appears that it is not enough.  The wheel spins in MacRDP trying to connect, but still times out.  There is no messages in Console.app.  I use a custom tool to port forward (no ssh access).  I really _wonder_ what it tries to do which fails. <comment103673> This is still desirable due to changed software.  Opening a bounty. <comment103716> Did you try with newer client, 2.1.2 ? <comment103719> Do you have any suggestions for me to look for to make MacRDP not time out? <comment103721> Not yet.  I have 2.1.0.  Thanks, I'll try upgrading. <comment103725> Please add at least the link :-) Also: Is this just a guess or have you verified that it solves the probem? <comment103726> https://dl.dropboxusercontent.com/u/18309066/rdc_2.1.2_120917_release_enu_ship_clean_standard_retail_redlab_120917-apex-build-XS26-.dmg <comment103729> @patrix I do not have the setup to verify, but I read about it. <comment103731> THANK YOU @kenansulayman, thats it, I lost it and you found it. <comment103737> If it times out, no connection can be established at all. Either way, as Windows succeeds in the connection, my guess is authentication or encryption! :) <comment103758> At the moment the answer seems to be more of a guess then a solution. And downloading beta software from an anonymous Dropbox account isn't for the faint of heart either! <comment103763> @patrix..beg to differ, the 2.1.0 is a old version and not very compliant with os x 10.8x, therefore I suggested to upgrade to at least 2.1.1 or at his own risk to the 2.1.2 as clearly described in my answer. I also explained that I am not able to test his set up. Let the OP decide on the answer that worked, since he already agreed to upgrade to 2.1.1 <comment103806> 2.1.1 is a free download for those that want that one instead. Google will get you there, but at least for now this link shows you the available downloads: http://www.microsoft.com/en-us/download/search.aspx?q=microsoft%20remote%20desktop%20connection%20for%20mac&p=0&r=10&t=&s=Relevancy~Descending <comment103895> He's able to connect with a Windows RDP installation.. so, yes he did that already :) <comment103904> The version 2.1.1 has added support for NLA - see http://www.macupdate.com/app/mac/8431/microsoft-remote-desktop-connection:  _Verifies the identity of the Windows-based computer before establishing a Remote Desktop connection. You can select this option when you connect to a computer that is running Windows Vista or Windows 7. Network Level Authentication is more secure than authentication options in earlier versions of Windows._  If you disable this requirement (we speak about the very last checkbox) he should be able to login with 2.1.0 client through SSL tunnel. <comment103970> Sorry, didn't see you wanted to point out the NTLM part of the shot. Maybe worth a try! <comment103973> I'm actually not sure that NLA is related to NTLM. NLA just tries to verify credentials before bringing a login screen to the user. This eliminates one attack vector. But his Windows is behind a firewall so he does not need to consider this. <comment104013> I've kept a virtual box with windows installed for situations like this. Sadly, I'd love to make things work natively on the Mac - but when a client can not or will not give me a proper VPN - running the OS they poke holes (or worse rely on non-standard one-off behaviors) in their firewall is far less work for me in the end. After all - I'm running RDC to see windows so it matters little that I've that OS running locally too. Since you explicitly need the Mac client, can you ssh in to a VPN connection? <comment104028> @Thorbj√∏rnRavnAndersen can you detail (perhaps in the original question) what your custom port forwarding is? The question makes it sound like you have use of SSH, but this comment conflicts with that? Might help out... <comment104248> I am using CoRD now, but it has a few wrinkles, and I'd rather use the official client. <comment104249> I now updated to 2.1.1 with unchanged behavior.  A rouge 2.1.2 is not an option.  I do not think this is a bug as such, just that I need something more set up. <comment104252> Did you try the telenting ? and what about been blocked down the line in your WAN setup! it might be the reason you do not get any errors. <comment104440> What happens on the Mac if you simply telnet localhost:forwarded port? Does it work as expected? Sounds like there is a problem with your ssh tunnel. <comment104441> Work as expected:  Should look something like this  telnet localhost 3389 Trying localhost... Connected to localhos. Escape character is '^]'.  (and after a while)  Connection closed by foreign host. <comment104606> Impressive...good job. <comment118092> And just for the record.  The /private/etc/hosts trick cause iMessage registration to fail...  Took a while to figure out. <comment144262> I also ran into this problem when trying to create an SSH tunnel to a Windows machine. It worked fine when doing it using Putty on Windows.  Creating the exact same tunnel on OSX however, simply timed out after a while. If the tunnel wasn't setup at all, the Remote Desktop Client would fail immediately, so I knew it was getting some kind of connection.