How can I run an unsigned script in Automator <body> I can run the well-respected perl script strongexiftool/strong from the command line in Terminal and achieve the desired result, but when I incorporate it in Automator as a Service I get a generic error message and the perl script is not executed. When I look in the system.log I find: "The operation couldn’t be completed. (OSStatus error -67062.)" i.e., Code object is not signed.  Correct, strongexiftool/strong is not signed, and there is nothing I can do about that.  I had to bypass Gatekeeper to install it in Yosemite (10.10.5). But the script is well know in photography circles and has been used by many to edit the EXIF information in image files.  I tried to add the script or my Automator workflow to emSystem Preferences  Security &amp; Privacy  Privacy  Accessibility/em but the panel won't accept either.  Is there some way to tell Automator to accept this unsigned script or a command or switch I can put in my bash script to have it accepted?  Here is my current shell script:  precodefor f in “$@” do exiftool -overwrite_original -AllDates-=1 "$f" done /code/pre  Thanks for any help.  <answer216344> The codeexiftool/code installs into code/usr/bin/code. Under SIP this is not permitted.  I assume the developer will change this at some stage.  If you install in code/usr/local/bin/code it should work, and you won't have to override anything.  EDIT I believe the latest has been changed to install in code/usr/local/bin/code I have never bothered to install it myself, I just run from a local directory.  <answer216460> OK, turns out there were two things I was doing wrong and neither of them had to do with exiftool being unsigned. Something is causing my system.log to report 'Code object is not signed' with some frequency, and after further examination, I began to suspect it wasn't my Automator script because they were generated even when I wasn't attempting to run Automator.  Error 1: in my DO loop I pasted in curly quotes, that was generating the shell script error. By replacing them with standard " quotes, the shell script error went away.  Error 2: I had set Pass input as stdin, it should have been as arguments   Bonus: Phil, the author of exiftool, who found these answers that had defeated me, suggested a single line that is more efficient than my DO loop and it works very well:  precodeexiftool -overwrite_original -AllDates-=1 "$@" /code/pre 