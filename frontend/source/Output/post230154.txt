Getting all versions of a file from a Time Machine backup <body> I have 2 terabytes worth of TM backups on my external hard drive and I need all versions of a specific folder (more specifically, all the files from that folder). Is it possible to extract all backups of a folder from my backup without going through all the days with backups and extracting them manually?  <answer230392> If you are a bit familiar with the terminal, it is quite easy. Open the terminal and codecd/code to the location of your backups on your backup hard drive. Then, you copy all versions of the folder you are interested in into a new folder with rsync.  I'm making up an example where you want to copy all versions of the folder code/Users/peter/Documents/thesis//code into a new folder code~/all_my_versions/code that is located in your home folder.  You will have to adapt the paths to your system, e.g. by replacing codeMacintosh\ HD/code with the name of your harddrive.  precode# create new folder mkdir ~/all_my_versions/ # change directory to your backups cd /Volumes/Backup_HD/Backups.backupdb/My_MacBook_Pro/ # run for loop to copy all folders into newly created directory for F in *  do   rsync -avz $F/Macintosh\ HD/Users/peter/Documents/thesis ~/all_my_versions/$F  done /code/pre  In the end, the folder code~/all_my_versions/code will contain several subfolders, whose names are the backup dates and times:  precode2015-10-19-113849/ 2015-10-28-111812/ 2015-11-04-104802/ /code/pre  <answer230397> There's a tool to do that:  ul liBackup Loupe/li /ul  It lets you browse specific files and extract when they changed. It's more friendly and less prone to errors with spaces and odd characters in a name than trying to script it. That's possible and another answer looks like a promising start to checking it.  <comment281198> I would recommend a `--dry-run` option for most `rsync` scripting to catch issues like unexpected spaces in folder/file names and checking what will be copied if you're not sure how wildcard expansion will parse your directory. This does look promising, though. <comment281504> While `~` is supposed to expand to the value of `$HOME` nonetheless you also might want to consider explicitly using `$HOME` in place of `~` as I've seen cases where tilde expansion has issues in some scripts.  Not saying I see a specific issues in yours, although I've not tested it, nonetheless experience has taught me not to rely on using `~` in scripts and why I personally choose to use `$HOME` over it, as it hasn't failed in cases where tilde did. <comment281940> Thank you user3439894 for your comment, I have never had issues with using `~` yet, but it's good to be aware that there is a better way with `$HOME`. <comment323999> User [Kim](http://apple.stackexchange.com/users/207892/kim) mentioned that after using Backup Loupe - the .sparsebundle has "no mountable file system" thus no backups at all anymore. <comment324000> Kim - the Backup Loup has read-only access to the entire backups.backupdb and spares bundles - so your problems are most likely to be coincidence and not causal. About the only think I can think of is if BackupLoupe was reading from the disk and that prevented it from being unmounted cleanly and you had a Time Machine backup running and then shut down the Mac or lost connection to the backup that caused write corruption. Did you reach out to the maker of Backup Loupe so they could look into this?