How do I fix frozen network settings? <body> I developed some test software that makes a lot of HTTP requests and database calls. When I run it on my MacBook, it sometimes breaks the network stack.  When this happens, I notice the following symptoms:  ul liThe Wi-Fi status indicator in the menu bar changes to the animation that shows that it's looking for a network. As soon as the mouse pointer moves over the status indicator, the indicator freezes and remains frozen from that point on. It doesn't respond to clicks./li liThe mouse pointer changes to a spinning ball whenever it's over the Wi-Fi status indicator, or any of several other neighboring indicators./li liOther programs (such as Chrome) complain about not having an Internet connection./li /ul  Everything stays in this state until I reboot. Other devices on the same wireless network are unaffected.  Setup:  ul liMacBook running macOS Sierra 10.12.3./li liThe only network connection is via Wi-Fi./li liVPN connection using Cisco IPSec/li /ul  Is this a known issue with the operating system (failing under this type of load)? Can you please suggest some troubleshooting steps?  <comment349887> You're asking if this is _a known issue_ about some test software you've developed yourself. I'm not sure anyone here can help you as the only clue to what _may_ be causing the problem is that your software _makes a lot of HTTP requests and database calls_. But of course, the issue could be with your code (which we have no knowledge of) or something totally unrelated. If you get no joy here, it may be worth considering one of the other Stack Exchange communities. That said, as a test, can you connect via Ethernet instead of Wi-Fi (i.e. totally disable Wi-Fi) and see if the issue persists? <comment350041> It's not my intent to ask about the code I developed, but rather about the OSX network stack being vulnerable to this traffic pattern.  The software I wrote is in Java and doesn't have any low level interactions with the OS, so the same behavior could presumably be caused by any source of traffic that includes many concurrent short-lived TCP connections.  I tried using ethernet and couldn't reproduce the issue that way.