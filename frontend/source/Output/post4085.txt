Why does the Finder run at such a low process priority? <body> I'm at a bit of a loss about this.br I'm running a big import in aperture, and it's causing my system to slow down to a complete crawl, basically rendering it unusable for anything, even browsing the web. Since this seems a bit unnatural, I spent a little time looking around.  Running codeps -Al/code shows that, apparently by default, the codeDock/code, codeFinder/code, and codeSystemUIServer/code all seem to run at a priority far lower then userland applications. While user applications typically have a priority of 33, the Dock, Finder, etc have a priority of 53.  The end result, is ANY processor intensive task completely clobbers the UI, and renders the system unusable until it finishes.  Anyways, using coderenice -20 -p &lt;prid&gt;/code bumps them up to the same priority as the rest of the userland UI, and results in not having to wait 1-3 seconds (!) for the UI to respond to something as simple as a mouse click.  Thad said, I have two questions:br Is there any reason I shouldn't be altering the thread priority of the finder like this?br Is there any way to make the priority change persistent, e.g. so it stays that way after reboot.  <answer4900> I'm not sure anyone short of Apple's own developers would be able to answer this question, Finder's inner secrets are their domain. If you do think there are some noticeable lag problems with the UI you might want to submit a bug report to Apple about it.  Judging from the sound of things (processes intentionally taking up all resources) this is a bit of an edge case for memory management. I've yet to see a system perform at their best without somewhere around 10-20% resources free, as a buffering aid.  Just curious, what emare/em these processes you're running?  <answer23178> "I'm running a big import in aperture, and it's causing my system to slow down to a complete crawl"  Then Aperture is (probably) the program you want to coderenice/code, not the others. The processes you mentioned are tuned relative to average user applications, so that user applications get higher priority and remain responsive, since they are what users use most of the time.  Your case is the less-common one, where an application is performing a long-term, intensive task and the user wants to do something else at the same time. By default, it's the user's applications that get priority so that these intensive tasks get more resources and complete sooner.  For every user that complains that other applications aren't being responsive enough, there is another user complaining that the active application isn't running fast enough.  If you are running a long, resource intensive task and you know you want it to have lower priority so you can use other processes while the task completes—and you don't mind if the intensive task takes longer—you should lower the priority of the process running the intensive task.  As for your second question, there are several possible solutions for making the coderenice/code more automatic. For example, you could create a script applet that runs Aperture at a lower priority and use that to start Aperture. Or you could start Aperture via a shell script stored in a *.command file (however, that will open Terminal and run the command in a terminal window, which may not be what you want). Each of these is a little involved. If you would like examples, I can see about providing them later.  <answer54951> I posed a similar question - long ago, on ServerFault - though not as specifically focused on the Finder (although I DO find the Finder to be intolerably slow, as well).  How to permanently “renice” a process on Mac OS X (or iOS, etc)?  Not much info was gleaned there - as to a good way to do this… or as to why it is such..  I still think about this often, and there are actually a few ways to muss with the "basics" if you so dare.  As previously mentioned, you can do various shell chicanery.. but a good place for such misdeeds are the various code/etc/rc*/code boot routines.. which are already up in there.. setting all sorts of arbitrary (apple-defined) system parameters for you.  either edit those, or lookup how to add your own routines to the boot process.  also, if you really want to make your head explode..  codesudo sysctl list/code and it's key to pandora's box, aka code/etc/sysctl.conf/code  <comment3876> Frankly, I wish I could increase the UI priority further. Unfortunately, renice has a limit of +- 20. <comment3879> I've typically found that it's the disk i/o, not the cpu load, that causes my system to crawl. Finder and the other applications you mention are probably waiting on reads/writes when they appear to not be responding. I don't really have a solution to this (other than getting a fast disk like an SSD), though, so I'm going to post this as a comment instead of an answer. <comment3881> I would have thought so too. However, changing the thread priority *does* affect the UI behavior, which makes me think that either the thread priority also affects IO queue handling, or it is indeed CPU limited. <comment3882> As an example, with the dock priority left as stock, it takes 5-10 seconds to react to the mouse being moved over it. With it manually bumped up to the same 33 as everything else, it reacts immediately (though there is a little bit of choppiness). <comment3883> Update: The nice command affects both CPU **and** IO queue handling: http://www.insanelymac.com/forum/lofiversion/index.php/t164156.html <comment3896> @fake "with the dock priority left as stock, it takes 5-10 seconds to react to the mouse being moved over it. “ Wait, does your dock take 5 secs to react? Mine is immediate. Even the Finder, when not waiting for a disk to Spin Up is very close to instant. The bottleneck is in the Disk I/O, not the CPU. <comment3897> @Martín Marconcini - Yes, it does, at least when the system is heavily loaded. <comment3905> @Fake well, then I guess you’re having other issues; how much memory does your computer have? what model? year? how much disk space (free/total) do you have? <comment3926> @Fake the reason I mentioned this, is because I believe that raising Finder’s priority is like trying to fix a leak by surrounding the pipe that is leaking with 50 pounds of a sealer product instead of finding where is the leak in the first place. :) <comment4034> The problem is not a memory/disk space limitation. I am running processes that *intentionally* take **all** the resources they can. A proper mutitasking scheduler should let the system remain perfectly responsive (or at least only cause a minor performance hit) *despite* this, provided the prioritization is set right. However, for some insane reason, the *most important* aspect of the UI is set to the lowest priority possible, and the whole system therefore basically is rendered unusable. <comment4035> I know this is possible, because I run the exact same tasks on my windows 7 box without any issues. I just prefer leaving the mac on all the time, since it takes far less power. <comment4201> Well, I upgraded from 2 to 8 gb of ram, and the problem solved itself. I'm a bit mystified why, since I don't think the system would use the swap partition until it was completely out of ram, and it always seemed to have 200-300 mb free, even when heavily loaded. <comment4560> Hmmm, this is curious indeed... I'll have to try playing with the priorities on my laptop, next time I'm doing an import.  I've always figured that the main thing that was going on was paging, and that that was causing the problem -- and looking at paging stats seemed to bear that out.  Perhaps changing the priority changes the likelihood that those processes will get paged out, and thus keeps them responsive???  More investigation required, I imagine...  especially if you claim to have 200-300mb free (I know I have less than that, often). <comment4949> I **Never** saw my system fall to less than 100 MB free, even when I was loading it as much as possible. This seems a bit odd to me. <comment4951> Python, primarily. Doing some heavy recursive computation. <comment4952> Also, batch image processing <comment5101> That sounds more like a RAM usage problem than a CPU problem. I've had something like git use tons of CPU without lagging the UI, but when something starts eating up all the RAM then the UI takes a major hit. What's your RAM usage like during these processes? <comment25861> Background tasks, **by definition**, should be at a lower priority then foreground tasks. The **most important** foreground task **in the entire system** is the GUI, which is largely the Finder process. I may be able to patch threads on a process-by-process basis by `renice`in things, but the actual problem is finders priority. <comment25862> For example, in Windows 7, which has one of the most responsive GUIs around, the Window-Manager automatically runs with a priority of "High". Now, this means that misbehavior of this process will cause the system to lag, but it also means that misbehavior elsewhere will **not**. I have had applications crash to using 100% of every CPU core, and the UI on windows still remains extremely responsive. <comment25949> @Fake Name: The Finder does *not* handle any aspect of the UI other than its own windows (folders and desktop icons). (It is possible to quit the Finder; it's actually gone, and everything else still works.) SystemUIServer handles the menu bar right-side items and the "bezel" overlays (volume/brightness, etc) only. Window rendering and events are handled entirely by the WindowServer processes. <comment26073> @Fake Name, as a point of clarification: `renice` operates on processes, not threads.