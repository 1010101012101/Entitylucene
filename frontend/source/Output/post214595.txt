How to use find to list all files except those under .git? <body> I want to find a list of file (no directories) excluding those under code.git/code  I am trying out some suggested codefind/code syntax to achieve as suggested in this SO question:  https://superuser.com/questions/397307/how-to-ignore-certain-filenames-using-find  Here are what I attempted  precodefind . -type f ! -name '*.git*'   find . \( -type f  -prune -o \! -name '*git*' \) find . \( -type f  -prune -o \! -name *git* \) find . \( -type f  -prune -o ! -name *git* \) /code/pre  But the output always contains files in code.git/code. Here is a partial listing  precode. ./.coveragerc ./.DS_Store ./.git/.DS_Store ./.git/COMMIT_EDITMSG ./.git/config ./.git/FETCH_HEAD ./.git/HEAD ./.git/hooks ./.git/hooks/disable-commit-msg ./.git/hooks/pre-push ./.git/hooks/prepare-commit-msg ./.git/index ./.git/info ./.git/info/exclude ./.git/info/refs ./.git/logs ./.git/logs/HEAD ./.git/logs/refs ./.git/logs/refs/heads ./.git/logs/refs/heads/1312 /code/pre  The version OS X is El Capitanâ€Ž, and I am using codezsh/code. codefind/code is located in code/usr/bin/code  Is it an OS X codefind/code issue? If so, how can I achieve my intended result?   strongEDIT/strong  I tried this command   precodefind . \( -type d -name '.git' -o -type f  \)  -prune /code/pre  and it is closer to what I want. However in the output I can still see the folder code.git/code  <answer214597> The accepted answer is not correct but with a comment it starts you off.  To get no html files  precodefind . -type f   ! -name '*.html' /code/pre  -name loks at the file part of the path for the whole path you need --wholename so  precodefind . -type f  ! -wholename '*/.git/*' ! -name '*.html' /code/pre  So only get files (-type) ignore the .git directory - note you need to enter the directory delimiters and the . or else you remove files like .gitconfig which are valid ones   OK this looks at all file -prune might look at less but the speed probably does not matter it is better as in all code to get an understandable working thing first  <comment259145> Quick fix: `find . | grep -v '^\./\.git'` <comment259147> The examples in the linked question don't prune or have -o or have \( so where did they come from - + *git* will match more than you want <comment259149> Agreed the accepted answer is not correct but use -wholename as per comments <comment259150> I got this from the second answer but I haven't placed them in right order I reckon.