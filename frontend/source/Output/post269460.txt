Recreate an alias with the same name and timestamp programmatically <body> h2Let us develop a utility to batch process legacy alias files./h2  h3Implemented as:/h3  ul liFinder File Service,/li liAutomator Workflow,/li liApplescript,/li liShellscript,/li lior whatever else that those the job./li /ul  h3Per each file in the batch this should be done:/h3  ol liIs the file an alias? (avoid other file types supplied by user error)/li liGet its filepath, filename, timestamp, label, tags./li liDelete it./li liRecreate it at the original filepath with the determined filename, timestamp, label, tags./li /ol  strongFollowup:/strong I filed a bug report to Apple, see below. Maybe Apple comes up with a solution. But I think some skilled AppleScripter(s) here can come up with a solution within minutes. Would be cool, if we find a solution here, and offer it to the whole macOS community.  hr  h1Bug report to Apple, filed on 2017-01-10/h1  Finder / HFS+ / filesystem — Refreshing legacy alias files to reduced filesize with batch process  A LONG LASTING BUG WAS LUCKILY FIXED:  In macOS Sierra the file size of aliases was finally reduced dramatically, from multiple megabytes in Mac OS X 10.7-10.11 systems down to only about 1 KB now in macOS Sierra 10.12. (Simply by not including the icon resources, which where mostly anyhow redundant being just a copy of a generic file type icon.)  PLEASE OFFER A FIX FOR THE BUG LEGACY AS WELL:  Depending on how heavily aliases are used on a system, there is the potential to save multiple GBs for some users.  I propose to Apple to offer a batch process for reducing the file size of legacy alias files. With an option to preserve the aliases' original timestamps, as they may have critical information value in some use cases.  Then you could do a simple Finder search, select the files of your liking (all or only certain) and then drag'n'drop them onto the batch process app or file service or Finder menu command.  CURRENT WORKAROUND WITH QUICKLOOK ONLY WORKS PARTIALLY  ol liFinder  New window (cmd-N)  Search (cmd-F)/li liThe search criteria show up, set them as follows:  ul li"Kind" is "Other", type in "Alias"/li liYou get a Finder search result window. /li /ul/li liView as list and sort by size.  ul liThen you have the top file size culprits on top./li /ul/li liIf you QuickLook a file via SPACE-key then no alias recreation occurs./li liIssue "File  Show Original" (cmd-R) on the selected file./li liIn the newly opened window, QuickLook the alias files with SPACE./li /ol  Then certain alias files get recreated. But not all!  Working, but only sometimes: PDF, JPEG, ZIP if BetterZip QuickLook plugin is the handler.  Out of these not all aliases get refreshed.  It seems to also depend on the file's overall or individual associated application (Finder "Open with" setting, Uniform Type Identifier (UTI), TYPE/CREATOR resource fork) and which QuickLook plugin handles the file type.  An recreated file has a dramatically reduced file size (bout 1 KB). Sadly it looses its original timestamp, but gets the current one (equivalent to /usr/bin/touch). I would love to keep the alias timestamp preserved.  <answer270611> h2Create a Service with Automator — Tested on macOS Sierra/h2  ol liOpen code/Applications/Automator.app/code/li liFile  New (cmd-N)  ul liChoose a type of document: "Service"./li /ul/li liService receives selected: "files or folders" in "Finder"./li liIn the left pane navigate to: Actions  Library  Utilities  Run AppleScript.  ul liDrag the "Run AppleScript" item from the library pane on the left to the source code pane on the right./li /ul/li liClear the prefilled content entirely. Paste in the following source code:/li /ol  h3AppleScript Source Code/h3  precodeuse framework "Foundation" -- Cocoa-AppleScript  on run {input, parameters}     repeat with thisItem in input         tell application "Finder"             if kind of thisItem is "Alias" then -- alias file only                 set parentPath to container of thisItem -- get the folder of this alias                 set {label index:l, comment:c, modification date:m, creation date:cr, original item:origPath, name:n} to properties of (item thisItem)                 if origPath is not missing value then -- not a breaking alias                     set tagsList to (my tagsFor:(POSIX path of thisItem)) -- get the tags of the alias file (call an AppleScriptObjC handler)                     delete thisItem -- move this alias to the trash                      -- ** create an alias file **                     set newAliasFile to make new alias at parentPath to origPath with properties {comment:c, creation date:cr, original item:origPath, name:n}                     -- ** set the label ** (0 = no label)                     if l is not 0 then set label index of newAliasFile to l                     -- ** set  the tags ** ({} = no tag)                      if tagsList is not {} then (my setTags:tagsList forPath:(POSIX path of (newAliasFile as string))) -- call an AppleScriptObjC handler                     -- ** change the modification date **                     set modification date of newAliasFile to m                 end if             end if         end tell     end repeat end run  on tagsFor:posixPath -- Cocoa-AppleScript handler      set fileURL to current application's |NSURL|'s fileURLWithPath:posixPath     set {theResult, theTags} to fileURL's getResourceValue:(reference) forKey:(current application's NSURLTagNamesKey) |error|:(missing value)     if theTags = missing value then return {} -- no tags     return theTags as list end tagsFor:  on setTags:tagList forPath:posixPath -- Cocoa-AppleScript handler     set fileURL to current application's |NSURL|'s fileURLWithPath:posixPath     fileURL's setResourceValue:tagList forKey:(current application's NSURLTagNamesKey) |error|:(missing value) end setTags:forPath: /code/pre  ol start="6" liFile  Save (cmd-S): Give it a name like "Alias recreation"./li liOpen System Preferences  Keyboard  Shortcuts  Services  Files and folders  Alias recreation, or however else you named it.  ul liAssign it a shortcut. As cmd-L is used to create an alias (L as in "link"), I assigned it cmd-alt-ctrl-L./li /ul/li liSelect one or multiple legacy alias files, and process them.  ul liWith your shortcut cmd-alt-ctrl-L./li lior through the main menu: Finder  Services  Files and folders  Alias recreation./li /ul/li /ol  strongNote/strong: The batch process is very transparent and mistakes can be corrected. The deleted aliases are moved to your Trash bin. Should you have made a mistake choose the trashed alias file in question and run Finder  Put back (cmd-backspace). This will put the file back in its previous parent folder and open the parent folder in a new window. Then you have the recreated alias and the original alias with the suffix " copy" side by side and can make corrections if necessary.  <comment340402> • A wonderful solidly working solution! Thank you!  • I tested it thoroughly: The processed aliases get successfully recreated with the required properties intact, being: timestamp, multiple labels, multiple tags. Multiple aliases as input worked well. Wrong file types (≠alias) in the input selection were not processed.  • To make this  solution as accessible as possible to many users, I wrote a very explicit step-by-step HowTo, and will edit your answer accordingly. If you feel not ok with this, please tell me, and I put it into a separate answer.