Is there a way to access a USB-serial port by the device id, not by the tty.* port? <body> On linux USB-serial devices create two aliases to its serial port:br code/dev/tty*/code and code/dev/serial/by-id/&lt;my_usb_device_id&gt;/code  Is there a way on OSX to identify a serial port by the USB device id? Both in System Profiler and using codeioreg -p IOUSB/code I can see the id, but that doesn't get me any closer to connecting using that id.  We're developing several pieces of hardware and it's a pain to test them as every time I connect a different device I need to verify the serial port configuration of the testing software, because on OSX the codetty.*/code port name depends on the port on my computer, not on the device. The guys running linux are happily using the code/dev/serial/by-id/&lt;my_usb_device_id&gt;/code port to automatically distinguish between the different devices.  <answer271035> For an FTDI bridge I have, the serial number already appears in the device name: it appears as code/dev/serial/by-id/usb-FTDI_FT231X_USB_UART_DA00AG57-if00-port0/code (corresponding to some code/dev/ttyUSBx/code) on Linux, and as code/dev/cu.usbserial-DA00AG57/code and code/dev/tty.usbserial-DA00AG57/code on macOS. (See https://stackoverflow.com/a/8632603/4896937 for difference between codetty.*/code and codecu.*/code.)  Unfortunately, for Prolific bridge I have, an issue like yours still applies: a device appearing as code/dev/serial/by-id/usb-Prolific_Technology_Inc._USB-Serial_Controller-if00-port0/code (which doesn't contain a serial number) is simply code/dev/cu.usbserial/code and code/dev/tty.usbserial/code on macOS (not even System Profiler gives a serial number for it). Who knows what would happen if I had a second one plugged in.  Maybe there is a more general answer out there that is vendor-independent, but be warned some devices might not report a serial number.  <comment341723> For me they appear as /dev/tty.usbmodemFD121 and /dev/tty.usbmodemFA131. The number depends directly on the USB port on my laptop. System info shows the correct id for the devices set by their firmware. Both serials are created by STM32F2/F4 processors.