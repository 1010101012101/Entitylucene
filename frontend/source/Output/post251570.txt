Using gpg in Launch Agent <body> Is it possible to sign commits without typing passphrase from a script run via Launch Agent? If so, how should I configure codegpg-agent/code in order to make it working? Note that I don't type passphrase when I commit from shell, so that part is working.  Now that the question is asked, let me share more background on my problem.  Whenever I run codegpg/code in a script that is being execute via Launch Agent I see following error in logs.  precodegpg: cannot open `/dev/tty': Device not configured error: gpg failed to sign the data fatal: failed to write commit object /code/pre  In that script I am trying to write commit with signing. Script is located in code$HOME/.local/bin/code. My agent codeplist/code file is following.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt;   &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.example.signed_commit&lt;/string&gt;     &lt;key&gt;EnvironmentVariables&lt;/key&gt;     &lt;dict&gt;       &lt;key&gt;PATH&lt;/key&gt;       &lt;string&gt;/Users/d12frosted/.local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&lt;/string&gt;     &lt;/dict&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;       &lt;string&gt;signed_commit&lt;/string&gt;       &lt;string&gt;-o&lt;/string&gt;       &lt;string&gt;/unrelated/arguments/&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;StartInterval&lt;/key&gt;     &lt;integer&gt;21600&lt;/integer&gt;     &lt;key&gt;StandardOutPath&lt;/key&gt;     &lt;string&gt;/Users/d12frosted/Library/Logs/com.example.signed_commit.stdout&lt;/string&gt;     &lt;key&gt;StandardErrorPath&lt;/key&gt;     &lt;string&gt;/Users/d12frosted/Library/Logs/com.example.signed_commit.stderr&lt;/string&gt;   &lt;/dict&gt; &lt;/plist&gt; /code/pre  I am starting this agent manually via following command (making sure that agent is loaded before starting it).  precode$ launchctl start com.example.signed_commit /code/pre  Script is pretty simple.  precode#!/usr/bin/env bash if [[ ! -d $HOME/test_repo ]]; then    mkdir -p "$HOME/test_repo"    cd "$HOME/test_repo"    git init    # setup signing (omitted, due to privacy) fi cd "$HOME/test_repo" git commit --allow-empty -m "snapshot $(date '+%d/%m/%y %H:%M:%S')" /code/pre  As you can see, for testing purposes I am creating test repository where I create empty commits. But it always fails with error I've posted in the beginning of this post.  Relevant configurations for codegpg/code.  precode# $HOME/.gnupg/gpg.conf require-cross-certification keyserver hkp://keys.gnupg.net use-agent  # $HOME/.gnupg/gpg-agent.conf pinentry-program /usr/local/bin/pinentry-mac /code/pre  When I run codegpg --version/code in that script I see following in the agent output.  precodegpg (GnuPG) 2.0.30 libgcrypt 1.7.3 Copyright (C) 2015 Free Software Foundation, Inc. License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt; This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law.  Home: ~/.gnupg Supported algorithms: Pubkey: RSA, RSA, RSA, ELG, DSA Cipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,         CAMELLIA128, CAMELLIA192, CAMELLIA256 Hash: MD5, SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224 Compression: Uncompressed, ZIP, ZLIB, BZIP2 /code/pre  Which is identical to what I see when running codegpg --version/code just in my shell.  <comment312781> How did you install gpg? With `brew`? <comment312782> Yes. The same about `pinentry-mac`.