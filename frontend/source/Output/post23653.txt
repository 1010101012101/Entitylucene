Can I make a symlink (to a .app folder) in Applications directory show up in spotlight? <body> I used brew to install MacVim and it put it in code/usr/local/Cellar/macvim/7.3-61/MacVim.app/code  I would like to be able to go to spotlight and type MacVim to launch the app. I tried creating a symlink in the Applications directory to code/usr/local/Cellar/macvim/7.3-61/MacVim.app/code. But that doesn't seem to show up in Spotlight. I set the executable bits on the symlink. open MacVim.app from the command line works. How can I get MacVim to show up in Spotlight search?  <answer32495> In the Finder, press kbdCommand/kbdkbdShift/kbdkbdG/kbd for strongGo to the Folder/strong. Type code/usr/local/Cellar/macvim/7.3-61//code and press kbdreturn/kbd. Select the file (actually a folder) strongMacVim.app/strong Press kbdCommand/kbdkbdL/kbd for strongMake Alias/strong. Depending on permissions, you may be prompted for an administrator password here.  Press kbdCommand/kbdkbdN/kbd to create a strongNew Finder Window/strong. Press kbdCommand/kbdkbdShift/kbdkbdA/kbd to go to the strongApplications/strong folder in that window.  Drag the newly created alias from the window in which it was created to the window containing the strongApplications/strong folder. Rename the alias so it no longer ends in " alias".  <answer36413> Sounds like you could do the following from the Terminal.  code$ ln -s /usr/local/Cellar/macvim/7.3-61/MacVim.app /Applications/code  You might have to use codesudo/code to put the symlink in the /Applications directory.  <answer53872> The way I've solved this is using a shell script and appify.  For example make a script with a text editor that contains  precode#!/bin/bash  /usr/local/Cellar/macvim/7.3-61/MacVim.app /code/pre  Then get appify - http://git.abackstrom.com/appify.git   Run appify on the shell script and it will make an application you can put in /Applications that will invoke MacVim. This will show up in spotlight.  <answer78833> After trying several of the suggested solutions, the best thing that worked for me was to copy the app from the Homebrew Cellar to the applications directory:   cp -r /usr/local/Cellar/macvim/7.3-66/MacVim.app /Applications/  Spotlight found it instantly.  <answer152877> To keep things nice and scriptable, you can use codeosascript/code to run a little AppleScript and create your alias automatically.   precodeosascript &lt;&lt;END    set macvim to POSIX file "/usr/local/Cellar/macvim/7.3-61/MacVim.app"    set applications_folder to POSIX file "/Applications"    tell application "Finder"     make alias file to macvim at applications_folder   end tell  END /code/pre  <answer199482> For those who use homebrew to install macvim (totally recommended)  Run the following after install  precodebrew linkapps macvim /code/pre  <answer245793> The alias method did not work for me. A better option is to use Automator to create an Application that runs a shell script:img src="https://i.stack.imgur.com/Fifld.png" alt="enter image description here"  Also, linking directly to the MacVim.app in the Cellar directory like some of the other answers suggest binds you to a specific version. If brew upgrades MacVim, your link will still point to the old version. Rather, you should use:  precodeopen /usr/local/opt/macvim/MacVim.app $@ /code/pre  as this location is automatically symlinked by brew to the most recent version.  This worked great for me. I save the Automator file in iCloud so I can conveniently add the app on other machines.  <answer265339> ol liSymbolic links (ln -s) did not work well for me, it did not appear that Spotlight would see this as an application.  /li liMaking a finder alias (as described by Daniel) worked better regarding launching from Finder, but did not when using Finder strongOpen With.../strong, the alias would remain grayed out./li /ol  In particular, like mentioned in other comments here, I also wanted MacVim to be available when using Open With... from Finder, but with either the symbolic link or Finder alias, MacVim would remain grayed out.  What worked for me was the simple Automator script (as zim described), with the "Run Shell Script" command.  The only thing I had to do differently than what zim showed in his answer is adding the strong-a/strong parameter to strongopen/strong:  precodeopen -a /usr/local/opt/macvim/MacVim.app $@ /code/pre  Without the -a, when used with "Open With...", MacVim would launch, but also the parameter filename would open with whatever its default application was -- so I would get both MacVim with empty document AND TextEdit with the file I had selected to open (rather than MacVim with my selected file opened).  The automator script can be copied or aliased to the Applications folder.  I also changed my automator script's icon to MacVim's icon by copying &amp; pasting the icon from the Finder's Get Info popups.  <answer276030> The simple act of installing homebrew allowed me to create a symlink to Sublime Text.  Perhaps you are needing more.  Install homebrew here if you have macOS  code/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"/code  and then from command line (assuming ST is installed)  ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl  <comment26454> Spotlight doesen't look inside hidden folders and apparently doesen't work for aliases either. Do you use spotlight to launch apps? If so I must recomend http://www.alfredapp.com/.  I use it and its great. Faster than spotlight! <comment26472> Thanks. I installed alfred and added the MacVim folder to the search scope. Im in much better shape. <comment26476> OK, I figured it out. If I make an alias to /usr/local/Cellar/macvim/7.3-61/MacVim.app, Spotlight will index it. For more on aliases, check out http://www.switchingtomac.com/tutorials/creating-aliases-in-mac-os-x/ <comment26573> So it seems Spotlight does index aliases! Haha sweet. Anyhow I'm glad you liked Alfred and its great you figured how to add things to spotlight too. <comment28112> I had this issue too. The [MacVim formula](https://github.com/mxcl/homebrew/blob/a96eaab4b0d3edf486f316781151d804abb81912/Library/Formula/macvim.rb) prescribes a symlink after installing in the Cellar, and I didn't realize that was different from an alias. With the alias, now Spotlight and Alfred both work. <comment31601> Could you provide more detail on how to create the alias? Using Lion, I can't seem to point the finder at /usr/local/Cellar at all, and can't figure out how to browse the file system. <comment33093> @Mojo this warrants its own question, I think :) <comment35573> Welcome to Ask Different! If you found a solution, please post it as an answer so it's easier for others with the same problem to see what helped. Please take a look at the [FAQs](http://apple.stackexchange.com/faq) for more info. Thanks. <comment38184> I followed your steps and MacVim shows up in spotlight. However when trying to launch MacVim from spotlight, I get an error message "Item MacVim is used by OS X and can't be opened". <comment38186> Hmmm. How do you ordinarily launch MacVim when not using Spotlight? Do you get an error message then? <comment41441> Maybe spotlight can't launch it because it doesn't have the permissions to access /usr/local/ or something. <comment42226> Spotlight treats symlinks to "system files" as system files, so they aren't listed in normal results. Aliases are though. <comment70252> Any way to create an OS X alias programmatically in Bash? <comment72339> To clarify @m_sharps's comment, it appears that Spotlight will index aliases, but not symbolic links (`ln -s`). <comment178043> I got this to work by first changing the permissions on /usr/local/Cellar with 'sudo chflags nohidden /usr/local/Cellar' (I actually did this for /usr /usr/local and /usr/local/Cellar). Then I used Finder to create an alias for MacVim (the one in Cellar). Then I moved the alias to my Applications folder. Spotlight now finds MacVim (look at the bottom of its list until you open it once). <comment179978> @MathiasBynens - see my answer, a little AppleScript will do it. <comment179979> If you're going to do it this way, just create an Automator app to run the script. <comment189030> This actually worked, unlike many osascript one-liners I've found in various places. <comment189041> I would recommend actually moving the MacVim app to Applications.  Or installing it via brew cask.  Aliases do index in spotlight, but they are ranked annoyingly low. <comment189149> Thanks.  I have noticed that it's hard to get Spotlight to choose my MacVim alias. <comment197785> Yes @Slomojo, that proved to be the easiest approach. I created a shellscript that starts the App (in my case libreoffice) and put it in /usr/bin. Then I used automator to just invoke the script and saved the Automator created App in my Applications folder with the name I wanted to use in Spotlight. Absurd. <comment209138> I also needed to do additional permission changes, by default, it appears the symlink was created without any execute permissions at all, adding those made the symlink appear in spotlight. Oddly enough, aliases I created and then renamed to something that didn't include the word "alias" at the end also weren't picked up by spotlight. Putting "alias" back at the end of the symlink name fixed it- <comment270551> Your solution worked for me when I installed kdiff3 using 'brew install' from the terminal and followed your instructions. It's too bad that it didn't work at first place when I did everything from the command line instead from the GUI. <comment314127> Unfortunately, these don't show up in Spotlight. <comment314130> This seems like the most robust solution. What is the `$@` for? <comment314133> This should work for now but break when brew updates MacVim. [zim's way](http://apple.stackexchange.com/a/245793/201023) should persist through updates because it goes through homebrew's symlink to the app. <comment314143> The $@ represents the arguments passed to the script. In this case, any args passed to the script are being forwarded to the MacVim.app (i.e. file names, options, etc.) See [this answer](http://stackoverflow.com/a/5163260/468310) about special shell variables. <comment314145> Ah, thanks. It's really hard to google `$@`. Will that actually do anything in this case, though, since the script is just being run by selecting the app? <comment314217> Yeah, it's helpful, for example, if you use the `Open with` command on a file in Finder. The app will be started with the file path as the first argument. Or if you set MacVim as the default app for a file type, .txt for example - then double clicking a .txt file will start MacVim with the selected file as the first arg. <comment330610> Worked for me with emacs.app from brew. Thanks! <comment333231> but you can make an alias to the MacVim link in /Applications directory, the alias is picked up by Spotlight.