iOS jailbroken: native storage on an external drive? <body> Since I have a faster internet connection now, and I like watching screencasts, I've started to explore YouTube downloader apps, but there's a lot of apps that I would like to use by downloading data overnight.  There are several iOS Wi-Fi hard drives on the market now, but of course each one provides access to the drive only through its own limited app.  So, using a jailbroken iOS device, how could I take the native filesystem (or the directory where all apps live and store their data) and extend it to an external (networked) drive, so that my apps would think I just happen to have a 2TB iPad?  <answer105694> Theoretically? strongYes./strongbr/ Practically? strongNo./strong  You would first need to build codenfs/code for iOS. Then, you would need to make the YouTube downloader application save its movies onto the network drive. As far as I can tell, nobody has worked on codenfs/code for iOS, so unless you know a lot about programming for iphoneos-arm, you might just be out of luck. You wouldn't be able to extend the user partition onto the network drive, though, so none of this would be transparent to the apps. You could symlink the Documents folder for each app that you'd like to have access to your network drive, which would give you the same effect (assuming you can get your drive mounted).  <answer111243> It seems like it's possible. I've ssh'd into my iPad and mount_nfs exists, although it doesn't yet work for me.  Will report back if found anything.  <comment124038> Theoretically? Yes. Practically? No. You would first need to build `nfs` for iOS. Then, you would need to make the YouTube downloader application save its movies onto the network drive. As far as I can tell, nobody has worked on `nfs` for iOS. You wouldn't be able to extend the user partition onto the network drive, though, so none of this would be transparent to the apps. You could symlink them, though. Actually, you could just symlink the Documents folder for each app that you'd like to have access to your network drive. Brilliant question, by the way. <comment124253> I think my comment here should suffice as a complete answer, so I'm going to post it.