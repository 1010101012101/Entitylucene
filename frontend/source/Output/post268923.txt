Transparent Firewall using macOS pf <body> I'm trying to setup a transparent firewall with a Mac mini running macOS Sierra. Basically I'm trying to do this (just with macOS): A Transparent Firewall Using OpenBSD  This is my network setup:  precodeInternet &lt;-ethernet-&gt; Router &lt;-ethernet-&gt;en0 Mac mini en4&lt;-ethernet-&gt; AppleTV /code/pre  The Router also connects to several other devices via Wifi.  Now here's what I did on the Mac mini to make it a transparent firewall:  ol liI setup the bridge via these commands:  precodesudo ifconfig bridge1 create sudo ifconfig bridge1 addm en0 addm en4 sudo ifconfig bridge1 up /code/pre/li /ol  From the AppleTV's perspective it's now like the Mac mini doesn't exist.  ol start="2" liI setup pf by adding this to code/etc/pf.conf/code:  precodeanchor "org.user" load anchor "org.user" from "/etc/pf.anchors/org.user" /code/pre  and created code/etc/pf.anchors/org.user/code with this content:  precode# skip lo0 set skip on lo0  # options set block-policy drop  # rules block on en4 all /code/pre  Then I "restarted" pf with the new rules:  precodesudo pfctl -f /etc/pf.conf sudo pfctl -e /code/pre/li /ol  Now I would expect no traffic from AppleTV to go out into the network. But AppleTV still works like I never setup those pf rules.  What am I missing?  PS: Here's the ifconfig output:  precodeMacMini:~ Daniel$ ifconfig lo0: flags=8049&lt;UP,LOOPBACK,RUNNING,MULTICAST&gt; mtu 16384     options=1203&lt;RXCSUM,TXCSUM,TXSTATUS,SW_TIMESTAMP&gt;     inet 127.0.0.1 netmask 0xff000000      inet6 ::1 prefixlen 128      inet6 fe80::1%lo0 prefixlen 64 scopeid 0x1      nd6 options=201&lt;PERFORMNUD,DAD&gt; gif0: flags=8010&lt;POINTOPOINT,MULTICAST&gt; mtu 1280 stf0: flags=0&lt;&gt; mtu 1280 en0: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500     options=10b&lt;RXCSUM,TXCSUM,VLAN_HWTAGGING,AV&gt;     ether a8:20:66:1e:9a:62      inet6 fe80::1cca:5c4b:64a7:7350%en0 prefixlen 64 secured scopeid 0x4      inet6 2a02:8070:a89:8f00:181c:12bc:a98c:7229 prefixlen 64 autoconf secured      inet6 2a02:8070:a89:8f00:d489:89da:9083:17d8 prefixlen 64 autoconf temporary      inet6 2a02:8070:a89:8f00::9 prefixlen 64 dynamic      inet 192.168.0.137 netmask 0xffffff00 broadcast 192.168.0.255     nd6 options=201&lt;PERFORMNUD,DAD&gt;     media: autoselect (1000baseT &lt;full-duplex,flow-control,energy-efficient-ethernet&gt;)     status: active en4: flags=8963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1500     options=b&lt;RXCSUM,TXCSUM,VLAN_HWTAGGING&gt;     ether 00:23:56:1c:82:26      inet6 fe80::223:56ff:fe1c:8226%en4 prefixlen 64 scopeid 0x5      nd6 options=201&lt;PERFORMNUD,DAD&gt;     media: autoselect (100baseTX &lt;full-duplex&gt;)     status: active en1: flags=8823&lt;UP,BROADCAST,SMART,SIMPLEX,MULTICAST&gt; mtu 1500     ether 20:c9:d0:93:5e:f1      nd6 options=201&lt;PERFORMNUD,DAD&gt;     media: autoselect (&lt;unknown type&gt;)     status: inactive fw0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 4078     lladdr 00:3e:e1:ff:fe:b3:04:08      nd6 options=201&lt;PERFORMNUD,DAD&gt;     media: autoselect &lt;full-duplex&gt;     status: inactive en3: flags=963&lt;UP,BROADCAST,SMART,RUNNING,PROMISC,SIMPLEX&gt; mtu 1500     options=60&lt;TSO4,TSO6&gt;     ether 32:00:1b:30:40:80      media: autoselect &lt;full-duplex&gt;     status: inactive bridge0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500     options=63&lt;RXCSUM,TXCSUM,TSO4,TSO6&gt;     ether 32:00:1b:30:40:80      Configuration:         id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0         maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200         root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0         ipfilter disabled flags 0x2     member: en3 flags=3&lt;LEARNING,DISCOVER&gt;             ifmaxaddr 0 port 8 priority 0 path cost 0     nd6 options=201&lt;PERFORMNUD,DAD&gt;     media: &lt;unknown type&gt;     status: inactive p2p0: flags=8802&lt;BROADCAST,SIMPLEX,MULTICAST&gt; mtu 2304     ether 02:c9:d0:93:5e:f1      media: autoselect     status: inactive awdl0: flags=8902&lt;BROADCAST,PROMISC,SIMPLEX,MULTICAST&gt; mtu 1484     ether 8e:36:65:e0:9a:1e      nd6 options=201&lt;PERFORMNUD,DAD&gt;     media: autoselect     status: inactive utun0: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 2000     inet6 fe80::9a58:4bd5:9f77:f77a%utun0 prefixlen 64 scopeid 0xc      nd6 options=201&lt;PERFORMNUD,DAD&gt; utun1: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1380     inet6 fe80::1e34:cc36:613b:1ee6%utun1 prefixlen 64 scopeid 0xf      nd6 options=201&lt;PERFORMNUD,DAD&gt; ppp0: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1280     inet 10.0.1.16 --&gt; 1.0.0.1 netmask 0xffffff00  bridge1: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500     options=3&lt;RXCSUM,TXCSUM&gt;     ether aa:20:66:e1:cb:01      Configuration:         id 0:0:0:0:0:0 priority 0 hellotime 0 fwddelay 0         maxage 0 holdcnt 0 proto stp maxaddr 100 timeout 1200         root id 0:0:0:0:0:0 priority 0 ifcost 0 port 0         ipfilter disabled flags 0x2     member: en0 flags=3&lt;LEARNING,DISCOVER&gt;             ifmaxaddr 0 port 4 priority 0 path cost 0     member: en4 flags=3&lt;LEARNING,DISCOVER&gt;             ifmaxaddr 0 port 5 priority 0 path cost 0     media: autoselect     status: active MacMini:~ Daniel$  /code/pre  <answer269113> I really doubt that you will get this to work with system tools. And though I'm not familiar with OpenBSD I also doubt that the linked example works without further mods with one exception: filtering by MAC addresses after enabling bridge packet tagging.  In OS X bridge packet tagging (i.e. codeifconfig bridge1 rule pass in on en4 src 00:17:f2:f8:1a:3d tag APPLETV/code) isn't possible though.  empf/em in OS X is a layer-3 packet filter. It relies on IP-addresses and doesn't really work with interface names or MAC-addresses. So using an interface name in a rule (e.g. codeblock on en4 all/code) is internally translated to codeblock on &lt;IP of en4&gt; all/code and in your case codeblock nothing/code because en4 has no IP-address.  Even after assigning an IP to en4 you wouldn't be able to block AppleTV traffic to the outside world because these IP-packets neither contain code&lt;IP of en4&gt;/code as source nor as destination address.  <comment337979> Thanks for the advice - `ifconfig` output was added. <comment337989> Which IPs/mask/gw did you assign to en0 and en4 **before** creating the bridge? <comment338019> Both were set to DHCP. En0 got an IP (192.168.0.137/255.255.255.0/192.168.0.1)) from the router. En4 got a self assigned IP (169.254.75.147/255.255.0.0/none). <comment338071> Makes sense to me so it looks like it's back to the drawing board. Do you have an idea how I can achieve what I want to do? http://apple.stackexchange.com/q/265486/215988 <comment338072> I basically want all traffic coming from the en4-network targeted to an internet location to be sent through a VPN. At the same time I want all local traffic between en0-NW and en4-NW to stay the same (as if en0 and en4 were bridged).