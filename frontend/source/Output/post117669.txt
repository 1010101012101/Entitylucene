64bit vs 32bit on mobile devices with 2gb ram - is there any sense? <body> Today I took part in an interesting discussion. Someone said that's great that Apple goes 64bit with their iPhone 5S. Of course I mentioned about no need for 64bits paired with 2 gigs of RAM, but then I started to wonder - is there anything good with 64bit in this case, except for benefits of "future compatibility"? Larger instructions? Any kind of optimalization?  <answer117670> No. Actually it hurts - as 64 bit programs are larger. And if you are so space constrained....  Likely a strategiy move for long term compatiblity assuming that the next generation will maybe have more than 4gb.  <answer117671> subI'm thinking I'll regret this answer... here goes:/sub  Yes, the "sense" is marketing. 64 bit is a fantastic keyword! Bigger, better, moar, and 99.7% of the iPhone buying public will think this.  Rules and values of big business:br 1- Marketing/brand imagebr 2- Marketing/brand imagebr 3- Accountingbr 4- Lawyersbr 5- Engineeringbr  I would have +1d the question because I almost always as a rule will +1 questions I answer; however:     is there anything good with 64bit in this case, except for benefits of   "future compatibility"   There is no future compatibility with mobile devices.  <answer117672> Since the iPhone doesn't use an x86 processor, almost everything you know about 64-bit versus 32-bit will not apply. For example, on x86 processors, more general purpose registers are available in 64-bit mode. This provides a performance boost in 64-bit mode. That doesn't apply to non-x86 processors.  64-bit operation tends to provide benefits to software that handles "bulk data". This generally includes things like encryption, compression, and image processing. Other types of programming don't significantly benefit because they seldom deal with values that occupy more than 32-bits. Also, more memory bandwidth is required by 64-bit code because all pointers are twice as large and this can cause some performance loss.  However, there is one big advantage of 64-bit code over 32-bit code -- virtual memory need not be treated as a scarce resource. This can have all kinds of benefits both for performance, ease of development, reliability, maintainability, and so on. For example, if you're manipulating a large database file, you can memory-map the entire file and access it just like an array. This can eliminate a lot of slow, complex, error-prone code to memory map sections of the file or alternate seeks with data operations.  Similarly, libraries can have fixed virtual addresses. This can improve code sharing and result in memory being used more effectively. It can minimize relocation, which can result in faster code startup.  To be honest, you would have to know a lot about the internals of how the device operates, both in software and in hardware, to usefully opine on whether a change from a 32-bit platform to a 64-bit platform will provide significant benefits.  <comment137448> By "future compatibility" i mean apps and perhaps no need to run them in 32bit mode when, let's say, iOS 10 and iPhone 8 goes public. I'm pretty newbe when it comes to architecture, sorry if I made any mistake.