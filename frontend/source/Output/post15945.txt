Application to notify user of active VNC connection <body> I want something more visual than Apple’s very subtle binoculars in the top right status menu when there is an active incoming VNC connection to the machine.  Preferably just a floating window notifying the user that there is an active VNC connection, and maybe the IP address. The best solution I have found is running the below command in the Terminal. But that doesn’t really solve my monitoring issue as I actively have to go and find the data.  precodenetstat -a | grep vnc | grep ESTABLISHED /code/pre  <answer15948> You always can make this script and run from a terminal  precode#!/bin/bash  alertme() {     say "Big brother watching" }  while : do       netstat -a | grep vnc | grep ESTABLISHED &amp;&amp; alertme   sleep 60 #wait 60 seconds done /code/pre  and you got a spoken warning. If you save the script with code.command/code extension, you can start it from the finder by doubleclick.  You can install growl from the Extras directory the growlnotify package. You can change the say in the alertme to:  precodegrowlnotify --appIcon TextEdit "Big brother"  -m 'watching' /code/pre  and got an notifying window.  Or, you can make Automator workflow with shell script &amp; popup-window alert. :)  Or, you can use the next:  precodesudo fs_usage -f network AppleVNCServer | grep -E '(accept|close)' /code/pre  instead of codenetstat | grep/code and will get exact connect and disconnect times, like next, but you need run it as admin... (sudo).  precode14:19:20  accept                                                                                             0.000024   AppleVNCServ 14:19:33  close                                                                                              0.000047   AppleVNCServ 14:27:01  accept                                                                                             0.000024   AppleVNCServ 14:28:19  close                                                                                              0.000055   AppleVNCServ 14:28:26  accept                                                                                             0.000018   AppleVNCServ 14:28:34  close                                                                                              0.000037   AppleVNCServ /code/pre  <answer15966> Since launchd starts and stops the screen sharing process, you can create a new launchd job that uses a strongKeepAlive/strong dictionary with an strongOtherJobEnabled/strong clause to tie your warning tool to the launchd label codecom.apple.ScreenSharing.server/code  When ScreenSharing starts, your job will also be started by launchd. (or vice versa if you prefer)  The system job you wish to key is code/System/Library/LaunchAgents/com.apple.ScreenSharing.plist/code  Your plist should go in code~/Library/LaunchAgents/code or code/Library/LaunchAgents/code  depending if you only want one user warned, or all users warned. I would also set strongLimitLoadToSessionType/strong to strongAqua/strong.  As mentioned by @jm666 - Growl can make some very pretty notifications with a lot of control and transparency, overlay etc..   codegrowlnotify --appIcon Screen\ Sharing "Screen Sharing" -m "is now active - click to dismiss" -s/code  You could get very fancy with a shell script to determine the source IP, date and time, log the connection or do all sorts of fun things since launchd has great support for shell scripts as well as full applications.  A quick and dirty Apple Script might be good for testing to be sure launchd is working and you can always polish the presentation later.  codeosascript -e 'tell application "System Events" to display alert "Incoming VNC session started" as warning buttons {"Cancel", "OK"} default button "OK" cancel button "Cancel" message "Screen Sharing is now active and someone can see and control this Mac until the menu bar icon of \"binoculars inside a monitor\" turns back into binoculars alone. "'/code  See these links for more info on launchd and AppleScript dialog for reference.  <answer16201> If you're satisfied with what is being reported by  precodenetstat -a | grep vnc | grep ESTABLISHED /code/pre  you could use the OS X Console utilily to read this file. Just send the logfile to /var/log/ or /Library/Logs and you'll see it in the Console log list.  You can also get the system to keep track of the size of the log and automatically turn it over and compress old versions after a certain size is reached.  Check out codenewsyslog/code if you're interested in that.  <comment17700> Although I realize now you want something more conspicuous than leaving either the terminal or Console utility open...