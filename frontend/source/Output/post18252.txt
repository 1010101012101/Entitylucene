What are the implications of how versions are stored? <body> I haven't found good data about how the versions feature is implemented.  As I see it there are three ways it could be implemented:  ol liThe separate versions are all in one file (possibly as resource forks)/li liThe version information is part of the filesystem/li liThe version information is kept in a set of files and a library is need to put them together into one file/li /ol  I want to know because I am worried about what will happen when you send a copy of a file to a third party.  Will the third party be able to see the history of the file (bad in some cases, desirable in others)?  What if the third party is using an earlier version of OS X, or a different OS completely?  <answer18258> You should read the big Siracusa's Lion review in Ars Technica.  The gist of it is, no, every time another program tries to access the file (e.g. you're trying to send it in Mail, upload it in safari) what the other program will get is the current version you're looking at. Nothing else.  See more at this particular section.  <comment19933> The API for accessing versions should be available here once the documentation set for Lion is published http://developer.apple.com/library/mac/search/?q=version (paid developers have this information from the beta documentation) <comment19937> Was going to link that review. It has *everything* in it. :-D <comment19942> Funny, Siracusa's review also immediately jumped to my mind when I thought "I've read that somewhere" :) <comment19943> Yeah, I read that article and it seems to point to a variant of version 3 where the file is monitored for changes and the differences are stored in a database, but how could a system like this handle copying or moving a file?  I have a feeling something more must be happening. <comment21548> Basically when someone asked to copy that file, the database will say "hey this copy is already 5 minute old, let me get a new one for you , here it is".