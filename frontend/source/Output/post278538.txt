Speed up AppleScript <body> I have some very simple applescript's that I run frequently and they seem to sometimes take less then second and sometimes like 2.  Is there an alternative that would be faster?  My guess is no.  precodetell application "System Events"     set frontmostProcess to first process where it is frontmost     delay 0.01     key code 121 end tell /code/pre  <answer278544> As I mentioned in my comment, what you're trying to do is a system wide event that you want activated by a keyboard shortcut. These factors combine to reduce the overall response time.   To help reduce the response time, you could try using a different script to achieve the same thing and test that for a while to see if it runs more efficiently.   Your current Apple Script (based on what you've linked to in your comment to me) is:  precodetell application "System Events"     set frontmostProcess to first process where it is frontmost     delay 0.01     key code 121 end tell /code/pre  Basically the above is designed to have the frontmost app to do a Page Down (key code 121) after a delay of 0.01.  However, you could try this one line code instead:  precodetell application "System Events" to keystroke (key code 121) /code/pre  This emshould/em achieve the same outcome and be more efficient. You could test it for a while and see if that's what you find. Of course, to page up you would just change the key code from 121 to 116.  However, as I mentioned previously, the fact you need to activate this via a keyboard shortcut will add to the time it takes for the whole thing to run. That is, you need a keyboard shortcut to be registered that then runs an Automator Service that in turn runs the script, so this isn't going to be as efficient as say just using the built-in keyboard shortcut for Page Up and Page Down.  Regardless, you emmay/em find that if the script is more efficient that it reduces the response time enough to satisfy you.  <comment350529> You'd really need to provide more details about your scripts. Since you're talking about multiple scripts it's not practical to include the actual code, but perhaps you could provide a brief description of what they each do? But generally _less then a second and sometimes 2_ seems okay to me. <comment350530> @Monomeeth This is the script http://apple.stackexchange.com/questions/173298/dock-icon-that-activates-pagedown except I activate using the function keys which are assigned to different PgDn, PgUp, etc...  If this was native objective c code it would hardly take this long which makes we wonder why it takes so long. <comment350532> Ok, so how have you assigned the keyboard shortcut to the script? I'm guessing you used Automator to create a Service that runs your AppleScript, and then used System Preferences to assign a keyboard shortcut to the Service - is that right? Also, have you noticed any sort of pattern in the time it takes to run the script (e.g. always slower after initial bootup, etc) or is it totally random? <comment350534> @Monomeeth you are correct in how I did it.  No no pattern.  I'm thinking about contacting a developer and getting an objective c program down. <comment350535> Well, what you're trying to do is a system wide event rather than just within a specific app, **and** you want it to be activated by a keyboard shortcut, so these factors probably combine to reduce the response time. One thing you could try is using a different applescript to achieve the same thing and test that for a while to see if it runs more efficiently. However, you need to remember that because of the keyboard shortcut allocation, that adds to the response time because there's extra steps before the script even runs (Shortcut  Service  Script). <comment350536> @Monomeeth I'm all ears.  I'm happy to test out any ideas you might have. <comment350539> I think this helps.  Is there any evidence that JSX or whatever the new interface is called is faster?  I have altered the title to reflect the speeding up of a specific applescript. <comment350547> You should probably try [Karabiner](https://pqrs.org/osx/karabiner/). The Sierra version is a stripped down version of the app and I'm not sure if it would let you do exactly what you want. The prior versions definitely would. <comment350631> @joonas yes sierra is not really supported at this point.  If you know how to get it to work in sierra i would be interested to know. <comment350636> There was a thread in Karabiner's github issues about it not working on sierra, and as far as I understood, the changes to something keyboard related in Sierra was so major that it required a  rewrite of Karabiner. What I personally did was go back to El Capitan. In your case there may be some hope left in other applications. I don't know if it's super fast, but there is a built in way to simulate key presses in [Alfred 3](https://www.alfredapp.com/). I can check later. <comment350697> Actually... first, incase you don't know, I think I should point out that there are shortcuts for keys like `Page up` and `Page down` and other keys you might find in a full size keyboard. [List of shortcuts](https://support.apple.com/en-ie/HT201236). I did test Aflred... and yea, you can trigger [`Key Combo`](https://www.alfredapp.com/help/workflows/outputs/dispatch-key-combo/)'s in Alfred 3 and it seemed to work just fine and trigger quickly, as long as I set the Hotkey `Trigger behaviour` to `Pass through modifier keys.`