Listing RealNames of all the users of an Open Directory group in MAC OS X <body> I was looking an older post (https://superuser.com/questions/279891/list-all-members-of-a-group-mac-os-x/395738#395738) and I tried the code that the user Arne Stenstr√∂m posted.  precodemembers () { dscl . -list /Users | while read user; do printf "$user "; dsmemberutil checkmembership -U "$user" -G "$*"; done | grep "is a member" | cut -d " " -f 1; }; /code/pre  It works perfectly but the output is a list of the users uid. I'm trying to get the RealNames too in order to have a list with the uid and the RealName at the output.  I tried infinite things and options but I'm not able to get it. I know that I can list the RealName of an user with this code:  precodedscl . -list /Users/username RealName /code/pre  I can't find the way to join both ideas to reach the wanted result.  Could you please help me?  Thank you very much.  <answer94547> There's probably something wrong with this or an easier way to do the same thing, but could you just run codedscl . -read /Search/Users/username RealName/code for all usernames?  codeg=admin; dscl . -list /Users | while read l; do printf %s "$l "; dsmemberutil checkmembership -U $l -G $g; done | grep 'is a member' | cut -d' ' -f1 | while read l; do echo "$l $(dscl . -read /Users/$l RealName | tail -n1 | cut -c2-)"; done/code  <answer94853> Thanks to Lauri's code and help I finally found the code that creates a CSV file with the UID and RealName of the users of a OD GROUP. It works perfectly for me :)  precodeg=nameofthegroup; dscl . -list /Users | while read l; do printf %s "$l "; dsmemberutil checkmembership -U $l -G $g; done | grep 'is a member' | cut -d' ' -f1 | while read l; do echo -e "$l \t $(dscl . -read /Users/$l RealName | tail -n1 | cut -c2-)"; done &gt; /path/file.csv /code/pre  Thank you very much Lauri for your help!  <comment110854> Hi Lauri, it worked perfectly! Thank you very much. One more question, is there any option to use a "tab" as delimitation between the uid and the RealName? <comment110860> Just replace `echo "$l $` with `echo $l$'\t'"$` or something.