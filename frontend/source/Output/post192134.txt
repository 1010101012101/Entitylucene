Why does my LaunchAgent return ROOT as the user? <body> I have a plist in the em/Library/LaunchAgent/em folder (this should run as "logged in user", if I understand correctly but strongit seems to be running as root/strong). It launches a .sh bash script.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt;     &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;com.user.uloginscript&lt;/string&gt;         &lt;key&gt;Program&lt;/key&gt;         &lt;string&gt;/Library/TestArea/netcall.sh&lt;/string&gt;         &lt;/dict&gt; &lt;/plist&gt; /code/pre  The script, for troubleshooting, contains the following lines:  precode#!/bin/bash curUser=$(id -u -n) osascript -e 'tell app "Finder" to display dialog "'$curUser'"'  /code/pre  OR  precode#!/bin/bash curUser=$(USER) osascript -e 'tell app "Finder" to display dialog "'$curUser'"'  /code/pre  The message box result is always:     root   This means that any scripting that I am trying to do has issues. Can anyone shed any light on why this is happening. The script runs on each login, runs before the user's desktop appears (the message appears on the login screen).  Curiously, if I use the following code:  precode#!/bin/bash osascript -e 'tell app "Finder" to display dialog "'$1'"'  /code/pre  It returns the correct username. It seems that the script is running as root, but has passed the parameter of the logged in user (note that the plist has no parameters).  Running Mavericks 10.9.5  <answer192245> From the launchd.plist man:      strongUserName &lt; string/strong        This optional key specifies the user to run the job as. This key is only applicable when launchd is        running as root.   So You can add this key to Your plist to specify the User.  <answer192260> A LoginHook was present. Loginhooks run as root and was calling the same file. The following command removed the hook:  precodesudo defaults delete com.apple.loginwindow LoginHook /code/pre  Thank you all for your time, and apologies for the wild goose chase. I emknew/em it wasn't correct.  <comment228428> What happens if it runs from: `/Users/$USER/Library/LaunchAgents/` <comment228431> Looks like you are feeding it to the system `launchd` using `sudo`. How do you load the agent? <comment228435> 1) I can't put in in the /Users/$USER area as it may not exist yet (network login). 2) LCC: I'm simply putting the plist into the /Library/LaunchAgent folder and it launches. <comment228578> Did you accidentally created another job in `/Library/LaunchDaemons` or `/System/Library/LaunchDaemons`. Please move the .plist to another location (away from `/Library/LaunchAgents`) and reboot your machine. Does the job start again? <comment228587> If I remove it from the LaunchAgents folder, it stops running (confirmed not loaded via launchctl). No obvious custom plist in any LaunchDaemons folder. Oddly, I changed the script to show me the value of $1 (1st parameter) which is the username of the logged in user. So it seems the script is running as root, but passing the username. This doesn't sound right. Mavericks 10.9.5 [updated question] <comment228592> Agents started from `/Library/LaunchAgent` *can't* run as "logged in user", because there may be none or several users logged in when the agent is started. <comment228598> Handy key to know for others, but wont work for me as it must run in the context of any user that logs in. <comment228601> patrix, if I read correctly https://goo.gl/ex8xyd suggests LaunchAgent should launch at login time as the user logging in (compared to the LaunchDaemon which should apparently run as root when computer starts). Almost all help forums suggest this too. <comment228610> How about using `su` inside the script? something like: `su $(ps aux | grep console | grep -v grep | awk '{ print $1 }') command_to_run` <comment228640> LCC, although you didn't mention LoginHooks (deprecated), I upvoted your earlier comment as it was technically being invoked by root in a similar method. <comment228649> @MrBeatnik Thanks for the link. The text points out that `launchd` for agents is started *when a user logs in*, I didn't see anything about *running as the logged in user*. <comment228657> @patrix, Handly details also here (http://launchd.info/), although not official.