Applescript date manipulation to get multiple formats <body> I need to get a date (month, day, year) in multiple different formats for each part. So, for January 2, 1999 I need:   ul lithe month as codeJanuary/code and codeJan/code and code01/code and code1/code /li lithe day as code2/code and code02/code/li lithe year as code1999/code and code99/code/li /ul  I'm currently doing it with this hodgepodge including a shell call to the codedate/code command as seen below. Clearly I do not know much about Applescript. Equally clearly, there has to be a more efficient (code-wise...performance isn't really an issue) way!  precodeset {year:y, month:m, day:d} to (current date) # aka 1999 - January - 2  set shortmonth to text 1 thru 3 of (month of (current date) as text) # aka Jan  set nummonth to do shell script "date '+%m'" # aka 01  set dd to text -2 thru -1 of ("00" &amp; (day of (current date))) # aka 02  set yy to text 3 thru 4 of (y as text) # aka 99 /code/pre  <answer144499> precode set theMonth to do shell script " date -v2d -v1m -v99y +%B%n%b%n%m%n%-m" /code/pre  - "January  Jan  01  1"  precodeset theDay to do shell script " date -v2d -v1m -v99y +%A%n%a%n%d%n%-d" /code/pre  - "Saturday  Sat  02  2"  precodeset theYear to do shell script " date -v2d -v1m -v99y +%Y%n%y" /code/pre  - "1999  99"  ul li-v  flag  adjusts the date item without changing the real date./li li-v2d   is 2nd day/li li-v1m  is first month/li li-v99y  is the year 1999  The date formatters are:/li li%n  new line/li li%B  full month name/li li%b  abbr month name/li li%m   month number with leading zero/li li%-m   month number without leading zero/li /ul  The other formatters follow the same way.  You can find more format info by simply googling.  If you want to do it all in applescript then I suggest you read through MacScripter / Dates &amp; Times in AppleScripts  ---------- update  I do think it is more efficient doing it with the shell script. But if I was going to try and do it in Applescript alone. I would use handlers to either pad or shorten the item. And the just pass the month, year and day to them to sort.  precodeset {year:y, month:m, day:d} to current date --set m to m + 1  set theYearLong to y as string set theYearShort to shorten(y)   set theMonthNumberZero to pad((m as integer) as string) set theMonthNumber to ((m as integer) as string) set theMonthLong to m as string set theMonthShort to shorten(m)   set theDayNumberZero to pad((d as integer) as string) set theDayNumber to ((d as integer) as string)    on pad(thisNumber)     if length of thisNumber = 1 then         return "0" &amp; thisNumber     else         return thisNumber     end if end pad   on shorten(thisItem)      if class of thisItem is integer then         return characters 3 thru -1 of (thisItem as text) as string     else         return characters 1 thru 3 of (thisItem as text) as string     end if end shorten /code/pre  There probably is a better way of doing it but this example may give you an idea..  <comment170282> Perhaps I should have been clearer: I would like to avoid the call to the shell. I have Googled and in fact read that article but remain unclear on how to do what I need to do more EFFICIENTLY in Applescript (or, in the case of the month as a number with leading zero where necessary, how to do it at all). <comment170305> @Chris I have slightly updated my answer.. <comment170310> Thank you very much! I will have to think about the shell thing...I instinctively avoid such things, but perhaps there's no good reason, particularly when Applescripting.