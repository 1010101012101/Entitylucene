Can I ensure keyboard commands don't get trapped by browser scripts? <body> Is it possible to tweak Safari to ensure command key combinations like kbd⌘/kbdkbdH/kbd or kbd⌘/kbdkbdL/kbd go to Safari as opposed to Safari's window contents?  This comes up for me most often on emthis/em site because the editor window (like where I'm typing right now) captures these keystrokes to make headings and links, but in general, it seems like a security hole to allow sites to capture command keystrokes.  Please note that I'm looking for a way to do this emwithout/em disabling JavaScript altogether.  For whatever it's worth, I'm running Mountain Lion.  <answer100058> The only surefire way to avoid having JavaScript trap keyboard input is to disable JavaScript in the browser.  I understand you'd like to leave JavaScript on, but it is designed to pass near total control of raw key presses to the browser and not to the app once the OS hands it input data. This means you would need a specific code solution for each implementation of keyboard filtering on potentially each individual page/site to ensure arbitrary key chords like Command H get sent to Safari instead of JavaScript.  See these links for an overview of how key presses are handled:  ul lihttp://www.w3.org/TR/DOM-Level-3-Events/#keys/li lihttp://unixpapa.com/js/key.html/li lihttp://unixpapa.com/js/testkey.html/li /ul  The last link is a tester to show you the raw events and you will see that even a brief ⌘Q can be trapped by JavaScript if the website developer wishes to do so.  <comment111806> You can use NinjaKit to disable the shortcuts used on Stack Exchange sites. See http://apple.stackexchange.com/questions/60587 and http://meta.stackexchange.com/questions/2980. <comment111823> That's awesome, @LauriRanta, and it helps with this specific problem, but as a general security hole, I'd love for a way to prevent malicious websites from trapping ⌘W or ⌘Q without simply disabling JavaScript. <comment113204> I added the security tag. Because to know which part of an application is reading (*listening to*) the keyboard is a basic security feature. If any keyboard *listener* change was displayed by the menu bar, many attacks based on sniffers would do as coackroaches when you turn on the light. <comment117809> The keyboard driver is part of the OS, so the OS passes the keystrokes to the browser, which passes the keystrokes to web content, which apparently then gets to decide which keystrokes to pass *back* to the browser and/or OS… <comment117865> It's probably even more complicated than that with kernel space / user space / API and framework complexities. <comment117901> @DanielLawson Would this open source Safari extension help http://javascript-blocker.toggleable.com/