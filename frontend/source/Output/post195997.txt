Running Postgres as Launch Daemon <body> I am working on setting up a psql server and would therefore like postgres to run whenever the computer is on, regardless of whether I'm logged it. (The machine is running OS X Yosemite.) I set up a launch daemon to do this, but it doesn't work. codesyslog/code gives the following error messages:  precodeJul 14 17:43:01 user@server sudo[276]:     jaia : TTY=ttys000 ;  PWD=/Users/jaia ; USER=root ; COMMAND=/usr/bin/nano /Library/LaunchDaemons/homeb rew.mxcl.postgresql.plist Jul 14 17:44:35 localhost com.apple.xpc.launchd[1] (homebrew.mxcl.postgresql): T his service is defined to be constantly running and is inherently inefficient. Jul 14 17:44:44 localhost com.apple.xpc.launchd[1] (homebrew.mxcl.postgresql): S ervice only ran for 9 seconds. Pushing respawn out by 1 seconds. Jul 14 17:44:45 localhost com.apple.xpc.launchd[1] (homebrew.mxcl.postgresql): S ervice only ran for 0 seconds. Pushing respawn out by 10 seconds. /code/pre  After that, the last message repeats indefinitely.  Here's my .plist file. The reason for codesudo -u _postgres/code is that postgres can't run as root, which launch daemons do by default.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;KeepAlive&lt;/key&gt;   &lt;true/&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;homebrew.mxcl.postgresql&lt;/string&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;sudo&lt;/string&gt;     &lt;string&gt;-u&lt;/string&gt;     &lt;string&gt;_postgres&lt;/string&gt;     &lt;string&gt;/usr/local/bin/pg_ctl&lt;/string&gt;     &lt;string&gt;-D&lt;/string&gt;     &lt;string&gt;/usr/local/var/postgres&lt;/string&gt;     &lt;string&gt;start&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt;   &lt;key&gt;UserName&lt;/key&gt;   &lt;string&gt;_postgres&lt;/string&gt;   &lt;key&gt;WorkingDirectory&lt;/key&gt;   &lt;string&gt;/usr/local/var/postgres&lt;/string&gt;   &lt;key&gt;StandardErrorPath&lt;/key&gt;   &lt;string&gt;/usr/local/var/postgres/server.log&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  MORE INFORMATION: Loading the job manually via ssh gives the ungrammatical error message "Could not find domain for". Loading it on the machine itself gives "/Library/LaunchDaemons/homebrew.mxcl.postgresql.plist: File exists".  What could be going wrong here?  <answer196029> Leave out the codesudo/code, code-u/code and code_postgres/code in codeProgramArguments/code. launchd takes care of this with the codeUserName/code key.  <comment234232> I made the change and while I'm not getting the "postgresql can't run as root" message, it's still not launching. <comment234295> What does `launchctl` report? What's in `/usr/local/var/postgres/server.log`? <comment234298> There's nothing new in the postgres log. How do I check what `launchctl` is reporting? <comment234319> You may want to check out the 'Troubleshooting' section of this launchd [tutorial](http://launchd.info). It explains how to start a job and what to do if it does not work <comment234375> Loading the job manually via ssh gives the error message "Could not find domain for". That's apparently common with ssh. I'll try again when I can get into the room. <comment235520> Loading the job in person gives "/Library/LaunchDaemons/homebrew.mxcl.postgresql.plist: File exists". <comment235541> Which command do you use? <comment235694> `launchctl load /Library/LaunchDaemons/homebrew.mxcl.postgresql.plist` (That's from memory, but I think it's what I did.)