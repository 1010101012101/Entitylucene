Use MacVim as standard Terminal? <body> I used to love the terminal.app for many reasons.  I especially liked the way I could navigate to a file and edit using vim it all in one app, without having to leave the keyboard.   But, since the terminal.app doesn't support many of vim's rich features, I decided to make the step to MacVim.   This breaks the symmetry though, I have to use terminal.app to navigate to a file, edit in MacVim (using codemvim/code of course), quit MacVim and open up the terminal again.   Isn't there a way to use MacVim in stead of terminal to do all this? I'm not talking about codeiTerm 2/code etc, these apps don't cut is for me. I'm talking about true unix command line in MacVim..   This should be possible, I guess, only... is it?  <answer14246> You're confusing the terminal with the text editor, as other commenters have pointed out. Still, there are a number of ways to make the terminal more vim-like, or vim more terminal-like.  If it's vi-style keybindings in the terminal you're after, add codeset -o vi/code to your code~/.bash_profile/code (assuming you're using bash). This will allow you to use vi-style keybindings at the command line (codehjkl/code movement, modal editing, etc.)  If you just want to be able to execute unix commands from within vim, prepend code!/code to the beginning of those commands at the (Mac)Vim command line. For example code:!pwd/code will print the working directory.  There are also plugins like Conque which allow you to run a shell from within Vim, which sounds like it may be exactly what you're after.  <answer15059> If you are looking to navigate and open your files from within VIM, there are a couple things I suggest trying out.  h2:Sex/h2  code:Sex/code in VIM or MacVim splits the screen and lets you navigate the file system to find a file.  I have this bound to code;o/code in my install.    h2NERDTree/h2  codeNERDTree/code is a VIM add-on that gives you a navigable tree view of the filesystem on the left-hand side of VIM.  code:NERDTreeToggle ~/path/to/whatever//code will open NERDTree for you, and the root of the tree will be code~/path/to/whatever//code.  In my VIM installs I use my home directory, and have it aliased to kbdControl/kbd+kbdo/kbd in code.vimrc/code:  precodemap &lt;C-O&gt; :NERDTreeToggle ~/&lt;CR&gt; /code/pre  <answer43146> This is an old thread, but just in case someone else has this question:  mvim -v  <comment15313> I'm not sure I entirely understand this. MacVim is a texteditor, not a terminal. What "rich features" does vim offer that Terminal.app doesn't support? <comment15318> You do realize that Mac OS X comes with command-line `vim`, right? <comment15319> Terminal and iTerm are Unix command lines - vi/MacVim are editors which can call a unix command line <comment15333> Ok, first of all yes, I know the `vim` command line app, that's actually the whole point. My guess was that MacVim uses some sort of command line interface which you don't get to see because it is always in `vim` mode. exiting this `vim` mode in macvim means exiting macvim. But what if that could be disabled? <comment15350> Conque does come pretty close to what I want;. <comment49086> And where do you get mvim from? <comment54954> mvim is a script included when you download the archive from the official site with the precompiled binaries. Just tested it. Works great ;o