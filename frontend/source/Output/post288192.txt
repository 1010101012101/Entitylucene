Terminal: grep recursive - don't search in symlink contents <body> When searching with codegrep -r/code, it avoids following symbolic links by default. This is true for directories, but codegrep/code still inspects the contents of emfiles/em that are symlinks.  For instance, if I have a framework with the following structure:  precode+-- MyFancy.framework     +-- MyFancy              (symlink to ./Versions/A/MyFancy)     +-- Versions         +-- A             +-- MyFancy      (the actual binary file)         +-- Current             +-- MyFancy      (symlink to ../A/MyFancy) /code/pre  codegrep -r "string" MyFancy.framework/code prints:  precodeBinary file ./MyFancy matches Binary file ./Versions/A/MyFancy matches Binary file ./Versions/Current/MyFancy matches /code/pre  This causes the search in such structures three times slower.  How can I make codegrep/code exclude symlinks?  <answer288217> If you look at the emman page/em for codegrep/code, there is no emoption/em to exclude emsymlinks/em, and therefore an alternative method will need to be applied. One such method is to use codefind/code to output only emfile pathnames/em using the code-type t/code emoption/em, where codet/code is set to codef/code for emregular file/em.  Example:  precode find . -type f -exec grep -l 'search' {} \;  /code/pre  Where code'search'/code is whatever you're codegrep/codeing for, and the emoutput/em will be the emrelative path filename/em of the emfile(s)/em containing it because of using code-l/code with codegrep/code.  In the example above, codegrep/code will be executed for each emrelative path filename/em that codefind/code passes tobr code-exec/code. As codegrep/code can handle multiple emfilenames/em, you can change the code;/code, at the end of the emcommand/em, to code+/code to tell codefind/code to pass all the matching emfilenames/em to codegrep/code at once. Note that if the number of matching filenames is large, then the allowable length of the emcommand line/em could be exceeded.  Also note that codefind/code has a rather large set of emoptions/em, and as such you may be able to narrow down the emoutput/em passed codegrep/code, depending on your needs.  <comment363900> You can't. Use, e.g. `find . -type f -exec grep -l 'search' {} \;` where `'search'` is whatever you're greping for. <comment363958> Thanks! I did read the `man`, but thought `-p` is supposed to do what I'm looking for... just a few clarifications: 1. both `+` and `;` seem to work the same, and `grep` prints the match immediately what am I missing? 2. Is there a difference between `xargs` and `find -exec` here? <comment363989> @Elist **1.** `+` will put multiple files as arguments to the same `grep` call for efficiency reasons. **2.** If you use `+` then no there is not a practical difference.