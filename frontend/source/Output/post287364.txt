Configure dnsmasq and use DHCP provided DNS together <body> Running MacOX Sierra on MacBook Pro, and setting up for local dev environment with nginx as the web server, but I have a problem.   strongWhat I want to do/strong  ol liUse dnsmasq as the local dns server that returns code127.0.0.1/code as the host for the wildcard domain code*.develop/code (as .dev now clashes with ICANN)./li liForward any unresolved requests to DNS servers provided by DHCP whenever I connect to a network so that I can resolve all other hostnames (external and internal.)/li /ol  strongConditions and constraints/strong  ol liI move between networks. My home network DHCP's the DNS server as code192.168.1.1/code, but my work DHCP gives my DNS as code10.128.x.x/code/li liThe corporate network with the code10.128.x.x/code DNS, also sets a codesearch domain/code for internal addresses./li liI'm in China, so just setting a bunch of public DNS servers like codeGoogle or OpenDNS/code as well as code127.0.0.1/code may well work, but they're international and get throttled by GFW./li /ol  strongWhat I've done so far/strong  ol liI've installed codenginx/code and codednsmasq/code using codehomebrew/code./li liServices running using codesudo brew services start xxx/code. )This is so I can run nginx on codeport 80/code and not codeport 8080/code.)/li liSet codednsmasq/code directive codeaddress=/.develop/127.0.0.1/code/li liI can verify that codednsmasq/code works, by using codedig/code: /li /ol  codedig testing.testing.one.two.three.develop @127.0.0.1/code  precode; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; testing.testing.one.two.three.develop @127.0.0.1 ;; global options: +cmd ;; Got answer: ;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 46013 ;; flags: qr aa rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 0  ;; QUESTION SECTION: ;testing.testing.one.two.three.develop. IN A  ;; ANSWER SECTION: testing.testing.one.two.three.develop. 0 IN A   127.0.0.1  ;; Query time: 2 msec ;; SERVER: 127.0.0.1#53(127.0.0.1) ;; WHEN: Tue Jun 20 12:04:44 2017 ;; MSG SIZE  rcvd: 71 /code/pre  ol start="4" liSetting the DNS server to code127.0.0.1/code in codeNetwork Preferences/code does work and I can 'ping' this it:/li /ol  Ping example:   precodeping -c 1 this.is.a.test.develop PING this.is.a.test.develop (127.0.0.1): 56 data bytes 64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.036 ms  --- this.is.a.test.develop ping statistics --- 1 packets transmitted, 1 packets received, 0.0% packet loss round-trip min/avg/max/stddev = 0.036/0.036/0.036/0.000 ms /code/pre  but then no external services are available because the only DNS available is my dnsmasq at code127.0.0.1/code  strongThe problem/strong  ol liIt seems like the simple solution would be just to add code127.0.0.1/code + code192.168.0.1/code to my network adapter DNS list. That works at home, but not at the corporate location/li liAdding the corporate code10.128.x.x/code would obviously work at the office, but then not at home/li licodeSo add both corporate and home DNS to the list?/code This would then break any other wifi/ethernet connections because I would not pick up their DHCP DNS server/li liI cannot just add public DNS servers (like Google or Open DNS, because I'm in China. I need to have the DHCP supplied ones, as public DNS is very slow in China)/li /ol  I'd like to know how others have solved what seems like a very frequent setup, but I'm having trouble.   I've already looked at two separate questions on stack exchange which have emsimilar problems/em but not emidentical/em. The questions are attached to the bottom of this question [1], [2]. emWhat these questions show are that on macOS, code/etc/resolve.conf/code has this notice:/em  in the header  precode# # Mac OS X Notice # # This file is not used by the host name and address resolution # or the DNS query routing mechanisms used by most processes on # this Mac OS X system. # # This file is automatically generated. # /code/pre  This suggests that emany modifications will not be read from this file, and other answers from the questions suggest that any files in code/etc/resolver/*/code will also not be read/em  So, my strongreal question is: is there any way to do:/strong  ol liAlways use 127.0.0.1 first/li liIf not found use the dynamic DNS from whatever DHCP gives/li /ol  strongWhy didn't you just use hosts?/strong  Becuase the idea of having a *.develop domain and then just adding a single site that uses regular expressions to dynamically resolve local sites is very attractive!  i.e. codesome-sub-domain.develop/code - code/Users/myuser/www/some-sub-domain//code  [1] dnsmasq not working on Mac OS Sierra  [2] https://serverfault.com/questions/478534/how-is-dns-lookup-configured-for-osx-mountain-lion  <answer287378> Answer found! For those looking to make this work, specifically in MacOS Sierra, the standard solution of using a resolver file in code/etc/resolver/*/code actually works, without the need to change network preferences.  In my instance, where I wanted my local development domain name to be code*.develop/code, I created a file called codedevelop/code (no extension) with contents:  precodenameserver 127.0.0.1 /code/pre  I thought this hadn't worked and that macOS does not read from these files, as I used the command codedscacheutil -flushcache/code and it didn't work. Only a stronghard restart/strong was enough to kick the system into using the local resolver.  For completeness, the content of my dnsmasq.conf file is:  precodeno-resolv address=/.develop/127.0.0.1 /code/pre 