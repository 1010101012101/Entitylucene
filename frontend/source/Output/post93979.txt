Are the OSX Mavericks tags visible from the command line? <body> For example, suppose I have a directory structure such as  precode/Users     /tlehman         /Math             algebraic_varieties.tex [tagged: Math, Documentation]             projective_geometry.pdf [tagged: Math]         /Development             visualize_surfaces.py   [tagged: Math, Programming]             solve_polynomials.scm   [tagged: Math]     /guest         /Desktop             welcome.rtf             [tagged: Documentation] /Volumes     /USBKey         assignments_for_may.txt     [tagged: Math]         using_LaTeX.pdf             [tagged: Documentation] /code/pre  From the command line, is there a way I can use codels/code (or something like it) to display all the files tagged as "Math"?  EDIT: I made a tool called codetfind/code that does this: https://github.com/tlehman/bin/blob/master/tfind  <answer93985> I'm assuming they will be an xattr like they currently are on 10.8.3 (and older)  Currently you can view which extended attributes a file has with codels -l@/code.  But to see the contents of the attributes, you have to use codexattr/code.  <answer106100> You can get all tags of a file with:  codemdls -name kMDItemUserTags filename/code  <answer106338> Yes, you can find files that have a given user tag using codemdfind/code.  Create a file and assign it a a custom tag in Finder.  Then go in a terminal; you will find it with:  precodemdfind "kMDItemUserTags == Math || kMDItemUserTags == Programming" /code/pre  or   precodemdfind "kMDItemUserTags == Math &amp;&amp; kMDItemUserTags == Programming" /code/pre  See also code-onlyin aFolder/code to restrict the search.  I didn't check how complex these boolean expressions can be, but these two examples work.  You can pipe the output to codels/code like this:  precodemdfind "kMDItemUserTags == mathTag || kMDItemUserTags == anotherTag" \ | while read f; do ls "$f"; md5 "$f"; done /code/pre  Also, mdfind has an option "-0"   precode    -0                Use NUL (``\0'') as a path separator, for use with xargs -0. /code/pre  which can be practical with nasty filenames.  <comment110184> You were right, the tags are stored as an xattr <comment124709> This seems to be the inverse of what was asked. Your command dumps all tags for one file. I think the OP wants to know all files with one tag. <comment131131> The problem with this method is that it doesn't find all the files, returning only a (possibly empty) sub-set of files. <comment131139> It appears they've introduced a simplified `mdfind` syntax for tags, e.g.: `mdfind "tag:Math"`, `mdfind "tag:Math OR tag:Programming"` <comment131254> @markvgti Which files does this command not find ? <comment131292> @AntoineLecaille I have 295 files in a directory with the "Orange" tag (the Orange Label before upgrading to Mavericks). That command lists only 11 of them. Also have many files tagged "Green" --- that command finds none of them. <comment131293> @wjv I used the syntax suggested by you and got exactly the same results as I listed above. <comment131831> @markvgti Then take one Orange file that is found with this command and one that is not, and find the differences with xattr or mdls ? <comment182051> See https://github.com/jdberry/tag <comment189830> I second the recommendation for `tag` by James Berry at `https://github.com/jdberry`.  You can install it via `brew install tag`, add a tag via `tag -a tag file`, find tags via `tag -f tag1, tag2`.  Very, very handy, I use it all the time. <comment260606> Still, useful.  It answers the question I had when I Googled and ended up here.  If there isn't a different Q/A that covers this it might be worth the effort to post and answer one yourself. <comment300728> Yes, definitely get the `tag` command. Installs via brew very easily. <comment305825> FYI: With OS X El Capitan, I used the command, `xattr -pl com.apple.metadata:_kMDItemUserTags filename`.  However, it was not very friendly output.