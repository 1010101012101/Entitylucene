Git vs rsync when resource fork must be preserved <body> I have some ancient files that I need to share between Macs. There are over 100,000 of them. I need to keep the directory containing these files in sync. I thought Git would be a good solution, and it was, until I discovered that Git has stripped the resource fork off of every file on the remote machine(s).  So now I'm looking for another solution. Considering strongrsync/strong but thought I'd ask here to see if anyone has experience with old strongMac OS Classic/strong files in a modern strongMac OS X/strong environment.  <answer111509> On OS X, 'cp' works with resource forks, and rsync is reported to as well.  If you run Netatalk on your target server, it will work quite well if you use either of these, since Netatalk preserves the resource fork in local metadata (moving between different installations of Netatalk, though, can be QUITE a headache if they have different resource fork metadata schemes and you don't realize until too late).  Meanwhile, I want to find out how to MAKE git work with resource forks, as I have some classic software to maintain and need to keep the resource forks in the repository.  I'm exploring some avenues with metastore, but you're probably looking for a solution more like the ones mentioned above if you're just trying to share files (e.g. a vintage software repository, like I have at home).  <answer111511> You want to use codersync -E/code.  precode$ rsync --help ... -E, --extended-attributes   copy extended attributes ... /code/pre 