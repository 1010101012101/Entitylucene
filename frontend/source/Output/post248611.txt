Extract Installer Package Signing Certificates from xip archive <body> It's possible to extract Code Signing Certificates (CSCs) from an .app or signed .dmg as ASN.1 (DER) with  precodecodesign -d --extract-certificates prefix /path/to/file.dmg /code/pre  After that you can do stuff with it using codeopenssl/code, codesecurity/code etc.  My goal is to do the same for signed strongxip archives/strong, which use strongInstaller Package Signing Certificates/strong (IPSCs). You can verify xip signatures with  precodepkgbuild --check-signature /path/to/archive.xip /code/pre  But there doesn't seem to be an option to actually export the certificates the way codesign can do it with CSCs.  Is there a way to do it from the command line?  The eventual goal is to deal with xip archives that are signed with self-signed/self-issued IPSCs. It will be a script that first checks the signature with codepkgbuild/code, and then, if the user wants to, it should export the certificates, and then add them to the keychain as trusted. I know you could always just dequarantine the xip file with the self-signed certificate, and this will be an additional option, but this is always on a per-file basis, so there also has to be the ability to extract the certificates (root/leaf) and import them into keychain as trusted (or trusted root). How I'll do the latter I don't know yet, but first thing's first.  Thank you for your help. (This is my first post at AskDifferent.)  <answer248664> I think it works with the following command:  codexar --dump-toc="${HOME}/Desktop/header.xml" -f /path/to/your/archive.xip/code  This will write an xml file called "header" onto your desktop, and that one contains the X509 certificates. You only need to parse it; maybe codejq/code will do the job best.  strongEdit:/strong however, codejq/code isn't native macOS, so it has to be with xmllint etc. This below works. It will put all certificates in your home folder.  code FILEPATH="/path/to/your/archive.xip" FILENAME=$(/usr/bin/basename "$FILEPATH") /usr/bin/xar --dump-toc=- -f "$FILEPATH" \     | /usr/bin/xmllint --xpath '//signature[@style="RSA"]' - \     | /usr/bin/sed -n '/&lt;X509Certificate&gt;/,/&lt;\/X509Certificate&gt;/p' \     | xargs \         | /usr/bin/awk '{ \                 gsub("&lt;X509Certificate&gt;","-----BEGINCERTIFICATE-----"); \                 gsub("&lt;/X509Certificate&gt;","-----ENDCERTIFICATE-----"); \                 print}' \         | /usr/bin/awk '{gsub(" ","\n"); print}' \         | /usr/bin/awk '{ \                 gsub("BEGINCERTIFICATE-----","BEGIN CERTIFICATE-----\n"); \                 gsub("-----ENDCERTIFICATE","\n-----END CERTIFICATE"); \                  print}' \     | /usr/bin/csplit -k -s -n 1 -f "$FILENAME"-cert - '/END CERTIFICATE/+1' '{3}' 2&gt;/dev/null for CERT in *"-cert"* ; do     if [[ $(/bin/cat "$CERT") == "" ]] ; then         rm -rf "$CERT"     else         mv "$CERT" "$CERT.pem"     fi done /code  <comment308123> I looked around a bit, and there's an app called [RB App Checker Lite](https://brockerhoff.net/RB/AppCheckerLite/) that will read the signature information from a xip archive, and also display the certificates in full. So there's surely a way to do it, but maybe not from the command line. (?)