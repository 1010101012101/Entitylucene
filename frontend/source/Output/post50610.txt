Why can't this process terminate? <body> img src="https://i.stack.imgur.com/YKAwp.png" alt="o"  Just recently I ran into an issue where my network program couldn't bind to a port because it was already in use. I opened the activity monitor and realized it (named "server") was already running from previously, even though I had closed the window and it was supposedly terminated. Quit or Force Quit on the process do nothing. I even restarted the computer but it was still there! This hasn't happened with my program before. I even typed in the terminal codekill 4517/code and nothing happened. Help?  <answer50613> Give this a try.  precode    sudo kill -9 4517 /code/pre  Where 4517 is the PID of the process.   If the process comes back with a new PID, something relaunched it.  See kopischke's answer for how to deal with that.  <answer50644> OS X uses a process launching system called emlaunchd/em which consolidates functions provided by Init scripts, crontab and more in *nix systems (see the Wikipedia article for a high level overview, and Apple’s Developer docs on launch daemons and agents for details). One of the abilities of emlaunchd/em is to keep a process it launched alive, if so defined by its configuration file – in that case, the process will relaunch whenever it is terminated. Your problem with a process apparently persisting across reboots and manual termination sounds very much like a case of emlaunchd/em initiated process with a codekeepAlive/code key.  emlaunchd/em configuration files are in emplist/em format and found in  ul licode~/Library/LaunchAgents/code – agents for the current  user account only/li licode/Library/LaunchAgents/code and code/Library/LaunchDaemons/code – agents and daemons for all user accounts/li licode/System/Library/LaunchAgents/code and code/System/Library/LaunchDaemons/code – system level agents and daemons/li /ul  and are usually named in reverse domain notation (codetld.domain.process.plist/code). Depending if the user account of codeserver/code is yours or not (can’t say, as you have blanked it), you should look in one of the first two locations above for a likely plist (if you have Xcode installed, you can QuickLook them easily). If found, your codeserver/code is indeed controlled by launchd. The correct procedure to stop it is to remove it from emlaunchd/em’s process list through  precodelaunchctl unload &lt;tld.domain.process&gt; /code/pre  which will unload and stop the process (note you omit the codeplist/code suffix).  There is also a GUI for handling emlaunchd/em files, Peter Borg’s emLingon/em (make sure to get “Lingon”, not “Lingon 3”, which is a dumbed down version safe for vanilla use), which might be more convenient than manually rooting through the file locations.  <comment58036> If the process automatically appeared again after reboot, "something" restarted it for you. What kind of "network program" are we looking at here?