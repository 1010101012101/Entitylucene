Reformat URLs using Applescript or Automator <body> Currently I have a process that downloads image URL from a website.  Then I filter out URLs I don't need and am left with a list of good image URLs.  I want to reformat these URLs by adding [IMG] before and [/IMG] tags after so these images are ready to post on sites that require these tags.  So far, I'm not finding a good way to accomplish this.    Any ideas or suggestions?  <answer220504> It's pretty simple to make a concatenation with Apple Script  precodeset i to 0 repeat     set a to "[IMG]"     set b to myUrlArray[i]     set c to "[/IMG]"     set myConcatUrl to a &amp; b &amp; c     display dialog myConcatUrl     if myUrlArray length == i then exit repeat end repeat /code/pre  or you can make a coderepeat while (i &lt;= myUrlArray length)/code  However I never make an AppleScript before... Make a full AppleScript tutorial and write your script by your own. If you have some difficulties with the code, you can go on StackOverflow and if you have some problems with Apple built-ins, behaviours... come here and post an another question.  strongAskDifferent is not a code-writing service./strong  http://macosxautomation.com/applescript/firsttutorial/index.html  http://stackoverflow.com  Google Search  <answer220602> Assuming I'm understanding your question correctly, a simple program in any scripting language will do this in just a few lines of code.  Perl, Python, and Ruby are preinstalled on OS X; I'll give an example in Perl.  Just run this at the command prompt in a Terminal window.  Given that the filenames you want to process are listed, one filename per line, in a textfile called codeinfile.txt/code:  precodeperl -pe 's/(.*)/&lt;img&gt;$1&lt;\/img&gt;/;' &lt; infile.txt &gt; outfile.html /code/pre  Explanation: Calling the codeperl/code executable with the code-e/code flag means "run the code in quotes following"; the code-p/code flag means "for every line on standard input, run the program (meaning the code in quotes in this case) on that line and then print the line"; and the actual program in single quotes merely adds the code&lt;img&gt;&lt;/img&gt;/code tags at the beginning and end of whatever text is in that line of the file.  The code&lt;/code and code&gt;/code operators indicate input and output to the given filenames.  <comment266838> Trivially accomplished using an old-fashioned Bash, Python, or Ruby script (all of which are installed on OS X out of the box).  Does it have to be in AppleScript or Automator? <comment266958> But it processes the first one, then that's it.   There has to be some type of looping process so that it processes all 5 or all 50 URLs.  There is a looping process in Automator, but that sends it back to step one, so that won't work.  It has to read the first one, do the concatenation process, write out, get the next one, etc, until none are left to process. <comment266961> No, any process that will loop through all the URLs from the prior step and process them until none are left would be just fine. <comment266965> @MattSh I have edited my answer.