How can I trigger a Notification Center notification from an AppleScript or shell script? <body> I'd love to be able to take advantage of 10.8's Notification Center features in AppleScripts and shell scripts I write.  Is there a built-in command or a third-party library I can use from either an AppleScript or shell script?  Ideally the type and icon of the notification could be controlled, but even just the ability to trigger a basic banner with a stock icon (but custom text) would be appreciated.  <answer57446> h1terminal-notifier/h1  From the README:     terminal-notifier is a command-line tool to send Mac OS X User   Notifications, which are available in Mac OS X 10.8.      It is currently packaged as an application bundle, because   codeNSUserNotification/code does not work from a ‘Foundation tool’.   radar://11956694      This tool will be used by Kicker to   show the status of commands which are executed due to filesystem   changes. (v3.0.0)      h2Download/h2      Prebuilt binaries, which are code-signed and ready to use, are   available from the downloads   section.      h2Usage/h2      code$ ./terminal-notifier.app/Contents/MacOS/terminal-notifier   group-ID sender-name message [bundle-ID]/code      In order to use terminal-notifier, you have to call the binary   eminside/em the app bundle.      The first argument specifies the ‘group’ a notification belongs to.   For any ‘group’ only emone/em notification will ever be shown, replacing   previously posted notifications. Examples are: the sender’s process ID   to scope the notifications by a unique process, or the current working   directory to scope notifications by a project.      The second and third arguments describe the notification itself and   are its ‘title’ and ‘message’ respectively. For example, to   communicate the sender of a notification to the user, you could   specify the sender’s name as the title.      The fourth and last argument is an optional one. It specifies which   application should be activated when the user clicks the notification.   By default this will activate Terminal.app, to launch another   application instead specify the application’s bundle identifier. For   example, to launch Safari.app use: codecom.apple.Safari/code.   <answer64632> You can now do this with Growl2 (available from the App Store). Install Growl and enable "OS X Notifications" (screenshot)  img src="https://i.stack.imgur.com/m6mag.png" alt="enter image description here"  Additionally, you'll need to install GrowlNotify for a command-line tool to send Growl notifications. You can download this tool for free on the Download page.  You can now generate Growl notifications from the command line, which will be forwarded to the Notification Center. For example:  precodegrowlnotify -n "My App" -m "Hello world" /code/pre  img src="https://i.stack.imgur.com/xW8re.png" alt="enter image description here"  Note that it currently doesn't seem possible to change the application icon.  <answer79504> Since Growl is not free, and terminal-notifier is not available on pre-10.8 systems, I tend to use cocoaDialog. It is free and open source, so you can probably also distribute along with your scripts.  If you don't need a lot of customization, you can also use AppleScript's codedisplay notification/code which you can also call from the shell as others have already mentioned.  But beware that AppleScript seems to require double-quotes. So if you need variables, this strongwill not work/strong:  precodeosascript -e "display notification '$text' with title '$title'" #WRONG /code/pre  You will have to use escaped double-quotes. This is ugly strongbut works/strong:  precodeosascript -e "display notification \"$text\" with title \"$title\"" /code/pre  <answer115373> With Mavericks and later, you can do this using AppleScript's 'display notification':  precodedisplay notification "Lorem ipsum dolor sit amet" with title "Title" /code/pre                            img src="https://i.stack.imgur.com/REbdS.png" width="380"  That's it—literally that simple! No 3suprd/sup-party libraries or apps required and is completely portable for use on other systems. 10.9 notification on the top, 10.10 DP in the middle, 10.10 on the bottom.  AppleScript can be run from the shell using /usr/bin/osascript:  precodeosascript -e 'display notification "Lorem ipsum dolor sit amet" with title "Title"' /code/pre  You can also customise the alert further by adding…  ul lia subtitle  Append 'subtitle' followed by the string or variable containing the subtitle.  precodedisplay notification "message" with title "title" subtitle "subtitle" /code/pre  The above example produces the following notification:  img src="https://i.stack.imgur.com/aJ0Yk.png" width="365"/li lisound  Append 'sound name' followed by the name of a sound that will be played along with the notification.  precodedisplay notification "message" sound name "Sound Name" /code/pre  Valid sound names are the names of sounds located in…  ul licode~/Library/Sounds/code/li licode/System/Library/Sounds/code/li /ul/li /ul  hr  Posting notifications can be wrapped as a command-line script. The following code can be run in Terminal and will add a script to /usr/local/bin (must exist, add to $PATH) called codenotify/code.  precodecd /usr/local/bin &amp;&amp; echo -e "#!/bin/bash\n/usr/bin/osascript -e \"display notification \\\"\$*\\\"\"" &gt; notify &amp;&amp; chmod +x notify;cd - /code/pre  This is the script that the above will add to notify.  precode#!/bin/bash /usr/bin/osascript -e "display notification \"$*\"" /code/pre  Now to display a notification:  pre class="lang-none prettyprint-override"codenotify Lorem ipsum dolor sit amet sleep 5; notify Slow command finished /code/pre  <answer150552> Here's a cool one that I use in a ruby script on OS X (so that I can start a script and get an update even after toggling away from the window):  precodecmd = %Q|osascript -e 'display notification "Server was reset" with title "Posted Update"'| system ( cmd ) /code/pre  <answer187094> @grgarside's solution is nice, but it is vulnerable to script injection, which can be a major security issue when this is used to e.g. display log file contents or something similar.  This should be safer:  pre class="lang-bash prettyprint-override"code#!/bin/bash X="$*" /usr/bin/osascript -e 'display notification system attribute "X"' /code/pre  <answer214598> I just want to add a note to @grgarside's answer, because I know many people want to have a notification popup that can only be dismissed by button click.  img src="https://i.imgur.com/i8oyoan.jpg" alt="Comparison"  I have found the solution for you:  It was actually controlled by a setting in System Preference, rather than some parameter in the script written. These two images should explain it all  Thanks @grgarside for the great answer.  img src="https://i.imgur.com/cNOqFyX.jpg" alt="System Preference"  <answer220812> I recently forked terminal-notifier to build a command line tool to display notification Alerts (with actions) and Reply Type Alerts.  I use it with my shell scripts and golang apps to get interactive answers from users.  https://github.com/vjeantet/alerter  img src="https://i.stack.imgur.com/yBCjH.png" alt="enter image description here"  <comment65991> Sweet, a great library! Would love to see it updated with control over the icon and alert vs banner, but definitely useful. Thanks for the link! http://i.imgur.com/tsCeK.png <comment66756> Great little app, I created a launcher and put in /usr/local/bin so that I can use it anywhere from a terminal etc. Launcher script: #!/bin/bash cd /Applications/terminal-notifier.app/Contents/MacOS ./terminal-notifier $* <comment67476> Launcher is helpful, if you change it a bit it works with quoted text with spaces: #!/bin/bash cd /Applications/terminal-notifier.app/Contents/MacOS  ./terminal-notifier "$@" <comment80818> Nice approach especially if growl is installed already. <comment140826> I think you might be able to use the option `--icon path/to/icon.png` for icons. <comment151503> What is the path of `display`? I have Mavericks but I can't see to find it. Thanks! <comment151504> @ceilingcat Could you clarify what you mean? What doesn't work? <comment151509> I got `-bash: display: command not found` My path is kind of screwy though, so it would be nice to know exactly where `display` is located. <comment151510> @ceilingcat This is AppleScript. To run it in Terminal, use osascript (see answer). <comment151512> oh... I missed that part. Thanks! <comment167254> The only problem with `display notification` is that when you click on it, the open file dialog appears. <comment167255> @ɹoƃı Nothing happens when I click on it in 10.10. Mavericks thing I guess. <comment212449> Is it possible to make the notificatiop popup exist forever (not auto-hide after N seconds) until explicitly clicked by the user? <comment219748> How do I add a time limit for the notification to exist on the screen ? <comment232449> Couple of questions - 1. Any way I can add certain actions on click of the notification? Say I want to run a certain shell script. I am on Yosemite, and it launches file browser. 2. How do I customize the notification with more options, like show a button within at the side on hovering over it, like what happens when the next iTunes song autoplays and notification appears showing that song, or when you click on the notification when you have a new message, two options come up - Send and Cancel? <comment235480> Nothing I've found indicates that there's a way to control the action (what happens when you click on the notification). http://macosxautomation.com/mavericks/notifications/01.html is handy, FYI. <comment235481> http://stackoverflow.com/questions/24606225/redirected-to-applescript-editor-on-clicking-apple-notification <comment259152> Ladies and gentlemen, after an hour of investigation on the world wide web, I have found out how to let the notification window stay until dismissed by user!  It was actually controlled by a setting in System Preference, rather than some parameter in the script written.  These two images should explain it all http://i.imgur.com/cNOqFyX.jpg http://i.imgur.com/i8oyoan.jpg Have fun guys, and thanks @grgarside for the great answer. <comment265164> Note that the text has to be in double quotes. Single quotes don't work. So if you need a variable in the text, you cannot write `"display ... '$mytext' ..."`, but need escaped double quotes:  `"display notification \"$mytext\" ..."`. <comment266355> this is interesting, but can you describe a scenario where a script I run on my system that is only user-executable is vulnerable to script injection? <comment266356> wow... so the chain is something like User - Ruby - Shell - AppleScript - Objective-C - Assembly - CPU? <comment266413> If you display user content that is not from you, you are vulnerable. For example if you run this on a system with a public web server, or when some app logs strings it got from the net which you read and display, e.g. a browser, mail program or a Twitter client. It could have a " to end the string and statement, then have code and then restart a string. <comment266424> okay, that's true.  it's just hard for me to imagine ever putting content from web forms into my notifications, but your point is taken. <comment266458> Well, maybe you'd just like to say something like `I have a "laser"` without being told you're having a syntax error by "quoting" your "words". With escaping, you can: `script 'I have a "laser"'` <comment283402> Note that the specific app will vary. `Script Editor` is only for `Script Editor.app` and `osascript`. In a service workflow, it's `Automator Runner`. When inside `Automator.app`, it's `Automator`. <comment284218> `display notification` isn't working for me on El Capitan, although `display alert` works fine. The [documentation](https://developer.apple.com/library/mac/documentation/AppleScript/Conceptual/AppleScriptLangGuide/reference/ASLR_cmds.html#//apple_ref/doc/uid/TP40000983-CH216-SW224) claims both work. Any insight into this? <comment285031> I find it annoying that if I click on the Banner, it brings up the Script Editor application.  I'd like for it to just disappear on click, but this post points out you can hover over it and trackpad-swipe right to make it go away quietly: http://osxdaily.com/2012/09/05/dismiss-notifications-os-x-quickly-swipe/ <comment285150> @JoshuaGoldberg Thanks for adding that! I found that out intuitively one day, which is one thing I like about Mac OS X, it works the way you expect it do work :) <comment285386> As Vic Jang mentioned but did not clearly explain, you can change the settings for how the notifications are displayed via System Preferences  Notifications  Script Editor  change from "Banners" to "Alerts". That way you can at least click "Close" instead of seeing the Open File dialog when you dismiss the notification. <comment285387> @Dan Clicking a notification is *never* a dismiss action, which is why Script Editor is launched when clicking. You can dismiss a banner with a two finger swipe whilst hovering it. I may look into alternatives if I have time at some point. <comment304627> Upvote because it's always good to keep security in mind. Someone could copy-pasta solutions and use them in ways the person posting the solution hadn't considered. <comment304629> I just played with it; that idiom seems to only escape one quote. Is there a "global" version? <comment304682> @EdwardFalk the substitution was missing a slash. Should work now. <comment319891> custom image for notification? <comment357291> This also works: `osascript -e 'display notification "Lorem ipsum dolor sit amet" with title "Title"'` <comment364963> If you want to use escaping, you must escape \ - \\ as well, otherwise \" becomes \\" and you can break out. I changed the example to use an environment variable instead.