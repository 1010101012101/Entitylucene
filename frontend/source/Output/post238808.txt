copyfile errors and dot files using rsync <body> I read @SwisherSweet's question of the fastest and safest way to copy massive data from one external drive to another, along with @GrahamMiln's excellent answer.  I'm in a similar situation where I want to copy data from a Firewire 800 connected external hd to Drobo 5N, which is connected to the router that the iMac is connected to:brExternalHd — iMac — Router — Drobo5N  I executed the command (codesudo rsync -vaE --progress /Volumes/SourceName /Volumes/DestinationName/code) and it works for some part, but on occasion I get the following error (I inserted some line breaks for better readability):  precodeBoxx:~ Alex$ sudo rsync -vaE --progress /Volumes/ExternalHd/path/to/MyDirectory /Volumes/Drobo5N/path/to/  building file list ...  6 files to consider  ._MyDirectory         1104 100%    0.00kB/s    0:00:00 (xfer#1, to-check=5/6)  MyDirectory/._file1.dmg         1430 100%   34.06kB/s    0:00:00 (xfer#2, to-check=3/6)  MyDirectory/._file2.dmg         1430 100%   27.38kB/s    0:00:00 (xfer#3, to-check=2/6)  copyfile(.._MyDirectory.drJHX3,./MyDirectory, COPYFILE_UNPACK) failed:45 copyfile(MyDirectory/.._file1.dmg.PQTcsU,MyDirectory/file1.dmg, COPYFILE_UNPACK) failed:45 rsync: rename "/Volumes/Drobo5N/path/to/MyDirectory/.._file1.dmg.PQTcsU" -&gt; "MyDirectory/._file1.dmg": No such file or directory (2) copyfile(MyDirectory/.._file2.dmg.gx7VTP,MyDirectory/file2.dmg, COPYFILE_UNPACK) failed:45 rsync: rename "/Volumes/Drobo5N/path/to/MyDirectory/.._file2.dmg.gx7VTP" -&gt; "MyDirectory/._file2.dmg": No such file or directory (2)  sent 4369 bytes  received 86 bytes  8910.00 bytes/sec total size is 48176733  speedup is 10814.08  rsync error: some files could not be transferred (code 23) at /BuildRoot/Library/Caches/com.apple.xbs/Sources/rsync/rsync-47/rsync/main.c(992) [sender=2.6.9] /code/pre  bSome questions:/b  ol liWhy do I get these codecopyfile(...) failed:45/code errors?brI found the source code for copyfile.c, but could not find out what triggers the error. In there it says about COPYFILE_UNPACK:     COPYFILE_UNPACK is the undoing of COPYFILE_PACK, obviously.   The goal there is to take an Apple Double file, and turn it   into a normal file (with data fork, resource fork, modes,   extended attributes, ACLs, etc.).   My error message says something about codeCOPYFILE_UNPACK/code, but what does it mean and how can I fix the error?/li liWhy does the codersync/code command create the dot file like code._file1.dmg/code?br When codersync/code completes successfully I still see the dot file in the synced destination directory (/Volumes/Drobo5N/path/to/) in addition to the actual synced file. Why is that?/li liWhy does codersync/code create extensions like code.drJHX3/code? Is that a temp name?/li /ol  hr  supP.S.: Sorry if this has been asked elsewhere. I've search for this error using rsync, but couldn't surface any./sup  <answer238853> Copyfile is responsible for splitting a HFS+ file into two files. The  data fork- codefile/code and a metadata fork- code._file/code. That happens when you use the code-E/code option with the Apple supplied codersync/code. I have no idea why it is failing. codersync/code does create temporary files and then moves them into place.  <comment293057> Apple's rsync is old so I would find a more uptodate one especially with metadata issues. Also what format are the drives <comment293076> Are you saying the copyfile errors are due to metadata issues?With "format" do you mean file system? I will need to look the  up when I'm back at my desk… Should I be surprised if the file system is HFS+ because the resource-/metadata-fork is stored as a separate file? <comment293100> @Mark Would you recommend updating via [MacPorts](https://guide.macports.org/) <comment293103> @graham-miln Since you gave the winning answer for the question that triggered my question here, I was wondering if you have some input, if you like. <comment293189> Error 45 is defined in `/usr/include/sys/errno.h`- `#define ENOTSUP  45  /* Operation not supported */` <comment362670> I too see this a lot. I believe it has something to do with transferring data from HFS+ to non-HFS+ file system, that don't support macOS file system features.