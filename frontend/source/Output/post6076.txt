Time Machine multiple Disks Backup over Network <body> I have a Mac OSX Server 10.6 with a Harddisk attached to it which has been configured as Time Machine destination. Over the Workgroup manager I have assigned the TM destination on Computergrouplevel. Now I would like to swap Backupdisks so I can always store one disk offsite.   Is it possible to change disks and let the clients update their TM destination automatically when the Disks have been changed?  I also appreciate if you have other usefull methods to overcome this obstacle. An example would be dynamic links where you could specify the path with a wildcard a for example:  If my two disks are named Backup_Disk_A and Backup_Disk_B then I would create this alias  precodeln -s /Volumes/Backup_Disk_% /code/pre  The problem here is that when I change the disk then the link can't find the destination.  <answer9722> So I managed to get a solution.   You have to name your external disks which you want to swap with the exact same name (emto be able to differentiate them just write different names on the cases/em). Then you insert one disk and share it as a time machine destination. Now go to the clients and select your shared time machine destination disk. When Time Machine has done its backup you can swap the external HD with the second one.   Time machine on the clients will not notice that the destination drive has been swapped, neither will the server (emit seems that the shared time machine destination points to the HD name and not as expected to the HD GUID/em).  strongCAUTION/strong This workaround works best with mac os x 10.6, Mac OS X 10.5 will notice a swapped harddrive and show an error which references to a missing cookie or something in this kind. When confronted whith this error just proceed and make new backup on the swapped drive.  <comment6334> I would address this problem by getting a hardware RAID device with removable hard-drives, and putting it into RAID1.  Then hot swapping the 2nd drive. <comment6403> There are unique IDs of the disk beyond their mount point, so a link (ln) isn't sufficient.