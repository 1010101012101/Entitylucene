How can I configure my computer to run an AppleScript at a specific time? Caveat: without using iCal <body> Since upgrading to Lion, I have seen a sleight decrease of productivity when it comes to using iCal. As a result, I am trying alternatives such as BusyCal. The application seems great, however I cant set an alarm to run a script as I could in iCal.  Hence, I want to become independent from iCal and have an AppleScript run everyday without having to keep iCal running. Any idea of how to do this?  <answer24863> You can run a cronjob using crontab. br / So basically, to run a cronjob, you will need to type codenano ~/crontab/code in Terminal. This will create a new file called "crontab" in your home folder, and open up a simple text editor in Terminal. Type:    code* * * * * osascript ~/Desktop/theScriptToBeExecuted.applescript/code  This will run an AppleScript named "theScriptToBeExecuted.applescript" located on your desktop, every minute. The five "*" before the codeosascript/code command specify the time. Here's a table to show you what each field stands for:  pre *     *     *   *    *        command to be executed -     -     -   -    - |     |     |   |    | |     |     |   |    +----- day of week (0 - 6) (Sunday=0) |     |     |   +------- month (1 - 12) |     |     +--------- day of        month (1 - 31) |     +----------- hour (0 - 23) +------------- min (0 - 59) /pre  So to run the same command at one minute past midnight (00:01) of every day of the month, of every day of the week, type this in the file:  code1 0 * * * osascript ~/Desktop/theScriptToBeExecuted.applescript/code  If you need more info, check out this article on cron.  To save the file that you're working on, type kbdControl/kbd+kbdX/kbd (exits), then kbdY/kbd (tells Terminal that you do want to save the file), then kbdEnter/kbd Now type at the prompt codecron ~/crontab/code This tells cron that it should be looking at the crontab file, if your file is named "crontab" in your home folder.  Another alternative is Cronnix It's a GUI for crontab.  Script Timer is similar, but it runs specified AppleScripts at specified times. It's a little easier to use, but it costs $12. I would recommend just going with Cronnix (free) or crontab (also free!)  <answer126703> In recent versions of OS X codelaunchd/code is preferred to codecron/code. Here's an excerpt from codeman crontab/code under Mavericks:     Darwin note: Although cron(8) and crontab(5) are officially supported under Darwin, their functionality has been absorbed into launchd(8), which provides a more flexible way of automatically executing commands.   You can control codelaunchd/code using the built-in codelaunchctl/code but many people (including me) use a GUI called Lingon.  UPDATE: I now use LaunchControl instead of Lingon. It's a lot more powerful, though the interface is more complicated.  <comment27948> how would i use that utility to do what I am trying to do? <comment27949> Do you want to add the condition: without using terminal? <comment27950> No, I'm fine with using the terminal. I'd like to add the condition: without spending a great deal of time learning a command line utility. <comment27951> @segfault Sorry, I was typing it up and I posted the answer before I was done. <comment27954> @daviesgeek awesome. Thanks a lot! <comment27957> @segfault NP! Glad to help!