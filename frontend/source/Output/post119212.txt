How can I allow a non-root user to use ports below 1024? <body> I am working with an application that utilizes a port below 1024 because it was originally intended to be run as coderoot/code.  I would like to debug the app in an IDE which I open as myself (non-root user) but I do have codesudo/code privileges.  I have reasons against remote debugging as well as opening the IDE under sudo.  So the only way for me to do this would be to allow a non-root user to use ports or a port below 1024.  Can that be done and how?  <answer119235> If you can't change your app to use a port above 1024 then the easiest way would be to take the port it is using and map it to a port above 1024.  You can do that using the firewall, codeipfw/code is the tool for setting the firewall. You could also do it using 'nc' - sometimes known as ncat or netcat.  There is a question here that gives more details. The thread also mentions "AuthBind" which is an open source package to that allows just this - opening ports below 1024 without granting root privileges.    <answer119236> strongCaveat:/strong If your debugging only requires a single connection, and you don't need to specifically debug connect/disconnect events...  You could use codenetcat/code (or codenc/code on some systems).  You set your application to open, say, port 12345 (user-openable). Then you use netcat to open, say, port 123 (privileged-users-only) and forward the data to port 12345.  precode# sudo nc -l 123 | nc localhost 12345 /code/pre  The first half of the command runs netcat codenc/code and tells it to listen code-l/code on port code123/code. The pipe redirects data from the first netcat instance to another one. The second command connects to your application and forwards the data through.  Note that as soon as you run this command, the second instance of netcat will connect to your application. If your application is going to start pushing out data immediately, you will want to connect your client very quickly, and will need to be careful about how data is buffered.  If you want the client to be able to disconnect and reconnect without having to restart netcat, then instead run:  precode# sudo nc -lk 123 | nc localhost 12345 /code/pre  The code-k/code tells netcat to keep running if the client disconnects from port 123.  Again, there's limitations with this method, as you're largely giving up control of the connection side of things by having netcat handle it for you. On the other hand, it's very quick and easy to set up and tear down, if that's all you need.  <comment139075> I could tell my app to use a port above 1024 but it would require config changes between my local environment and the source code coming from the VC repository -- that's why i am trying to avoid it <comment139076> I could tell my app to use a port above 1024 but it would require config changes between my local environment and the source code coming from the VC repository -- that's why i am trying to avoid it <comment139077> Or the addition of a command-line argument that overrides the configured port or which config file is used. IDEs can typically run with a specific command line, which you wouldn't otherwise use when running as the real service. <comment139078> I hadn't thought of the `ipfw` method, definitely like that better than the netcat solution for not introducing additional complexity with connection handling.