difference b/w various commands for getting root access in terminal <body> I have used linux:codeKali/code for a while and to get root access i just needed to type: codesu/code in terminal. But in OSX i need to type in codesu -/code what does this code-/code mean?   If i just type codesu/code in terminal than i get codesh-3.2#/code in next line   whereas if i type codesu -/code then i get coderoot#/code in next line.  What's the difference between all of these commands.   Also i see some other commands to get root access in terminal:  (1) codesu bash/code (2) codesudo su/code  Please help to understand difference b/w all these commands.   <answer147363> From codeman su/code:  precode-l      Simulate a full login.  The environment is discarded except for         HOME, SHELL, PATH, TERM, and USER.  HOME and SHELL are modified         as above.  USER is set to the target login.  PATH is set to         ``/bin:/usr/bin''.  TERM is imported from your current environ-         ment.  The invoked shell is the target login's, and su will         change directory to the target login's home directory.  -       (no letter) The same as -l. /code/pre  As for codesu/code versus codesudo/code, it's generally accepted in Apple circles that codesudo/code is the preferred method of working in root. By default, codesu/code is disabled on OS X (as is the root account). There are only a few occasions when I've had to enable root to get things done.  For more information, I recommend reading both manpages.  codeman su/code codeman sudo/code  <comment173725> i am starting to learn bash scripting. So, i wanted root access to practice few codes. Thanks a lot :* <comment173726> It's a very, very bad idea to practice coding as root. You want as low-power an account access as possible so as to ensure that something you do incorrectly cannot have dramatic, system-wide effects. Only use root privs when you absolutely need them, e.g., when installing compiled binaries: `./configure ; make ; sudo make install`. Kisses back atcha. <comment173727> thanks a lot for such a great comment. But i'll test them on my pc(installed Hackintosh in it) not my original MacBook <comment173728> Enjoy, @StackOverflow32. :)