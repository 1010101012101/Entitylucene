Curl terminal command syntax from Applescript <body> I want to execute a codecurl/code command in Applescript that does the following (per this SE question/answer):  https://superuser.com/a/1054803/471181     ...Do an codeHTTP POST/code of the strongemcontents/em/strong (as a string) of a local file located at codepath/to/my-file.txt/code to a URL endpoint at codehttp://example.com/API/code.   The correct codecurl/code command for that is the following:  Terminal  precodecurl -d "data=@~/path/to/my-file.txt" https://example.com/API /code/pre  Following the answers in this post, I tried the following Applescript command:  AppleScript  precodedo shell script "curl -d data=@~/path/to/my-file.txt https://example.com/API" /code/pre  The result I expect is to see the contents of emmy-file.txt/em POSTed to the API endpoint at codehttps://example.com/API/code with the key codedata/code.  However, the actual result I see at the endpoint with the key codedata/code is the following string:  API.data  precode"@~/path/to/my-file.txt /code/pre  In other words, instead of POSTing the contents of the file, it's POSTing the literal path to the file as a string.  h2Question/h2  strongWhat is the correct Applescript command syntax?/strong  Other unsuccessful attempts:  AppleScript  precodedo shell script "curl -d data=\@~/path/to/my-file.txt https://example.com/API" do shell script "curl -d \"data=@~/path/to/my-file.txt\" https://example.com/API" do shell script "curl -d 'data=@~/path/to/my-file.txt' https://example.com/API" /code/pre  On list to try:  ol liUse the fully qualified pathname to my-file.txt, do not use ~./li liEscape the " in the data= option, e.g.: do shell script "curl -d \"data=@~/path/to/my-file.txt\" https://example.com/API"/li /ol  <comment283400> @klanomath: That gets the same result. <comment283404> Would https://example.com/API really work or is it just an example? or do you have a test api somewhere? <comment283412> Two thing I can think of. 1. Use the fully qualified pathname to `my-file.txt`, do not use `~`. 2. Escape the `"` in the `data=` option, e.g.: `do shell script "curl -d \"data=@~/path/to/my-file.txt\" https://example.com/API"`