How to create a link, for multiple users, to a network share, which itself is on a network share? <body> h1Working Windows-based solution/h1  I've got a folder on a network share which works great in Windows.  It is basically an index of other available file servers.  It looks something like this:  precode\\server1\directory     Server2.lnk   &lt;-(links to \\server2\files)     Server3.lnk   &lt;-(links to \\server3\files)     Server4.lnk   &lt;-(links to \\server4\files) /code/pre  I'm trying to replicate this functionality in macOS, but I have run into these problems:  h1Attempting to use an Alias in macOS/h1  I connected to code//server2/files/code via codeFinder/code using codeGo -&gt; Connect to Server/code.  Once I was connected in codeFinder/code, I created an codeAlias/code using for the code//server2/files/code folder.  I then copied that codeAlias/code to the code//server1/directory/code location.  The codeAlias/code works... as long as I'm using the same computer from which I created the codeAlias/code.  But if I try to use it from another mac, it fails.  The other mac doesn't even seem to recognize the file as an codeAlias/code file.  It has an icon similar to a codeterminal/code icon, and when I double-click it, the mac tells me that there is no Application defined to open the file.  I noticed that the original created codeAlias/code file doesn't seem to have any kind of extension, so I'm not sure how a different mac is supposed to recognize it as an codeAlias/code file.  The nice thing about a Windows code.lnk/code file is that it seems to work reliably and consistently no matter from what machine the code.lnk/code is accessed, whereas a mac codeAlias/code file seems to somehow depend on some configuration of the original machine where it was created.  For example, if I open the codeAlias/code file in codevi/code, I can see amongst the garbled code that it includes at least the username used to access the Share, whereas I want each user that clicks on the codeAlias/code to access the Share using their own credentials (the mac is joined to AD and users login using their AD credentials).  Again, this works seamlessly with UNC paths and code.lnk/code files.  h1Attempting to use a terminal script in macOS/h1  I tried to make a simple script that mounts the shares.  So inside code//server1/directory/code I created a file codeServer2.command/code with the following content:  precodemkdir /Volumes/Server2 mount_smbfs //server2/files /Volumes/Server2 cd /Volumes/Server2 open . /code/pre  My problem with this solution is that I have many servers and many users using the same machine.  One great thing about using the codeConnect to Server/code option in Finder is that it seems to automatically "clean up" the code/Volumes/code directory.  After ejecting a share, or after ending a session, it removes the corresponding code/Volumes/Sharename/code folder.  I don't see any way to accomplish the same behavior if I use this terminal-based solution.  h1Question/h1  Can someone give me a good way to replicate the code.lnk/code functionality I have described above?    I know the Windows links functions via UNC paths, whereas in macOS I can only access these network shares via codesmb/code or codeafp/code mounts, but since I see that the codeConnect to Server/code option pretty much functions how I need it to, I just need a way to use that same functionality, with the caveat that I need to automate it, because I'm not going to ask my Users (I have many Users using the same machine) to each create a codeConnect to Server/code codeAlias/code manually.  <answer260177> My feeling about what you want to achieve in Mac OS (or a Unix) works with a symbolic link. Finder has functionalities above OS embedded functions. I guess an alias won't work with Terminal / Shell. Symbolic links are created on the shell but also work transparent in Finder. Try out the thread Backup iPhone to external drive on Mac ... this explains symbolic links wonderfully.  Hope, this was what your are looking for!  <answer260884> Found the answer.  You must create an code.afploc/code file.  This is similar to an code.inetloc/code file.  The easiest way to create a code.afploc/code file:  ol liopen codeFinder/code/li licodeGo -&gt; Connect to Server/code/li litype the address in the codeConnect to Server/code window (e.g. codeafp://server.domain.com//code/li lihighlight what you just typed (codeafp://server.domain.com/code)/li ligrab what you just highlighted and drag it to the desktop (or any folder, presumably) and release/li lia file named codeserver.domain.com.afploc/code should be created automatically on your desktop/li liyou can then copy that file anywhere and it will function to automatically start the codeGo -&gt; Connect to Server/code process on any mac computer/li liyou can also rename the file if you want, and you can edit its contents to create other code.afploc/code files that point to other servers or paths/li liyou can also use this same process and substitute an codesmb:///code path.  this creates an code.inetloc/code file which works the same way/li /ol  <comment325543> Yes, as you've discovered, aliases are pretty closely tied to the computer that created them. The way around this would normally be symbolic links, although I'm not sure how well that would work in the arrangement you want. <comment325606> I don't think I can create a symbolic link to an `smb` or `afp` share.  I could only create a symbolic link to a mount point on the computer, which doesn't really solve my problem.  I basically need a "mount-on-demand" solution that also includes an "unmount-on-demand" function.  All the functionality I need is already contained within Finder's `Connect to Server`.  I basically need a way to call that functionality from the command line, or replicate it in another way. <comment325818> I know how a symbolic link works, but unless I'm mistaken a symbolic link only works to point to a path on the local filesystem.  To use a symbolic link I would have to mount the network share to a local mountpoint first, which really just brings me right back to the same problem I have with my terminal-based solution.