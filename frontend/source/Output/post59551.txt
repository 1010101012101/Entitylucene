Are there QuickLook plugins that show more details about Applications? (.app) <body> Is there a better QuickLook plugin than the built-in for quicklooking applications?  Something that would show more of the info define in codeFoobar./Contents/Info.plist/code, like version number and bundle identifier for example would be ideal.  <answer63479> Simple answer, no.  More complex answer is still no, but that doesn't mean it can't be done (Late Night Software's Script Debugger overrides the default QuickLook viewer for applications (com.apple.application) but you as the user don't see any difference).  There are a few sites around such as Quick Look Plugins and QLPlugins that offer plugins (.qlgenerator files), however there are none that enable more information on .app files to be shown.  The qlgenerator that does the job is StandardBundles.qlgenerator and is found in the /System/Library/QuickLook/ folder which is OSX's base folder for all QuickLook plugins that are OSX base types such as applications, Text files or Emails.  It provides the QuickLook functionality for the following base file "types".  ul licom.apple.application (base type for ALL OSX application)/li licom.apple.systempreference.prefpane (Preference Pane files naturally)/li /ul  Any replacement plugin would have to provide all the functionality of the existing plugin, in this case the Preference Pane quick look functionality.  Plugins live in 4 different places, and the order in which plugins are preferred is as follows:  ol liInside an application bundle - an application specific QuickLook plugin usually used to provide QuickLook functionality for bespoke file types/li li~/Library/QuickLook - your user plugins (does't exist until created by the user)/li li/Library/QuickLook - your mac's system wide application plugins/li li/System/Library/QuickLook - your mac's system wide Apple base type plugins/li /ol  Overriding the system default behaviour for .app can therefore be done with the following caveats:  ul liIf another application also provides QuickLook functionality for the type (com.apple.application) and it appears higher in the hierarchy (1 highest, 4 lowest) then it will be used instead./li liApple do state in the QuickLook developer documentation that for each of the above levels of hierarchy, if more than one plugin is found for a specific type (e.g. com.apple.application) then only the first one is used and you have no control over which one under normal circumstances except by forcing QuickLook to use a specific plugin using codeqlmanage -g/code/li /ul  So yes it can be done, but nothing currently exists in the public domain that provides this functionality and therefore something would have to be written bespoke to provide it.  If it was implemented, using it has it's issues since it would be for an OS X base type... so replacing the base type is not a good idea; the priority of the plugins is not fixed and you cannot be sure that the plugin would actually be the one to run. 