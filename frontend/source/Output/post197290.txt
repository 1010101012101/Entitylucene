Command and Terminal.app - again <body> This has been the subject of a lot of discussions before and of a lot of answers. However, I have only found workarounds and band aids so far.  My seemingly simple goal is to obtain the same behaviour in Terminal.app as in the other OSX applications in terms of shortcuts and cursor movement (I am not even asking for the same behaviour as in Windows/Linux).   So far, I figured out that I can change some shortcuts that affect the actual Terminal.app window in System Preferences → Keyboard and that I can do some remapping in Terminal → Preferences → Profile → Keyboard. However, both of these possibilities fall slightly short of my intended goal.  First, when I use System Preferences, I can only remap shortcuts and not add multiple ones for the same command. Second, the remapping options inside Terminal.app do not allow to choose kbd⌘Cmd/kbd as the Modifier key. This is my main issue.   Is there some way to enable this (using Karabiner to map kbd⌘Cmd/kbd-kbdL/kbd to kbd⌃Ctrl/kbd-kbdL/kbd is not really an option because then both keys behave the same). I know that iTerm2 allows this kind of remapping, but it would be nice and consistent to have it in Terminal.app as well.  So, how can I ultimately achieve my goal and have Terminal.app yield the same behaviour as any other OS X application?  <answer197302> Your question is not clear, however it appears that you want to enable more robust keyboard shortcuts in Terminal. I suggest you download iTerm2 https://www.iterm2.com   You can map many different keyboard shortcuts from iTerm's preferences as shown below:  img src="https://i.stack.imgur.com/pG0Tr.png" alt="Keyboard Shortcut Pane in itTem2"  <answer197303> As I understood you want to use kbd⌘Cmd/kbd bindings with codeTerminal.app/code and pure terminal applications like shell(bash/zsh/etc), ViM, emacs, and so on. Please, comment me if I misunderstood you.  Base codeTerminal.app/code threats all shortcuts with kbd⌘Cmd/kbd key as menu shortcuts this keypress will not transferred to terminal applications. This completely prevent using kbd⌘Cmd/kbd key on keyboard for bindings in terminal applications (you can use kbdOption/kbd key as kbdMeta/kbd instead)  This emmay/em prevent have same bindings for kbdHome/kbd and kbdPgDown/kbd actions. But terminal applications uses codeescape sequences/code to process every key, and you can lookup which sequence this or other terminal (look at code$TERM/code environment variable) uses: for example, codekD/code termcap for me is '\^[[3~' and codekh/code code\^[OH/code.  With this way you can translate mappings using codeTerminal → Preferences → Profile → Keyboard/code.  Please refer with codeterminfo(5)/code database  and codeechotc/code function in codezsh/code  to understand which termcap you should redefine.  codeiTerm2.app/code shows you human way to do it and gives you ability use raw kbdMeta/kbd and kbdOption/kbd keystrokes.  <comment235832> Can you format your answer more clearly? It's very hard to read. Also, your title is not descriptive. <comment235839> It is still not clear, what you are trying to achieve. Maybe you can give an example? <comment235865> Bindings using Ctrl are special to the *shell*, not to Terminal, so rebinding might be a bad idea. Did you try `set -o emacs` in the she'll (which should give you nearly the same)?