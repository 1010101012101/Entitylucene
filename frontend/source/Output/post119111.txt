Command line tools available by default <body> In a unix based system a number of commands are available by default (either in code/bin/code or code/usr/bin/code). Suppose in some time I installed more tools like git, svn â€¦   In OS X if I install XCode and then the command line tools package, a bundle of development tools will be getting installed into the system. So how can I know which commands are available at the time of the installation of the OS?  Is codenetcat/code, codenc/code available by default on Mac OSX or is that installed along with command line tools ?  <answer119116> codenetcat/code is part of the Base System Binaries as you can see with   precodepkgutil --files com.apple.pkg.BaseSystemBinaries | grep "usr/bin/nc" /code/pre  <answer119117> You can't actually tell which executables were part of the original OS and which were installed later.  Looking at the man page will generally give you a good idea however. If the man page starts something like "BSD General Commands Manual" it is almost certainly part of the original OS. You will notice that these will also end with a line that contains either 'BSD' or 'Mac OS X' at each end.  <answer119118> strongSo how can I know which commands are available at the time of installation?/strong  Commands available after a fresh install belong to one of these four packages:  ul licodecom.apple.pkg.BSD/code/li licodecom.apple.pkg.BaseSystemBinaries/code/li licodecom.apple.pkg.BaseSystemResources/code/li licodecom.apple.pkg.Essentials/code/li /ul  You can list the commands included in every package with this command:  precodepkgutil --files &lt;package name&gt; | egrep '^usr/s*bin|^s*bin/' /code/pre  strongAre codenetcat/code, codenc/code available by default on Mac OS X or is that installed along with command line tools?/strong  I found codenc/code with:  precodepkgutil --files com.apple.pkg.BaseSystemBinaries | egrep '^usr/bin/nc' /code/pre  so yes, codenc/code belongs to the base Mavericks (OS X 10.9) installation.  I couldn't find codenetcat/code, so if you have it on your system it was installed later.  hr  To list all commands provided by all packages, run in Terminal:  precodefor p in $(pkgutil --packages); do    list_of_cmds=$(pkgutil --files $p | egrep '^usr/s*bin|^s*bin/')   if [ ! -z "$list_of_cmds" ]; then     echo "&gt;&gt;&gt;&gt; $p &lt;&lt;&lt;&lt;"     echo "$list_of_cmds"   fi done /code/pre  You can also pipe the command to a file on your Desktop for later reference:  precodefor p in $(pkgutil --packages); do    list_of_cmds=$(pkgutil --files $p | egrep '^usr/s*bin|^s*bin/')   if [ ! -z "$list_of_cmds" ]; then     echo "&gt;&gt;&gt;&gt; $p &lt;&lt;&lt;&lt;"     echo "$list_of_cmds"   fi done &gt; ~/Desktop/cmds_from_pkgs.txt /code/pre  <comment138912> `nc` IS `netcat`. <comment138918> There are actually several netcat programs, on the SUSE Linux servers I administer it's called `netcat`, on OS X it's called `nc`, on Ubuntu 12.04 `netcat` is a symlink to `nc`. And then of course you have `ncat`, available at nmap.org. `nc` seems to be the preferred BSD name, while GNU and some distributions use `netcat`. Though SUSE's `netcat` appears be the original implementation by hobbit@avian.org, OS X's `nc` was rewritten by Erick Jackson (AUTHOR section in man page), that's why I treat `nc` and `netcat` as different programs. <comment322384> Another option is to use `pkgutil --file-info /usr/bin/nc` to obtain the packages that had it installed. The command lists also OS updates that have since updated the file since the installation. On 10.11 the package containing `nc` is `com.apple.pkg.Essentials`, so yes it is included by default.