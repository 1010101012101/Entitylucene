Tail multiple log files <body> I have an application which generates new log files each time it is run.  They all go to one folder, with filenames like this, and the next log isn't started until the current one is finished.  precodeLog-20140122102407.txt Log-20140122102739.txt Log-20140122103640.txt Log-20140122162121.txt Log-20140122163145.txt /code/pre  I want to monitor the current progress in a terminal window like codetail -f/code but that won't work with multiple files.  I've heard of multitail, but don't know how to use it, and I don't want my terminal window split into multiple sections.  <answer118429> h2tail/h2  codetail/code can tail multiple files. Donovan Bray's article explains more, tail: can tail multiple files simultaneously, who knew? and other tail tricks.  To tail multiple files, pass in a file pattern:  precodetail -f Log-* /code/pre  h2multitail/h2  You can ask multitail to combine the output of multiple files. The examples page contains a useful approaches and tricks.  This command combines and tails two logs:  precodemultitail /var/log/apache/access.log -I /var/log/apache/error.log /code/pre  If you need to tail any logs in a folder, including those actively being created, use the code-q/code flag:  precodemultitail -q 'test*' /code/pre  This will tail any files matching the pattern codetest*/code, including those that appear after the command has been issued. Thanks to @folkert-van-heusden for this suggestion and code fix.  If you have homebrew installed, you can install codemultitail/code using the Terminal.app command:  precodebrew install multitail /code/pre  See also:  ul liHow-To: Tail Multiple Files With Multitail/li liIs there any Mac text editor with tail or watch files change feature?/li /ul  <comment138213> As far as I can tell, neither of those solutions works because it doesn't recognize future log files which are created after the command is entered. <comment138582> I am not aware of any tool that does this. If your command includes a wildcard * then, you can press 'Command + .' to interrupt tail, press up, and finally press enter to resume logging with the latest files. <comment140721> elliott: have you checked -q and -Q? maybe they are of use? <comment140724> normally multitail -Q should work in this case but I noticed that it is broken. working on it! <comment140868> Ok I've fixed it: -q/-Q should now work (in multitail v6.1). Tested by: multitail -q 'test*' and then in an other terminal window: sleep 3 ; echo 1  test1  ; sleep 3 ; echo 2  test2  ; sleep 3 ; echo 3  test3 ; sleep 3 ; etc.