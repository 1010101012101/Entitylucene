Partition type suddenly FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF, drive unmountable <body> I have two drives inside my MBP, an SSD for the OS and the original HDD for large Data. The HDD has 3 Partitions:  ol liMy Data (Core Storage volume)/li li20Gb for Linux/li li4Gb for Linux Swap/li /ol  Recently I ran coderepair disk/code on the drive, as Disk Utility thought it was damaged. The repair aborted with the request to format and restore the whole drive, but I could use it like before (so maybe unrelated). Last night, everything was normal, but when I woke up, my data partition looked like this:  img src="https://i.stack.imgur.com/1Qwk5.jpg" alt="enter image description here"  It used to be named codeMacintosh HD/code (like the drive) and now it has lost its name and the partition type turned into codeFFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF/code. codediskutil info /dev/disk1s2/code reports  precode   Device Identifier:        disk1s2    Device Node:              /dev/disk1s2    Part of Whole:            disk1    Device / Media Name:      Macintosh HD     Volume Name:              Not applicable (no file system)     Mounted:                  Not applicable (no file system)     File System:              None     Partition Type:           FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF    OS Can Be Installed:      No    Media Type:               Generic    Protocol:                 SATA    SMART Status:             Verified    Disk / Partition UUID:    00002980-188B-0000-A938-00003F710000     Total Size:               475.0 GB (474999996416 Bytes) (exactly 927734368 512-Byte-Units)    Volume Free Space:        Not applicable (no file system)    Device Block Size:        512 Bytes     Read-Only Media:          No    Read-Only Volume:         Not applicable (no file system)    Ejectable:                No     Whole:                    No    Internal:                 Yes    Solid State:              No /code/pre  Also a partition named codeBoot OS X/code seems to be constantly mounted, even after restart, which has not been the case before.  Now, I have most of the data backed up, but can I somehow get my partition back without all the hassle?  strongEdit:/strong  precode$ sudo gpt -r show /dev/disk1 gpt show: /dev/disk1: Suspicious MBR at sector 0       start       size  index  contents           0          1         MBR           1          1         Pri GPT header           2         32         Pri GPT table          34          6          40     409600      1  GPT part - C12A7328-F81F-11D2-BA4B-00A0C93EC93B      409640  927734368      2  GPT part - FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF   928144008     262144      3  GPT part - 48465300-0000-11AA-AA11-00306543ECAC   928406152     615800   929021952   39294976      4  GPT part - EBD0A0A2-B9E5-4433-87C0-68B6B72699C7   968316928       2048   968318976    8388608      5  GPT part - 0657FD6D-A4AB-43C4-84E5-0933C84B4F4F   976707584      65551   976773135         32         Sec GPT table   976773167          1         Sec GPT header   $ sudo fdisk /dev/disk1 Disk: /dev/disk1    geometry: 60801/255/63 [976773168 sectors] Signature: 0xAA55          Starting       Ending  #: id  cyl  hd sec -  cyl  hd sec [     start -       size] ------------------------------------------------------------------------  1: EE 1023 254  63 - 1023 254  63 [         1 -     409639] &lt;Unknown ID&gt; *2: DA 1023 254  63 - 1023 254  63 [    409640 -  927734368] &lt;Unknown ID&gt;  3: AF 1023 254  63 - 1023 254  63 [ 928144008 -     262144] HFS+  4: 83 1023 254  63 - 1023 254  63 [ 929021952 -   39294976] Linux files* /code/pre  Since I know that it was an OSX Journaled file system in a Core Storage Volume, can I somehow convince OSX of this fact and fix the partition? Do I maybe need to edit the partition table?  As suggested, I removed partitions 2 and 3 with  precodesudo gpt remove -i 3 /dev/disk1 diskutil umountDisk /dev/disk1 sudo gpt remove -i 2 /dev/disk1 /code/pre  Now the partition table is   precode$ sudo gpt -r show /dev/disk1 gpt show: /dev/disk1: Suspicious MBR at sector 0       start       size  index  contents           0          1         MBR           1          1         Pri GPT header           2         32         Pri GPT table          34          6          40     409600      1  GPT part - C12A7328-F81F-11D2-BA4B-00A0C93EC93B      409640  927734368      2  MBR part 218   928144008     262144      3  MBR part 175   928406152     615800   929021952   39294976      4  GPT part - EBD0A0A2-B9E5-4433-87C0-68B6B72699C7   968316928       2048   968318976    8388608      5  GPT part - 0657FD6D-A4AB-43C4-84E5-0933C84B4F4F   976707584      65551   976773135         32         Sec GPT table   976773167          1         Sec GPT header /code/pre  <answer239766> You have to edit the partition table and modify the type of disk1s2 (and correct  the type of disk1s3) to get your main data partition back and make Boot OS X invisible:  ol liLog-in as admin/li liOpen Terminal and enter  precodesudo gpt -r show /dev/disk1 /code/pre  to get an overview/li liUnmount disk1:  precodediskutil umountDisk /dev/disk1 /code/pre/li liRemove partition 2 and 3:  precodesudo gpt remove -i 3 /dev/disk1 diskutil umountDisk /dev/disk1 sudo gpt remove -i 2 /dev/disk1 /code/pre/li liRe-add the partition 2 and 3  precodediskutil umountDisk /dev/disk1 sudo gpt add -b 928144008 -i 3 -s 262144 -t 426F6F74-0000-11AA-AA11-00306543ECAC /dev/disk1 diskutil umountDisk /dev/disk1 sudo gpt add -b 409640 -i 2 -s 927734368 -t 53746F72-6167-11AA-AA11-00306543ECAC /dev/disk1 /code/pre/li /ol  The correct partition type of a Boot OS X partition is 426F6F74-0000-11AA-AA11-00306543ECAC (like a Recovery HD partition) and 53746F72-6167-11AA-AA11-00306543ECAC for a CoreStorage partition.  hr  Update: codegpt/code behaves strange because the partition table contains an MBR instead of an PMBR - the MBR has to be replaced by a PMBR:  ul liReboot your Mac/li liOpen Terminal and enter  precodesudo gpt -r show /dev/disk1 /code/pre  to get an overview and all partition sizes/types/li lirebuilding the GUID partition table and destroying the bogus MBR  precodediskutil umountDisk /dev/disk1 sudo gpt destroy /dev/disk1 diskutil umountDisk /dev/disk1 sudo gpt create -f /dev/disk1 sudo gpt add -b 40 -i 1 -s 409600 -t C12A7328-F81F-11D2-BA4B-00A0C93EC93B /dev/disk1 sudo gpt add -b 409640 -i 2 -s 927734368 -t 53746F72-6167-11AA-AA11-00306543ECAC /dev/disk1        diskutil umountDisk /dev/disk2  diskutil umountDisk /dev/disk1 sudo gpt add -b 928144008 -i 3 -s 262144 -t 426F6F74-0000-11AA-AA11-00306543ECAC /dev/disk1 diskutil umountDisk /dev/disk2 diskutil umountDisk /dev/disk1 sudo gpt add -b 929021952 -i 4 -s 39294976 -t EBD0A0A2-B9E5-4433-87C0-68B6B72699C7 /dev/disk1 diskutil umountDisk /dev/disk2 diskutil umountDisk /dev/disk1 sudo gpt add -b 968318976 -i 5 -s 8388608 -t 0657FD6D-A4AB-43C4-84E5-0933C84B4F4F /dev/disk1 /code/pre/li /ul  <comment294367> I'm not the right guy to answer, but curious, what did you originally use to create the Linux partitions? Did you make a Linux partition in Disk Utility originally and then you formatted and split that partition using Linux? <comment294368> I think I made a partition in disk utility and then split that during the install process, I'm not quite sure. Maybe I made both beforehand. <comment294370> Edit your post and add the output from the commands `sudo gpt -r show /dev/disk1` and `sudo fdisk /dev/disk1`. <comment294371> @DavidAnderson Yes, sir. <comment294378> What do these strings mean? `426F6F74-0000-11AA-AA11-00306543ECAC` <comment294380> Does this take into account the fact that the partition is encrypted? <comment294382> But `/dev/disk1s2` is the encrypted partition, maybe I'm misunderstanding something. But comparing the gpt output for `/dev/disk0`, my main drive with the OS, the partition has the same `53746F72-6167-11AA-AA11-00306543ECAC` identifier, as you suggest. So I guess it's alright. <comment294384> Your first `gpt add` command yields `gpt add: /dev/disk1: Suspicious MBR at sector 0` and  `gpt add: /dev/disk1: error: no space available on device` <comment294386> @oarfish After removing partition 2 and 3 enter `sudo gpt -r show /dev/disk1` and check if the two slices are really removed. You then may add the second partition first - usually the order (3/2 or 2/3) of adding partitions is irrelevant. <comment294387> The entries 2 and 3 are now `409640  927734368      2  MBR part 218` and `928144008     262144      3  MBR part 175`, everything else is the same. <comment294388> @oarfish Please update your question with the new `sudo gpt -r show disk1` <comment294389> I've added the complete output. <comment294390> @oarfish That's a strange behavior of `gpt`. Please completely reboot your Mac. Then completely destroy the GUID partition table - I will guide you. This may break Linux! <comment294392> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/40373/discussion-between-oarfish-and-klanomath).