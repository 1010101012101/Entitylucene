Copy recursively files and folders, but preserving everything while gaining ownership? <body> I would like to copy files and folders recursively from an external drive to my internal SSD.  However, when I drag and drop, and, subsequently, when I use the copied files, I am always asked to enter an administrator credentials. I don't know if it is a codechmod/code or codechown/code issue, or both (difficulties to making the difference between them).  Is there a way (through Terminal I guess) to copy the files:  ul liwhile preserving all the files and folders details (i.e. original date/time stamps and whatever metadata necessary/useful);/li libut gaining ownership (so I don't have to enter administrator credentials each time I want to emlook/em, emmodify/em or emmove/em a file)./li /ul  I guess it is either codecp/code or codersync/code, but I must admit having difficulties sorting out and understanding all the available switches.  <answer180995> In order to successfully copy the files in the first place, you need at least have read access to the files at the original location.  To make sure that you can read them, you can either change their permissions with codesudo chmod -R o+rx /drag/your/original/folder/from/Finder/here/code or as suggested in the comments of your question have ownership of the drive ignored for the time-being, which leaves the original files unchanged.  To actually copy the files over, use the following command:  precodecp -R /drag/your/original/folder/from/Finder/here /drag/your/target/folder/from/Finder/here/ /code/pre  For more information during the copy process, use the following command:  precodecp -Rv /drag/your/original/folder/from/Finder/here /drag/your/target/folder/from/Finder/here/ /code/pre  Mind the slash at the end of the target folder or the target folder itself will be overwritten by the contents.  Understanding permissions when moving/copying files in UNIX/BSD (Mac OS X's underlying system is based on BSD):  ol liWhen moving a file from codeA/code to codeB/code on the same partition/volume, the ownership of the files will not change/li liWhen moving a file from codeA/code to codeB/code between different partitions/volumes, the ownership of the files will change to the user moving them (applying codesudo/code to the copy command will have the target files ownership set to coderoot/code)/li liWhen copying a file from codeA/code to codeB/code regardless of the location will apply the ownership of the target files to the user copying them (applying codesudo/code to the copy command will have the target files ownership set to coderoot/code)/li /ol  With number 1 only the file descriptors will change internally, but no file will be physically moved.  With 2 and 3 the files are physically copied over to the new location with step 2 doing a second step and deleting them from the original location after each copy.  strongUPDATE (to address comment):/strong  If you copied over the files using codesudo/code, you can modify the permissions of the target files using codechown/code and codechmod/code.  Commands are:  precodesudo chown -R &lt;user&gt;[:group] /drag/your/target/folder/from/Finder/here /code/pre  code&lt;user&gt;/code is the account name of your user (not the full name)br/ code:group/code is a group, which by default for any user is codestaff/code and for any admin is codeadmin/code.  Since it is not required, you can omit to leave it as is (hence the square brackets)  precodesudo chmod -R 770 /drag/your/target/folder/from/Finder/here /code/pre  This will give you and the primary group r/w and execution/traversal rights on the files.  <comment215124> Does it make any difference to drag & drop if you set Ignore Ownership on the external drive? [from Get Info] <comment215130> Ignoring ownership on an external drive will allow you to access those files with all permissions available, but will not help after they are copied over. <comment215144> Tried `cp -R /original_folder/ /destination_folder/` but Terminal says `Operation not permitted`. So I sudoed the command, but the copied files have administrator access level. The `original_folder`comes from an Administrator privileged disk, but the destination folder has no administrator privileges. Any idea on how to solve this with `cp` or do I have to resort to `chmod`? <comment215146> _Get Info_ does not show any _Ignore Ownership_ switch for the drive... Does not seem to be an option (using Mac OS X 10.10.3). <comment215206> Updated my answer to address your comment/question. <comment215221> Just did what you suggested Phoenix, but when I try to move the folder (containing files) through drag-&-drop the System wants to copy the files and/or folders, whereas when I do that with any other files and/or folders created on the disk, they are moved (not copied, with a small plus sign embedded in round green circle). <comment215227> In other words, I would like that the files I copy from the external hard drive to my profile in the internal SSD of my computer to act like all the other files I created and that are residing in my profile of the SSD inside my Mac. :) <comment215234> Keep in mind that when you cross the boundaries of a drive, you will always copy the files by default.  You can hold down either `Cmd` or `Alt` (I always confuse them, but cannot verify it right now) to switch between copying and moving.  If you do not have the proper permissions, you will ALWAYS copy the files instead of moving them.  To help that, you need to run the two last commands I posted in my answer on the folder holding the files.  On any drive OTHER THAN the boot drive, you can also run those commands on the entire drive.