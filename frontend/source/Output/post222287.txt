Process is too verbose, how to stop it from flooding system.log? <body> I'm using this application (Solar.app) from Logitech to monitor the solar cells and batteries from their own solar keyboard (K750)  One process is much too verbose and logs approx. 400 bytes in /var/log/system.log at each keystroke.  I'm looking for various solutions to prevent the process from flooding system.log.  precodeJan  5 17:32:11 pc96 Solar Service[702]: Input data callback for device 0x6047d0 Jan  5 17:32:11 pc96 Solar Service[702]: End of data Jan  5 17:32:11 pc96 Solar Service[702]: Event = 1 device index = 1 Jan  5 17:32:11 pc96 Solar Service[702]: Input data callback for device 0x6047d0 Jan  5 17:32:11 pc96 Solar Service[702]: End of data Jan  5 17:32:11 pc96 Solar Service[702]: Event = 1 device index = 1 /code/pre  I have been able to  find a rule to match those messages, but:  1/  precode# ? [= Facility com.Logitech.Solar-Service] file solar-Service.log format=raw /code/pre  This rule (when used alone) actually logs the messages to a different file, in addition to codesystem.log/code. Here is solar-Service.log:  precode[Level 4] [Time 1452071909] [TimeNanoSec 309468000] [PID 702] [Sender Solar Service] [Facility com.Logitech.Solar-Service] [CFLog Local Time 2016-01-06 10:18:29.309] [CFLog Thread 160b] [ReadUID 501] [Message Event = 1 device index = 1] [UID 501] [GID 20] [SenderMachUUID C4A60E0E-5968-829C-BC55-931BBEB0A7F7] [Host pc96] [Level 4] [Time 1452071909] [TimeNanoSec 951289000] [PID 702] [Sender Solar Service] [Facility com.Logitech.Solar-Service] [CFLog Local Time 2016-01-06 10:18:29.951] [CFLog Thread 160b] [ReadUID 501] [Message Input data callback for device 0x6047d0] [UID 501] [GID 20] [Host pc96] [SenderMachUUID C4A60E0E-5968-829C-BC55-931BBEB0A7F7] /code/pre  2/   precode? [= Facility com.Logitech.Solar-Service] ignore /code/pre  .. but this rule (when used alone), does not ignore the messages.  and I don't understand why it is so.  <answer222295> Yes - there is a way to ignore messages from a specific sender / application instead of filtering based on severity of all messages. You will need to be minimally comfortable with the terminal or have a backup and be willing to erase your Mac and restore from the backup should you make syntax errors or cause issues in terminal.  The overview is:  ul liback up the system and make a backup copy of the system log configuration file/li liedit the configuration file (use codenano/code instead of codevi/code if you aren't used to using codevi/code)/li lirestart the logging process/li litest/li /ul  You need an admin user to proceed:  precodesudo cp -p /etc/asl.conf /etc/asl.bak sudo vi /etc/asl.conf sudo killall HUP syslog /code/pre  Here are the three lines (well one blank line doesn't render here and the first line is a comment so the only line that's needed is the one with codeFacility/code in it) I added to ignore the App Store messages from my system's /var/log/system.log file:  precode# ignore "App Store" messages ? [= Facility com.apple.appstore] ignore /code/pre  You should replace the codecom.apple.appstore/code with the results of your application.  precodemdls -name kMDItemCFBundleIdentifier /Applications/Solar\ Service.app/ /code/pre  I tried matching the application name with code[= Sender "App Store"] ignore/code but the spaces in the application name didn't seem to be respected or maybe that's just not how the log system works. The Facility seems to match to kMDItemCFBundleIdentifier in my testing.  Now, the bad news. The logging system is capable of logging thousands of messages a emsecond/em so ignoring the messages isn't going to do much but make that one file easier to look at. You might need to contact the vendor to get the application changed, but hopefully hiding the messages works for your needs since that's something you should be able to do easily.  <answer247200> To follow up on bmike's answer, the app identifier is codecom.logitech.Solar-App/code.  So the code you want to put in your codeasl.conf/code is  precode? [= Facility com.logitech.Solar-App] ignore /code/pre  If you want to confirm that I'm right about your app identifier, try:  precode/usr/libexec/PlistBuddy -c 'Print CFBundleIdentifier' /Applications/Solar\ App.app/Contents/Info.plist  /code/pre  And if you want this to go into effect right away, you can restart codesyslogd/code with something like this:  precodesudo launchctl unload /System/Library/LaunchDaemons/com.apple.syslogd.plist  sudo launchctl load /System/Library/LaunchDaemons/com.apple.syslogd.plist /code/pre  <comment269335> Possible duplicate of [How to disable logging to system.log in OS X?](http://apple.stackexchange.com/questions/157154/how-to-disable-logging-to-system-log-in-os-x) <comment269340> @klanomath That filters on error level and won't work for filtering one sender or one facility. Let's leave them linked for now and both open for answers. Now if you wanted to explain how to decipher the log level of this app's messages and then link to the other filtering change, that might be cool. <comment269342> @bmike There is another q&a which fits better (as duplicate) but I can't find it. <comment269350> I'm working on it but I'm still not able to stop it from logging to system.log. Is there a way to make the logs actually more verbose to help me catch my error if any ? I'm sometimes tail -f' ing that file.. that's why I'm interested in this <comment269455> See my edit.. maybe you know the answer ? <comment269460> If all else fails, try setting the file name for the log file to `/dev/null`.