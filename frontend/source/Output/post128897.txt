How to use /etc/paths.d to add executable files to my path? <body> I am trying to use /etc/paths.d to add an executable to my path variable but I have no success so far.  The full path of the executable file is: code/opt/ImageMagick/bin/convert/code  /etc/paths.d contains two files: 40-XQuartz and ImageMagick  The 40-XQuartz contains one line: code/opt/X11/bin/codebr The ImageMagick contains one line: code/opt/ImageMagick/bin/code  My codeecho $PATH/code gives:  code/Users/Administrator/.rbenv/shims:/Users/Administrator/.rbenv/bin:/Users/Administrator/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/local/mysql/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin/code  So it seems that only the first file (40-XQuartz) does its job. The permissions of the two files (40-XQuartz and ImageMagick) are exactly the same so my question is why the first one works and the second one is not.  I am running OS X Mavericks.  <answer128903> Have you started a new login shell since adding the new file for ImageMagick? The setting of the path from codepaths.d/code entries is done in code/etc/profile/code and code/etc/csh.login/code, so you need to start a new shell for the new entries to take effect.  OS X uses codepath_helper/code to set the path based on the files in code/etc/paths.d/code - you can always call it manually (assuming a Bourne-like shell here):  precode$ eval `/usr/libexec/path_helper -s` /code/pre  <answer129203> Running  precodeecho /opt/ImageMagick/bin|sudo tee /etc/paths.d/ImageMagick;bash -l;echo $PATH /code/pre  adds code/opt/ImageMagick/bin/code to codePATH/code on my installation.  Are you overriding codePATH/code in some other place like code~/.bash_profile/code?  The paths in code/etc/paths.d//code are added to the path by code/usr/libexec/path_helper/code, which is run from code/etc/profile/code, code/etc/zsh.env/code, and code/etc/csh.login/code. codepath_helper/code is not run by graphical applications or when bash is invoked as a non-login shell.  You can also set a default codePATH/code in code/etc/launchd.conf/code:  ol liRun for example codesetenv PATH /Users/Administrator/.rbenv/shims:/Users/Administrator/.rbenv/bin:/Users/Administrator/bin:/opt/local/bin:/opt/local/sbin:/usr/local/bin:/usr/local/mysql/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:/opt/ImageMagick/bin|sudo tee -a /etc/launchd.conf/code./li liEither restart, or run codelaunchctl&lt;/etc/launchd.conf;sudo launchctl&lt;/etc/launchd.conf/code and relaunch processes./li /ol  I prefer changing the path in code/etc/launchd.conf/code, because it also affects programs that are not started from shells, like text editors and programs started by launchd jobs.  <answer289064> Awesome, I was just playing around with adding ImageMagic to my Mac.  Not only do you need codeImageMagick/bin/code in your codePATH/code, you also need an environment variable set, or added to:  To test you can create it manually with:  precodeexport DYLD_LIBRARY=".:/opt/ImageMagic/lib" /code/pre  Information for setting an environment variable for Mac OS can be found here, Setting environment variables in OS X?  <comment150934> Of course I have started a new shell.I even restarted my mac. <comment151228> What shell do you use? What's about /etc/paths? <comment151248> Adding stiff to `/etc/paths.d` works for me, but I restart whatever terminal application I am using (ITerm2 in my case) for the new path to take effect <comment313622> new login shell worked for me