Macports force-activate all ports <body> When trying to install SciTE  precodesudo port install scite /code/pre  port stops at     Error: org.macports.activate for port gettext returned: Image error: strong/opt/local/bin/autopoint/strong already exists and does not belong to a registered port.  Unable to activate port gettext. Use 'port -f activate stronggettext/strong' to force the activation.   but if I run codesudo port -f activate gettext/code and re-try installing codescite/code, I end up with the same error message, this time with strong/opt/local/lib/libffi.6.dylib/strong and stronglibffi/strong and so on and so on...  How can I tell Macports to force activate all ports that stand in it's way from completing installing SciTE, without having to manually re-run the installation of the package I actually want and without having to copy-paste each activation command?   <answer233781> I was able to install the desired port by automating the activation process. The app fails to run due to some library version issues and I seem to be unable to fix those but that's a story for another answer or another question.  ol liCreate a script that continuously tries to install the port and automatically forcefully activates the discovered port that is blocking it. Copy paste the following into a file and call it codeport-instact.sh/code  precodeif [ "$EUID" -ne 0 ]   then echo "Please run as root"   exit fi target="$1" while [ 1 ] do     echo trying to install "$target"     if [[ $(port installed "$target" | grep "$target") ]]; then echo "$target" present; break; fi     line=`port install "$target" 2&gt;&amp;1 &gt; /dev/tty | grep "port -f activate"`     package=$(echo $line | sed -e "s/^.*port -f activate //" -e "s/. .*//")     if [ "$package" = "$oldpackage" ]; then echo double \""$package"\"; break; fi     oldpackage="$package"     echo activating "$package"     port -f activate "$package" done /code/pre/li liMake the file executable via codechmod +x port-instact.sh/code/li liRun it as root codesudo ./port-instact.sh scite/code and wait/li /ol  <answer233784> Deleting everything Macports and reinstalling it allows you to normally install ports.  Use the elaborate rm command from Macports guide (uninstalling):  precodesudo rm -rf \         /opt/local \         /Applications/DarwinPorts \         /Applications/MacPorts \         /Library/LaunchDaemons/org.macports.* \         /Library/Receipts/DarwinPorts*.pkg \         /Library/Receipts/MacPorts*.pkg \         /Library/StartupItems/DarwinPortsStartup \         /Library/Tcl/darwinports1.0 \         /Library/Tcl/macports1.0 \         ~/.macports /code/pre  Thanks to Mark for the suggestion.  <comment285604> The obvious question is what happens if you back up your mac and then delete the problem file `/opt/local/bin/autopoint ` ? <comment285623> Jove you upgraded OSX since installing Macports or restore /opt from a backup? <comment285671> @bmike it's a different file each time, I made that clearer now. <comment285672> @Mark I can't remember how all that /opt/ content got there. I had brew installed previously. More likely though: perhaps by installing one or multiple packages exported from Macports that I wasn't aware of. <comment285674> Oh dear - you might need to declare /opt bankruptcy and wipe/uninstall. I'm more versed in homebrew so I can't advise you on specifics here.. Hopefully a ports user can point out how to uninstall or repair a broken setup like you're reporting. <comment285675> I would do as bike suggests and delete macports and start again https://guide.macports.org/chunked/installing.macports.uninstalling.html and remove all homebrew <comment285678> I did `port -fp uninstall installed` but I guess that keeps /opt/local intact. I might have just to do the manual rm command. <comment334527> Wow, surprised this isn't a regular option in MacPorts. Thanks!