How to create a keybinding using the [fn] key as a modifier? <body> The half-size arrow keys on my MacBook are a little small for me. The keys I'd prefer to use are:  ul likbdfn/kbd + kbd&nbsp;J&nbsp;/kbd emto move left/em/li likbdfn/kbd + kbd&nbsp;K&nbsp;/kbd emto move down/em/li likbdfn/kbd + kbd&nbsp;L&nbsp;/kbd emto move right/em/li likbdfn/kbd + kbd&nbsp;I&nbsp;/kbd emto move up/em/li /ul  I badly want to use the "fn" key for this, both for ergonomic and practical reasons (ie: avoid conflicts with other apps).  Is this possible? How?  <answer48137> You are correct.  Although Mac OS X allows you to remap the kbdcontrol/kbd, kbdcaps lock/kbd, kbdoption/kbd, and kbdcommand/kbd keys, the kbdfn/kbd key is not included.  To do this, you'll need to use 3rd-party software such as DoubleCommand.  That will let you remap the kbdfn/kbd key to the kbdcontrol/kbd key.    From there, you should check out additional software to remap the kbdcontrol/kbd+kbdJ/kbd key etc. to emulate the left key etc. So long as you can emulate kbdctrl/kbd, you should be able to create the keybinding in ~/Library/KeyBindings. You might be able to do this last step in DoubleCommand as well.  <answer93521> I installed a third party utility to remap these keys on my MacBook Pro running OS X 10.8. strongHere are the steps I used:/strong   (1) strongDownload and install KeyRemap4MacBook.app/strong  (2) strongEdit/strong (or create) the following file in a text editor:  precode~/Library/Application Support/KeyRemap4MacBook/private.xml /code/pre  ...so that its content is:  precode&lt;?xml version="1.0"?&gt; &lt;root&gt; &lt;item&gt;         &lt;name&gt;JKLI to Arrow Keys&lt;/name&gt;         &lt;identifier&gt;private.jkli_to_arrow_keys&lt;/identifier&gt;         &lt;autogen&gt;             __KeyToKey__             KeyCode::J, ModifierFlag::FN,             KeyCode::CURSOR_LEFT         &lt;/autogen&gt;         &lt;autogen&gt;         __KeyToKey__             KeyCode::K, ModifierFlag::FN,             KeyCode::CURSOR_DOWN         &lt;/autogen&gt;         &lt;autogen&gt;         __KeyToKey__             KeyCode::L, ModifierFlag::FN,             KeyCode::CURSOR_RIGHT         &lt;/autogen&gt;         &lt;autogen&gt;         __KeyToKey__             KeyCode::I, ModifierFlag::FN,             KeyCode::CURSOR_UP         &lt;/autogen&gt; &lt;/item&gt; &lt;/root&gt; /code/pre  (3) strongSelect "Preferences" from/strong the little strongKeyRemap4MacBook icon in/strong the OS X strongMenuBar/strong at the top of the screen.  img src="https://i.stack.imgur.com/ihhEr.png" alt="KeyRemap4MacBook &gt; Preferences"  (4) In KeyRemap4MacBook's strong"Change Key" tab/strong, strongtick "JKLI to Arrow Keys"./strong (if this option doesn't appear, you may need to click the "ReloadXML" button)  img src="https://i.stack.imgur.com/31zBm.png" alt="KeyRemap4MacBook &gt; Change Key"  strongYou should now be able to use the Function key with J|K|L|I to control the cursor, in addition to the Arrow keys./strong  <comment55064> To clarify: I know how to do this using the ctrl key, the shift key, the alt key... unfortunately the *function* key seems to be off limits <comment55177> Not sure DoubleCommand works with Lion, I'll check this out. If it does, this would indeed be a solution, because OS X allows you to add keybindings ( ~/Library/KeyBindings ) with [ctrl] <comment55226> Very cool.  You should edit my answer to add that information! <comment235625> Update for those coming to this in 2015: KeyRemap4MacBook.app has been renamed and is available at [1]: https://pqrs.org/osx/karabiner