OpenSSL not getting linked with homebrew on El Capitan 10.11.6 <body> I am trying to code in C on OS X (El Capitan) and need to use OpenSSL. OS ships with version code0.9.8zh 14 Jan 2016/code.  I used homebrew to upgrade and install openssl (got version 1.0.2h) but am unable to link it correctly to use it. This is what is did:  precodebrew update  brew install openssl  brew link --force openssl /code/pre  which gave me error saying  codeWarning: Refusing to link: openssl/code.  My path references code/usr/local/bin/code as the first one.  Ran this command:  codeln -s /usr/local/Cellar/openssl/1.0.2j/include/openssl /usr/local/include/openssl/code   (found this solution here: Openssl with El Capitan among other places)  got no error output, so I assumed this worked. But..  codewhich openssl/code gives me this output: code/usr/local/bin/openssl/code  codeopenssl version/code gives me this output: codeOpenSSL 0.9.8zh 14 Jan 2016/code  All I'm trying to do is run some CLI commands/ write some C code edited in plain codevi/code editor, compiled using codegcc/code. I am including openssl in header files using  precode #include &lt;openssl/sha.h&gt; #include &lt;openssl/ripemd.h&gt; /code/pre  Also, the command I am running on CLI which led me to this path was this (if that helps):  precodeopenssl dgst -sha256 -sign ec-priv.pem ex-message.txt &gt;ex-signature.der. /code/pre  Gives me an error:  precodeEVP_SignFinal:wrong public key type. /code/pre  Googling led me to understand it's cause of an old OpenSSL version which I need to update.   Any ideas on how to proceed here?  <answer258023> You'll need to make sure you open a new shell after performing the link.  (I updated my medium article you linked for future reference: Openssl with El Capitan).  <answer262344> From Brew refusing to link openssl on Stack Overflow and Issue 3964, .Net GitHub (I think it was first reported with .Net):     I looked into the other option that was suggested for setting the rpath on the library. I think the following is a better solution that   will only effect this specific library.      codesudo install_name_tool -add_rpath /usr/local/opt/openssl/lib /usr/local/share/dotnet/shared/Microsoft.NETCore.App/1.0.0/System.Security.Cryptography.Native.dylib/code      and/or if you have NETCore 1.0.1 installed perform the same command for 1.0.1 as well:      codesudo install_name_tool -add_rpath /usr/local/opt/openssl/lib /usr/local/share/dotnet/shared/Microsoft.NETCore.App/1.0.1/code/System.Security.Cryptography.Native.dylib      In effect, rather than telling the operating system to always use the homebrew version of SSL and potentially causing something to   break, we're telling dotnet how to find the correct library.   hr     codewhich openssl/code gives me this output: code/usr/local/bin/openssl/code      codeopenssl version/code gives me this output: codeOpenSSL 0.9.8zh 14 Jan 2016/code   Add an rpath to the codeopenssl/code executable. OpenSSL's build system does not supply an rpath. At runtime, your new executable links to the old libraries.  <comment318441> Have you entered a new shell after lionking the file but before running whgich? For the C compile we need to see the C compiler and linker command lines <comment318470> Thanks @Mark. Opening a new shell and running `openssl version` showed me the correct version. SO it got linked properly and i was just not seeing the correct version as i was running it all in old shell. I am putting this here as answer as i am not allowed to comment. Couldn't find any other way to respond to you. If you put this as an answer, I will accept it. <comment322448> This alters the executabe but doe not chnage the include or link paths