Unable to ssh root@localhost on jailbroken iPad with iOS 8.1 <body> I jailbreaked (not for pirates) my iPad 4 (iOS 8.1) several weeks ago and found it unable to ssh root@127.0.0.1 via Prompt 1 or 2 on iPad. Even I cannot connect via LAN IP (e.g. 192.186.X.X). However, there's no problem if I ssh root@LAN IP on my iPhone or Mac in the same LAN.  By the way, I was able to ssh root@localhost on jailbreaked iPad when it was running iOS 6.1. It is also okay if I have already ssh logged in to iPad on my Mac, and ssh root@127.0.0.1 again.  The output of netstat on iPad:  pre class="lang-none prettyprint-override"codeSurface-Pro:~ root# netstat -an|grep .22   tcp4       0     28  172.22.29.64.22        172.22.26.158.47927    ESTABLISHED   tcp4       0      0  172.22.29.64.50293     17.110.228.29.5223     ESTABLISHED   tcp4       0      0  *.22     /code/pre  Does anyone know the reason that iPad cannot connect to itself in apps? (Maybe sandbox/containers model has been changed since iOS 8?)  <answer164344> if you change the port 22 to 50022 (for example) work fine to me  <answer164929> The reason is because iOS 7 and 8 sandbox the apps from the App Store. The easiest workaround is below (adapted from http://blog.funroll.co/ios-7-jailbreak-enable-ssh-to-localhost)  ol liInstall OpenSSH via Cydia/li liGet on the same wifi network as your Mac/li liGrab your IP address from Settings - Wifi - (i) icon/li liOpen Terminal on your mac and ssh root@/li liDefault password is alpine. Use passwd to change if you haven't yet/li liset a login password for the mobile username if you haven't yet      passwd mobile/li   ligo to the Application directory      cd /var/mobile/Containers/Bundle/Application/  &lt;-- iOS 8      cd /var/mobile/Applications &lt;-- iOS 7 /li lifind Prompt!     ls ./*/*/Prompt*   This will give you something like     ./3EE7B167-AF7B-497B-9C8E-EAC96F4AF0D9/Prompt 2.app/Prompt 2 /li limove Prompt!     mv "./3EE7B167-AF7B-497B-9C8E-EAC96F4AF0D9/Prompt 2.app" /Applications/   (Use your own path, instead of 3EE7B167-AF7B-497B-9C8E-EAC96F4AF0D9)br You may also codechown root:admin -R /Applications/Prompt\ 2/code./li liGo to the home screen of the device and delete the icon for Prompt/li liReboot by holding home and sleep/wake until you see the Apple icon/li lissh back into the device using ssh mobile@(your-ip-here). (Use the password you created in step 6.)/li liRun uicache: su -c uicache mobile/li liGo back to the home screen and launch Prompt (if it does not let you connect to localhost, reboot the device again)/li liEnter the ip as 127.0.0.1 or localhost, username root or mobile as per your preference. I use root so I don't have to sudo excessively./li liConnect and enjoy a high quality user experience ssh'ing to localhost/li liUse Panic Sync to restore your settings (keys and servers)!/li /ol  <answer165164> A much better alternative than to run Prompt as root, is to create another codesshd/code instance listening to a port above 1024.  In this example I have used port 10022.  ul liCopy code/Library/LaunchDaemons/com.openssh.sshd.plist/code to code/Library/LaunchDaemons/com.openssh.sshd2.plist/code/li liChange the codeLabel/code and the codeSockServiceName/code in codecom.openssh.sshd2.plist/code by appending 2 to codessh/code / codesshd/code:  ul licodecom.openssh.sshd/code - codecom.openssh.sshd2/code/li licodessh/code - codessh2/code/li /ul/li liAdd the following lines to code/etc/services/code:/li /ul  pre ssh2              10022/udp     # SSH Remote Login Protocol ssh2              10022/tcp     # SSH Remote Login Protocol /pre  ul liReboot the device/li liConnect via port 10022 instead of 22/li /ul  hr  If you have installed codebash/code, codecoreutils/code and codesed/code you can automate it with this script:  precode#!/bin/bash cd /Library/LaunchDaemons cp com.openssh.sshd{,2}.plist sed -i'' '/&lt;key&gt;Label&lt;\/key&gt;/{N;s/sshd/sshd2/}' com.openssh.sshd2.plist sed -i'' '/&lt;key&gt;SockServiceName&lt;\/key&gt;/{N;s/ssh/ssh2/}' com.openssh.sshd2.plist  cd /etc if ! grep ssh2 services; then     cat &gt;&gt; services &lt;&lt;EOF ssh2              10022/udp     # SSH Remote Login Protocol ssh2              10022/tcp     # SSH Remote Login Protocol EOF fi /code/pre  <comment193664> Unfortunately I tried `vim /etc/ssh/sshd_config`, change *Port* to 2222 then `launchctl unload com.openssh.sshd.plist && launchctl load com.openssh.sshd.plist`, but that didn't work. <comment193838> Ya, this should be better. Thanks! <comment243384> This works with Coda 2 on the iPad! My solution below does not work because Coda 2 does not like being launched as a root application. <comment305771> Warning: Attempted this on iOS 9.3.3 with the Pangu semi-jb and it broke the jailbreak.  I was unable to enter jailbroken mode and had to restore my device :\