How to batch rename files via Terminal using the file's date as filename? <body> I have a bunch of photos and videos from different sources and want to normalize the file names using Terminal. I looked at a bunch of different tools from NameChanger to Automator and Finder itself. NameChanger does not allow more than one action at a time and Finder and Automator won't allow me to set the date format with a format string.  I've been playing around with a few bash functions and found that  precodestat -f "%Sm" -t "%Y-%m-%d %H.%M.%S" file.ext /code/pre  produces the date time format I'm after.  Yet I found that  precodefor file in *.* do     mv "$file" echo stat -f "%Sm" -t "%Y-%m-%d %H.%M.%S" "$file" done /code/pre  returns  precode-bash: syntax error near unexpected token `done' /code/pre  I'm not really proficient with bash scripting so excuse any incompetence in the examples above.  What I want to do is remove all of the base name of the file (everything before .jpg) and replace it with the date and time format I got from codestat/code earlier.  For example:  precode20160708_151344000_iOS.jpg   --&gt; 2016-07-08 15.13.44.jpg WP_20140915_02_03_15_Raw.jpg --&gt; 2014-09-15 02.03.15.jpg /code/pre  How do I need to do this?  <answer288512> precodefor f in *.jpg; do     echo mv "$f" "$(stat -f '%Sm' -t '%Y-%m-%d %H.%M.%S' "$f")".jpg done /code/pre  Remove the codeecho/code once you are sure that the command looks ok.  <answer288514> precodefor f in *.*; do      echo mv "$f" "$(stat -f '%Sm' -t '%Y-%m-%d %H.%M.%S' "$f").${f##*.}" done /code/pre  Or as a one-liner:  precodefor f in *.*; do echo mv "$f" "$(stat -f '%Sm' -t '%Y-%m-%d %H.%M.%S' "$f").${f##*.}"; done /code/pre  In either case, remove the codeecho/code emcommand/em after testing.  The code${f##*.}/code portion of the emcommand/em get the emextension/em of code$f/code so you can use the emglob/em code*.*/code vs. using an emextension/em in the codefor f in/code, i.e. codefor f in *.*/code vs. codefor f in *.jpg/code  <comment364326> Do you want the moved filename to be created from the result of the `stat` _command_ in your OP, or from information within the filename itself? <comment364327> I want to read the date value of the file from the file system and use that as the file name instead. After I posted the question though, I noticed that the file system date, EXIF date and the date that already is in the file name (non-normalized) differ from each other for some files. But being able to do the rename from the file system date alone is useful to me nonetheless in case I only have the command line to work with. <comment364644> Are you sure you really want `*.*`?  In DOS this matches all files but in Bash (and generally all Unix shells) it matches all file names which contain a literal dot. <comment364648> Good point but how do I need to rephrase that condition of the loop so everything after the dot is a file name extension?