How to run custom AppleScript in the background at all times? <body> Given an AppleScript file designed to poll for an application dialog box every 30 seconds, how can I easily setup my Mac OS so that this AppleScript file starts every time I login silently in the background?  Code for the script ( in case interested ) is listed below, and is designed to click "Later" on the AirMail Beta app:  precoderepeat     if (exists application "AirMail Beta") then         tell application "System Events" to tell process "Airmail Beta"             if exists (button "Later" of front window) then                 click (button "Later" of front window)             end if         end tell     end if     delay 30 end repeat /code/pre  The above script works, but if anyone can think of a better way to auto-click a dialog without writing an AppleScript that polls every few seconds, feel free to offer such a solution in comments.  Mainly though, I'd like to know the best way to manage AppleScripts designed to run continuously so they can be enabled / disabled and startup without being seen at login automatically.  <answer192605> Step one:  When saving the script in the script editor, save as an application bundle, then add it to the startup items in login system preferences.  Step two "Background"  Use a app iBackground Scripts for Mac     Simply drag and drop an AppleScript that has been saved as an   'Application bundle' on to this droplet. Clicking on the 'Yes' button   will set your script to run in the background and will not display in   the Dock   <answer192654> In my opinion, the best way to do it is by using Apple's own task scheduler: codelaunchd/code, because you don't need to install third-party software. First, the theory: to run a script from the command line, you just run:   precodeosascript /PATH/TO/YOUR/script.scpt /code/pre  Knowing this, all you have to do is create a codeplist/code file in code~/Library/LaunchAgents//code with this:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;air-mail-beta.job&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/usr/bin/osascript&lt;/string&gt;         &lt;string&gt;/PATH/TO/YOUR/SCRIPT&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  The name of the codeplist/code file doesn't matter, but it should be in code~/Library/LaunchAgents//code. Also, make sure to change strongcode/PATH/TO/YOUR/SCRIPT/code/strong accordingly.  Finally, you just need to tell codelaunchd/code that you want this script to always run. To do that, you just do:   precodelaunchctl load -w ~/Library/LaunchAgents/NAME-OF-YOUR-PLIST.plist /code/pre  and you're done! If it looks like the script didn't start, you can do this:   precode launchctl start air-mail-beta.job /code/pre  where codeair-mail-beta.job/code is the property under code&lt;key&gt;label&lt;/key&gt;/code that we've set in the codeplist/code file.  Finally, should you ever need to disable the script, don't forget to codeunload/code it with:   precodelaunchctl unload -w ~/Library/LaunchAgents/NAME-OF-YOUR-PLIST.plist /code/pre  I know this solution is more technical, but trust me, that's a better way to deal with your issue. If you have any question, just ask!  <comment229646> I am not sure how iBackground works but depending on what setting it is changing in the saved script's info.plist the app may run in full background meaning you cannot easily quit it because it is now acts like a process and has no Gui displayed <comment229654> You can reverse it by clicking the 'No' button and it will no longer be a background script and will display in the Dock. If you don't see the change immediately, move the AppleScript to another location (Command+drag). <comment229655> Are you confirming if you want to quit it you cannot do it through GUI if you use this app to make the change to a background app. <comment280971> Thanks for this solution. Can the name of the `.job` be anything in the `.plist` file? I've tried making a custom `.plist` and it seems to successfully load the `.plist` with `launchhd`, but the script itself doesn't seem to start. I get no feedback in Terminal when doing `launchctl` afterwards. I know that the script works because if I simply do `osascript /PATH/to/script.scpt` it does what it's supposed to.