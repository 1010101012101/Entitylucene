Is there a known reason why the filesystem in iOS is case-sensitive? <body> Developing an iOS apps, there was a thing that drove me mad: executing the same app that created the same files at the same path, the iPhone simulator worked the correct way, while a real iPhone didn't. I eventually discovered that i mistyped a character (uppercase instead of lowercase) and consequently the iPhone created a folder starting with an uppercase character, while putting the file in a path with that folder starting with the lowercase version of that character. The simulator however, didn't care of that difference. I suppose that was because the simulator, running on a case-insensitive system (OS X/mac OS), inherits its "case-insensitivity", while the iPhone (seems to me) is natively case-sensitive.  Is there any known explanation/documentation by Apple (or other trusted sources) on why the iOS filesystem is case-sensitive, given that is an OS based on a case-insensitive one (OS X)?  <answer284906> HFS+ originally ran on System 8 and System 9 and is case-insensitive. Apple developed the HFSX case sensitive file system around 2002-2003 as a replacement for UFS which was used by NextSTEP and could also be used by OS X.  In the transition from System 9 to OS X, Apple offered Carbon API's so that vendors could easily port their products without completely re-writing their applications. Carbon does not offer case sensitivity. For many years major vendors used Carbon code in their products, so HFS+ was left as the default file system.  iOS has transitioned to APFS but TimeMachine uses HFSX.  <comment359214> I think at the moment iOS and MacOS use different file systems.  Eventually both will presumably use APFS.  There is some info in the Implementation section of https://developer.apple.com/library/content/documentation/FileManagement/Conceptual/APFS_Guide/FAQ/FAQ.html#//apple_ref/doc/uid/TP40016999-CH6-DontLinkElementID_1 <comment359224> The better question is "why is macOS case-insensitive?" Every Darwin-based OS aside from macOS used HFSX (Mac OS Extended, Case-Sensitive) while macOS uses HFS+ (Mac OS Extended). While there's no official "reason" as to why, it was likely done to maintain compatibility with HFS systems when Apple transitioned to HFS+. AFAIK this will continue with APFS as Apple appears to have introduced a case-insensitive variant of APFS in March of this year. <comment359243> So the case-sensitivity of a system resides exclusively on the file system in use? If "for example" I would format in HFS+ a partition in a Linux environment, using that partition from the console will have a case-insensitive behavior like macOS? <comment359258> So iOS devices didn't have to support backwards compatibility and adopted a case-sensitive file system, while OS X sticked with a Carbon-compatible file system? So the decision was a sort of forced one, not a preference for a case-insensitive system, am I right? However I've read it's possible to install OS X with "case-sensitive HFS+". Wouldn't that break any compatibility with "Carbon-ported" applications? <comment359260> @mars YMMV- running an application with carbon code. Some work fine and other refuse to install. I've used UFS or HFSX file systems since OS X 10.1. <comment359278> Ok, thanks for your answers:)