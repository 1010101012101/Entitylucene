SRM gone in macOS Sierra (10.12) <body> I've just updated to macOS 10.12 and when I try to execute codesrm/code in Terminal, it says code-bash: srm: command not found/code.   Is codesrm/code removed? How to fix this?  <answer252109> Not yet running macOS 10.12 however under OS X 10.8.5 the man page for codesrm/code in the codeNOTES/code section states:     Development and discussion of strongsrm/strong is carried out at   &lt;http://sourceforge.net/project/?group_id=3297, which is also   accessible via &lt;http://srm.sourceforge.net.   Now you'd have to download the emsource code/em and compile it for yourself. This would require Command Line Tools for Xcode be installed. Not sure if still applicable under macOS 10.12 however, see How to Install Command Line Tools in OS X Mavericks &amp; Yosemite (Without Xcode) for details. Or in Terminal use the following command: codexcode-select --install/code  I downloaded the latest emsource code/em and it compiled without errors under OS X 10.8.5, although that doesn't mean it will under macOS 10.12 but it's probably the only choice you've got if codesrm/code has been removed.  That said, I probably would only codesrm/code on rotational HDD's not SSD's.  <answer258271> rm has a -P switch that will overwrite the file three times before deleting. Better than nothing, I suppose.  <answer258274> From this comment:     can you come up with a better idea or safely removing files from SSD   on newer macs? â€“ Niktin Roman    There's no need for codesrm/code; provided that TRIM is enabled on your machinesup1/sup  TRIM support handles this for you. When you delete a file from your drive, the OS will mark the file space as "not in use" - this applies to  any drive. On an SSD, unlike a HDD,  a TRIM command is sent to wipe any data in that marked space.  This allows your SSD to be able to write data to that marked space as if it was brand new and never used, and  skip the traditional  deletion process.  If you are looking for more security, turn on FileVault.  Per Apple Support:     Note: With an SSD drive, Secure Erase and Erasing Free Space are not   available in Disk Utility. These options are not needed for an SSD   drive because a standard erase makes it difficult to recover data from   an SSD. For more security, consider turning on FileVault encryption   when you start using your SSD drive.   I also advise against using codesrm/code because it issues more and unnecessary write operations to the SSD, thus shortening it's lifespan.  From the man page:   presrm  removes  each  specified file by overwriting, renaming, and truncating it before unlinking/pre   hr sup1/sup TRIM comes enabled by default if you your Mac came with an SSD preinstalled.  if you added an SSD after the fact, then you must enable TRIM by issuing the command codesudo trimforce enable/code in Terminal.  <answer259539> sudo port install srm that will do  <answer267682> Use Homebrew, as suggested here:  precodebrew install homebrew/dupes/srm brew link --force srm /code/pre  <answer282436> Since this question was originally answered two things have happened:  ul licodehomebrew-dupes/code was merged into codehomebrew-core/code/li licodesrm/code was deleted from codehomebrew-core/code/li /ul  If you try to install it now it will give you details of the deleting commit and a suggestion to create your own tap if you still need it. I have done so here.  You can install it using Homebrew: codebrew install khell/homebrew-srm/srm/code  <answer282717> To securely delete a file on MacOS Sierra without external utilities use:  precoderm -Pv mysecrets.txt /code/pre  supcode-v/code only serves to increase verbosity/sup  From the man page:   precode -P          Overwrite regular files before deleting them.  Files are              overwritten three times, first with the byte pattern 0xff,              then 0x00, and then 0xff again, before they are deleted. /code/pre   <answer283561> There are plenty of good reasons not to use secure deletion tools (codesrm/code, codeshred/code, coderm -P/code, etc) on modern systems (with TRIM-enabled SSDs and/or journalled file systems). @Allan's answer in particular is spot on.  However, if you emreally/em, emreally/em want to restore codesrm/code, someone's published a Homebrew tap here that works. Ie:  precodebrew install khell/homebrew-srm/srm srm secrets.txt /code/pre  (After you've installed Homebrew, obviously.)  <comment313613> Thank you! Just installed it, everything works <comment313614> As a side note: `srm` was a dying project back in the early 2000's. Apple poured some resources into the project and it first appears in 10.3. You should be aware that using `srm` does not guarantee the data is not recoverable . <comment313615> @fd0, can you come up with a better idea or safely removing files from SSD on newer macs? <comment313617> Full disk encryption, though I do not use it, and `rm` or empty Trash in the GUI. <comment319941> NB srm is available in homebrew/dupes if you use homebrew. It will complain that MacOS already provides this software. That is not true in Sierra, but in any case to use homebrew to install it you must `brew install srm && brew link --force srm` <comment323102> @NiktinRoman for SSDs srm is no more secure than rm - srm only makes sense for hard disks. I suspect this is the reason it has been removed <comment324743> It will probably lead to a `-bash: port: command not found` error, so some more details may be required here. <comment327086> Install macports: https://www.macports.org/install.php <comment337232> This should be the accepted answer. <comment357058> @kojiro doesn't work.  "srm was deleted from homebrew/core in commit 7957c4b98" <comment357059> @AfterWorkGuinness True, Apple ostensibly removed srm because they thought it would destroy people's ssds. https://github.com/Homebrew/homebrew-dupes/issues/725. I'm somewhat skeptical that they had exactly that reason in mind, but the point remains that secure-delete commands are less useful on ssd than spinning rust. (It probably never occurs to Apple that someone might want to hook up a spinning rust dist.)