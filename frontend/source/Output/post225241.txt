Batch compress multiple folders into individual zip files <body> I have dozens of folders that I need to compress into individual zip files.  If I select all of these folders in the Finder and do "Compress [X] Items," I get one zip file containing emall/em of the folders, whereas what I want is one zip file emper/em folder.  I tried creating a workflow with Automator using the "Create Archive" action, but it behaves the same way: inputting multiple files/folders outputs a single zip file. There's no way to specify that the action run on each item individually.  Basically, I'm looking for a way to avoid having to tediously run "Compress" in the Finder on every single folder one at a time. Is there any way to automate this?  <answer225312> Here is an strongAutomator Service/strong that becomes available in strongFinder/strong when strongFolders/strong are selected and ememulates/em the emcontext-menus/em strongCompress [n] Items/strong emcommand/em strongexcept/strong it creates an emindividual zip archive file/em for each selected strongFolder/strong in the emname/em of the selected strongFolder/strong.  If the strongFolder Name.zip/strong file already exists then a code" 2"/code (emspace/em 2) is appended to the emfilename/em, e.g. strongFolder Name 2.zip/strong. This ensures an existing emzip archive file/em is not touched and the emzip archive filename/em will be automatically incremented as necessary.  strongTo Create the Service:/strong  ol liOpen strongAutomator/strong and select strongService/strong or strongFile/strong  strongNew/strong  strongService/strong If strongAutomator/strong is already open./li liSet strongService receives selected/strong to strongfolders/strong and strongin/strong to strongFinder/strong./li liAdd a strongRun Shell Script/strong emAction/em, setting strongShell:/strong to strong/bin/bash/strong and strongPass input:/strong to strongas arguments/strong and add the following emcode/em:  precodefor f in "$@"; do      dn="$(dirname "$f")"     bn="$(basename "$f")"      pushd "$dn"      if [[ ! -e "$bn.zip" ]]; then         ditto -c -k --sequesterRsrc --keepParent "$f" "$bn.zip"     else         n=2         for i in $bn *.zip; do             if [[ "$bn $n.zip" == "$i" ]]; then                 n="$(( $n + 1 ))"             fi         done         ditto -c -k --sequesterRsrc --keepParent "$f" "$bn $n.zip"     fi  done  afplay /System/Library/Sounds/Purr.aiff /code/pre/li liSave the strongService/strong as: strongCompress Folders Separately/strong/li /ol  strongTo Use the Service:/strong  In strongFinder/strong or on the strongDesktop/strong select multiple strongFolders/strong, then strongright-click/strong and select strongCompress Folders Separately/strong from under strongServices/strong.  Or after selecting the target strongFolders/strong, you can also click strongFinder/strong  strongServices/strong  strongCompress Folders Separately/strong from the strongmenu bar/strong.  There you have it, a way to compress multiple folder separately and simultaneously at one time in individual zip archives while emulating how Finder creates a zip archive file. Meaning the zip archive contains preserved resource forks and HFS meta-data in the subdirectory __MACOSX and embeds only the parent directory name emsource/em in emdestination-archive/em, not the fully qualified pathname as when using codezip/code (without code-j/code) to create the archive.  strongImage of Compress Folders Separately (Service)/strong  img src="https://i.stack.imgur.com/skJjk.png" alt="Compress Folders Separately - Automator Service"  <answer242575> There's an alternative solution that's built-in if you don't want to use Automator and are fine with changing Archive Utility's settings.  ol liOpen the Archive Utility.app located in /System/Library/CoreServices/Applications//li liGo to File  Preferences/li liChange the "Use Archive Format" preference to "Zip archive"/li liDrag and drop the folders into its icon in the dock./li /ol  <comment273481> I updated my answer to improve the code used to increment the zip archive filename so it emulates how the Finder context-menu Compress [n] Items command increments a filename. <comment273530> Sorry, I updated the code once again to remove the unnecessary `popd` and corrected a fatal typo in `for i in $bn*.zip; do`, which should have been `for i in $bn *.zip; do`. Note the space between `$bn` and `*.zip`, it was missing and shouldn't have been.  So please update it in your implementation otherwise it steps on `File Name 2.zip` when the `basename` has a space in it. <comment303994> I checked both your solution and @ababak's. They give exactly the same result and ababak's is far easier to implement. I up voted both anyway. <comment306050> the nice thing about this option is you can set the Archive Utility.app preferences to move the original to trash after it finishes, it's not limited to folders. Is there a way to set up an Automator service to open with Archive Utility.app as a service if you want right-click as an option? I ran into a limitation as Archive Utility.app can't be selected using the Launch Application action. <comment306309> @thepen, of course you can select Archive Utility as the Launch Application Action. You just need to select "Otherâ€¦" and navigate to its location which is `/System/Library/CoreServices/Applications/` (you can press Cmd-Shift-G when the file select dialog is open to paste this path for quick navigation)