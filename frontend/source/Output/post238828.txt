root user can't create a file in /usr/lib <body> I am trying to follow this advice from stackoverflow and copy some library files from code/usr/local/Cellar/openssl/1.0.1c/code to code/usr/lib//code.  I have tried codecp/code, codeln -s/code and even codetouch/code, but they all fail. I am using the coderoot/code credentials:  precodejoyce# whoami root /code/pre  In the right directory:  precodejoyce# pwd /usr/lib /code/pre  But no write operation is permitted:  precodejoyce# cp /usr/local/Cellar/openssl/1.0.2e_1/lib/libssl.1.0.0.dylib . cp: ./libssl.1.0.0.dylib: Operation not permitted joyce# ln -s /usr/local/Cellar/openssl/1.0.2e_1/lib/libssl.1.0.0.dylib . ln: ./libssl.1.0.0.dylib: Operation not permitted joyce# touch blah touch: blah: Operation not permitted /code/pre  Any idea how can I write to code/usr/lib/code as coderoot/code?  <answer238838> code/usr/lib/code is protected by SIP. Even if this wouldn't be the case, it's not the best idea to put your own stuff there as any system upgrade can wipe it.   The better place to store such stuff (or link to it) is code/usr/local/lib/code. You may need to pass appropriate flags to the linker then (or you point it directly to the Cellar folder).   <comment292950> `/usr/lib` is protected by SIP, can't you add it to `/usr/local/lib` and pass appropriate flags to the linker? <comment292953> It worked - `export DYLD_LIBRARY_PATH=/usr/local/Cellar/openssl/1.0.2e_1/lib`. Would you like to make it an answer so I can accept and upvote? <comment292959> Surely easier to use Homebrew to link into /usr/local/lib and make the build use that