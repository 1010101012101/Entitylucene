How can I list my open network ports with netstat? <body> I would like to list my open network ports in Terminal with built in commands. As what I know, codenetstat/code is the command to use. But I'm struggling to get any useful information out of it.  How can I list my open ports with codenetstat/code? Any specific flags that helps me in this case?  <answer117648> precodenetstat -ap tcp | grep -i "listen"  Achive Internet connections (including servers) Proto Recv-Q Send-Q  Local Address          Foreign Address        (state)    tcp4       0      0  localhost.25035        *.*                    LISTEN /code/pre    precodesudo lsof -PiTCP -sTCP:LISTEN  COMMAND     PID      USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME GitHub      850 grgarside   6u   IPv4 0x23c345381d089301      0t0  TCP localhost:25035 (LISTEN) /code/pre  <answer117755> The simplest method is to use codenetstat/code:  precode$ netstat -ap tcp Active Internet connections (including servers) Proto Recv-Q Send-Q  Local Address          Foreign Address        (state)     tcp4       0      0  10.0.2.23.58792        17.172.233.109.5223    ESTABLISHED tcp4      87      0  my_iMac__at_home.55481 stackoverflow.co.http  ESTABLISHED tcp4     116      0  my_iMac__at_home.55478 stackoverflow.co.http  ESTABLISHED tcp4      58      0  my_iMac__at_home.63452 stackoverflow.co.http  ESTABLISHED tcp4      87      0  my_iMac__at_home.63429 stackoverflow.co.http  ESTABLISHED tcp4       0      0  localhost.63173        localhost.773          ESTABLISHED tcp4       0      0  localhost.773          localhost.63173        ESTABLISHED tcp4       0      0  localhost.63173        *.*                    LISTEN      tcp4       0      0  localhost.63172        *.*                    LISTEN      tcp4       0      0  localhost.ipp          *.*                    LISTEN      tcp6       0      0  localhost.ipp          *.*                    LISTEN      /code/pre  …without any added filtering, so as to get the correct headers, and to see both servers listening, and connections already established in both directions. In this example, the 1st line exhibits a connexion from my Mac toward code17.172.233.109/code, which a further:  precodewhois 17.172.233.109 /code/pre  taught me it is located at Apple.  <answer206889> maybe you can use lsof:  precodelsof -Pn -i4 /code/pre  -i4 means only show ipv4 address and ports -P and -n fast output  output like this  precode➜  lsof -Pn -i4 | grep LISTEN QQPlatfor 22767 xxxx   15u  IPv4 0x36c2bfa04e49385d      0t0  TCP *:49969 (LISTEN) GoAgentX  33377 xxxx    4u  IPv4 0x36c2bfa06e68b12d      0t0  TCP *:56154 (LISTEN) GoAgentX  33377 xxxx   20u  IPv4 0x36c2bfa04e492f8d      0t0  TCP 127.0.0.1:56155 (LISTEN) /code/pre  <comment137420> Thanks! However, the output is quite hard to read, but `lsof` was a bit better, thanks. <comment137427> You need to use `sudo lsof ...`. Without the sudo, lsof can only see processes you own, and hence won't show any ports opened by system processes. Also, you can skip the grep command by telling lsof you only want to see ports in the LISTEN state with `sudo lsof -PiTCP -sTCP:LISTEN`. <comment137483> → grgarside:  beware of the effects of `grep -i "listen"` within your 2 examples. <comment137484> The `grep` for `listen` was an example — by no means required. <comment249412> What does this command do? <comment265028> `lsof` lists open files. Network sockets count as files, so each open network socket (either listening or actively in use) will be listed in `lsof`. <comment282128> It shows also the process id (netstat doesn't) <comment290218> With GNU `netstat`, you can optionally list the pid of the process that opened each port. Is there any way to get that behavior with BSD `netstat` as well? <comment290219> @Chris I don't know off hand, have you checked the man page? lsof shows the pid btw <comment290220> I just did, turns out the `-v` flag turns that on. The pid will be in the second-to-last column. <comment290224> @Chris Cheers for the info, I'm on my phone atm hence I couldn't quickly check the man page myself but I'll update the answer with that later, or feel free to edit yourself. <comment305530> `lsof -Pn -i6` for IPV6 <comment320435> @grgarside What if the command name was listen or had "listen" as a substring? :-) <comment333319> The BSD netstat version that ships with my macOS 10.12.2 (Sierra) version doesn't have a `-t` flag, thus leaving it out doesn't change the resulting output: `netstat -ap tcp | grep -i "listen"` <comment344283> One my machine at least, this answer takes 0.1s, while @grgarside's is 28+ s. The difference is the `-i4` switch, to only look at IPv4 addresses. <comment344284> @GordonDavisson Great answer, I'll be adding that as an alias to my .bashrc.