Starting Apache2 on Mountain Lion <body> I have tried every option to get apache2 to work in Mountain Lion, and I am baffled by how impossible the task seems to be.  I just got a new iMac and on a fresh, clean install, I went about setting up apache to serve local sites.  Using the usual suspects of possible configuration changes, I can get apache to actually "start" but then things go downhill from there.  No matter how I define the local server root, I always get a Forbidden error. I can chmod the directory structure to 777 and I still get a Forbidden error.  I have set the server root as the default code/Library/WebServer/Documents//code, set it to code/Users/myUserName/Sites//code, code/Users/myUserName/Documents/Sites/code, code/Volumes/ExternalDrive/Site//code and any other possible combination, modifying code/etc/apache2/httpd.conf/code and/or code/private/etc/apache2/httpd.conf/code as well as the vhosts file and the myUserName.conf file. Nothing makes a difference.  I have restarted apache with codesudo apachectl restart/code as well as codesudo apachectl stop/code followed by codesudo apachectl start/code.  Nothing works.  Can someone help me get this issue resolved? I am beginning to want to throw my brand new iMac against the wall.  Note, I am not a novice at this and I have set up dozens of Macs. However, nothing seems to work this time. I even reformatted and reinstalled the system again.  <answer80227> If you're really struggling, you might give VirtualHostX a try… it's a Mac app that helps you configure apache to run multiple websites from a single Mac, but it works just as well with a single website. It's a paid app, but it has a 30-day trial period.  <answer80294> codesudo apachectl start/code starts Apache and enables code/System/Library/LaunchDaemons/org.apache.httpd.plist/code.  To make codehttp://localhost/~username//code work, save something like this as code/etc/apache2/users/username.conf/code:  precode&lt;Directory "/Users/username/Sites/"&gt;     Options Indexes MultiViews     AllowOverride All     Order allow,deny     Allow from all &lt;/Directory&gt; /code/pre  I didn't have to edit any other files or httpd.conf.  <answer80319> Try MAMP or even MAMP Pro, both have software that you can start/stop your apache and mysql.  http://www.mamp.info/en/index.html  MAMP Pro also supports virtual hosts  <answer99806> Run this command to see if you have errors in your configuration: codesudo apachectl -t/code   You can find more info here.  <comment92522> Did you enable DirectoryListings in Apache? Do you have an index.html file in your WebRoot? <comment92549> When you say "I went about setting up apache to serve local sites." what have you done? Did you check that Apache worked on the brand new OS install before you did anything? What errors do you get in the Apache log? <comment92555> Is there a reason you are jumping through Unix CLI hoops to start the service when on Macs all one really needs to do is go to `System Preferences` then choose `Sharing` and then start `Web Sharing`? <comment92667> @JakeGould The web sharing checkbox was removed in 10.8. <comment92676> @ComicSans Yes to both. <comment92677> @TonyWilliams Did I check that apache worked before making any modifications on a clean install...yes.  I already mentioned what I tried above. I have tried multiple different configurations, making all the necessary changes to /etc/hosts, /etc/apache2/httpd.conf, /private/etc/apache2/httpd.conf, /etc/apache2/users/myusername.conf, /private/etc/apache2/users/myusername.conf, and  /etc/apache2/extras/httpd-vhosts.conf. No cigar. Started and restarted and shutdown and started my iMac, started, stop/started and restarted apache. All to no avail. <comment92678> @JakeGould As Lauri said, Web Sharing was removed in 10.8. But further to that, I want to install custom compiled PHP, updated MySQL, latest phpMyAdmin, and a host of other enhancements. So, before I get those installed, I need to ensure that apache is running...and it won't. <comment92679> Not the type of solution I am looking for. I could easily try a BitNami stack for Mac OS as well, or MAMP Pro, but none of these are the same as a standard clean, self-managed AMP stack. <comment92696> Fair enough. But I would recommend an alternative to jumping through hoops & dealing with Apache quirks on Mac OS: Run Ubuntu on VirtualBox. About 10 years ago I would do the whole customizing Mac OS X thing to do web work. Then I moved onto MAMP which I still use but can’t customize easily. Now I have now been using Ubuntu via VirtualBox & it works great! If you install Avahi (open source Bonjour) & SMB (Samba) you can even mount Ubuntu directories as file system mounts in OS X so you can edit code that way. No esoteric headaches. 100% real Unix environment right in your Mac! <comment92697> If a standard, clean, self-managed *AMP stack is a goal, I strongly recommend Ubuntu on VirtualBox. 100% pure LAMP stack & no wasted time (sometimes days) dealing with Mac AMP stack silliness. <comment92983> The problem with MAMP and MAMP Pro is that they are slow to update the components. Of course, I could go ahead and update them myself, but then, why install a software emulating a software and update the emulating software when it is available natively on the system. <comment117442> I'm surprised no one else went down the configtest path and it might catch a permission error... <comment117542> I actually solved this issue by doing what you suggest...months ago. I should have answered my question myself when I resolved the issue. However, glad that you answered it. I can now accept this as it did reveal some problems which I was able to resolve (although I no longer remember what the problems were).