Make locator.updatedb run daily on Snow Leopard w/o hacking /System/Library? <body> On Snow Leopard, the codelocate/code database is updated once a week by a launchd job, code/System/Library/LaunchDaemons/com.apple.locate.plist/code. I'd like to make the updater run daily, but AFAIK it's considered very bad form to edit anything in code/System/code.  What's the best way to change its codeStartCalendarInterval/code so it runs once a day?  <answer19264> The way I understand it, that System folder launchd job does nothing but execute code/usr/libexec/locate.updatedb/code itself.  So simply create your own launchd job executing code/usr/libexec/locate.updatedb/code that runs once a day.  As a sidenote, here's a Super User answer which recommends using codemdfind -name &lt;filename&gt;/code instead of codelocate/code so that you can use the Spotlight database which is continually updated.  And this Ask Different answer has more info on creating launchd jobs if you need more help with that.  <answer24278> The problem with 'locate' and with Spotlight is that it doesn't search every file. It used to be possible to work-around this by updating the updatedb as root, which would warn you that was a potential security hole (i.e. anyone with read access to the database could get a list of every file in any user's $HOME) but since most Mac users are the only user on their computers, that was not a huge concern.  I finally got so fed up that I wrote my own script which will:  ul limake a plain-text index of every file, link, and directory/li lisearch that index using codeegrep/code/li lioffer to restrict searches to $HOME or the current directory if certain arguments are given/li liif nothing is found in the index, offer to update the index, or search with codemdfind/code/li /ul  You can download the script here [Dropbox link]. It should be fairly easy to understand how it works just by reading through it.  <comment21136> +1 for creating a custom launchd job. iCal could schedule it - but that's an extra level of abstraction. Lingon is awesome if you don't like writing plist files by hand. http://itunes.apple.com/us/app/lingon/id411211026?mt=12 <comment21137> @bmike Thanks for the Lingon link. I had a vague memory of that no longer being developed, nice to see the developer is now selling it on the App Store.