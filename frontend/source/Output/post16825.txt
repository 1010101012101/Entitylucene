Make a script/app run on logout <body> We all know that Mac OS X has the very useful strongLogin Items/strong functionality which lets you, among other things, set up apps/scripts to run when you log in.  I'm looking for a way to setup a list of scripts/apps that run when I stronglog out/strong. A "Logout Items" list, if you will.br Basically, I want to write a few little cleanup scripts for myself that will run automatically when I log out or shut down.  So, I'm looking for a way to have a script (or, ideally, list of them) automatically triggered when I log out. The log out would wait for the scripts to finish (just like how the logout waits for you to click Save if an app requests it).  strongIs there a way to automatically trigger (a) script(s) when I log out of Mac OS X?/strong  <answer16831> Logout hooks were deprecated in 10.4, but they still work as of 10.9.  precodesudo defaults write com.apple.loginwindow LogoutHook ~/.logouthook echo $'#!/bin/bash\nsay a' &gt; ~/.logouthook chmod +x ~/.logouthook /code/pre  The value of the LogoutHook key can only be a path to an executable and not a shell command. The logout hook is run as root.  The defaults command modifies /var/root/Library/Preferences/com.apple.loginwindow.plist. Adding a LogoutHook key to /Library/Preferences/com.apple.loginwindow.plist doesn't work.  If a logout hook takes long enough to run, a gray screen is shown until the logout hook terminates. There doesn't seem to be any time limit after which logout hooks are forced to terminate.  I haven't figured out any way to run programs on logout reliably with launchd. When I tried trapping signals like EXIT, the code in the trap was only run when I logged out to the login window and not when I shut down or restarted.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;test&lt;/string&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;bash&lt;/string&gt;     &lt;string&gt;-c&lt;/string&gt;     &lt;string&gt;trap 'echo a&gt;/Users/username/Desktop/a;say a' EXIT;while :;do sleep 10;done&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <answer41735> Script Timer is a good choice for this. It can run at logout, login, and much more. I'd go with this for a simple and easy to use solution. It has a simple GUI:  img src="https://i.stack.imgur.com/tph1c.png" alt="Triggered action"  There are two things you need to note about Script Timer. One, it is emnot/em free. It costs $12, but I personally think it's worth it. Two, it isn't fully compatible with Lion, but they have promised a free update as soon as they've made it compatible.  <answer217736> You could also create a Mac application from your script using something like Platypus and then add it to Login Items like any other application.  <comment18386> Hmm, neither of those has worked for me. I've got [this script](http://cl.ly/1n1T043h3H2W25102Q0b), which works if I run it with `sh` (it creates that .txt file). I saved the script as /etc/rc.shutdown.local, and I added it with `defaults` as you said. Neither file was there already. Am I doing something wrong? Thanks! <comment18398> I'm not sure if I'm doing something wrong or not. I'm on 10.6.8 and LogoutHook isn't working. I'd appreciate if if you could take a look at [this screenshot](http://i.imgur.com/KSJaG.jpg) and let me know if something looks wrong. Thanks! <comment18405> Ah! That last one did the trick on 10.6.8. Thanks! One note though: it doesn't work with Lion :( <comment51128> possible duplicate of [How can I run/stop/relaunch an application automatically, at boot/login/some other time?](http://apple.stackexchange.com/questions/3030/how-can-i-run-stop-relaunch-an-application-automatically-at-boot-login-some-oth) <comment82256> Both methods work fine on my Mountain Lion (10.8.2) machine, even when shutting down or rebooting. Note that the LoginHook/LogoutHook hooks run in the context of the _root_ user, and that they are _single, system-wide_ hooks, and that the login hook runs _synchronously_ - much earlier than per-user launch agents; similarly, the logout hook runs earlier than a per-user launch agent that uses the EXIT-trap method. There are cases where _only_ the hooks work; for instance, if you want to mute the sound on shutdown in order to suppress the Mac's startup sound, only the LogoutHook works reliably.