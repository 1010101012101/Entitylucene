What's the difference between Real, Virtual, Shared, and Private Memory? <body> The different columns in Activity Monitor are a little confusing  <answer107> Taken from my answer at Server Fault:  Mac OS X Memory Jargon:  strongWired/strong : This refers to kernel code and such. Memory that should not ever be moved out of the RAM. Also know as resident memory.  strongShared/strong : Memory that is shared between two or more processes. Both processes would show this amount of memory so it can be a bit misleading as to how much memory is actually in use.  strongReal/strong : This is the "real" memory usage for an application as reported by task_info() - a rough count of the number of physical pages that the current process has. (RSIZE)  strongPrivate/strong : This is memory that a process is using solely on it's own that is used in Resident memory. (RPRVT)  strongVirtual/strong : The total amount of address space in the process that's mapped to anything - whether that's an arbitrarily large space for variables or anything - it does not equate to actual VM use. (VSIZE)  strongActive/strong : Memory currently labelled as active and is used RAM.  strongInactive/strong : "Inactive memory is no longer being used and has been cached to disk. It will remain in RAM until another application needs the space. Leaving this information in RAM is to your advantage if you (or a client of your computer) come back to it later." - Mac OS X Help  strongFree/strong : The amount of RAM actually available without any data.  hr  The best documentation I know of (and have been able to find in followup research) is Apple's own Managing Memory article on their developer website.  Other worthwhile sources: Darwin-dev mailing list: [1], [2] and an old article on MacOSXHints. Additionally Mike Ash has posted a good layman's introduction on his blog  <answer109> Real mem relates to physical memory (actual RAM modules in your computer).  Virtual Mem is how much "fake" memory is allocated to the process, meaning memory that is allocated on the permanent storage medium (hard drive, solid state drive, etc) for that process.  Shared memory is physical (Real) memory that can be shared with other processes.  Private memory is "real" memory that can only be used by the process it is allocated to.  These explanations may help as well... directly from activity monitor -- help -- viewing system memory usage:  Here is an explanation of some of the information displayed at the bottom of the memory pane:  ul liWired: Wired memory contains information that must always stay in RAM/li liActive: Active memory that contains information that is actively being used./li liInactive: Inactive memory contains information that is not actively being used. Leaving this information in RAM is to your advantage if you (or a client of your computer) come back to it later./li liUsed: Used memory is being used by a process or by the system. Used memory is the sum of wired, active, and inactive memory. If the system requires memory it takes free memory before used memory./li liFree: Free memory is not being used and is immediately available./li liVM size: Virtual memory, or VM, is hard disk space that can be used as memory. VM size is the amount of disk space being used as memory. Mac OS X can use more memory than the amount of physical RAM you have. A hard disk is much slower than RAM, so the virtual memory system automatically distributes information between disk space and RAM for efficient performance. Page ins/outs: The number of gigabytes of information Mac OS X has moved between RAM and disk space/li /ul  <answer123978> Apple updated the Activity Monitor in OSX 10.9 (Mavericks). They have a good article about what everything means here http://support.apple.com/kb/HT5890. In summary...  img src="https://i.stack.imgur.com/cau5x.png" alt="enter image description here"  ul listrongPhysical Memory:/strong The amount of RAM installed./li listrongMemory Used:/strong The amount of RAM being used and not immediately available for other apps./li listrongVirtual Memory:/strong The amount of memory mapping that apps have asked for. This is not an actual consumption of RAM resources and it size is determined by the author of the app./li listrongSwap Used:/strong The space on your drive being used to swap unused files to and from RAM. It is normal to see some activity and it is not a indication that you have depleted RAM resources. Seeing memory pressure in the Red state will indicate that RAM resources are depleted./li listrongApp Memory:/strong The amount of space being used by apps./li listrongWired Memory:/strong Memory that can’t be cached to disk, so it must stay in RAM. This memory can’t be borrowed by other apps./li listrongCompressed:/strong The amount of memory in RAM that is compressed, making more RAM resources available for other apps./li listrongFile Cache:/strong The space in RAM marked as available for apps to use that contains recently used files./li /ul  hr  h1Memory Pressure graph/h1  The combination of Free, Wired, Active, Inactive &amp; Used memory statistics in previous versions of Activity Monitor have been replaced in Mavericks with an easy to read "Memory Pressure" graph.  Memory pressure is indicated by color:  ul listrongGreen/strong – RAM memory resources are available./li listrongAmber/strong – RAM memory resources are being tasked./li listrongRed/strong – RAM memory resources are depleted and OS X is using the drive for memory./li /ul  <comment69> This is not correct. Virtual Memory is not memory that is allocated on disk (that is called swap). Virtual memory is that has address space allocated but is not in physical memory. That might seem like the same thing, but it subtlety different. In many cases programs allocate memory without ever touch it. In those cases the programs are using a lot of virtual memory. To give a concrete example, my system currently is using 512MB of swap, but has 196GB of virtual memory allocated (which is a pretty typical amount for people running Snow Leopard on K64). <comment71> @Louis, if the virtual memory has been allocated but does not make use of RAM or the hard disk, then where is it? <comment76> @Louis: You are correct.  It is a bit confusing however because of the way that Activity Monitor displays these bits of information.  The 196GB of VM you refer to is not the actual size of the swap file but it does describe the potential size of the swap file.  Notice how they use the phrase "can be used as memory". <comment77> @Michael: nowhere.  It's theoretical.  Just because it's been allocated and assigned an address doesn't necessarily mean that it's actually being used.  The low level bits of the OS know when to map those addresses to physical locations in RAM or swap storage, but there's no need to tie up that space if the application is not actually storing information at those addresses.  Not only that, but you'll notice that column for each process, Virtual Mem, doesn't come anywhere close to adding up to the VM Size.  The processes aren't actually using all that memory. <comment112> There is plenty of VM that is not actually swappable. For instance, if you mmap a 4GB file it takes 4GB of VM, on read it will page in directly from the file, and under pressure it will be thrown out (not swapped) since the original file can simply be reread. VM and swapping are really completely different things, VM is simply used to figure out what to swap in. <comment140> thanks for clearing that up. so then what is the correlation, if any, between VM size and the virtual mem column that is displayed per process? <comment142> The VM size is the total amount of address space allocated in the app, regardless of what the ultimate backing store for that address space is, and whether or not it has actually been touched. <comment143> I should point out I was not clear in the first comment VSIZE includes all of RSIZE (all resident pages are still mapped in the virtual address space of the app). I should have said "but it is not physical memory", not "it is not in physical memory." <comment180> Once again I think Activity Monitor's terminology is confusing our discussion.  In your second to last comment you say that VM size is the "total amount of address space allocated in the app".  Are you actually referring to the "Virtual Mem" column that is displayed for each process? <comment217> By VSIZE I am referring to what to something that is not listed in activity monitor, you can see it listed in top if you want. What Activity Monitor lists in the virtual memory column is what is generally referred to as VPRVT, which is is the amount of virtual address used by the app that is not shared with any other apps. <comment231> aha, that makes sense.  Thanks Louis. <comment3654> It might be worth noting that there's a 5th type of memory if you click "Inspect" on a process compared with the columns in Activity monitor. Specifically, there's two types of "Virtual" memory: "Virtual Memory Size" and "Virtual Private Memory". The latter is what is shown in the "Virtual Mem" column in Activity Monitor. <comment3655> From reading Apple's Managing Memory doc, **Inactive** hasn't necessarily been cached to disk. You can demonstrate this if you check your Inactive memory usage (mine is 747.5 MB right now) and your "Swap used" (mine is 0 bytes right now). Inactive just refers to memory pages that haven't been recently read/written by any process. <comment3656> It might be worth clarifying "Virtual" since there are two references to "Virtual" memory in Activity Monitor. The "Virtual Mem" column refers to "*Virtual Private Memory*" in the Inspect Process window, and then there's another simply titled "*Virtual Memory Size*" entry in that window (which I believe to be the *shared* component of the Virtual memory). This is on 10.6.4 (in case Activity Monitor has changed terminology...)