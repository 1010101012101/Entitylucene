macOS: Start Ruby program using `sudo`, use password when calling `security` inside Ruby program <body> strongRunning on macOS Sierra:/strong I have a Ruby program - codesetup.rb/code - for setting up a development environment on a new Mac.  I need to start the program using codesudo ruby setup.rb/code because it performs some stuff requiring codesudo/code.  The program starts with tasks that takes fairly long time (around 2 minutes) which is long enough for a lazy programmer to wanna do something else, maybe crap a cup of coffee.  Here is my conundrum: after the 2 min task, I need to use the codesecurity/code command that interacts with the keychain. This command will prompt me for the password for the keychain, thus halting the ruby program since it is waiting for input.  I know that I can pass the keychain password to the codesecurity/code command using the code-p &lt;PASSWORD&gt;/code flag.   Since most (all?) keychains are setup to use the same password as the macOS login (at least my machine shares...), strongI want to forward the password the user entered to start codesetup.rb/code to the codesecurity/code command. Is this possible?/strong  One solution that is both ugly and unsafe is to directly prompt the user with the sudo password again, but using my own prompt, storing the password in a variable and then passing it to the codesecurity/code command using the code-p/code flag. Apart from not safe it means that the user has the type the password twice. But this will do the job since the user now can leave the computer for a cup of coffee while codesetup.rb/code can do all of it's work without prompting for input.  strongSurely we can do better?/strong  <comment338450> You can't access the password the user may have entered to run `sudo script` from within the script  ("may have" because, depending on `sudo` configuration, the user may not even be prompted for a password). Maybe you can move the `security` command to the beginning of your script and store the result for later use? Or run long runners in the background with `&`? <comment338451> @patrix the problem is that the task taking ~2min has to be performed before the `security` command. <comment338453> Can you run the `security` command first, touch a lock file, background the long initial script and wait for the initial script to remove the lock file before proceeding with the rest of the security code?