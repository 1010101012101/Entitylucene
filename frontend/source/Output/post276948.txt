How do you save an environmental variable? <body> Trying to save an environmental variable.  precodecd ~ mkdir Projects export PROJDIR=/Users/David/Projects cd ~ cd $PROJDIR //can execute. cd .. open .bash_profile //was told this was the file you add the variable to. /code/pre  Then terminal tells me there is nothing with that name. To check   precodels -a /code/pre  And there are two files with bash .bash_history and .bashsessions  .bash_history isn’t executable and when I open .bashsessions I’m not sure how I’d add  precodeexport PROJDIR=/Users/$USER/Projects /code/pre  to the file. So that doesn't seem right either.  <answer276951> ‘export’ doesn't write anything to file. It's for making variables available to subprocesses.  If you've never written anything to .bash_profile, it's unsurprising that it doesn't exist, since it's not created for you. You'll need to create it yourself and write that line within.  For example, codetouch ~/.bash_profile/code (to create the file) then edit it in an editor of your choice such as TextEdit (open using Finder or codeopen -e ~/.bash_profile/code). Alternatively, codenano ~/.bash_profile/code. Paste in codeexport PROJDIR=/Users/$USER/Projects/code and save the file, then reopen your shell or source the profile.  <answer277016> Redirection is one of the simplest ways to create a file with text or append a file with text. Standard output is redirected with the code&gt;/code symbol or appended to a file with code&gt;&gt;/code.  In your case, you want the string codeexport PROJDIR=/Users/$USER/Projects/code added to code.bash_profile/code. We will protect the string with single (strong) quotes, so code$USER/code is not expanded.  precodecd  # no need for the tilde (~) echo 'export PROJDIR=/Users/$USER/Projects' &gt;&gt;.bash_profile /code/pre  A single code&gt;/code will overwrite any text in a file, so use code&gt;&gt;/code and append the text for safety. It would benefit you to learn one of the three visual editors (vi/vim, emacs, nano) supplied in macOS.  <comment348645> You can write it to .bashrc as well. <comment348777> Thanks for the help, I'm gonna start with nano. <comment348778> @grgarside Thanks for the info!