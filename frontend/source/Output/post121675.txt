How can I disable SSH KeychainIntegration in OS X Mavericks? <body> I'm having some issues with SSH KeychainIntegration in OS X Mavericks.  I've tried poking around Apple's support site, but haven't seen anyone having my issue.  I emhave seen/em lots of people who seemingly don't know how to use SSH that well, so I decided to try another community.  First, my configuration is working.  I am able to use my key pair and ssh to hosts as I need to, with my credentials being cached in the agent.  I am able to see my cached credentials via "ssh-add -l", as expected.  I am prompted to input my password by an OS X-style dialog, with a checkbox that says "Remember password in my keychain".  I usually ignore this checkbox, but when I check it, I do see my key stored in the keychain.  This key stored in the keychain is seemingly never used, however, since I have a password on it.  At least that's what I've gleaned from various things I've read.  When I enter my password into the dialog, and the key is cached in the agent, I successfully connect, but not before being told "Saving password to keychain failed".  Seeing this error message is what led me to investigate further; I don't like getting an error every time I connect.  Things get interesting when looking at the manpage SSH_CONFIG(5).  Two options for dealing with the keychain exist, specific to Apple:  AskPassGUI, and KeychainIntegration.  You're able to toggle these in ~/.ssh/config, and doing so yields some interesting results.    Setting AskPassGUI to no, you'll no longer be prompted with an OS X-style dialog, instead an input text line in your terminal.  No biggie.  But if you do this, then ssh-agent will not cache your credentials.  This is plainly broken, and frustrating because I could easily live with the text prompt if the credentials were cached.  Setting KeychainIntegration to no, ssh throws a hard error, as follows:  precode~/.ssh/config: line 11: Bad configuration option: KeychainIntegration ~/.ssh/config: terminating, 1 bad configuration options /code/pre  My question, simply, is this:  Is there a way to actually disable OS X Keychain Integration for SSH?  <answer123092> Based on the source code for the current version of SSH that's shipping with Mavericks (located here), it appears that the functionality of the config option codeKeychainIntegration/code has not yet been implemented. I'm making this assumption based on the contents of openssh/readconf.h, which does not reference the codeKeychainIntegration/code option. It does, however, reference the codeaskpassgui/code option. Checking the "keywords" struct in that file does indeed show that the codekeychainintegration/code option is not present (which in turn implies that the codeoBadOption/code (NULL) op code would be returned).  Another clue implying that the functionality you desire is not implemented in the way the man page specifies is the file: openssh/keychain.c. The source code actually shows that the codedefaults/code system (i.e., Property List files) is being used to store settings related to codeKeychainIntegration/code. Specifically, lines from the codestore_in_keychain/code function reference KeychainIntegration:  precode/* Bail out if KeychainIntegration preference is -bool NO */ if (get_boolean_preference("KeychainIntegration", 1, 1) == 0) {     fprintf(stderr, "Keychain integration is disabled.\n");     goto err; } /code/pre  Here is the corresponding codeget_boolean_preference/code function. Note that it's using codeCFPreferencesCopyAppValue/code to obtain a boolean from the "org.openbsd.openssh" application identifier:  precode#if defined(__APPLE_KEYCHAIN__)  static int get_boolean_preference(const char *key, int default_value, int foreground) { int value = default_value; CFStringRef keyRef = NULL; CFPropertyListRef valueRef = NULL;  keyRef = CFStringCreateWithCString(NULL, key, kCFStringEncodingUTF8); if (keyRef != NULL)     valueRef = CFPreferencesCopyAppValue(keyRef,         CFSTR("org.openbsd.openssh")); if (valueRef != NULL)     if (CFGetTypeID(valueRef) == CFBooleanGetTypeID())         value = CFBooleanGetValue(valueRef);     else if (foreground)         fprintf(stderr, "Ignoring nonboolean %s preference.\n", key);  if (keyRef)     CFRelease(keyRef); if (valueRef)     CFRelease(valueRef);  return value; }  #endif /code/pre  This might imply that you can disable the codeKeychainIntegration/code functionality for yourself by performing this defaults command:  codedefaults write org.openbsd.openssh KeychainIntegration -bool NO/code  or to set it for all users:  codesudo defaults write /Library/Preferences/org.openbsd.openssh KeychainIntegration -bool NO/code  <comment141846> Nice question, I don't have an immediate answer, but hope with the votes it has, it will pop up on someone's radar. I can confirm the bug on my build of OS X with just a one line config file - setting the value to yes or no fails as described. <comment141932> A point of clarification:  I only receive the message "Saving password to keychain failed" when ssh-add successfully caches credentials.  I *don't* see it on every connection attempt, which is how it reads, when I re-read it.  With cached credentials, it simply connects quietly, as you would expect. <comment143721> You dug deep, and I appreciate it.  I tried setting `KeychainIntegration` to `NO` via `defaults` as you suggested.  `ssh` then behaves as if I'd set `AskPassGUI` in `~/.ssh/config` -- no credentials are cached, and I'm prompted for the passphrase all the time.  Less than useful.  Still, I think you've answered the question, and the answer is, simply, "It can be disabled, but it isn't fully implemented, and you probably won't like the results." <comment155563> this is functioning now thank you <comment177500> Thank you so much I was searching all over to find an answer to this. Since I have a custom .zshrc file that I port between mac and linux it was driving me nuts that keychain was taking control of managing ssh-agent and the added keys.