grep syntax issue on Lion <body> I have a text file and looking for the single line codebird/code. Using OS X Lion and grep 2.5.1.  this works:    precodegrep '^bird' file.txt /code/pre  but this doesn't    precodegrep '^bird$' file.txt /code/pre  There is not a blank space at the end of the line. What am I doing wrong?   thx  <answer37502> I'm guessing it's a CRLF file (dos formatted text file)  precode[bob@erasmas tmp]$ cat testfile bird notbird [bob@erasmas tmp]$ cat testfile.dos bird notbird [bob@erasmas tmp]$ file testfile testfile: ASCII text [bob@erasmas tmp]$ file testfile.dos testfile.dos: ASCII text, with CRLF line terminators [bob@erasmas tmp]$ grep '^bird' testfile bird [bob@erasmas tmp]$ grep '^bird' testfile.dos bird [bob@erasmas tmp]$ grep '^bird$' testfile bird [bob@erasmas tmp]$ grep '^bird$' testfile.dos /code/pre  Note:  This was on a Linux machine, as this is not specific to OS X (if this is infact the problem).      Run "file" on file.txt and see if it has CRLF line endings.   <answer37503> Its usually because of a DOS formatted text file (CRLF). To clean the file you can install a too√∂ like codedos2unix/code; but usually works even simpler by using the codetr/code tool:  precodetr -d '\r' &lt; testfile &gt; output.txt /code/pre  <answer37504> If you want to keep the MS-DOS formatting, then you can insert the MS-DOS carriage return within the pattern. On linux I press CTRL-V CTRL-M to produce the literal code^M/code representing the MS-DOS CR (sometimes noted as code\r/code). Hope on OS X you will find how to produce the literal CR.  precodegrep --color=none "^bird^M$" /code/pre  <comment42552> Works for me. Just one very long shot: You search `enable1.txt` in variant 1 and `file.txt` in variant 2. <comment42553> looks like CRLF updated to file.txt <comment42554> this is corect. `file.txt: ASCII c program text, with CRLF line terminators` - any idea how to check. seems like grep should handle this... <comment42555> looks like this did it `sed 's/.$//'  file.txt  fixed.txt` <comment42556> That sed statement removes ANY character at the end of a line, which might unintentionally clean away too much if you're unlucky. But as always with *NIX; loads of way to do the same thing. See my answer below for another way to clean it up. :) <comment42557> Agreed, that should work pretty much anywhere.