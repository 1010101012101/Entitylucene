Terminal.app uses huge advaned subpixel antialiasing since El Capitan(10.11)? <body> What I've found so far is that  ol limacOS uses intended or buggy subpixel antialiasing on dark background, which causes more weighted font than on bright background. Refer http://www.lighterra.com/articles/macosxtextaabug/ and https://emacs.stackexchange.com/questions/14890/antialising-of-light-text-on-dark-too-heavy-os-x-10-10./li liBut since El Capitan, especially Terminal.app render text differently. But other than Terminal.app the problematic situation is same. Refer Terminal Sub-pixel Rendering improvement?. I cannot use same subpixel antialiasing which is used in Terminal.app using "defaults write org.gnu.app AppleFontSmoothing -int 0|1|2|3". /li /ol  Here is my question, Is there any way to use same subpixel antialiasing algorithm used in Terminal.app on my application, such as Emacs, VS Code or Xcode?  <comment321081> Looks like NSTextField works in a way that Termianl.app use. [Link](http://stackoverflow.com/questions/19377813/rendering-differences-between-nstextfield-and-nstextview-on-a-black-background)