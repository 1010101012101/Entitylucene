How to open a port on MacOS X <body> I previously had Memcache running on my localhost/127.0.0.1 port 11211. Unfortunately, I rebooted my computer and now port 11211 isn't open and I don't know the command to open this port.  Can someone help with this?  <answer65573> you need to start memcache by typing  codememcached/code  in terminal and leaving the window open  or start the daemon  codememcached -d/code  you could also look for a loadctrl script if you want this to always run on boot.  <comment77096> Have you started Memcached after reboot? `memcached -d` <comment77097> why the downvote and votes to close the question? I'm happy to rephrase the question to make it better. <comment77098> @j_mcnally: You should generally not edit the question itself to remove incorrect assumptions on the asker's part. Use an answer to explain why they are mistaken. <comment77099> @timpeterson: It's useless to wonder why people downvote, but this isn't really a programming question, and would be better suited for either [Apple.SE] or [SU], thus "off-topic" close votes. <comment77100> @JoshCaswell isn't shell a programming language? The answer was to type `memcached -d` which is a command. I think SE question parsing is getting silly. <comment77101> Calling starting a process from a shell "programming" is a real stretch to me. <comment77102> If an IDE is are fair game, i think this is too. <comment77103> @JoshCaswell, one writes a program, then runs it. So there is a "starting" of that "process". I respectively disagree, but point taken. <comment77104> @JoshCaswell, by editing the question for content and title, it will help prevent dupes in future and help serve as a historical guide for people with the problem in the future, people with the same problem may not understand what hes actually asking <comment77105> @j_mcnally: An IDE is specifically ["a tool used by programmers"](http://stackoverflow.com/faq#questions); starting a program from the shell is something that any computer user might do. Re: the edits, future readers may have exactly the same misunderstanding. Editing the question to beg its answer doesn't really help them find the solution. <comment77106> @JoshCaswell starting a program from the shell is something that only a programmer would do.  Your average computer user is definitely never using the shell. My parents and brother (i.e., average computer user) have been computer users for 20 years and all they know and will ever know are the icons they click on screen. <comment77107> @timpeterson: I think you have an extremely limited view of computer users. There are plenty of non-programming [SU]s who are happy to do things on the command line but have no clue what `int main(int argc, char *argv[])` means. I had a friend who I tried to teach the basics of C; he never got it, but he loved to do his FTPing via the shell. <comment77108> @JoshCaswell the number of people who use the command line but don't know some C syntax is ridiculously dwarfed by the number of people i'm referring to. "I had a friend" is anecdotal, i'm referring to the entire world population. I stand by my claim that SE question parsing as typified by the argument you make is silly. <comment77109> Your assertion about your brother and parents is anecdotal as well; that's why I mentioned my friend as a counter-anecdote. <comment77110> the number of people who use the command line but don't know C syntax is still ridiculously dwarfed by the number of people who will never use the command line <comment77111> -@j_mcnally, thanks that worked. Can you explain the difference -/+ the daemon `-d` flag? I'm not sure what a daemon is. <comment77112> runs in background / detached from the terminal <comment77113> Meaning i can close the terminal window in which i typed the command and the port will stay open? It would seem like you'd want that all the time. What would be an example of a scenario where you won't use the `-d` flag? <comment77114> when you want to see the output in terminal rather than logging, useful for debugging. <comment77115> -@j_mcnally, ah oh yeah, i get it! thanks! <comment77116> you could alternative use something like 'screen' and detach the terminal entirely but still get the output when you reattach to it. the choice is yours. Also you could say `memcached &` which will background the task but still print STDOUT and STDERR to the terminal, while still allowing you to use the terminal.