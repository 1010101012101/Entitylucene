Why AppleScript in El Capitan runs differently? <body> Why in El Capitan this app says 3 1 2? Before El Capitan it said 1 2 3.  When this script is double clicked, it needs to say 1 2 3.  precodeon run   say "1"   testing() end run  on testing()   say "2" end testing  on idle   say "3"   return 60 end idle  on quit end quit /code/pre  <answer213739> The on codeidle/code and codequit/code handler are for strongApplets/strong, not Scripts. Applets and scripts are different, however they are both written in Applescript.  An applet, is script application, which support codeidle/code and codequit/code handlers, while script is like any other script in any language; it runs and till the end, doesn't know when it's about to exit, or when it's idle. Applet it like any other application, if you right click and em"Open Package Content"/em of an applet you'll see the resemblance. Applet can have resources, can be CodeSigned, can have multiple script and shared without any problem.  That's your problem, choose to save the script as an application when asked, also select em"Stay open after run handler"/em, then your codeidle/code handler will run.  Few more things, it's always a good idea to return out of every handler, which you aren't in coderun/code and codetesting/code, this can cause the codeidle/code handler to not run as it'll be waiting for coderun/code to finish. You should also insert codecontinue quit/code in your codequit/code handler, otherwise it'll never quit; you'll have to force quit it.  For more info AppleScript Language Guide  <answer214573> First: I cannot reproduce your problem on OS X El Capitan 10.11 (15A284). Your script says “1”, “2”, “3” every time I run it.  The exact order of the “run” and “idle” messages may have never been guaranteed, so it may be possible that both orders ({1, 2, 3} and {3, 1, 2}) are considered correct.  However, if the order of the run and idle messages is important to your script, you could use a script property to let the idle handler know when the run handler has already executed and do nothing until it has, e.g.,  precodeproperty didRun : false  on run     say "1"     testing()     set didRun to true end run  on testing()     say "2" end testing  on idle     if not didRun then         say "has not run"         return 1     end if      say "3"     return 3 end idle  on quit     set didRun to false      say "quit"     continue quit end quit /code/pre  Note that resetting codedidRun/code in the codequit/code handler is necessary because property values normally persist across runs (by being written back to the script file after execution).  <comment257964> it says 1, 2 when I run it. No 3, presumably because it never gets to idle. <comment258039> Thanks for info. This i don't understand: "it's always a good idea to return out of every handler, which you aren't in run and testing, this can cause the idle handler to not run as it'll be waiting for run to finish" <comment258082> You don't have a `return` statement at the end of the handlers. It probably won't cause problem, but in that rare case where it does, you'll go crazy finding out what's wrong. So simple add `return` at the end, even if you aren't returning anything. <comment258278> Yes, in short, don't use the idle or quit handlers unless your creating a stay-open applet. <comment259116> @Tetsujin: You must save it as a “stay open” applet. When saving as an application, select the “Stay open after run handler” checkbox. <comment259118> I cannot reproduce your problem on OS X El Capitan 10.11 (15A284). Exactly which version of OS X are you seeing this on? If you have an Apple developer account, please file a bug report about this at https://developer.apple.com/bug-reporting/. Note that you can create an Apple developer account for free. <comment259119> Why is the exact order of the run and idle messages important to your script? Perhaps there's another way to get your desired behavior without relying upon the order of these two messages. <comment259123> I think it's clear from the question that the script is running in a stay-open applet; otherwise, the idle handler would never be called. @scriptee2 wrote that the script says “3 1 2”. <comment259126> @ChrisPage - I actually never got that far, I just had it as an open script - which I guess would 'stay open' <comment259137> @Tetsujin: Just to be clear, leaving a script document open in Script Editor is completely unrelated to the concept of a “stay open” applet. A “stay open” applet specifically means a script applet that stays open after the run handler has completed, so it can continue receiving events, like `idle`. In Script Editor, the idle message is never sent—Script Editor's Run command just executes the run handler and then stops. <comment259581> @ChrisPage I didn't see that. That should be happening, because when I run the script above I get _'123'_. Must have been something else causing that. If OP could confirm that's still the case, best way to debug would be to upload the applet to Dropbox or something so other can have look and try it out.