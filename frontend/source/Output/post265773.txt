command line in AppleScript <body> I want to create an AppleScript app with this perfectly working (bash) command:  precodecd /Volumes/MEDIAS/WORK/CONVERSION_VIDEO/PROXY_720P/INPUT/; for f in *.mov *.mp4; do ffmpeg -i "$f" -vcodec prores -profile:v 0 -s 1280x720 /Volumes/MEDIAS/WORK/CONVERSION_VIDEO/PROXY_720P/OUTPUT/"${f%.*}_PROXY_720P.mov" &amp;&amp; rm "$f"; done /code/pre  but I get errors with the variable "$f".  How can I launch it through AppleScript?  <answer265783> Shell emscripts/commands/em in AppleScript are handled with the codedo shell script/code emcommand/em, which executes a emshell script/em using the codesh/code emshell/em. In the short form of:  precodedo shell script "..." /code/pre  Where code.../code is the emshell script/em to execute.  See AppleScript Language Guide codedo shell script/code Commands Reference and Technical Note TN2065 codedo shell script/code in AppleScript, for additional details.  What you need to do, is escape the double-quotes with a backslash, e.g. code\"$f\"/code and elsewhere as necessary.  I've tested your emcommand/em, wrapped in a codedo shell script/code emcommand/em, with the necessary escaping as shown in the emcommand/em below and it worked without issue.  precodedo shell script "cd /Volumes/MEDIAS/WORK/CONVERSION_VIDEO/PROXY_720P/INPUT/; for f in *.mov *.mp4; do ffmpeg -i \"$f\" -vcodec prores -profile:v 0 -s 1280x720 /Volumes/MEDIAS/WORK/CONVERSION_VIDEO/PROXY_720P/OUTPUT/\"${‌​f%.*}_PROXY_720P.mov‌​\" &amp;&amp; rm \"$f\"; done" /code/pre  strongNote:/strong Because the codedo shell script/code emcommand/em uses the codesh/code emshell/em, if the codeffmpeg/code executable is not in the codePATH/code passed to the emshell/em, which is code/usr/bin:/bin:/usr/sbin:/sbin/code, you'll need to include the fully qualified pathname to the codeffmpeg/code executable for your emcommand/em to work in AppleScript.  <answer265806> The direct parameter of the do shell script command is a string containing the shell code you want to execute, as demonstrated in Listing 39-1, which simply lists a directory.  APPLESCRIPT  Open in Script Editor Listing 39-1AppleScript: Executing a simple shell command that lists the contents of a directory  precodedo shell script "ls /Applications/" (* --&gt; Result: "App Store.app Automator.app Calculator.app Calendar.app ..." *) /code/pre  <comment333234> Welcome to AskDifferent!  Consider rewriting your question so that it sticks to one topic - right now you have two - how to run a bash command in AppleScript and a problem with the variable expansion of `f`.  What error are you getting and what specifically would you like to know? <comment333408> it's done, checked ;)