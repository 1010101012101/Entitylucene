Confusion with sudo and multiple local accounts <body> I am having difficulties figuring out why certain things are much more complicated on a mac terminal than a standard linux shell..  Say I have two local accounts, one administrator called "adm" and a standard user "usracc" and I want to be able to update the codelocate/code database with codeupdatedb/code command. I need to simply run codesudo updatedb/code, except usracc is not in the sudoers list.  Ok, I say and codesu adm/code then codesudo updatedb/code which tells me that codeupdatedb/code command is not found. So to recap:  ol limy regular user account is not on the sudoers list (this is actually intentional, as I dont want to compromise the system if the password for this account is compromised). /li limy admin account emcan/em sudo but apparently not that particular command, which cannot be found for whatever reason. /li liwhen I codesu/code to my admin account I see; codeshell-init: error retrieving current directory: getcwd: cannot access parent directories: Permission denied/code which gets repeated everytime I try to get content assist with the tab key../li /ol  so with the root account disabled, apple sort of forces you to give sudo privilages to user accounts to be able to do simple stuff, how exactly does that help with security? Or have I completely misunderstood something here?  <answer146547> You aren't carrying forward your shell environment into the codesu adm/code session. so if you codeecho $PATH/code in the usracc account and the adm account, you'll find that they aren't equal (which is why adm can't find the updatedb command). All you need to do is tell su that you want to carry forward your env (codesu -m adm/code should do it) or just add the path to updatedb.  Though on my box updatedb is called code/usr/libexec/locate.updatedb/code and is a script. 