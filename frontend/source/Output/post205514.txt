Virtualization with Intel's GVT-d on Mid-2015 Macbook Pro <body> I have a mid-2015 15" Macbook Pro. The iGPU is part of Intel's Iris Pro brand, which as I understand allows a VM to access the GPU directly with a native driver through GVT-d.  I would like to run a Linux guest OS in this manner, giving it native access to the iGPU so that it can run a native driver (and thus have OpenGL 4.3 support). I have no idea how to go about doing this, though. I've heard there are forks of QEMU/KVM with GVT included, but I have no idea how to go about setting up a VM with one of those.  <answer205728> Some further research has produced somewhat contrary answers. This forum thread seems to suggest that it's possible, but not for a Mac OS host. Conversely, here it's suggested that it's not possible to implement on a type-2 hypervisor like Virtualbox.  I'm not entirely sure what to make of this, except maybe to suspect that it's possible to time-share an Intel GPU across multiple VMs with this method, but not to time-share an Intel GPU across a host emand/em a guest.  Either way, it seems the answer to this question would have to be strongNo/strong for the time being.  <comment247842> This is way outside my area of expertise, but wouldn't any OS running in a VM be using the VM's virtualisation of the graphics drivers, not the actual drivers themselves - thereby putting an effective wall between VM & GPU <comment248132> @Tetsujin: API passthrough is a common technique, but some solutions allow direct passthrough to a GPU. Under Linux, for example, it's possible to enable PCI passthrough so that a VM can have private and native access to a GPU or other PCI expansion card, similar to how you can do USB passthrough to run a USB device with another OS' drivers. Intel's GVT portfolio extends this with some more advanced features such as GPU time sharing across multiple VMs, and I was hoping this would allow both a host and guest to natively access the same iGPU simultaneously.