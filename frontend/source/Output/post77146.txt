Monitor Console.app for a string and notify when found <body> Is it possible to monitor all messages in Console.app for a string and then notify the user when this string occurs?  I have the problem that I'm getting disk I/O errors and I suspect that it's not a HDD failure, but somehow is caused by a piece of software. The only way I know that I have disk I/O errors is that I sometimes look through all the messages in the Console.app out of curiosity. Of course this does not give me real time information.br Therefore I want to receive a notification when the following message occurs in the Console:  precode07/01/2013 20:59:06 kernel  disk0s1: I/O error. /code/pre  Is this somehow possible? It's OK if this means that Console has to be on all the time.  I'm on Snow Leopard 10.6.8.  <answer77150> I would not use Console.app.  Instead use Terminal.app with the following command:  precodetail -f /var/log/system.log | grep "string you are looking for" /code/pre  then leave that window open and you will see all matching entries in that window as you work.  Also know that when the system.log file is rotated (due to size/time) tail will stop.  you will need to restart the command.  <answer77183> ol licodesudo /usr/bin/gem install terminal-notifier/code/li liSave this script as code~/bin/logcheck/code and run codechmod +x ~/bin/logcheck/code  precode#!/bin/bash  tmp=${TMPDIR}logcheck [ -f $tmp ] &amp;&amp; last=$(cat $tmp) || last="" found=$(grep -A-1 "^$last" /var/log/system.log | grep -F 'kernel  disk0s1: I/O error') [ -n "$found" ] &amp;&amp; terminal-notifier -message "$found" last=$(grep -Eo '^\w{3} [ \d]\d \d\d:\d\d:\d\d' /var/log/system.log | tail -n1) printf %s "$last" &gt; $tmp /code/pre/li licodeEDITOR=nano crontab -e/code, add code*/5 * * * * ~/bin/logcheck/code/li /ol  <comment89467> Thanks, that looks like what I'm looking for. Could you clarify the rotating bit? How often is the system.log rotated? Could I code into terminal that it should restart automatically as well? <comment89498> @BartArondson When the log gets too long, it gets archived into a file named system.log.1.bz1, for example. <comment89586> I get `sudo: usr/bin/gem: command not found`. I'm on 10.6.8, so that might matter. Sorry I forgot to mention it at first. <comment89614> @BartArondson RubyGems has only been installed by default since 10.7. terminal-notifier doesn't work on 10.6 either, but you can use growlnotify.