Start/stop internet sharing from a script? <body> Is there a way to start/stop internet sharing from the command line or maybe an apple script?  The thing is that I move around my laptop between home and work. At one place I get wireless internet (and thus I have to disable internet sharing), and at the other I get internet from an ethernet cable and set up the computer to share the internet to other devices by creating a small wireless network.  But it's getting a bit tedious having to go into System Preferences and start/stop the internet sharing every time I switch locations, so I would like to have a quick command or script to launch and do the switch on demand.  Any hints or ideas?  <answer2494> You might want to take a look at this (possibly off topic for StackOverflow) question and its answer: How to start / stop internet sharing using apple script.  <answer2497> One way of doing this is by GUI scripting—System Preferences doesn't have any Applescript support by default.  precodetell application "System Preferences" to set current pane to pane "com.apple.preferences.sharing" delay 1 tell application "System Events" to tell process "System Preferences"     click checkbox 1 of row 8 of table 1 of scroll area 1 of group 1 of window "Sharing" -- change to row 10 if you are using anything before Snow Leopard     delay 1     if (exists sheet 1 of window "Sharing") then         click button "Start" of sheet 1 of window "Sharing"     end if end tell ignoring application responses     tell application "System Preferences" to quit end ignoring /code/pre  <answer2501> To start Internet Sharing from the CLI:  precodesudo launchctl load -w /System/Library/LaunchDaemons/com.apple.InternetSharing.plist /code/pre  To stop, change the strongload/strong to strongunload/strong.  Note that if you have the pref pane open when you run this you will not see the change take effect immediately (the UI won't update), but it does work.  <answer2513> The really easy way to do it is to combine @Philip's answer with the NetworkLocation application. NL can tell where you are, and automatically run an AppleScript when it senses you've changed locations.   I think it's required software if you have a laptop—otherwise, it's a PITA to always have to manually reset several settings whenever I change locations.  <answer5891> I took a cue from mankoff's answer and wrapped it up in an AppleScript. I'm using this script from Automator so that I can easily use it as a service and give it a keyboard shortcut.  strongToggle Internet Sharing:/strong  precoderegister_growl()  try     if isRunning("InternetSharing") then         do shell script "launchctl unload -w /System/Library/LaunchDaemons/com.apple.InternetSharing.plist" with administrator privileges          if isRunning("InternetSharing") then             error "Internet Connection Sharing was Not Disabled"         else             my growlnote("Success", "Internet Connection Sharing Disabled")         end if      else         do shell script "launchctl load -w /System/Library/LaunchDaemons/com.apple.InternetSharing.plist" with administrator privileges          if isRunning("InternetSharing") then             my growlnote("Success", "Internet Connection Sharing Enabled")         else             error "Internet Connection Sharing was Not Enabled"         end if      end if  on error errMsg     my growlnote("Error", errMsg)  end try  on isRunning(processName)     try         return 0 &lt; length of (do shell script "ps ax | grep -v grep | grep " &amp; processName)     on error         return false     end try end isRunning  on register_growl()     try         tell application "GrowlHelperApp"             set the notificationsList to {"Success", "Warning", "Error"}             register as application "Toggle Internet Connection Sharing" all notifications notificationsList default notifications notificationsList icon of application "Sharing"         end tell     end try end register_growl  on growlnote(growltype, str)     try         tell application "GrowlHelperApp"             notify with name growltype title growltype description str application name "Toggle Internet Connection Sharing"         end tell     end try end growlnote /code/pre  <answer6711> Slightly different than the other applescript posted (I think in a better way but…). Having options sometimes can help.  precode tell application "System Preferences"    activate    reveal (pane id "com.apple.preferences.sharing")  end tell   tell application "System Events"    tell process "System Preferences"      try        click checkbox of row 11 of table 1 of scroll area of group 1 of window "Sharing"         if checkbox of row 11 of table 1 of scroll area of group 1 of window "Sharing" is equal to 1 then          repeat until sheet of window 1 exists            delay 0.5          end repeat        end if         if (sheet of window 1 exists) then          click button "Start" of sheet of window 1        end if         tell application "System Preferences" to quit        activate (display dialog "Internet Sharing preferences sucessfully flipped")       on error             activate        display dialog "something went wrong in automation but you are probably in the right menu…"        return false      end try    end tell  end tell /code/pre  <answer141409> precode/usr/bin/defaults write /Library/Preferences/SystemConfiguration/com.apple.nat NAT -dict Enabled -int 0 /code/pre  <answer192955> Before/after any configuration the interface or interfaces involved in sharing need to be turned off/on with:  precodenetworksetup -setairportpower en1 off /code/pre  then on. (codenetworksetup -setairportpower en1 on/code)  My wifi was listed as codeen1/code, to lookup yours use codenetworksetup -listnetworkserviceorder/code. More to the point, when starting internet sharing you will need to add more detailed NAT functionality then just setting the enabled bit.   NAT is turned on/off with bit:  code-int 0/code = off   code-int 1/code = on  The only thing that is written in code/Library/Preferences/SystemConfiguration/com.apple.nat.plist/code with  precodedefaults write /Library/Preferences/SystemConfiguration/com.apple.nat\     NAT -dict Enabled -int 0 /code/pre  is   precode&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;NAT&lt;/key&gt;         &lt;dict&gt;                 &lt;/dict&gt;                 &lt;key&gt;Enabled&lt;/key&gt;                 &lt;integer&gt;1&lt;/integer&gt;         &lt;/dict&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  You will need to change your plist file to look like the following:  precode&lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;NAT&lt;/key&gt;         &lt;dict&gt;                 &lt;key&gt;AirPort&lt;/key&gt;                 &lt;dict&gt;                         &lt;key&gt;40BitEncrypt&lt;/key&gt;                         &lt;integer&gt;1&lt;/integer&gt;                         &lt;key&gt;Channel&lt;/key&gt;                         &lt;integer&gt;0&lt;/integer&gt;                         &lt;key&gt;Enabled&lt;/key&gt;                         &lt;integer&gt;0&lt;/integer&gt;                         &lt;key&gt;NetworkName&lt;/key&gt;                         &lt;string&gt;FancyHostNome&lt;/string&gt;                         &lt;key&gt;NetworkPassword&lt;/key&gt;                         &lt;data&gt;                         &lt;/data&gt;                 &lt;/dict&gt;                 &lt;key&gt;Enabled&lt;/key&gt;                 &lt;integer&gt;1&lt;/integer&gt;                 &lt;key&gt;NatPortMapDisabled&lt;/key&gt;                 &lt;false/&gt;                 &lt;key&gt;PrimaryInterface&lt;/key&gt;                 &lt;dict&gt;                         &lt;key&gt;Device&lt;/key&gt;                         &lt;string&gt;en4&lt;/string&gt;                         &lt;key&gt;Enabled&lt;/key&gt;                         &lt;integer&gt;0&lt;/integer&gt;                         &lt;key&gt;HardwareKey&lt;/key&gt;                         &lt;string&gt;&lt;/string&gt;                         &lt;key&gt;PrimaryUserReadable&lt;/key&gt;                         &lt;string&gt;InfiniBand&lt;/string&gt;                 &lt;/dict&gt;                 &lt;key&gt;PrimaryService&lt;/key&gt;                 &lt;string&gt;XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX&lt;/string&gt;                 &lt;key&gt;SharingDevices&lt;/key&gt;                 &lt;array&gt;                         &lt;string&gt;en1&lt;/string&gt;                 &lt;/array&gt;         &lt;/dict&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  As you can see my plist NAT file may need a little customization to fit your needs.   <answer215219> Since the GUI scripting solution posted previously requires international users to adjust the window and button names, I came up with a version that works with any system language. It also works for the other sharing option, and gives localized feedback about the sharing state. I use two different Automator services based on this, one to toggle file sharing and one to toggle internet sharing.  precodetell application "System Preferences"     set current pane to pane "com.apple.preferences.sharing"     set localized_window to the localized name of the current pane     set localized_app to (localized string "System Preferences")     set localized_ok to {localized string "OK"} -- File sharing     set localized_start to {localized string "START"} -- Internet sharing end tell delay 0.3 tell application "System Events" tell process "System Preferences"     click checkbox 1 of row 8 of table 1 of scroll area 1 of group 1 of window localized_window     delay 0.2     select row 8 of table 1 of scroll area 1 of group 1 of window localized_window     -- change row numbers to the service you want toggled     if (exists sheet 1 of window localized_window) then         try             click button (localized_ok as string) of sheet 1 of window localized_window         on error             click button (localized_start as string) of sheet 1 of window localized_window         end try     end if     set sharing_state to the value of item 1 of static text of group 1 of window localized_window end tell  tell application "System Preferences" to quit display notification sharing_state with title localized_app --  display notification exists since OS 10.9, for older systems use:  --  display dialog sharing_state buttons {localized_ok} default button 1 with title localized_app giving up after 1.5 end tell /code/pre  <answer226679> I use the following script to toggle internet sharing on an early 2011 MacBook Pro / 10.11.3 El Capitan, so with newer hardware you might get away with shorter delays. It adopts ideas from several scripts posted for this purpose (localisation, turning wifi on/off using codenetworksetup/code, close codeSystem Preferences/code when done).  precodetell application "System Preferences"     activate     reveal (pane id "com.apple.preferences.sharing")     set localized_window to the localized name of the current pane end tell  tell application "System Events" to tell process "System Preferences"     delay 1     repeat with r in rows of table 1 of scroll area 1 of group 1 of window localized_window         if (value of static text of r as text) starts with "Internet" then             set sharingBool to value of checkbox of r as boolean             select r             if sharingBool is true               do shell script "/usr/sbin/networksetup -setairportpower en1 off"             else               do shell script "/usr/sbin/networksetup -setairportpower en1 on"             end if             click checkbox of r         end if     end repeat     delay 1      if (exists sheet 1 of window localized_window) then       click button "Start" of sheet 1 of window localized_window     end if  end tell  ignoring application responses   tell application "System Preferences" to quit end ignoring /code/pre  <answer257357> I had far better results (for an already configured sharing setup) on 10.11.6 with the simple variations...  codesudo launchctl/code strongcodestart/code/strong codecom.apple.NetworkSharing/code  and  codesudo launchctl/code strongcodestop/code/strong codecom.apple.NetworkSharing/code  emrespectively./em  <comment2198> -1 overly complex. <comment2200> Perhaps, but it works and the answer is within the constraints of the OP's question: "Is there a way to start/stop internet sharing from the command line or maybe an *apple script*?" Downvoting really ought to be saved for the really egregious answers. Thanks <comment2201> Hence no "official" downvote. :). <comment2202> "works and is within constraints" makes me think we should have a new site: http://rubegoldberg.stackexchange.com <comment2205> Isn't that what http://thedailywtf.com/ is for? ;-) <comment2235> Awesome! It works, thanks! <comment6113> Sounds like Marco Polo (http://www.symonds.id.au/marcopolo/) but without the Marco Polo steroids. :) <comment6114> @Ian - That page says MP has known issues with Snow Leopard. The [Google Group](http://groups.google.com/group/marcopolo-discuss) says "the MarcoPolo project isn't dead, per se, but it's being developed very slowly. Don't expect a new version soon." The [git repository](http://git.symonds.id.au/gitweb.cgi?p=marcopolo3.git) shows no update since September 2009. Sounds to me like the steroids might be catching up with someone… ;-) <comment6124> Can't say I've had any issues with it on SL *save* for BlueTooth. I just don't use the BT enable/disable/detect feature and it works rather brilliantly. (But point taken) <comment6200> Strange, after a while, it stopped working. If I run the command and then open the pref pane I see that sharing is enabled, however the connection isn't actually being shared. If I manually stop and start sharing on the pref pane, then it works again without problems. Any clues about what could be wrong? <comment6222> No idea why, but you can try other answers, they might work... <comment8065> Mankoff,  when I run your suggestion:      sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.InternetSharing.plist  it seems to run fine and even the sharing preferences gui is updated correctly when refreshed, however the connection is actually not working.  If I run the command again it even fails because it thinks its already loaded.  Also, if I run the "top" command to see the process running i do not see "InternetSharing" but if I start it in the preferences gui I will see the "InternetSharing" process actually running and the connection works.  Any ideas why I am h <comment8066> Not sure why you get that behavior. I see "InternetSharing" in top (or easier, **ps aux | grep -i internet**). <comment8067> I'm running OS X 10.6. If you have a different version maybe that is why... <comment8068> Also, this should probably be a comment to my answer, not an answer in itself. Might want to delete the answer... <comment8069> Yea, certainly this should be a comment to your answer, but for some reason I am not able to comment on there answers unless someone has already made a comment.  Maybe because I am a new user.    I am running OS X 10.6.4.  Another thing I noticed is that when I launch internet sharing in the preferences gui is that the process natd (network address translation daemon) also gets started.  I'm wondering if I also need to launch this process, currently investigating how to do this, there seem to be complex arguments needed to start this process. <comment8070> mankoff,  when you run the command do you also get the other processes started, like bootpd and natd?  These process are started when I start internet sharing from the GUI, but no processes start when I execute the command.  I'm starting to think the process is crashing because the other process are not present.  That would also explain why Internet Sharing is gets checked in the gui put the process is actually not running. <comment8071> @MikeZ: I converted these to comments for you.  Since you don't yet have enough reputation to comment in all places on the site, what you can do is create a new question and hopefully others can help you as well as mankoff.  This will help you gain enough reputation to post comments everywhere.  Check out http://apple.stackexchange.com/privileges for more info about reputation and privileges. <comment11190> I've changed my accepted answer to this because the original answer from mankoff stopped working. <comment11201> @Juan: In what way? Did you upgrade your OS? <comment11258> @Philip: I don't have a clear idea, but it does seem to coincide with some upgrades to the OS. I had added some comments on [mankoff](http://apple.stackexchange.com/questions/2488/start-stop-internet-sharing-from-a-script/2501#2501)'s answer since January, but only now I had a chance to investigate a bit more the issue and modify my scripts to use your solution instead. <comment11260> @Juan: Just be forewarned that if Apple changes the layout of Systems Preferences and the Sharing pane with an upgrade, then my script has the real potential break as well because GUI scripting relies on very strict parameters. <comment37304> Does not really work on Lion for me. It displays the growl success message and toggles the option in the system preferences but the WiFi-symbol doesn't change to the sharing (and other devices can't see that the wifi is shared, so I think it isn't on :( <comment58525> The receipe of Ken works! But... there is a bug (I'm hunting). You have to leave a 30 second delay after the `unload` to be able to do a `load` again. One good check command is `ps ax | egrep '[ /](PID|boo|nat)'`. <comment271076> Doesn't work on 10.11.2 El Capitan: `/System/Library/LaunchDaemons/com.apple.InternetSharing.plist: No such file or directory` <comment283346> try: /System/Library/LaunchDaemons/com.apple.NetworkSharing.plist instead ;) <comment291029> Since the System Preferences app doesn't require authentication how can we do it without using sudo/root? <comment316697> This works fine on macOS Sierra, but with one problem: when I try to enable it when System Preferences is closed, I get this error: `System Events got an error: Can’t get button "Start" of sheet 1 of window "Sharing" of process "System Preferences".` It works fine when I try to disable it, though. The funny thing is, if System Preferences is *open* and I try to enable it, it works. Do you have any ideas as to why that would happen? <comment324383> Seems like `unload` doesn't work unless [SIP](https://support.apple.com/en-us/HT204899) is removed (nothing I'd like to do)… <comment338431> Does this toggle the sharing?