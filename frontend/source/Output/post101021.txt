Applescript Replace sub-procedure doesn't work with '@' <body> I'm trying to substitute an email address for a symbolic character in a block of text.  The text block:  precodeDear %%FirstName%%- ...  This message was sent to %%EmailAddress%%. /code/pre  The script:  precode... set theBody to my replace(theBody, "%%FirstName%%", "First") set theBody to my replace(theBody, "%%EmailAddress%%", "first.last@company.com") ... /code/pre  Replace sub-procedure (AppleScript: Essential Sub-Routines):  precodeon replace(this_text, search_string, replacement_string)      set AppleScript's text item delimiters to the search_string     set the item_list to every text item of this_text     set AppleScript's text item delimiters to the replacement_string     set this_text to the item_list as string     set AppleScript's text item delimiters to ""     return this_text  end replace /code/pre  The result:  precodeDear First- ...  This message was sent to . /code/pre  If I change the script to:  precode... set theBody to my replace(theBody, "%%FirstName%%", "First") set theBody to my replace(theBody, "%%EmailAddress%%", "first.lastATcompany.com") /code/pre  The result:  precodeDear First- ...  This message was sent to first.lastATcompany.com. /code/pre  What is wrong with the codereplace/code sub-procedure?  ** edit **   I'm collecting a distinct list email addresses from an Outlook Contact:  precode... set theAddresses to email addresses of theContact set addressList to {} repeat with theAddress in the theAddresses   if addressList does not contain (address of theAddress) then     set addressList to addressList &amp; (address of theAddress)   end if end repeat ... /code/pre  Then using the list:  precode... repeat with theAddress in addressList   ...   make new recipient at newMessage with properties {email address:{name:displayName of theContact, address:theAddress}}   ... end repeat ... /code/pre  <answer101027> I tried running the first example:  precodeset theBody to "Dear %%FirstName%%- ...  This message was sent to %%EmailAddress%%."  set theBody to my replace(theBody, "%%FirstName%%", "First") set theBody to my replace(theBody, "%%EmailAddress%%", "first.last@company.com")  on replace(this_text, search_string, replacement_string)     set AppleScript's text item delimiters to the search_string     set the item_list to every text item of this_text     set AppleScript's text item delimiters to the replacement_string     set this_text to the item_list as string     set AppleScript's text item delimiters to ""     return this_text end replace /code/pre  The result was:  precodeDear First- ...  This message was sent to first.last@company.com. /code/pre  So it seemed to work just fine. The codereplace/code handler shouldn't have any problems with strings that contain special characters, so there might be something else you're missing.  Also restoring text item delimiters is not necessary as far as I know, and you don't need codeAppleScript's/code outside tell blocks, so the codereplace/code handler can be simplified to something like this:  precodeon replace(input, x, y)     set text item delimiters to x     set ti to text items of input     set text item delimiters to y     ti as text end replace /code/pre  <comment118942> Lauri, How did you hide your name to only show points, badges, etc?