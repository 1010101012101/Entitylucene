Best way to disable SSLv3 in Chrome for Poodle vulnerability <body> Fixing Chrome for the Poodle vulnerability seems to be more difficult on OSX than the other Operating Systems  This seems to work...  Exit chrome   Open Applescript editor  Enter this script  precodedo shell script "open -a /Applications/Google\\ Chrome.app --args --ssl-version-min=tls1" /code/pre  click run.  Check on this page, (you may need to cmd + R) refresh the page.  https://www.poodletest.com/  But is there a better way, or have I missed something?  Source: How do I disable SSLv3 in Safari (OSX &amp; iOS)  <answer150820> This emseems/em to work:  precodedefaults write com.google.chrome org.chromium.ssl.ssl3 -bool no /code/pre  <answer150902> Here is a patch, which is renaming Google Chrome/Chromium inside startup file and placing a script for calling browser with --ssl-version-min=tls1 parameter. No wrapper needed.  <comment177382> only improvement i could make to this is creating a wrapper app....totally kludgey but this may work: https://sixohthree.com/1314/shell-scripts-as-applications-in-mac-os-x <comment177493> This does not seem to do anything for me. <comment177496> hmmm, mileage may vary, but this isn't working for me. Visiting www.poodletest.com shows a poodle <comment179170> Today I visited www.poodletest.com and it told me my Chrome is not vulnerable. So maybe this is moot now, if you update to the latest version. <comment179311> I think it required a browser restart for the test to start passing, but I assume you tried that. <comment179770> This works quite well.  Does it interfere with Chrome's automatic updates?  I suspect the shell script, after copying to Chrome.app, will be overwritten by updates.  Did you intend people to put it into ~/.bashrc to avoid this? <comment179914> Currently i'm looking for a safe method to solve that update problem and testing next Google browsers for tls capability without that startup parameter. I'm not sure relying on .bashrc, maybe a user cronjob would be better.