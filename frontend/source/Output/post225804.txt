Terminal Command into Applescript <body> I have the following terminal command that I want to automate using applescript. I also would like to have a command to cd directories to the folder where I want to apply the command first. After cd to the folder that holds the .pdf files. This code looks at the first letter of the file name and based on that sorts the files into the alphabet folder corresponding to the first letter of the file.  precodefor x in `ls -1 | sed -e 's/^\(.\).*/\1/' | sort -u`; do mv -i ${x}?* $x done /code/pre  How would I go about doing this? I'm a newbie to this. Any insight would be greatly appreciated. I'm willing to learn Applescript, however, I'm not sure where to start to implement this.  Thanks  <answer226140> You can execute shell script directly on OS X, so there's generally no good reason to do that. However, if you really feel like it, you can use codedo shell script "script"/code to execute a shell script in AppleScript.  <comment274071> What is driving your requirement for an AppleScript version?  I've never really found a situation where I need to use an AppleScript instead of a shell script on OS X (specifically, you can run shell scripts directly using Automator if that's what you're trying to do). If you just want to call this script from an AppleScript (rather than rewrite it in AppleScript), see http://www.cyberciti.biz/faq/mac-osx-applescript-run-shell-script/ <comment274085> @scottishwildcat AppleScript should primarily be used, either when GUI scripting is needed, or when communication between processes is desired (if those processes support AppleScript). Beyond that, I'd agree. AppleScript is generally not the best tool for the job. <comment274195> Thank you for the feedback. So to use Automator to do this, do I just paste this code in a workflow? Not sure how to set this terminal command up in Automator. Thanks <comment274965> Hi Thanks for the response. I have tried the following but cannot seem to get this to work: do script "cd ~/desktop/hazel_organization/test/test1;  for x in `ls -1 | sed -e 's/^\(.\).*/\1/' | sort -u`; do mv -i ${x}?* $x done" <comment275020> @JPaul I would check and make sure all characters that need to be escaped are escaped: what happens when you try to run it?