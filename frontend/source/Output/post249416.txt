Create rsync user that can see all files on local disk <body> I have written an rsync script to back my Mac (10.10.3) up to my NAS.  I think I want to create a user account that will be responsible for running this script.  This user would need to be able to see all the files on disk (read level access at least) and have a local home dir for their own ssh keys. The script will be run roughly once every 15 minutes via cron.  My first question is how to create this user such that they don't have a login screen.  I already created a user via the GUI and then hid them from the login screen using: codesudo dscl . create /Users/hiddenuser IsHidden 1/code.  I suppose that is good enough though I think I would rather do it the "correct" way.  Does a user created via the GUI like this have the ability to remotely log in?  I would not want that. Outside of running rsync and python and having access to all of the files on the computer, I would want this user pretty locked down.  No remote shells.  No ftp.  Etc.  I have no idea if any of those kinds of things are allowed by default for a "regular" or even "administrative" user.  My second question is how do I give this user permissions to see the entire file system (at least - or even ideally - with read only access)?  Would I somehow edit the /etc/sudoers file using visudo?  Then would I run it under a special crontab to give it permission?  I'm a little afraid of poking around in this arena without asking first, and I really just need a push in the right direction and Google will help me the rest of the way.  Finally, I am completely open to hearing about whether this is a dumb way of doing it, or whether there is some other, standard, UNIXy way of allowing my python script to backup a whole computer via rsync.  hr  Edit: I did find this: How to run a cron job using the sudo command  That would suggest that instead of the rsync user, that I would just run this script from root's crontab.  Does that make more sense?  <comment309362> "Run the script as root" is probably the easiest way to accomplish what you want (also because the user you are describing will basically have root rights anyway after you've set it up) <comment309363> Related: [rsync all files of remote machine over SSH without root user?](http://unix.stackexchange.com/questions/92123/rsync-all-files-of-remote-machine-over-ssh-without-root-user). This is a pull - instead of push - approach. Now it depends on your NAS operating system which strategy makes more sense. <comment309364> klanomath, Thanks for the link.  I'll see if I can make that work, though my Synology is kind of a black box to me which makes it a bit harder. <comment309365> patrix, it occurs to me that I would have to lock down this script somehow as well (i.e. make sure nobody but root can modify it).  Otherwise I'm opening up a huge security hole there... a blank slate script that root will happily run once every fifteen minutes.  I guess that means I should make the script owned by root and only readable by everyone else, right? <comment309384> Why not just use Time Machine to backup your Mac? That's what it's there for to begin with. <comment309444> Time Machine is great for so many reasons. I do use it, but when it comes to backing up via wifi or to a NAS (vs. either a connected hard drive or over-priced, non RAID time-capsule) it can be quite dicey. It isn't officially supported in those cases and frequently winds up being corrupted or just failing altogether. It also suffers from being a connected device which means that any malware that lands on your mac and either encrypts the file system or deletes files can also run rampant over a Time Machine backup. So I use both. 1 Time Machine backup, 1 Rsync, remote backup. Also: I'm a nerd :)