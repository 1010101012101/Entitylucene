What are the secret options of the PDF convert tool from OS X? <body> I recently discovered the code/System/Library/Printers/Libraries/convert/code tool that is able to convert HTML, DOC, ... to PDF.   It works great but it has some optional arguments that are not documented: code-a 'name=value ...'/code. I am really interested about them because these are supposed to control more of the 'printing' process.  precode/System/Library/Printers/Libraries/convert Usage: convert [ options ]  Options:    -e                   Use every filter from the PPD file   -f filename          Set file to be converted (otherwise stdin)   -o filename          Set file to be generated (otherwise stdout)   -i mime/type         Set input MIME type (otherwise auto-typed)   -j mime/type         Set output MIME type (otherwise application/pdf)   -P filename.ppd      Set PPD file   -a 'name=value ...'  Set option(s)   -U username          Set username for job   -J title             Set title   -c copies            Set number of copies   -u                   Remove the PPD file when finished   -D                   Remove the input file when finished /code/pre  <answer14948> The options for the CUPS system are mainly for specifying borders, margins, how many pages per sheet, etc. They are documented on the CUPS website:  http://www.cups.org/documentation.php/options.html  <answer239498> What you see is a symlink to code/usr/sbin/cupsfilter/code.   codecupsfilter/code is documented in its respective man page.  Its purpose is to allow you to emmanually/em run the same filtering chain CUPS would run on behalf of a given print queue would run when consuming a given input document. This way you could inspect + debug the results before/without sending the job to the actual printer.  Of course you can "abuse" the utility also to convert files to whatever output format you may desire (if supported by CUPS).  Regarding the code-o name=value/code (running codecupsfilter/code directly uses this syntax): basically it is every option you can specify with print command such as codelp/code or codelpr/code if you print from the shell.   strongA few selected examples:/strong  precode-o media=A4                   # define the media size -o fit-to-page=true           # request scaling of content to fit media -o page-ranges=1-4,7,9-12     # select pages to be extracted -o number-up=4                # request multiple logical pages on physical page -o number-up-layout=tblr      # set the sorting of logial pages                               #   (first top-to-bottom, then left-to-right) -o page-border=single-thick   # request page borders to be drawn -o outputorder=reverse        # request reverse output border /code/pre  More info about possible options:  ol liAll strongemgeneric/em/strong options supported by CUPS are documented here:br http://www.cups.org/documentation.php/doc-2.1/options.html/li liAll strongemprintqueue specific/em/strong options (as are escrowed in the associated PPD) can be derived from the outputs of this command:  precodelpoptions -l -d &lt;name-of-printqueue&gt; /code/pre/li liThe names of all strongemIPP-defined/em/strong em(Internet Printing Protocol)/em job options are listed here: http://www.iana.org/assignments/ipp-registrations/ipp-registrations.xhtml/li /ol  <comment16091> LOL,  I checked the file, hoping that i may find some parameters inside the binary and I discovered that it was a symlink to `cupsfilter`. The question still stands, I want to see what options I can add when I convert HTML to PDF. <comment16140> I also discovered another tool that could be more powerfull `textutil`. <comment293987> See my own answer: The list of options documented on the CUPS website is not exhaustive. CUPS also supports almost all the IPP-defined options listed on the [IANA registry website for IPP](http://www.iana.org/assignments/ipp-registrations/ipp-registrations.xhtml). Most "common" option names listed on the CUPS website map to a standard IPP option name, though.