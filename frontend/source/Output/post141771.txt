Using Linux computer as time capsule - possible but any experiences? <body> have a Linux computer running as a server on which I also installed a time capsule (see for Vortexbox (my setup) but also for Ubuntu).  Before using this as my main backup, has anybody any experiences with this? The backup is working - but is the restore as well? ANy comments, experiences, sucess stories?  Any tips?  I am running Mavericks on my Mac.  <answer141782> I've had experience with this, and it does work with some fiddling, but it doesn't "just work" in the mac sense. Every now and then, you'll find that you have to reconnect the volume, restart a daemon, or else face weird time machine errors.  If you're okay with being this "hands on", you'll need to install Netatalk (AFP daemon) and Avahi (Bonjour daemon) on your Linux machine, and set a codedefaults/code option on your mac to allow Time Machine to use network drives.  This is the guide I used for setting such a system up: http://techiezone.rottigni.net/2013/12/backup-your-mavericks-using-debian-linux-as-a-time-machine/  Make sure you keep a close eye on it for your first few weeks - nothing worse than backups that aren't actually backing up!  <answer142133> This is a recipe that I used a long time ago on I think a raspberry pi that had a 3 TB disk attached to it. I have a MacBook pro and when it is connected to a power supply it does the backup even when it is closed. It worked for months until the hard drive died.  I should say that I have not tested this with Mavericks, but I can not think of changes that should prevent this from working. Restore worked fine even though I experienced that big partial restores sometimes seem to fail but this is not a peculiarity of the debian style time capsule. I had a time machine backup once just on a disk and a script that I wrote that had a variable like so test=/${bla} and rm -rf ${test} - CAN YOU GUESS - started deleting my root tree. Yes I am an idiot, but I learn from my mistakes. That is more than some people can say. Anyway, the restore of this did not work, it crashed somewhere and I restored important data by hand. But this was a time machine issue, it had nothing to do with debian.  I took it from:  http://routerjockey.com/2009/08/28/setting-up-apple-filing-protocol-and-bonjour-under-debian/  precodeapt-get build-dep netatalk apt-get install libcrack2-dev fakeroot libssl-dev apt-get source netatalk  cd netatalk-2.2.2/ dch -v 2.2.2-2+SSL (enter ctrl+x y and enter)  DEB_BUILD_OPTIONS=ssl dpkg-buildpackage -rfakeroot  cd .. dpkg -i netatalk_2.2.2-2+SSL_i386.deb aptitude hold netatalk   vi /etc/default/netatalk      ATALKD_RUN=no     PAPD_RUN=no     CNID_METAD_RUN=yes     AFPD_RUN=yes     TIMELORD_RUN=no     A2BOOT_RUN=no  vi /etc/netatalk/afpd.conf  add line at bottom: - -tcp -noddp -uamlist uams_dhx_passwd.so,uams_dhx2_passwd.so  This was the old line that caused unsupported server problem: - -transall -uamlist uams_randnum.so,uams_dhx.so -nosavepassword -advertise_ssh   vi /etc/netatalk/AppleVolumes.default  at the bottom add: ~/                 "Home Directory"   "$u"        cnidscheme:cdb /data/music        mp3                allow:chris 3## This line is different from the tutorial in the link, as it did not work     without the tm option /data/timemachine  TimeMachine        allow:chris cnidscheme:cdb  options:usedots,upriv,tm /code/pre  I got the error on the Macbook: Something wrong with the volume's CNID DB, using temporary CNID DB instead.Check server messages for details!  After changing cnidscheme:cdb to cnidscheme:dbd the error went away.  precode/etc/init.d/netatalk restart  apt-get install avahi-daemon apt-get install libnss-mdns  vi /etc/nsswitch.conf  hosts:          files mdns4_minimal [NOTFOUND=return] dns mdns4 mdns  vi /etc/avahi/services/afpd.service /code/pre  This file should contain:  precode&lt;?xml version="1.0" standalone='no'?&gt;&lt;!--*-nxml-*--&gt;  &lt;!DOCTYPE service-group SYSTEM "avahi-service.dtd"&gt;  &lt;service-group&gt;  &lt;name replace-wildcards="yes"&gt;%h&lt;/name&gt;  &lt;service&gt;      &lt;type&gt;_afpovertcp._tcp&lt;/type&gt;      &lt;port&gt;548&lt;/port&gt;  &lt;/service&gt;  &lt;service&gt;      &lt;type&gt;_device-info._tcp&lt;/type&gt;      &lt;port&gt;0&lt;/port&gt;      &lt;txt-record&gt;model=Xserve&lt;/txt-record&gt;  &lt;/service&gt; &lt;/service-group&gt;   /etc/init.d/avahi-daemon restart  chown -R chris:chris /data/timemachine/ chown -R chris:chris /data/music /code/pre  This worked for me and as soon as I have bought a Raid something I will redo the setup with my raspberry as it is the ideal compromise between performance and energy usage.  <comment167347> Thanks - I am trying it at the moment. I set it up on vortexbox following this guide http://info.vortexbox.org/tiki-index.php?page=SetupTimeMachine and it seems to work flawless. Thanks a lot for your thumbs-up. <comment167992> Thanks for this detailed answer and the idea of using a pie.