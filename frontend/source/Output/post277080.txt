Ethernet cable unplugged event <body> TL;DR; I want to listen for ethernet cable unplugged (lost connectivity, unavailable, network interface availability, interface changed) event, is that possible? What API should I looking into?  I bought an UPS without any USB port to my mac, so I have to detect the lost of main power manually (programmatically). My mac uses ethernet for internet, and I don't plan to plug my router to the UPS, so when the ethernet lost connection, I want to do execute something after few minutes.  <answer277090> My current solution is   ol liGet a Darwin Notification Center, CFNotification​Center​Get​Darwin​Notify​Center() /li liListen to this event codecom.apple.system.config.network_change/code, refer code/usr/include/notify_key.h/code in your mac for the keys/li liDo something in the callback/li /ol  Code   precodeimport Foundation import CoreFoundation  let center = CFNotificationCenterGetDarwinNotifyCenter() let kNotifySCNetworkChange = "com.apple.system.config.network_change" as CFString  let networkChangedCallback: CFNotificationCallback = {   (center, observer, name, object, userInfo) in   print("network changed")   print(userInfo ?? "nothing") }  CFNotificationCenterAddObserver(center, nil, networkChangedCallback, kNotifySCNetworkChange, nil, .deliverImmediately)  RunLoop.main.run() // So CodeRunner can keep running /code/pre  I am hard coding the key, I couldn't find any documentation about those keys in Apple's documentation  <comment348801> To detect changes in network configuration and status, use  [SystemConfiguration.framework](https://developer.apple.com/library/content/documentation/Networking/Conceptual/SystemConfigFrameworks/SC_Intro/SC_Intro.html#//apple_ref/doc/uid/TP40001065-CH201-TPXREF101). The distributed notification approach may work today but is undocumented and subject to change. You will attract better answers on [StackOver](https://stackoverflow.com) for programming questions.