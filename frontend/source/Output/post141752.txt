How to get a fall-through behavior in case statements in bash v3? <body> I just tested the following syntax on Linux:  precodecase "$OSTYPE" in linux-gnu*) ;;&amp; linux*) echo $OSTYPE; ;; esac case "$OSTYPE" in linux-gnu*) ;&amp; linux*) echo $OSTYPE; ;; esac /code/pre  which works without any problems (See: Can bash case statements cascade?) with codeGNU bash, version 4.2.37(1)-release (x86_64-pc-linux-gnu)/code.  But on OSX I've the following errors:  precode-bash: syntax error near unexpected token `&amp;' -bash: syntax error near unexpected token `;' /code/pre  It's codeGNU bash, version 3.2.51(1)-release (x86_64-apple-darwin13)/code.  Any clues how to achieve the same fall-through behavior on bash v3?  <answer141757> Either upgrade your bash (homebrew) or you'll have to recode it using a series of if statements:  precodecase "$OSTYPE" in linux-gnu*) ;;&amp; linux*) echo $OSTYPE; ;; esac case "$OSTYPE" in linux-gnu*) ;&amp; linux*) echo $OSTYPE; ;; esac /code/pre  would be  precode# first case if [[ $OSTYPE == linux-gnu* ]]; then     : # nothing in this branch fi  if [[ $OSTYPE == linux* ]]; then     echo $OSTYPE fi  # second case function print_ostype { echo $OSTYPE; } if [[ $OSTYPE == linux-gnu* ]]; then     # nothing in this branch     # include the next branch     print_ostype elif [[ $OSTYPE == linux* ]]; then     print_ostype fi /code/pre  I used a function in the 2nd case to reduce code duplication, in case there's multiple statements.  <comment167030> Is your code in the first lines just a sample or the real code you want to run? <comment167032> It's ready copy&paste code to run. The real script is [.bashrc](https://github.com/kenorb/dotfiles/blob/master/.bashrc) at lines 58-59 which are commented out, because they doesn't work on OSX. <comment167037> you should to use the `:` for the empty branch... the pure `# ...` throws error ;)