How to caffeinate a function on CLI? <body> Mac's codecaffeinate/code tool accepts the name of a utility: codecaffeinate sleep 1/code, for instance.  Is there any way for it to accept a function as well?  For example:  precodefunction mysleep {   sleep 2 }  caffeinate mysleep    # mysleep: No such file or directory /code/pre  <answer285543> Per the man page:  codecaffeinate -- prevent the system from sleeping on behalf of a utility/code  A function is not a utility as a utility will have a process ID (pid) associated with it.  When you specify a utility, codecaffeinate/code forks a process and holds an assertion that prevents sleep until that process is complete.  <answer285563> codecaffeinate/code requires that there be an object to run, a function does not fill this requirement.  Change your function into a shell script and it will work fine. So for your example:  precode`#!/bin/bash  sleep 2 /code/pre  saved into a file called codemysleep/code and then codecaffeinate mysleep/code will work fine (so long as the file codemysleep/code is in your system PATH.).  `  <answer285564> codecaffeinate/code launches executables. However, shell functions exist only within the shell. Shell functions are not executables.  h3Workaround: call bash directly/h3  This works best for one-liners and simple commands.   precodecaffeinate bash -c 'sleep 2' /code/pre  Multi-liners work too:  precodecaffeinate bash &lt;&lt;EOF   sleep 2   echo "done :D" EOF /code/pre  h3Workaround: call a script instead of a function/h3  Instead of doing your work inside a function, split it out into a separate script:  precodecaffeinate mysleep.sh /code/pre    precode#!/bin/bash # mysleep.sh sleep 2 /code/pre 