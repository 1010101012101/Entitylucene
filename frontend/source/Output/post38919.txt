Why can't I write to the last block of my SDXC card on my MBP? <body> I have a 64GB SanDisk SDXC memory card which I would like to use with my MacBook Pro and its SD card slot. However, I am having some trouble formatting/partitioning my SD card and I can't figure out what's going on.  ul liWhen I insert the SD card into the slot, I get the following from Lion: The disk you inserted was not readable by this computer. Initialize... Ingore or Eject/li liIf I open up Disk Utility, I see the disk listed as emApple SDXC Reader Media/em and when I try to format from "Erase" tab (as exFAT or any other format), I get the following error: strongemDisk Erase failed with the error: Unable to write to the last block of the device./em/strong/li /ul  A little background: the SDXC card was working fine when I first purchased it. But then I started using strongsabnzbd/strong http://sabnzbd.org/ to download and write files directly to the SD card. Something happened (I can't remember what the error was!) and since then I've been unable to write to my card. I've been trying to format it to solve the problem, but it looks like the issue runs pretty deep.  strongWhat is the best way to format the card to exFAT via terminal? That may be the next thing I try./strong  Do you have any suggestions for formatting/fixing this SD card?  <answer119556> The following procedure should format your SD card to make it usable again and cause bad sectors on the card to be remapped if that is part of your problem.  Warning, erasing the wrong drive could make you cry so make sure that you know what you are doing.  ol liBefore inserting the SD card into your Mac, make sure that the write protect (lock) switch is turned off/li liOpen a Terminal window and type codediskutil list/code/li liInsert card/li liIf an OS X messages pops up asking you to "Initialize... Ingore or Eject", choose "Ignore"/li liFrom the Terminal windows, type codediskutil list/code once again/li liExamine the difference between the two Terminal outputs to determine the disk number for your SD card.  You should be looking in the left most column for something like code/dev/disk3/code or 4 or 5 etc./li liNow type codediskutil unmountDisk /dev/disk#/code where # is the number you determined earlier/li liHere is where you must be VERY CAREFUL.  Enter the following codesudo dd if=/dev/zero of=/dev/rdisk# bs=64k/code and be sure to replace the # with the previous disk number.  Note the 'r' in front of the rdisk in case you are typing this by hand instead of copy/pasting the text.  You should be prompted for your password to run this command because it is dangerous/li liBe patient until it finishes.  You can estimate time by opening the "Activity Monitor" application in Utilities and clicking on the "Disk" tab.  At the bottom you should see the Data written/sec in red. It should be some number in MB like 5.  code(64 x 1000 / n) / 60 = minutes until it finishes/code where n is the rate in MB that you just determined or 5 in my example/li liOnce the previous command completes, the card should be completely erased and ready for formatting.  At this point you can close your Terminal and open the Disk Utility application to create an exFAT partition like you were trying to do earlier./li /ol  <comment44119> How old is the card? If it is old, it might just have a bad block that you can't use anymore. If you want to try through terminal, check out `diskutil`. <comment44150> I bought it in 2011, so it's relatively new. Also, I believe SDXC is relatively new.  I've checked out diskutil, but I get the same error <comment152225> Michael Yasumoto - I just tried to do your method, and I got this Input/Output error:  dd: /dev/rdisk1: Input/output error   16385+0 records in   16384+0 records out   1073741824 bytes transferred in 68.214149 secs (15740749 bytes/sec) Any thoughts on that? <comment152253> That message is not an issue.  It is because the math doesn't add up.  For speed purposes we write 64kB to the card at a time but the size of the card was not evenly divisible by 64kB so the last chunk of 64kB wasn't written to the drive.  Basically you tried to erase 1.01GB on a card that only has 1.00GB of space and it is complaining that there are left over 0's it couldn't write.  If this helped you, please +1 the answer.  Thanks. <comment163939> For step 8, you need to be logged in with an Administrator account in order to run `sudo` <comment193143> I'm getting: sudo dd bs=64k if=/dev/zero of=/dev/rdisk5 dd: /dev/rdisk5: Resource busy 1+0 records in 0+0 records out 0 bytes transferred in 3.020179 secs (0 bytes/sec) <comment193246> Looks like your disk is in use by something else.  Stop any applications that are accessing the disk before you wipe it.  Alternatively you can eject the disk and then reattach it.  A more precise solution would be to open Disk Utility and unmount the partition for the SD card but don't eject it.  If none of that makes sense to you, then just reboot your computer and try again.  Not exactly an elegant solution but that will work too. <comment206945> Just a note: At step 9 you can also get the current speed by pressing `ctrl + T` (yes, **ctrl**, not command) in the terminal window, while the process is running. It will then display some statistics with something like `(4643369 bytes/sec)` at the end. This is a bit more precise, as itâ€™s just the speed of the running process, not the overall disk access of the whole system (which you get from Activity Monitor). <comment226689> I get: `dd: /dev/rdisk2: Input/output error 41+0 records in 40+0 records out 2621440 bytes transferred in 58.108128 secs (45113 bytes/sec)` after running the "dd" command. Then I continue with Disk Utility to format the drive. It's stuck on "Umounting disk" for a while and then errors with "Unable to write to the last block of the device". is it hardware problem you think? <comment226835> Are you writing to a floppy disk?  The write speed is really slow and the size of 2.5MiB is really small.  If the last sector really is bad but you want to continue storing data on the device, then create a smaller partition with Disk Utility so that it doesn't fill the drive all the way to the last sector.