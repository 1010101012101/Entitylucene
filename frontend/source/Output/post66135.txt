How to make Smart folder like physical folder with the combined contents of two folders <body> I have an application which looks for its data (*.txt) files in a folder. I have two folders containing text data that I need to keep separate, but it would be useful to have the application see the text data files as residing in one folder (containing the two sets of files).  I can create a script that maintains symbolic links to the files in the two folders in a third combined folder.  Rather than reinventing the wheel, I'd like to use a proven solution if possible.  The solution would have to deal with the case of file name clashes in a sensible way.  <answer68921> You could use codelaunchd/code.  codelaunchd/code lets you manage daemons and agents according to certain conditions.  What are daemons and agents?   From codeman launchd/code:     A "daemon" is, by definition, a system-wide service of which there is   one instance for all clients. An        "agent" is a service that runs on a per-user basis. Daemons should not attempt to display UI or interact directly with a user's        login session. Any and all work that involves interacting with a user should be done through agents.   From http://developer.apple.com/library/mac/#technotes/tn2083/_index.html:     Daemons and agents, collectively known as background programs, are   programs that operate without any graphical user interface. As a   developer, you can use background programs to perform actions without   user interaction, and also to manage a shared state between multiple   other programs.      The difference between an agent and a daemon is that an agent can   display GUI if it wants to, while a daemon can't. The difference   between an agent and a regular application is that an agent typically   displays no GUI (or a very limited GUI).   The daemon/agent is described in an XML file with extension plist. One of the conditions that can be monitored is strongchanges in a folder/strong. This will come in handy.  OK, let's get our hands dirty:  Let's say these are the 2 folders where you and your friend keep your files:  precode/tmp/folderstuart /tmp/folderstuartsfriend /code/pre  and this is the common folder for the application:  precode/tmp/folder /code/pre  We want to monitor the two paths above and synchronize their contents with code/tmp/folder/code.  This is the plist that does what we need:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;notesfoldersync&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/usr/bin/rsync&lt;/string&gt;         &lt;string&gt;-aE&lt;/string&gt;         &lt;string&gt;--delete&lt;/string&gt;         &lt;string&gt;--exclude='.*'&lt;/string&gt;         &lt;string&gt;/tmp/folderstuart/&lt;/string&gt;         &lt;string&gt;/tmp/folderstuartsfriend/&lt;/string&gt;         &lt;string&gt;/tmp/folder&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;WatchPaths&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/tmp/folderstuart&lt;/string&gt;         &lt;string&gt;/tmp/folderstuartsfriend&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;ThrottleInterval&lt;/key&gt;         &lt;integer&gt;10&lt;/integer&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  The plist monitors the two folders with key codeWatchPaths/code (see http://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html#//apple_ref/doc/uid/10000172i-SW7-SW8).  I suggest the program codersync/code for synchronizing folders. Option code--delete/code ensures that files deleted in the monitored folders are also deleted in code/tmp/folder/code. Other options are code-aE/code to copy standard and extended HFS+ attributes, and code--exclude='.*'/code to skip code.localized/code, code.DS_Store/code and other hidden files.  I added codeThrottleInterval/code in case you want to set the minimum interval a job can be spawned. Default value is 10 s, that is, jobs will not be spawned more than once every 10 seconds.  Save the plist (see codeman launchd/code for a list of possible paths) as:  precode /System/Library/LaunchDaemons/notesfoldersync.plist /code/pre  Create:  precode/tmp/folderstuart /tmp/folderstuartsfriend /tmp/folder /code/pre  and load (that is, enable) the plist:  precodesudo launchctl load /System/Library/LaunchDaemons/notesfoldersync.plist /code/pre  Now create a file in code/tmp/folderstuart/code:  precodetouch /tmp/folderstuart/file.txt /code/pre  and watch the magic happen: codefile.txt/code will be created within seconds in code/tmp/folder/code. Delete it and it will disappear from code/tmp/folder/code. It will also synchronize files created or deleted in code/tmp/folderstuartsfriend/code.  strongNotice that this solution doesn't handle name collisions!/strong If you can't ensure that files will be named differently substitute rsync with a script that rsyncs strongand/strong does file name checking to avoid data loss.  If copying files is not an option, substitute codersync/code with a script that creates hardlinks (if both files are in the same filesystem I'd recommend hardlinks instead of symlinks). Before changing the plist unload it:  precodesudo launchctl unload /System/Library/LaunchDaemons/notesfoldersync.plist /code/pre  When you're done, load it again.  <answer69028> Why not use a keyword or Spotlight Comment to tag the files in each folder, and then a Smart Folder to show them together?  <comment79822> What's unproven about the script solution? You'll need some coding to resolve name clashes anyway, Smart Folders alone don't help here. <comment79889> Why do you need to keep the folders separate? To me it would seem easier to have one folder with the files (therefore your name clashes are handled when the files are created/gathered), and then to copy a symbolic link to one of the other two organizational folders. If there's an easy way to tell where they belong through a script this can be done with a Folder Action. <comment79999> My friend and I both have keep a folder of plain text notes. I want to include his notes in my folder but my notes don't interest him. Therefore, I want both of our notes in my folder without putting them in his folder. <comment80193> My pleasure, I'm glad I was able to help. <comment80637> @Stuart, while this answer is truly impressive, it has several limitation, so be sure you can live with them.  In particular, the combined file folder `/tmp/folder` needs to be treated as read-only, because changes made there will not be propagated back to the other folders.  Also, as jaume noted, name collisions will result in one file overwriting the other. With some work (manually editing the XML file) you could create a Smart Folder that contains `.txt` files from both folders.  Would that work for your App?