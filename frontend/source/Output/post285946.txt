How does APFS on macOS handle upper/lower case file names? <body> So I recently learned here that HFS+ is case-eminsensitive/em but the APFS on iOS is case-sensitive. Is there a publically accessible documentation/reference which describes how APFS does handle upper/lower case file names on macOS? Or has somebody tried on Sierra already and can provide examples?  <answer285965>    APFS has case-sensitive and case-insensitive variants. The   case-insensitive variant of APFS is normalization-preserving, but not   normalization-sensitive. The case-sensitive variant of APFS is both   normalization-preserving and normalization-sensitive. Filenames in   APFS are encoded in UTF-8 and aren’t normalized.      The first developer preview of APFS, made available in macOS Sierra in   June 2016, offered only the case-sensitive variant. In macOS 10.12.4,   the APFS developer preview was updated to also include a   case-insensitive variant. In iOS 10.3, the case-sensitive variant of   APFS is used.   Apple’s Developer FAQs  <answer286806> Since many apps have not been updated to work with case sensitive file systems, Apple probably decided to do the upgrade with case insensitive by default. Hopefully as apps get updated the default in a future MacOS will change to be case sensitive.  <comment360734> APFS is still 'new' and will be used by iOS for sometime, no one can tell wether apple will change it <comment360736> I'm voting to close this question as off-topic because it is about software not publicly available yet (see https://apple.meta.stackexchange.com/questions/2851/developer-and-beta-tester-ndas-and-requests-for-help-on-se/2852#2852 for details) <comment360738> @patrix APFS has been in Sierra, just because this mentions High Sierra doesn't mean it's under NDA? <comment360743> So I modified the question to include explicitly Sierra <comment360747> @grgarside We don't know how APFS will handle case in High Sierra, at least not until end of June or whenever the public beta will be available. I've changed the wording of the question. <comment360753> Does it mean that the user can _choose_ the variant if both are "included"? <comment360755> I just did the upgrade on my dev machine and It purely had a checkbox to upgrade with no option to select the type. The volume is now not case-sensitive. <comment360756> Without a definition of *normalization-preserving* and *normalizatino-sensitive* this is rather difficult to understand. Also, the comment about "upgrading a dev machine" gets us back into NDA territory. <comment360757> For an example of some normalization concerns, see https://eclecticlight.co/2017/04/06/apfs-is-currently-unusable-with-most-non-english-languages/ <comment362042> "Hopefully"?...