How can I switch between the two Java versions in Mountain Lion now that Java Preferences is gone? <body> I have two versions of Java installed with Mountain Lion:  ul liApple's Java 6 Update 37 (Java for OS X 2012-006)/li liOracle's Java 7./li /ul  The update from Apple removes emJava Preferences/em. In another question someone wonders about the removal of that utility.  My question is different:   ul lihow can I switch between the two versions now that emJava Preferences/em is gone? /li /ul  I previously used Apple's utility to set Java preferences with ease. Without that utility, is there an easy and fast way?   <answer69960> Why do you need to have 2 versions of Java installed?    Apple doesnt have Java installed as a default update (from Lion onwards I believe). The best way to check for/install Java on a Mac is as follows :   ol liOpen Terminal. Type "java" (without the quotes of course)/li liIf java isn't present you get the following :  "No Java Runtime present, requesting install…" /li liJava starts installing normally (this is the false executable starting the install) /li liIf you have java to check the version, in terminal type "java-version"/li /ol  If you want to install a different version of java :  Just goto the oracle site and download the newest/older jdk.  <answer70242> It looks like you'll have to do it manually.  Oracle's documentation states that only one JRE can be installed at a time.   This Apple support page describes how to switch between the Apple SE 6 JRE and the Oracle SE 7 JRE.  Briefly, to switch from Oracle's JRE back to Apple's, start the Terminal app and type the following:  precodesudo mkdir -p /Library/Internet\ Plug-Ins/disabled  sudo mv /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin /Library/Internet\ Plug-Ins/disabled  sudo ln -sf /System/Library/Java/Support/Deploy.bundle/Contents/Resources/JavaPlugin2_NPAPI.plugin /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin /code/pre  There are more (and better) instructions on the support page on how to switch Web Start back to JRE 6, and how to switch everything back to Oracle JRE 7 (reinstall the JRE).  Not as simple as using the Java Preferences utility, but better than nothing.  <answer70478> You may need two approaches:   ul lione to switch the version for the applet plug-in alone/li lianother approach to switch the version for other parts of the JRE without switching the version for the applet plug-in./li /ul  My recent use case:   ul liJava 8 for apps that do not use the plug-in/li liJava 7 Update 9 for the applet plug-in./li /ul  hr  h1To switch the applet plug-in but not other parts of the JRE/JDK from Java 8 to Java 7 Update 9/h1  ol liquit web browsers and any other apps that use Java or the Java applet plug-in/li liinstall JDK 8/li liset aside the plug-in/li liinstall JRE 7 Update 9 or JDK 7 Update 09./li /ol  h2Setting aside: suggested move/h2  precodesudo mv /Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin /private/var/tmp /code/pre  If you plan to emswitch/em frequently, you may prefer a different temporary location.   h2Result/h2  precodesh-3.2$ java -version java version "1.8.0-ea" Java(TM) SE Runtime Environment (build 1.8.0-ea-b58) Java HotSpot(TM) 64-Bit Server VM (build 25.0-b02, mixed mode) sh-3.2$ sw_vers ProductName:    Mac OS X ProductVersion: 10.8.2 BuildVersion:   12C60 /code/pre  At the same time:   img src="https://i.stack.imgur.com/2clyu.png" alt="Screenshot of Oracle&#39;s verification of Java version in Safari"  h1To switch the applet plug-in but not other parts of the JRE/JDK from Java 7 Update 9 to Java 6 Update 37/h1  Answers under:   ul liRe-Enable Apple Java 6 SE from Command Line?/li /ul  hr  h1To switch the JRE but not the applet plug-in from Java 8 to Java 7 Update 9/h1  Install JDK 7 Update 09 then JDK 8  ul lithe OS and apps will default to use the greatest version. /li /ul  Quit any apps that use Java. No need to quit the browser.   Set aside the codejdk1.8/code… directory from   code/Library/Java/JavaVirtualMachines/code  ul lithe OS and apps will use Java 7 Update 9. /li /ul  h1To switch the JRE but not the applet plug-in from Java 7 Update 9 to Java 6 Update 37/h1  Quit any apps that use Java. No need to quit the browser.   Set aside the codejdk1.7/code… directory from   code/Library/Java/JavaVirtualMachines/code  ul lithe OS and apps will use Java 6 Update 37. /li /ul  h2Example/h2  precodemacbookpro08-centrim:~ gjp22$ java -version java version "1.7.0_09" Java(TM) SE Runtime Environment (build 1.7.0_09-b05) Java HotSpot(TM) 64-Bit Server VM (build 23.5-b02, mixed mode) macbookpro08-centrim:~ gjp22$ sudo mv /Library/Java/JavaVirtualMachines/jdk1.7.0_09.jdk /private/var/tmp Password: macbookpro08-centrim:~ gjp22$ java -version java version "1.6.0_37" Java(TM) SE Runtime Environment (build 1.6.0_37-b06-434-11M3909) Java HotSpot(TM) 64-Bit Server VM (build 20.12-b01-434, mixed mode) /code/pre  hr  h1Generally/h1  For users of OS X, some of what's provided by Oracle is initially misleading:   ul liWhy does the version of Java verified by Oracle differ from the version shown at the command line? /li /ul  … and so on.   h2Simplicity/h2  Whilst none of the above is as simple as switching with the Java Preferences app previously installed by Apple, the relatively simple approach of strongsetting aside/strong (no need for special uninstallation) is reminiscent of the wish for drag-and-drop installation … previously expressed in the openjdk-osx-build area.   Someone might like to build an app, but I should not recommend using symlinks – it would work, but could be inconsistent with future drag-and-drop approaches to installation.   h3Side notes/h3  At the time of writing, the most recent supported releases for which emOracle/em makes updates empublicly/em available are (for platforms other than OS X) Java 6 Update 37 and (for platforms including OS X) Java 7 Update 9.   As greater releases will be made available, please reinterpret this answer accordingly.   Java version terminology in this answer is in line with Java Help Center terminology.   <answer93132> Open up a terminal use this command:  precode/usr/libexec/java_home -v 1.6  /code/pre  You can change the 1.6 to any version of java you want to use and the command will output the location of where that version of java resides. (i.e: /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home)   then you can set the JAVA_HOME like you normally would with the output of the previous command. i.e.:  precodeexport JAVA_HOME=/System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home /code/pre  So to simplify; something like this should work:  precodeexport JAVA_HOME=$(/usr/libexec/java_home -v 1.6) /code/pre  remember to check the version with:   precodejava -version /code/pre  Hope it helps.   <answer174741> based on user2343996's answer  precodealias java8="export JAVA_HOME=$(/usr/libexec/java_home -v 1.8) &amp;&amp; java -version" alias java6="export JAVA_HOME=$(/usr/libexec/java_home -v 1.6) &amp;&amp; java -version" /code/pre  <comment81064> Is there some reason you can't reinstall **Java Preferences**? <comment81067> @TestSubject528491 How can I do that? <comment81254> I already have two versions of Java as I wrote in the question. I'm asking how to change the default one. <comment81278> I think it automatically switches to the newest version/latest version installed.  In my case I installed jdk 7 last. So that's the one that works by default. <comment81280> I want to be able to switch between versions. <comment81448> I think this will help you,  I have not tried it in my machine yet.  See step 12 and 13 from the following link http://www.wikihow.com/Install-Oracle-Java-on-Ubuntu-Linux.  You can repeat the steps to shift between java.. hope this helps you.. <comment81449> @DilipRajkumar It is for linux.... <comment81455> Sorry I wrongly assumed that the linux command will work on Mac..  If I get lucky with another solution i ill suggest.. <comment81457> Did you check this link http://apple.stackexchange.com/a/58605/17478 <comment81623> There are differences between the Apple JDK 6 and the Oracle JDK 7 that can cause incompatibilities, both at compile time and at run time. <comment81812> Oracle's recent use of the term JRE is misleading to users of OS X. The JRE is much more than the plug-in. <comment82115> In general, we don't try to change someone's premise unless we can offer a competing or compelling alternative when the answer is simply no. We also discourage asking for votes so I've edited that out of your answer. <comment82142> Are you really referring to Java 8 or is it an error ? :-) <comment82149> Really ;-) … please see the linked questions, right hand column. <comment82377> Thanks for the bounty! It'll be interesting to see where ease of use – of preferences – is taken by developers in the months to come. The flexibility – concurrent running of different versions of Java – is welcome. Equally welcome is the potential for drag-and-drop installation, and simple removal/setting aside. I guess that wishes for **easier setting of preferences** should be addressed to [OpenJDK](http://openjdk.java.net) and/or Oracle. <comment82385> You are welcome. I'm really looking forward for an easy solution, as it was with the Java Preferences interface. <comment95174> Here's a tip if you're using JDK8 and want to switch frequently. Simply chmod 0000 the JDK8 directory to turn it off `sudo chmod 0000 /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/` and to turn it back on `sudo chmod 0755 /Library/Java/JavaVirtualMachines/jdk1.8.0.jdk/`. <comment113437> This is the single most useful answer to this problem that I could find anywhere online.  THANK YOU! <comment149203> Last suggestion by @BrettRyan worked perfectly for me. I think it is the easiest way to go. <comment149627> Ok, THIS should be the accepted answer. I have a mandatory update JAR for an application server I have installed and it will ONLY run on Java 6. Using this, I was able to switch to Java 6, run the updater, then switch back. Now I can update the application server to run on Java 7. <comment222110> Thank you very much @BrettRyan that was the simplest one!!! I suggest the author of the answer to add it an alternative.  I have created a .sh in my home folder with the commands, and created an Automator binded to a key that switches from one to another. Amazing!