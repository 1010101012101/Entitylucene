How do I get Automator to process images using ImageMagick in a command script? <body> I'm making an Automator workflow that uses the shell script action to process a selection of images with the imagemagick composite command. Only I'm having issues getting it going. According to the results I get when I run the workflow, everything is working however, I know it's not due to the fact that the changes I'd expect to see in the folder of images are not present. I know that the imagemagick command I'm using is correct as it works correctly from the console. (I echoed the composite command to the output &amp; copied it into a Terminal session. Ran like a charm). BTW: The workflow's for processing a fade in on a stop motion movie I made. Yes I know I could use video tools to achieve the same thing, but the ones I have access to screw up the image quality on output.  Here's the script  precodeimagesCount=$# rate=$(echo "scale=2; 100/$imagesCount"|bc) percentage=$rate for f in "$@"; do     fileName=${f%.*}     composite -blend "$percentage" -size 1280x720 "$f" xc:black -alpha Set "$fileName-1.jpg"     percentage=$(echo "scale=2; $percentage+$rate"|bc) done /code/pre  At first I thought at the cause of the problem might be spaces in the paths, but I removed this possibility by shifting the files to a path without spaces, but that had no effect.  I'm almost certain the issue is related to something in the bash command but I don't know bash at all, this is my first time writing any bash command scripts, but I am very knowledgeable in Windows console scripting and would have no trouble getting this to work there.  If the error in the script isn't obvious enough to catch, would someone propose a method to debug this so I can figure out why the images are not getting processed even though the script runs without error?  <answer101241> I would just do the whole thing at the command line as a shell script instead of using Automator to launch it. Put code#!/bin/bash/code as the first line, and run it as   codemyscript.sh image*.png/code   where codeimage*.png/code is your set of image files that you are apparently selecting in Automator?  If you need to run it on all files in a folder, that can be done too.  You can also test your script in automator using codeecho ${f%.*}/code instead of the commands themselves.  <answer101242> Replace codefor $f/code with codefor f/code. codefor $f in aa; do :; done/code results in an error like code`$f': not a valid identifier/code.  Also if codecomposite/code is not on the path, specify the full path to it (like code/usr/local/bin/composite/code).  <comment119195> Maybe it's a PATH issue. Does it work when you replace `composite` with its absolute path (can be determined by executing `which composite` on the Terminal)? <comment119214> The following line of code seems to be missing a quotation mark:     percentage=$(scale=2; $percentage+$rate"|bc) <comment119232> Thanks for pointing that out Kaydell. It was also missing its echo. <comment119233> Thanks for the hint. I'll go check my typing. <comment119237> Composite's installed correctly.  i used Cactus Labs ImageMagick installer which installs ImageMagick and adds it to the path. Very handy. <comment119316> Did it work to change `$f` to `f` or was that just a transcription error? Also your capitalization on `fileName` is inconsistent. <comment119375> Transcription errors, both. <comment119438> OK. I made the script above into a shell script. Named it fader.command gave it executable permission and ran it as ./fader.command IMG*.jpg. Works like a charm. So why doesn't it work in Automator? Anyone have any ideas? I'd like to get it to work in Automator as that‘s an easy route to user-friendly path selection. Rather annoying that it doesn‘t “just work”.  As an aside I also tried adding #!/bin/bash to the Automator script. Had no effect. Bummed.