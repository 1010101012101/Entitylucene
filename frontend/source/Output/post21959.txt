Associating ssh public key with user account <body> How do I associate an ssh public key with a user account on the machine I connect to, so I don't have to type in the account password every time I make an ssh connection to that machine?  The machine being connected to is an older mini with Leopard installed. I assume that this is doable in Leopard, and I don't have to upgrade to Snow Leopard or Lion.  <answer21961> First, you create a public and private key (if you haven't done so already) on the machine emfrom/em which you want to login:  precodessh-keygen -t dsa /code/pre  You only need to do this if there isn't already a code~/.ssh/id_dsa.pub/code file.  On Linux, there's the codessh-copy-id/code helper. On Mac, you need to copy the public key by hand:  ul liCopy the generated public key to the target machine:  codescp ~/.ssh/id_dsa.pub user@targetmachine:myPublicKey.pub/code/li liLogin to the target machine:  codessh user@targetmachine/code/li liAppend the public key to the authorized keys:  codecat myPublicKey.pub &gt;&gt;.ssh/authorized_keys/code/li liYou can now delete the copied key:  coderm myPublicKey.pub/code/li liDone. You should now be able to login to your target machine without the need to enter a password./li /ul  <answer21962> You should have an codeid_dsa.public/code file in your code~/.ssh/code folder.  Just copy that file over to the server, into code~/.ssh/code folder and append its contents to the codeauthorized_keys/code file.  Your next login should be automatic. It can be that you're asked about the password you used to created the private key, but there's an option to store that password into your keychain.  <comment24258> If you have never set up an authorized_keys on the remote host, you can save a little bit of time by simply doing;  `scp ~/.ssh/id_dsa.pub user@remotehost:~/.ssh/authorized_keys` <comment24270> @VxJasonxV: Right, but now that I think about it there's even a way to collapse all the bullet-points into one line, even with appending: `ssh user@targetmachine 'cat ~/.ssh/authorized_keys' ~/.ssh/id_dsa.pub` But I think the step-by-step solution in my answer is easier to understand. <comment24312> It is, by far :).