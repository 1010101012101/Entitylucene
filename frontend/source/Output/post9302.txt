How can i have makefile/shell script call /Applications/application.app? <body> OS Mac OS X 10.6.6 emacs 23.2.1  I'm currently trying to install magit on carbon emacs using their proposed make solution. I'm an almost complete makefile newby so I might be on the complete wrong path altogether. Makefile displays:  precode%.elc: %.el $(BATCH) --eval '(byte-compile-file "$&lt;")' /code/pre  which gets expanded to:  precodeemacs -batch -q -no-site-file -eval "(setq load-path (cons (expand-file-name \".\") load-path))" --eval '(byte-compile-file "magit.el")' /code/pre  What I do understand. However it comes back with:  precodeCannot open load file: subst-ksc /code/pre  What after a bit of googling reveals some missing libraries. I also realized that the emacs referenced in the expanded command is pointing to code/usr/bin/emacs/code which is one big file, I don't see the normal lisp / site-lisp / etc directories. I also know that my prefered emacs is carbon emacs located in code/Application/Emacs.app/code which just opens when clicking on it, or alternatively, I can open it in with the terminal:  precodeopen /Application/MyApp.app /code/pre  Finally the title question: How can I make Makefile using the Emacs.app on the applications directory? I hope someone here knows the answer, or can point me to alternatives.  regards, Jeroen.  <answer9303> To use the Emacs.app from shell you need the unix executable embedded inside it. It is at Emacs.app/Contents/MacOS/Emacs (I don't have this version of emacs so the capitalisation might differ)  An alternative is to use open to start any app from the workspace using open.  e.g.   precodeopen -a Emacs.app --args &lt;all those passed to emacs&gt; /code/pre  <answer26395> I'm answering an older question in case anyone else happens across it via Google like I did.  As Mark pointed out, to byte-compile a file using the Emacs.app executable you need to replace codeemacs/code or code/usr/bin/emacs/code in the Makefile with code/Applications/Emacs.app/Contents/MacOS/Emacs/code. I believe that in general byte-compiled files are not compatible across different versions of Emacs, so when installing a package for use with Emacs.app you should byte-compile it using this executable, not with the default Apple-installed code/usr/bin/emacs/code (which is a version 22 emacs on my 10.6 system).  If you do need to run the code/usr/bin/emacs/code for some other reason, take care that codeEMACSLOADPATH/code doesn't contain files belonging to a newer Emacs. This is one potential cause of error messages such as  codeCannot open load file: subst-ksc/code  Invoking emacs from the shell as  codeEMACSLOADPATH=/usr/share/emacs/22.1/leim:/usr/share/emacs/22.1/lisp:/usr/share/emacs/22.1/site-lisp emacs/code  should do the trick.  Hope this helps someone else!  <comment9838> I think this belongs on StackExchange.com <comment9840> site-lisp is located here: `/usr/share/emacs/site-lisp` <comment9841> Thank you for your answer! The first option went well thank (even capitalisation was spot on!). I could not get the second option to work. The open -a indeed brings emacs to the foreground (it is open already) but that is it. The batch/eval options / attributes seem to be ignored: open -a /Applications/Emacs22.app --args -batch -q -no-site-file -eval "(setq load-path (cons (expand-file-name \".\") load-path))" --eval '(byte-compile-file "magit.el")' <comment9842> calling it from scratch (emacs closed) gives an error msg: LSOpenURLsWithRole() failed for the application /Applications/Emacs.app with error -10810.