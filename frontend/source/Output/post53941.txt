How do I make a terminal alias that edits root owned files in a GUI text editor? <body> How can I quickly edit root owned files like /etc/hosts and /etc/apache2/httpd.conf in a text editor such as TextEdit which would let me do modern text editor operations, without actually running the editor in sudo -b mode first, or without using nano, vim and other terminal based editors?  Ever since Lion came out, doing  precode$sudo open -e /etc/hosts /code/pre  no longer works - the file remains locked when TextEdit opens it.  <answer53942> Here is a step by step solution:  ol liDownload the free TextWrangler app ( http://www.barebones.com/products/TextWrangler/ )/li liCreate a .profile file in your home folder if it does not exist  precode$ touch ~/.profile $ open -e ~/.profile /code/pre/li liEdit the file and give it the following aliases, along with any others you may wish to add:  precodealias edit_hosts='sudo open -a /Applications/TextWrangler.app/Contents/MacOS/TextWrangler /etc/hosts' alias edit_vhosts='sudo open -a /Applications/TextWrangler.app/Contents/MacOS/TextWrangler /etc/apache2/extra/httpd-vhosts.conf' alias edit_httpd='sudo open -a /Applications/TextWrangler.app/Contents/MacOS/TextWrangler /etc/apache2/httpd.conf' alias edit_alias='open -a /Applications/TextWrangler.app/Contents/MacOS/TextWrangler ~/.profile'  alias reload_alias='. ~/.profile' /code/pre/li liSave the file and run:  precode$ reload_alias /code/pre/li /ol  Now when you run edit_hosts or the other edit_* aliases, the TextWrangler app should open the hosts file. It will still be locked, but this application can unlock it once you start editing, it will prompt you. You now have a one-line command to edit the root owned files of your choice.  You can also alias just the first part of the path:  precodealias edit='sudo open -a /Applications/TextWrangler.app/Contents/MacOS/TextWrangler' /code/pre  which will let you execute commands such as  precode$ edit /etc/hosts /code/pre  and still achieve the same results.  Edit: other answer looks to be a better solution as it does not require the download and installation of another application.  <answer53943> codesudo/code and codeopen/code provide all the functionality already for editing files of other users so you can just run  precodeSUDO_EDITOR="open -FWne" sudo -e /etc/hosts /code/pre  to edit code/etc/hosts/code. Make sure to strongquit/strong Textedit at the end (kbdCmd/kbd-kbdQ/kbd) because otherwise codesudo/code won't notice that you're done with editing.  To make life easier add the following to your code.bashrc/code (or code.alias/code if you have it)  precodealias sudoedit='SUDO_EDITOR="open -FWne" sudo -e' /code/pre  <comment61718> For completeness sake, the `reload_alias` command won't work unless you source the profile once with `. ~/.profile` <comment61719> Hmm. Doesn't work for me. This command opens up a sort of temporary clone of hosts in the form of hosts.5o3nev8 and edits that one. If I save it and re-run the command, it opens the same file (changes are there) but a different suffix is at the end. However, no matter what I do via SUDO_EDITOR, if I go and look at the real /etc/hosts, it stays the same - like it was before the first SUDO_EDITOR command. <comment61720> It opens a temporary file but it should get copied back to the original **after you quit Textedit** (at least it does for me), see http://d.pr/i/sMN2 <comment61721> You are correct. It is worth noting that the TextEditor instance needs to be killed completely in order to overwrite the original - if it stays on but the editing window is closed, the overwrite does not happen.