Bug in 'file' command on 10.5.8? (Or am I doin' it wrong?) <body> On my OS X 10.5.8 system, the man page for 'file' says:     -h, --no-dereference  precode    option causes symlinks not to be followed (on systems  that  support  symbolic     links). This is the default if the environment variable POSIXLY_CORRECT is not     defined. /code/pre   and also:     -L, --dereference  precode    option  causes  symlinks to be followed, as the like-named option in ls(1)     (on systems that support symbolic links).  This is the default if the      environment variable POSIXLY_CORRECT is defined. /code/pre   For me, the default seems to be the "-L" behavior (i.e., always traversing symlinks and reporting the type of the emtarget/em file), regardless of whether I have POSIXLY_CORRECT set or not.   The "-h" option does the right thing if I explicitly specify it, fortunately.  Can anyone still running 10.5.8 (yeah, I know...) verify whether this is the behavior for them as well? And if it emdoes/em work for you as advertised by the man page, any theories on what I'm doing wrong? I've checked my spelling, just to get that out of the way...  <answer79003> On my copy of Mac OS X 10.5.8, I see the same behaviour as you. codefile somelink/code and codefile -L somelink/code have the same, code--dereference/code behaviour, regardless of the presence or absence of an environment variable codePOSIXLY_CORRECT/code. codefile -h somelink/code has the code--no-dereference/code behaviour. 