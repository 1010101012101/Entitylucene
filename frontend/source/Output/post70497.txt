Why does the version of Java verified by Oracle differ from the version shown at the command line? <body> h1Questions/h1  Why do versions differ?   Should we trust Oracle's verification routine?  hr  In some cases, the version verified by Oracle is different from the version shown at the command line.   h2Example/h2  img src="https://i.stack.imgur.com/goRZM.png" alt="Screenshot of Safari, the Java console and Terminal"  h3That example, in detail/h3  According to Oracle in the browser:   ul liJava 7 Update 9/li /ul  According to the Java Console:   precodeJava Plug-in 10.9.2.05 Using JRE version 1.7.0_09-b05 Java HotSpot(TM) 64-Bit Server VM /code/pre  According to the codejava/code command:   precodesh-3.2$ java -version java version "1.8.0-ea" Java(TM) SE Runtime Environment (build 1.8.0-ea-b58) Java HotSpot(TM) 64-Bit Server VM (build 25.0-b02, mixed mode) /code/pre  <answer70498> h1Problematic uses of terminology/h1  img src="https://i.stack.imgur.com/fbQ1i.png" alt="Screenshot of Oracle's 'Verify Java Version' page"  img src="https://i.stack.imgur.com/DtVzo.png" alt="Shot of a different Oracle page with the same title"  Where Oracle describes first Java for "your operating system" then "for your computer", the download is more accurately strongonly for things that use the Internet plug-in/strong:  ul licodejre-7u13-macosx-x64.dmg/code installs what's required for that plug-in, but for things that use Java without the plug-in, this installer from Oracle does nothing. /li /ul  h1Hint/h1  On OS X: if you want a Java Runtime Environment (JRE) from Oracle to be like the JRE in the diagram below for both (a) things that use the Internet plug-in and (b) things that use Java without that plug-in:   ul liat Java SE Downloads, strongignore the JRE/strong; download and install the strongJDK/strong/li liand – if you require a greater version – at JDK 8 Early Access Releases — Java.net, strongignore the JRE/strong; download and install the strongJDK/strong./li /ul  h2Additional explanation/h2  Apple's distribution of Java is more than an Internet plug-in.  The Oracle routine pictured above leads to nothing more than a plug-in. Other parts of Apple's distribution are unaffected by Oracle's installer.  Installation of a JDK from Oracle will place a folder at the following path, overriding (not removing) the JDK from Apple:   code/Library/Java/JavaVirtualMachines/code  Within each JDK there is a JRE. Please see the diagram below.   Oracle do actually document this (although it has taken 3 1/2 years to find it) See Oracle's page on OSX command line      The Java Runtime (JRE) that you download from java.com or oracle.com contains a plugin to run Java content from your browser. In order to use the command line tools, you will need to download the Java Development Kit (JDK). The JRE and JDK are separate and can coexist on your system. Only one JRE can be installed on Mac OS X. There can be multiple JDKs installed on a system, as many as you wish.   h3Thoughts/h3  The huge red button "Download Java Now" is too simplistic. Too many users, including some technical experts, are ultimately puzzled by the end result.   Where a Mac browser is detected by Oracle's server, one of the following phrases might be less misleading:   ul liDownload Java for your browser/li liDownload the Internet-plug-in/li /ul  h3Critically/h3  Oracle should offer some explanation in its Mac FAQ (Information and system requirements for installing and using Mac Java 7). The current undated edition of that page lacks an explanation.   h3Positively/h3  Some users desire or require the JRE of the Internet plug-in to differ from the JRE used elsewhere. For these users, Oracle's effective separation of things may be welcomed.   An example:   ul liin Safari and other browsers I use the most recent Java 7 Update 13/li lifor Wuala.app and for other things that do not use the Internet plug-in I use early access, developer preview release Java 8 (Java(TM) SE Runtime Environment build 1.8.0-ea-b75)./li /ul  YMMV.   hr  h2Reference items/h2  h3Java Help Center/h3  ul liunder strongTerminology/strong, see strongVersions/strong./li /ul  h3Java Platform Standard Edition 7 Documentation/h3  In the diagram below, from that page, focus on:   ul lito the left, the vertical emspan of the JRE/em/li lithe orange uppermost layer of the JRE – emJava Web Start/em and emApple/Java Plug-in/em/li /ul  img src="https://i.stack.imgur.com/ezxW0.png" alt="screenshot of Oracle documentation"  h2Related/h2  How can I switch between the two Java versions in Mountain Lion now that Java Preferences is gone?  <comment81841> Any reason you've installed Java 8 early access? <comment81862> @ThorbjørnRavnAndersen thanks for asking. There's now a linked question. <comment81872> Considered writing blog posts instead of answering your own questions? <comment81875> [It’s OK to Ask and Answer Your Own Questions](http://blog.stackoverflow.com/2011/07/its-ok-to-ask-and-answer-your-own-questions/). I saw confusion around versions of Java for over an extended period in Ask Different, I thought it timely to make it a question. <comment105235> I'm glad you answered your own question.  Keep up the good work! <comment300230> @GrahamPerrin I found Oracles's documentation of this confusion - I entered it just before the Thoughts header. Please edit the post to put it in a better position