How do I extract X.509 certificates embedded in executables? <body> This should be very simple, but I am unable to find a straightforward answer to this question. I have a few Mach-O binaries that have certificates embedded in them. Some of these might not be signatures, but rather root certificates that the code uses to verify other signatures with. Some of these might also be signatures. I'm working on some of Apple's core executables here, so that might help. How can I extract these from them?  <answer250884> Apple's root certificates are available via strongKeychain.app/strong in the strongSystem/strong keychain. Both expending too much effort, confirm the certificates you are trying to extract truly differ from those in the System keychain.  Be sure to review Apple's published source code for their tools, code signing, and signature verification at https://opensource.apple.com or ask on the Apple cryptography mailing list to chat directly with Apple's security engineers.  h2Mach-O Maybe?/h2  Assuming the embedded certificates are stored in a codedata/code segment of the Mach-O files, see the article Parsing Mach-O files for details about how to access this content.  The open source tool MachOView will probably provide enough insight to judge if the certificate is encoded as a Mach-O segment.  <comment311692> How do you know the executable binaries have certificates embedded within them? Are you able to see the certificates using the [object file format tools](http://www.ibm.com/developerworks/aix/library/au-unixtools.html)? <comment311693> @GrahamMiln I opened them using a hex editor. <comment311705> Would the certificate used to verify kernel extensions be stored in `kextload`? I don't think Apple's public source code includes anything about the keys used to verify executables and extensions. <comment311708> You should ask Apple directly on their [cryptography mailing list](https://lists.apple.com/mailman/listinfo/apple-cdsa); no need to guess.