Are there any disadvantages to using the brew version of bash for /bin/sh? <body> I have patched bash &amp; sh with the latest patches as described here, but now have some issues with some things in my dotfiles (particularly the loading of rvm and some custom functions and completions).  I don't have the issues if I just use the brew version of bash as both code/bin/bash/code and code/bin/sh/code, but I'm wondering if I might run into other problems with system stuff.  <answer147476> I would advise against making the Homebrew installation of bash your system-wide codebash/code or codesh/code command. However it should be fine to use as your personal shell.  Homebrew provides a vanilla installation of Gnu Bash. You will be missing any Apple additions to the shell that are provided if you use the Apple-supplied codebash/code or codesh/code binaries or source code from Apple's opensource.apple.com site. Any OS-level shell script provided by Apple may be relying on those Apple extension and changes to function.  Homebrew also installs, by default, a 4.3.x version of bash:  precode&gt; brew info bash bash: stable 4.3.24 (bottled), HEAD http://www.gnu.org/software/bash/ Not installed From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/bash.rb ==&gt; Dependencies Required: readline âœ˜ ==&gt; Caveats In order to use this build of bash as your login shell, it must be added to /etc/shells. /code/pre  This is a significantly different version than the 3.2.x version that ships with OS X 10.9.x. It is not 100% backwards compatible with pre 4 versions. For example substring extraction on positional parameters indexing changed from 3 to 4. It could break system-level scripts.  Both of those reasons can lead to inoperable system scripts on your Mac if you switch to Homebrew's versions of codebash/code and codesh/code for anything other than your personal shell. You can make your personal shell the Homebrew codebash/code shell by running:  precodechsh -s /usr/local/bin/bash /code/pre  and then logging out and logging back in. This should be relatively safe for the stable operation of your machine.  If the above codechsh/code command fails saying code/usr/local/bin/bash/code is not an acceptable shell you'll need to add it to the list in code/etc/shells/code by running:  precodesudo vim /etc/shells /code/pre  It should be added on a new line in the file like so:  precode&gt; cat /etc/shells # List of acceptable shells for chpass(1). # Ftpd will not allow users to connect who are not using # one of these shells.  /bin/bash /bin/csh /bin/ksh /bin/sh /bin/tcsh /bin/zsh /usr/local/bin/zsh /usr/local/bin/bash /code/pre 