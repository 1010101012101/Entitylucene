Setting a custom log <body> I have to get all the chromium and firefox info logs out of code/var/log/system.log/code and into a nice quiet code/var/log/{chromium,firefox}.log/code.   However I can neither recall or find how to set that in codesyslog.conf/code.  How would I go about doing that?  EDIT:  I have been looking at the codeasl.conf/code file  for the asl logging daemon.  This seems to have something to do with what I want, although, going from syslog to a binary log format is directly against sense.  EDIT:  To be very clear one can use syslog to dynamically slice the logs. Apple is transitioning from syslog to the apple system log. So the grep approach only deals with the deprecated code/var/log/code syslogd files.   Switching to syslog-ng and logging to sqlite would seem to be easier, but who knows?  I'm sure the proprietary format is the way to go.  Note that  precodesyslog(1)  /code/pre  is the command line tool for the ASL database.  precodesyslog(3)  /code/pre  is the C api to the syslogd daemon.  The ASL replacement for the above is  precodeasl(3) /code/pre  Now,   precodesyslogd(8)  /code/pre  has 2 modules, one writing to the files defined in  precodesyslog.conf(5) /code/pre  and one writing to the apple system log, as defined in   precodeasl.conf(5)  /code/pre  ASL seems to be the future. Syslogd is configured by both codesyslog.conf/code and codeasl.conf/code.    <answer8106> There are 2 answers in practice, if I want to change the logging file location.   h2Syslog:/h2  Solution is to emnot/em read the OSX syslog.conf manpage. Read the FreeBSD one.  Syslog still works this way when using its bsd module.  precode!-org.chromium.Chromium  *.notice;authpriv,remoteauth,ftp,install,internal.none  /var/log/system.log kern.*                          /var/log/kernel.log  !*  !org.chromium.Chromium *.*                                                 /var/log/stfu.log !* /code/pre  This removes chromium's ludicrously chatty log from /var/log/system.log, and puts it into stfu.log.  <answer8111> The situation is like that: Applications can use the syslog(3) API and the asl(3) API to log messages, other data logged can come from the kernel or from the network. All of these messages are handed over to the syslog Daemon: syslogd(8). The syslogd now outputs log messages emboth/em the BSD way (it writes stuff into various basic log files like /var/log) emand/em into a unified log message store (/var/log/asl.log).  If you want certain log messages not to appear in your log emfiles/em (eg. you read logs like system.log by selecting them in Console.app), you will need to configure syslog.conf(5) like chiggsy said. If you want messages not to be stored in the asl database, you will need to configure asl.conf(5).  If, for example, you do not longer want Bonjour's (mDNSResponders) Log messages to be stored in the ASL db, you will need to add the following line to /etc/asl.conf :  precode? [= Sender mDNSResponder] ignore /code/pre  … and then "gently" restart the syslogd by:  precodesudo killall -HUP syslogd  /code/pre  Now, messages from mDNSResponder will no longer appear when you go into Console.app's "all messages", but still exist within your logfiles.  Lastly, if you call syslog(1) from the command line, it acts as a nice frontend for querying the ASL db - you could for example ask it to show all messages from the Time Machine Backup starter that were logged in the last two hours by running:  precodesyslog -k Facility -k Sender com.apple.backupd-auto -k Time ge −2h /code/pre  …which explains, why the ASL db is handy: you can search for log files simultaneously in "all log files".   <comment254609> So, how do you figure out who the "Sender" is supposed to be?  For example, I want to see sshd stuff, I tried "sshd" and "com.openssh.sshd" and neither returned info that is clearly there in system.log <comment254654> @Michael good question! Indeed I'm not sure why `syslog` behaves differently for sshd (and apparently vnc, ftp so I submitted this as a [new question here](http://apple.stackexchange.com/questions/210949).