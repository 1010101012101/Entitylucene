Disabling /usr/bin/svn to use brew installed svn <body> I use Lion, and the svn /usr/bin/svn is 1.6 version. As I need to use subversion 1.7, I installed svn from brew to be installed in /usr/local/bin/svn.   How can I disable the svn* files so that I can use svn from brew?  <answer63947>    strongNOTE/strong: monfresh's answer below is better than mine. While my method will work, it is not recommended to rename or edit system utilities.   When I needed to upgrade from SVN 1.6 to 1.7, I installed my built version (not using Homebrew or Macports, etc.) in code/usr/local/bin/code and renamed all the old svn executables in code/usr/bin/code to (executablename)-1.6.7.  So now codewhich svn/code gives code/usr/local/bin/svn/code and the old code/usr/bin/svn/code is code/usr/bin/svn-1.6.17/code.  <answer119179> There is a better and safer way to specify which version of an executable you want your computer to use without having to modify the executables that came pre-installed on your Mac. It's generally not recommended to alter your default system tools in any way.  You can take advantage of the PATH environment variable, which allows you to list several directories that you want your Mac to search in when looking for executables.  In order to use the latest version of svn, or any other tool you installed  in code/usr/local/bin/code with Homebrew (or MacPorts, manually, etc), you want to tell your Mac to first look in code/usr/local/bin/code before it looks in the default code/usr/bin/code. You do that by defining the codePATH/code in your code.bash_profile/code, which is a file that gets loaded automatically every time you open a new Terminal window.  You can write the PATH to your .bash_profile by running this one-liner from the Terminal:  precodeecho 'export PATH="/usr/local/bin:/usr/local/sbin:~/bin:$PATH"' &gt;&gt; ~/.bash_profile /code/pre  This command takes everything between the single quotes (codeecho/code) and adds it code(&gt;&gt;)/code to a file called code.bash_profile/code in your userâ€™s root (or home) directory code(~/)/code.  To have these changes take effect, you can either quit and relaunch Terminal, or run this command:  precodesource ~/.bash_profile /code/pre  If you want to do it all manually, open your code.bash_profile/code with your favorite editor, then add this line to it:  precodePATH="/usr/local/bin:/usr/local/sbin:~/bin:$PATH" /code/pre  and save it. Then quit and relaunch Terminal.  <comment138990> possible duplicate of [Amending PATH so that /usr/local/bin is ahead of /usr/bin](http://apple.stackexchange.com/questions/49389/amending-path-so-that-usr-local-bin-is-ahead-of-usr-bin) <comment139002> Renaming files in `/usr/bin` just to get them out of the way leaves you open to upgrades restoring them, or breakage of programs that depend on them.  Why not just put `/usr/local/bin` first in your `PATH`? <comment234798> I agree; this is better than my answer. I have edited my answer to show that preference. <comment285767> Is this persistent though?  Will it stick after system reboot. <comment314169> In my PATH `/usr/local/bin` is before `/usr/bin` and I still get the latter when I execute `svn`. How is that possible?