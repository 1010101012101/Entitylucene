Run sudo From Non-Admin Account <body> Okay, so I'm gearing up to get a new machine so I'm looking at how I can organise things better. Now, currently I use an admin account as my main login account, but I know that that's probably not best practice, so I'd like to switch to a separate admin and non-admin account on my machine.  However, I'm a developer, and I do a lot of work in the terminal, so sometimes I do need to run commands via codesudo/code, but of course that won't work the way I would normally run it (codesudo foo/code, type current account's password). What I'd like to know is, knowing the details for an admin account on my machine, is it possible to run commands via codesudo/code (or similar) from a non-admin account, without having to login to a different account each time? For example, could I trigger the enter admin password dialogue somehow?  <answer126399> Go to the Directory Utility, unlock it and then from the Edit menu option select "Enable Root User". Type in a unique password for the root account and re-enter it for verification. Now with that done from any account you can open the Terminal.app from you can run "login" and enter root at the login and then enter the root password you just set up. You should be good to go! ;)  <answer126400> Seems like you could use the strongSU/strong command to switch to another user in Terminal. Once you've switched to the admin user you can use sudo commands coupled with the admin account's password.  For example, when I'm at one of my end user's Macs and I need to run something with elevated privileges (chown for example) without logging out and into the admin account (ladmin) I would use something like this (in bold):  emMr-Rabbits-Mac:~ notadminuser$/em strongsu ladmin/strong  This will prompt for the ladmin account's password, once entered you will see a bash command prompt.  From here I can run any sudo commands desired, entering ladmin's password as needed...  embash-3.2$/em strongsudo chown user2 /some/folder/strong  This will run the chown command using the now logged in ladmin user, prompting for the ladmin account's password.  Once finished you can type strongexit/strong to return to your logged in user's prompt.  Screenshot of similar process, only using sudo to run the ls command (just for example). img src="https://i.stack.imgur.com/E5St9.jpg" alt="enter image description here"  <answer126415> Add your existing user name to the codesudoers/code file, and do what you need to do:     User privilege specification      root ALL=(ALL) ALL      code&lt;randomuser&gt;/code ALL=(ALL) ALL      %admin ALL=(ALL) ALL   Or whatever perms you want to give yourself. then you can run codesudo whatever/code to your hearts extent. That's code/etc/sudoers/code by the way.  <answer126429> In Terminal type codelogin/code, a space, codeyour admin name/code and hit return. Then type your admin password, hit return and you are logged in as administrator that can issue sudo commands with no additional configuration or files to change.  <comment148034> There is no need to enable the root user for this. <comment148040> im not sure if this would work with osx, but if seen solutions on linux systems (e.g. ubuntu) where the user is allowed to run 'su' via 'sudo'. by this way you can just type 'sudo su', enter your users password and you end up with a root shell. i love this solution because no seperate admin account and password is required <comment148047> Aha! This seems like exactly what I need, thanks! No need to add to sudoers file, I had a feeling there was a way to do it, just couldn't for the life of me think of it, thanks for the great answer! <comment148102> I think it's worth mentioning that on UNIX like systems, if you are the administrator, it's perfectly fine to be running in a sudoer account. The equivalent of Windows-Xp-esque admin all the time would be being logged into root. <comment148160> So i could go into any Mac which is booted, open Terminal.app and enter the login command. Enter root and then what as a password? Please enlighten me :/ <comment148163> I mean you donâ€™t need to enable the root user to do what the OP is asking. Actually, if you go and use `login`, you might as well log into an admin account instead of root. <comment269273> -1 Never edit `/etc/sudoers` by yourselves. Use `visudo`.