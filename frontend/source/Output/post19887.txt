How would I use Tor with Colloquy <body> I've been switching back and forth between Colloquy and Linkinus a lot recently as my IRC server has become more and more popular - since then I've been trying out the correct way to use my Tor proxy with Colloquy or Linkinus. I've read they both have support for Proxies but I can't find anything in either of the Apps nor any relevant documentation around the internet.   <answer19916> It requires that the IRC server in question already making itself availble as a Tor service. Apparently Freenode does this  at the address (THIS IS AN OLD ADDRESS) mejokbp2brhw4omd.onion, but most IRC servers don't.  While not strickly nessecary alot of IRC servers block TOR exit nodes.  You can try by replacing the code.onion/code address in the codesocat/code line and see if it works.  UPDATED Freenode IRC Service: The onion address of Freenode has changed: codep4fsi4ockecnea7l.onion/code You can always check this by using codedig +short irc.tor.freenode.net cname/code from a Un*x command prompt.  The basic idea is to use socat to create the TORified connection for us, and our client will connect to codesocat/code.  ol liInstall Tor. I'm using the Vidalia bundle from the Tor download page./li liInstall codesocat/code. This is a command-line power tool for manipulating network connections.  I recommend using the Homebrew package manager (also a command-line program) to install it. If this all sounds confusing and scary, just open up strongTerminal/strong (in /Applications/Utilities), paste the following line, press enter and wait for it to finish.  precoderuby -e "$(curl -fsSkL raw.github.com/mxcl/homebrew/go)" &amp;&amp; brew install socat /code/pre  (Pasting commands into the Terminal like this can do anything to your computer, so it's usually a bad idea unless you trust the source.)/li listrongNOTE: This step is not nessecary as we are already using codesocat/code which can handle the mapping for us./strong    The rest of this step is left for historical purposes.  Edit your codetorrc/code file to create an internal IP address to use to connect codetor/code and codesocat/code by adding the line  precodeMapAddress 172.28.184.12 mejokbp2brhw4omd.onion /code/pre  (replacing the code.onion/code address if you're not using freenode). Tor has an FAQ entry about how to modify your codetorrc/code file, but if you trust me and are using Vidalia as well you can just enter this in the Terminal:  precodemkdir -p ~/.vidalia/ &amp;&amp; echo 'MapAddress 172.28.184.12 mejokbp2brhw4omd.onion' &gt;&gt; ~/.vidalia/torrc /code/pre/li liCreate a new launch daemon (background system process) to initialize codesocat/code when you turn your computer on. Enter the following Terminal command to create the configuration file and open in in your editor...  Couple of things:  ul liFind the correct path to codesocat/code by typing codewhich socat/code in your terminal/li liIf you don't use IRC alot then a LaunchAgent is probably overkill, you can just start codesocat/code manually by typing: codesocat TCP4-LISTEN:6666,fork,bind=localhost SOCKS4A:localhost:p4fsi4ockecnea7l.onion:6667,socksport=9050/code  Or you can create the LaunchAgent by pasting this into your terminal:  codemkdir -p ~/Library/LaunchAgents/ &amp;&amp; touch ~/Library/LaunchAgents/org.dest-unreach.socat.irc.plist &amp;&amp; open -t ~/Library/LaunchAgents/org.dest-unreach.socat.irc.plist/code/li /ul  ...then copy the following text into the file, save and close it:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;org.dest-unreach.socat.irc&lt;/string&gt;         &lt;key&gt;OnDemand&lt;/key&gt;         &lt;false/&gt;         &lt;key&gt;Program&lt;/key&gt;         &lt;string&gt;/opt/local/bin/socat&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;                 &lt;string&gt;/opt/local/bin/socat&lt;/string&gt;                 &lt;string&gt;-s&lt;/string&gt;                 &lt;string&gt;TCP4-LISTEN:6666,fork,bind=localhost&lt;/string&gt;                 &lt;string&gt;SOCKS4A:localhost:p4fsi4ockecnea7l.onion:6667,socksport=9050&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;ServiceDescription&lt;/key&gt;         &lt;string&gt;SOCAT Relay for Freenode-TOR&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre/li liLoad / Run the new LaunchAgent (or run socat from the command line) codelaunchctl load ~/Library/LaunchAgents/org.dest-unreach.socat.irc.plist/code or you can just restart your computer./li liLaunch Tor/Vidalia and wait for it to connect./li liOpen Colloquy, and add a connection to codelocalhost:6666/code and connect to it. Ta-da! You're on IRC, through Tor!/li /ol  If you need to stop the socat LaunchAgent (i.e. for debugging) you can type the following into a terminal: codelaunchctl unload ~/Library/LaunchAgents/org.dest-unreach.socat.irc.plist/code  <answer43550> 4 additions to the answer given above:  ul liVidalia has a torrc in ~/Library/Vidalia/torrc (no .). Edit this file from within Vidalia itself (adding the MapAddress line)/li liThe plist above is slightly mangled. I use Fink's socat, so your path below may vary  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;plist version="1.0"&gt;     &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;org.dest-unreach.socat&lt;/string&gt;         &lt;key&gt;OnDemand&lt;/key&gt;         &lt;false /&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;             &lt;!-- /opt/local/bin/socat ProgramArguments --&gt;             &lt;string&gt;/sw/bin/socat&lt;/string&gt;             &lt;string&gt;-s&lt;/string&gt;             &lt;string&gt;TCP4-LISTEN:6666&lt;/string&gt;             &lt;string&gt;SOCKS4A:localhost:172.28.184.12:6667,socksport=9050&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;ServiceDescription&lt;/key&gt;         &lt;string&gt;Multipurpose relay (SOcket CAT)&lt;/string&gt;     &lt;/dict&gt; &lt;/plist&gt; /code/pre/li liFreeNode needs SASL support built-in. The nightly build of Colloquy supports this natively. Check irc://irc.freenode.net/colloquy for the latest version./li liThe onion address of Freenode has changed: p4fsi4ockecnea7l.onionbr You can always check this by using 'dig +short irc.tor.freenode.net cname' from a Un*x command prompt./li /ul  <comment48538> in point 3) you say to change the .onion address if we're not using freenode. I want to connect to Rizon, so what address should I substitute there? Thanks Switha <comment48579> @Switha I don't think you can. My understanding is that Freenode themselves are running a Tor hidden service, allowing users to connect. Some Googling suggests that nobody is running a Tor service for Rizon, so it's not possible to connect. :( (As far as I understand, which isn't very far.) <comment83166> We much prefer editing an existing answer to make it better or more complete. Would you consider incorporating this in the above?