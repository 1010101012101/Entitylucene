MacBookAir kernel_task at 300% and rising <body> I have a MacBookAir5,1 connected to a Thunderbolt Display.  When it gets very hot, PID 0 "kernel_task" uses ever more CPU until reaching 340% and slowing the Mac down sufficiently to make me restart it.  I found a proposed solution at this site but it says to "move the ‘plist’ file for the model identifier we discovered earlier out of that directory" which does not apply to me because my installation of Mountain Lion does not have a plist for my 2012 MacBook Air. system_profiler tells me that I have a MacBookAir5,1.  I tried a few things. I figured that since overheating appears to cause this, I should try not to overheat the poor Mac. However, I neither understand why Mac OS X' reaction to overheating is to use 340% of CPU time nor did I manager to keep the lid open and still convince the Airbook to use the Thunderbolt Display as its only display.  I tried running from battery, assuming this would make the CPU run slower and not overheat, but when I remove the power cable from the Airbook, the Thunderbolt Display just turns black, only recovering after several minutes when I reconnect the power cable.  What's going on?  <answer97582> Could you have a look at the 2 main system logs to see what your MacOS may be busy at. With a codeterminal/code or an codexterm/code window, the 2 following commands fired when the problem appears may help you diagnose it:  precodetail -f /var/log/kernel.log  tail -f /var/log/system.log /code/pre  hr To help anyone help you, next time this kind of problem arises, could you run the following command (within a codeterminal/code or an codexterm/code window again):  precodetop -o cpu /code/pre  and grab a copy of the topmost 10 lines to put them back within your original question as here:  precodeProcesses: 50 total, 3 running, 47 sleeping, 243 threads                                                                                                                                       12:18:07 Load Avg: 1.40, 1.53, 1.28  CPU usage: 5.97% user, 7.14% sys, 86.88% idle    SharedLibs: 5044K resident, 9292K data, 0B linkedit. MemRegions: 10733 total, 769M resident, 15M private, 1479M shared. PhysMem: 755M wired, 1363M active, 641M inactive, 2760M used, 1207M free. VM: 120G vsize, 1041M framework vsize, 2798981(19) pageins, 173(0) pageouts. Networks: packets: 61207/73M in, 66123/6062K out. Disks: 877183/26G read, 171220/22G written.  PID   COMMAND      %CPU  TIME     #TH  #WQ  #POR #MREG RPRVT  RSHRD  RSIZE  VPRVT  VSIZE  PGRP PPID STATE    UID  FAULTS    COW    MSGSENT   MSGRECV   SYSBSD    SYSMACH   CSW      PAGEINS 1530  mdworker     17.1  06:56.12 4/1  2    82+  384+  39M+   16M    143M+  196M+  2586M+ 1530 1    running  501  1946213+  727+   881948+   219072+   6484219+  676187+   679401+  1914+ 0-    kernel_task  14.0  07:55.29 69/4 0    2    757-  22M    0B     130M-  75M    2355M- 0    0    running  0    26279     0      33251333+ 32358872+ 0         0         10243109 0 1522  mds          12.6  14:55.33 9    8    118- 862   361M+  6052K  239M+  1334M+ 3736M+ 1522 1    sleeping 0    13373455+ 1286   12149111+ 6697348+  16039295+ 6938357+  3331251+ 1819924+ [...] /code/pre  This is an emexample/em of a problem (no I don't have the emsame problem/em ☺) where my Mac was overheating like a fool. Here the 2 processes involved are codemds/code and codemdworker/code and are caused by codeSpotlight/code indexing an external drive of 500 Go of backups which I just plugged on. The 2 involved tasks regularly topped to 200% cpu alltogether. codeSpotlight/code is very inconspicuous about this embehind the scene/em heavy business. It does just display a small point at the center of its looking glass within the menu bar.  When I finally clearly saw what was happening under the hood, I decided to let codespotlight/code finish its job, and emone hour later/em, the temperature, the processors and the fans returned to a normal life. hr Finally, since your OS (Mountain Lion) is Lion or more recent, I advise you to read this great explanation on codesysdiagnose/code and if you feel comfortable reading system logs, try it.   <answer97590> I am not sure if this is related, but I have been having strange issues on my MacBook with emseveral different/em various tasks (Specifically codeQuickLookSatellite-general/code) using 100+ % CPU Time, obviously making my MacBook unusable like above.  Have you noticed any other processes possibly taking more CPU then normal?  I have been having the hardest time tracking down the source.  Are both problems possibly related?  Hopefully the question I asked might help…  <answer170300> This seems to help: http://blog.viktorpetersson.com/post/100148585299/how-to-fix-kernel-task-cpu-usage-on-yosemite  I had the same problem when I did a clean install with Yosemite on my Macbook 6.1, but the blog above helped.  <comment114516> Beware, the document you quote doesn't do a correct analysis of the origin of the problem. On the other hand it does suggest to remove a kernel extension. This isn't an analysis I'd trust. <comment114545> No, there are no other tasks remotely using as much CPU. THere is kernel_task with about 340% (two cores, two threads), and lots of other tasks (including Civ 5) using the rest. <comment114547> Will do when it happens again. Last two days have been much cooler and it didn't happen again. <comment114919> I second the idea that the linked analysis isn't useful to others in most cases. Kernel extensions usually cause crashes when they go bad - not resource usage. If you reboot your Mac and the problem goes away - it's going to be a more complicated interaction between a program that asks the kernel to do some long tasks and you are unaware of that program causing the issue. If the usage goes away with a reboot, you'll have to watch and get lucky to correlate the situation where usage skyrockets. <comment114920> I would also say, next time it happens - run `sysdiagnose` to collect a snapshot of all system memory and process and activity. Once you have two or three sets of diagnostics, the problem can usually be sussed by someone used to looking over unix log files. <comment114933> → Andrew: you said "I should try not to overheat the poor Mac". I can't agree with this *safe* approach. You are hunting a problem. In this hunt the 1st thing you should try to find is a way to reproduce the problem at will and as fast as possible. This is a hunt: know your ennemy! Don't avoid it, provoke it! Take a snapshot! <comment114940> I agree. But do note that this is my main computer (until end of the week) and I need it to work more regularly than I need it figured out. <comment117979> I'm able to reproduce this fairly consistently during overheating. I'm also in the middle of work here but if you can't reproduce it again, let me know and I'll try to find time for it, to run the snapshots. <comment170761> thank you! I was able to figure out the flux was the reason a lot of my CPU was being taken and causing my computer to lag horribly <comment200184> While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference. Link-only answers can become invalid if the linked page changes. <comment217069> Similar: [How to investigate high kernel task memory usage?](http://apple.stackexchange.com/q/178281/22781)