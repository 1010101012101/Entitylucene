Batch command to change each file's creation date to match the information in the file name <body> I have a folder with several hundred video files. All files names are in this format:  strong2011-08-27 11.18.00/strong  Unfortunately the 'Date Created' for each file is the date on which it were converted (a date in 2014), not the date it was originally taken (specified in the file name).   I've found that the emtouch -t/em operator can be used to change the creation date of a single file.  img src="https://i.stack.imgur.com/9IS2y.png" alt="enter image description here"  emBelow: file on which I've successfully changed the Date Created (with above command) and file for which Date Created is still incorrect./em   img src="https://i.stack.imgur.com/coGqh.png" alt="enter image description here"  strongCan anyone help with terminal code that would extract YYYYMMDDhhmm info from each file name and use it for the for the emtouch -t/em operation for that file, in a batch operation?/strong   I'd like the creation date / time to be correct so that when I import into my library each file will be in the right place in the timeline.  Mac OS: El Capitan 10.11.5  Terminal Version: 2.6.1  Thanks all.   <answer245428> ul liopen Terminal/li litype codecd/code (including the trailing space) and drag the folder emcontaining/em the files to be renamed into the Terminal window (the folder is probably codeDesktop/PRIMARYVIDEOS/code, so the command should look like codecd /Users/Andrew/Desktop/PRIMARYVIDEOS/code)/li lipress Enter/li litype (or copy/paste)  precodefor f in *; do t=$(echo $f | sed -E 's/[-. mov]//g'); echo touch -t $t "$f"; done /code/pre/li lipress Enter/li liif (and only if) this results in a list of codetouch/code commands which look ok, type (or copy/paste)  precodefor f in *; do t=$(echo $f | sed -E 's/[-. mov]//g'); touch -t $t "$f"; done /code/pre/li lipress Enter/li /ul  <comment302556> @andyp Looks good, give it a try :-) <comment302557> Hi @patrix We're getting somewhere! You're first bit of code on four files in a test folder ended up with something like this for each: touch -t 20110107141300 2011-01-07 14.13.00.mov.           However, when running the second line of code after this I got this error for each:    touch: out of range or illegal time specification: [[CC]YY]MMDDhhmm[.SS]            The file names go down to the second, which touch can't deal with. The top bit of code hasn't snipped off the information about the seconds, which I think has caused the error <comment302558> If it helps @patrix, it looks like the seconds information in each file name is always 00 (so each file name always look like this: YYYY-MM-DD hh.mm.00.mov) <comment302559> Hi @patrix - I took off the information in the filename about the seconds for each of my four test files (e.g. so first code now produces: touch -t 201101071413 2011-01-07 14.13.mov) and the above code works PERFECTLY! Is there a way to tweak it so that I can run it on all my hundreds of other files without having to amend each file name to remove the seconds? <comment302578> HOORAY! I use the finder batch rename function to replace .00.mov with absolutely nothing. This then allowed the code above to work for all several hundred files in my primary folder. You @patrix are a legend. Thank you.