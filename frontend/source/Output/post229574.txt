How do I delete a file with a NULL byte in the filename? <body> I made a file by accident with a filename of code(NUL).xml/code, except instead of code(NUL)/code, it's literally code'\0'/code. None of the methods I've tried have worked to actually delete it. Is there a way I can delete the file by an alternative reference?  <answer229587> Ok, so I cannot test this (for hopefully obvious reasons), but when filenames are your issue... use codeinode/codes!  First, in a directory, run codels -il/code (-i is emshow node numbers/em and -l is to make it a list):  precode2480878 -rw-r--r--  1 christopher  family  0 Mar  2 19:40 *a 2480889 -rw-r--r--  1 christopher  family  0 Mar  2 19:40 \\a 2480873 -rw-r--r--  1 christopher  family  0 Mar  2 19:39 a /code/pre  In this example, I'm going to erase the file code\\a/code, which is inode code2480889/code.  So I run codefind . -inum 2480889 -delete/code.  Hopefully this will work.  <comment280075> I created it with an old version of Java that let me create files with a null byte in the file name by accident. Unfortunately, I've long since updated and clri isn't available on El Capitan, so I can't even clear the inode. <comment280077> I've tried that and many more. It doesn't work. <comment280078> I'm more or less hoping someone has a method for clearing inodes on El Capitan. <comment280080> The problem with that is that it attempts to delete the file using the file's name, which is exactly the problem. The null byte is tripping up rm. <comment280084> Yeah. That runs into the same problem as its invoking the unlink() call against the file name. <comment280202> `find . -inum 43396691 -delete` produces `find: -delete: unlink(./‚êÄ.xml): Invalid argument` <comment280209> Tried it with `clri /dev/disk0s2 -inode` (from a 10.6 install copied to a 10.9 system) and directly manipulating the catalog file with a hex editor. Nothing works or completely corrupts the disk (the latter). <comment280210> By "completely corrupts the disk", do you mean requires fsck? Because that is known and expected behavior with clri. <comment280213> clri just doesn't work with the following (error?) message: `clri: /dev/disk0s2: superblock magic number 0x0, not 0x11954`. Directly manipulating the file system's catalog file with a hex editor completely corrupts the volume and it can't be recovered though I changed only 4 bytes. <comment280215> :( darn! That sucks! <comment280761> Is it the only file in a directory? Or is it the only file with a certain extension? Than you could try using ```rm``` with a wildcard instead of the offending character or remove the whole directory (```rm -rf ./THEDIRECTORY```)? Or you could look at http://unix.stackexchange.com/questions/28983/how-can-i-delete-a-file-with-no-name which might also help. I usually search for linux answers in these cases. Other solution: install midnight commander - that usually works in these cases.