How do I create an AppleScript that will quit an application at a specific time and then put the computer to sleep? <body> I've been toying around with AppleScript and Automator to get this thing to work, but I just can't seem wrap my head around it. If anyone could show me an example or give me some tips on how I can set an application to close at a specific time and then put the computer to sleep or shutdown, it would be greatly appreciated.  <answer60419> I'm assuming that you'd like to initiate this procedure as opposed to having it run at a regularly scheduled time.    My approach would be to initiate this from the command line, but any commands can be run in a shell script component of an Automator script with some modification. The following approach combines a few components to get the job done:  ol liA codetell/code command to quit the application/li liA command-line call to put the computer to sleep/li liA command-line call to schedule 1 and 2 for a specific time./li /ol  strong1. Telling the Application to quit/strong  This can be as simple as:  precodeosascript -e 'tell application "AppName" to quit' /code/pre  strong2. Putting the computer to sleep/strong  Have a look at codepmset/code for more details, but issuing the following command will put your computer to sleep:  precodepmset sleepnow /code/pre  strong3. Scheduling an operation to be run at a specific time/strong  Have a look at the at command. This command gives you the ability to specify a time for a command to run. You'll need to enable this functionality as it is not by default. To enable the codeatrun/code daemon, run the following command [reference on SU]:  precodesudo launchctl load -w /System/Library/LaunchDaemons/com.apple.atrun.plist /code/pre  Once you've enabled codeatrun/code, any command can be scheduled for a specific time by issuing  precodeecho "&lt;command&gt;" | at HH:MM /code/pre  which works because codeat/code takes it's input from codestdin/code by default. A simpler approach is to run commands listed in a file. A file can be executed by using the code-f/code flag, followed by the name of the script to be run like this:  precodeat -f /path/to/file HH:MM /code/pre  strongPutting it all together/strong  What follows assumes that codeatrun/code is enabled. As a toy example, let's say that I want to quit Mail and put the computer to sleep at 11PM. I would create the a file containing the commands that I want run as follows:  precodeosascript -e 'tell application "Mail" to quit' pmset sleepnow /code/pre  Save that file to codequit-and-sleep/code and then run on the command line  precodeat -f /path/to/quit-and-sleep 23:00 /code/pre  strongCaveats/strong  I didn't do any checking to make sure that Mail actually closed. The script also assumes that nothing else is going to get in the way of putting the computer to sleep.  I've kept it simple here as a starting point for what you want.   <answer92102> Here's a strictly applescript version that accomplishes this given a hard-coded time value. You could, of course make this part interactive if you want. Also, this version assumes the time-string relates to today.   precode--Get time setting for action to occur set t to "3:16:30 PM" --build a time string to use as a target. set cd to (current date) as text set AppleScript's text item delimiters to " " set targetTime to text items 1 thru -3 of cd set targetTime to date ((targetTime as text) &amp; " " &amp; t)  repeat while (current date) &lt; targetTime     beep     delay 30 -- check the time every 30 seconds end repeat  tell application "Mail"     quit end tell  tell application "Finder"     display dialog "Do you want to shut the computer down now?"     if button returned of the result is "Ok" then         shutdown     end if end tell /code/pre  <answer92113> You can schedule an event once with at:  precodeat 23:59 &lt;&lt;&lt; 'osascript -e "quit app \"Mail\""; pmset sleepnow' /code/pre  Or to schedule it to repeat every day, edit the crontab with codeEDITOR=nano crontab -e/code and add an entry like this:  precode59 23 * * * osascript -e 'quit app "Mail"'; pmset sleepnow /code/pre  <answer199350> Here's code that will wait an amount of seconds before quitting the current application and going to sleep.     precodedelay (your amount of seconds here) tell application "System Events"     key down {command}     keystroke "q"     key up {command}     set volume "1"     say "computer going to sleep"     tell application "Finder"         sleep     end tell end tell /code/pre  <comment69530> Would you like this to be done regularly or is this something that you want to initiate manually? <comment69533> Do you have the AppleScript written already? <comment69589> It's something I would like to be done regularly and not have to worry about initiating. I did have a script written but it was quite messy so I trashed it and ended up here. Thanks for your answer. I'll give this a go and hopefully it clears up the issues I've been having. <comment69596> if you want this done regularly, then scheduling the job with `at` isn't what you want. `cron` or `launchd`.  If you want an easier interface to setting that up, maybe [lingon 3](http://itunes.apple.com/en/app/lingon-3/id450201424?ls=1&mt=12) will help. <comment289691> at 23:59  'osascript -e "quit app \"Mail\""; pmset sleepnow' does not work for me. It says "job 1 at Sat Apr 30 12:47:00 2016" but does not run the command when the time comes