How create an identical timestamp format as used in ppp.log file in a shell script? <body> In the need to add custom logging messages to ppp.log, I see that the date and time are missing when outputting the command to code&gt;&gt; /var/log/ppp.log/code. Other pppd related messages in ppp.log are prepended with a timestamp format that is similar to: "codeSat Apr  9 17:18:02 2016 :/code". My goal is to output this exact date time format in a emMavericks/em shell script  I know that other log files have different date/time timestamps. I want to re-create the format as used in ppp.log.  h3Regression/h3  This Mac OS X 10.9 environment is configured with a dutch language locale. Therefore code$ echo $(date '+%a')/code returns "codeza/code" instead of the desired "codeSat/code". That is the part that can be fixed by codeexport LC_TIME="C"/code or codeexport LC_TIME="POSIX"/code. I have tried to read the codedate/code and codepppd/code man page. However then there is still the abbreviated alphabetic timezone name emCEST/em (the code%Z/code part in code$ date +%Z/code) in the output "codeSat Apr  9 18:12:12 CEST 2016/code".  I know I can create the format using all the different code$ date/code format codes, like code%a %b %e/code etcetera. Though I guess there is  a shorter way, isn't there?  <answer234371> After a lot of searching, a search for "date format without alphabetic time zone abbreviation" returned Info on ISO 8601, the date and time representation standard. That information helped me to find out that the timestamp format that is being used in Mavericks its /private/var/log/ppp.log file, is actually the ANSI C's asctime() format.  h1C asctime/h1  To create C style asctime in a shell, a non English system might need to override the environment variable for time messages:  precodeexport LC_TIME="C" /code/pre  And then there is the code$ date/code formatting option code%c/code that now displays local date time in the desired format:  precode$ date +%c Sat Apr  9 21:10:20 2016 /code/pre  hr  supA tip when using codeecho date/code, do put the date between apostrophes codeecho "$(date +%c)"/code, otherwise the filler space in single digit dates might be stripped from the output:/sup  precode$ echo $(date +%c) Sat Apr 9 21:13:57 2016 $ echo "$(date +%c)" Sat Apr  9 21:14:30 2016 /code/pre 