How to stop kernel_task from constantly using over 400% CPU? <body> Configuration:  ul liModel Name: Mac mini (Late 2012)/li liModel Identifier: Macmini6,2/li liSystem Version: OS X v10.11.3 (El Capitan)/li /ul  For the past few weeks, codekernel_task/code has been using over 400% CPU and its virtual memory size has ballooned up to 68.97 GB. Even after restarting, codekernel_task/code starts hammering the CPU right away. In addition to codekernel_task/code, there is also another process high up in emActivity Monitor/em’s list that is always running and is constantly using between 90% to 100% of the CPU:  ul licodePython/code (running under the user: code_devicemgr/code)/li /ul  I’ve tried quitting this process, but to no avail… the process just reopens using the same amount of CPU resources.  <answer240421> As noted by Apple here:     Activity Monitor may show that a process named kernel_task is using a large percentage of your CPU, and during this time you may notice a lot of fan activity. This process helps manage temperature by making the CPU less available to processes that are using the CPU intensely. In other words, kernel_task responds to conditions that cause your CPU to become too hot. When the temperature decreases, kernel_task automatically reduces its activity.   This would imply that codekernel_task/code’s CPU usage will decrease once the process causing the CPU to overheat is stopped. Unfortunately, it was impossible to tell in emActivity Monitor/em exactly what started the codePython/code process owned by code_devicemgr/code to begin with. Thankfully, someone else in this thread already did the detective work.  The steps I used to solve the problem:  ol liMoved emServer.app/em to the Trash./li liClicked strongOK/strong in the strongServer app removal detected./strong dialog box: img src="https://i.stack.imgur.com/aaHcO.png" alt="Server app removal detection dialog box"/li liThe codePython/code process owned by code_devicemgr/code finally stopped, and codekernel_task/code’s CPU usage dropped dramatically to far more normal levels (3 – 10 %)… making my Mac finally emusable/em again!/li /ol  hr  Optionally, emServer.app/em can be moved out of the emTrash/em and back into the emApplications/em folder. I attempted this and reopened it. After starting back up and setting up services, it gave a curious error related to codeDeviceManager/code (which is quite interesting considering the CPU was being trashed for the past few weeks thanks to a process running under code_devicemgr/code in the first place): img src="https://i.stack.imgur.com/khyXy.png" alt="DeviceManager error"  More details in emConsole.app/em: img src="https://i.stack.imgur.com/BY1Gx.png" alt="Console.app _devicemgr errors"  In any case, clicking on strongContinue/strong and ignoring the error doesn’t seem to have any negative repercussions (emyet/em) and CPU usage hasn’t seemed to spike yet either, so I’d say problem solved!  <comment295497> If you have a UPS connected via USB to your Mac, disconnect and reconnect the USB cable. I had a similar problem after updating from 10.11.3 to 10.11.4.