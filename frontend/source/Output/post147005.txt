Can bash be replaced entirely in OS X? <body> Because of CVE-2014-6271 and CVE-2014-7169 on OS X I was wondering: can bash be replaced entirely by another, non-affected shell (eg dash or others)?  <answer147007> codedash/code contains only a tiny subset of the commands found in codebash/code and even codesh/code (which itself is a sub-set of things in codebash/code). Replacing either with codedash/code will surely yield inoperable scripts on your system and possibly break your system more than it protects your system.  You can recompile bash to mitigate some (at the time this was written) of potential danger or wait for Apple to release and official fix.  <answer147008> Unfortunately, no... various shells have differing syntaxes making the scripts written for one shell possibly incompatible with another shell.    I haven't seen the DHCP based infection you're speaking of, can you provide a link in your question?  <answer147029>    some sites indicate one could be infected via a DHCP client.   This strongdoes not/strong apply to OS X. On Linux systems, a shell script is usually called after receiving a DHCP lease from the server. This is not the case on OS X.  Unless you're running a web server on your Mac which serves CGI scripts, you have little reason to worry.  <answer147031> First, you don't need to do this unless you are are offering web services to the public internet from your Mac. If you are not, wait until there is an official security update from Apple.  However, if you are offering web services, you might want to update.  h2Official Patch/h2  Apple has released an Official Bash Security Update Here  h2Checking whether you are vulnerable/h2  First confirm that you are using an outdated bash:  precode$ which bash /bin/bash $ /bin/bash --version GNU bash, version 3.2.51(1)-release (x86_64-apple-darwin13) Copyright (C) 2007 Free Software Foundation, Inc. /code/pre  The most current bash is 4.3.25  If you don't have Xcode installed, you'll need the Xcode command line tools, which can be installed by  precode$ xcode-select --install /code/pre  Or from the developer portal.  To install Brew (http://brew.sh):  precode$ ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" /code/pre  Then do:  precode$ brew doctor /code/pre  Follow any instructions if there are problems. Many common problems are addressed here.  Then update brew to the latest list of packages:  precode$ brew update /code/pre  To get the latest bash 4.3.25:  precode$ brew install bash /code/pre  This installs bash into code/usr/local/Cellar/bash/4.3.25/bin/bash/code  The old codebash/code and codesh/code still exists at code/bin/code, so after installing you'll rename the old executables to a new file.  precode$ sudo mv /bin/bash /bin/bash_old $ sudo mv /bin/sh /bin/sh_old /code/pre  If you are very paranoid, you can remove execute permissions on the codebash_old/code  precode$ sudo chmod a-x /bin/bash_old /bin/sh_old /code/pre  Then create a symbolic link to the new bash 4.3.25 that brew installed.  precode$ sudo ln -s /usr/local/Cellar/bash/4.3.25/bin/bash /bin/bash $ sudo ln -s /usr/local/Cellar/bash/4.3.25/bin/bash /bin/sh /code/pre  Reboot and it is complete.  A warning — this may break some existing shell scripts that might rely on bash 3.2 or the differences that the Mac codesh/code has over the linux codesh/code. There is a much more sophisticated answer to replacing bash and sh from sources in this post.  In most cases it is best to wait for official updates.  <answer147043> As @webmarc said, no. You can replace code/bin/bash/code with some other shell but you will certainly break some programs because bash has several differences in his syntax that made it incompatible. I couldn’t find a bash-compatible alternative shell. However I symlinked dash to code/bin/sh/code and found no issues so far.  Regarding the DHCP here there is a proof of concept attack. The article is about codedhcpcd/code (a Linux client). I’m not sure about Mac OS X. In the discussion on Hacker News they say OS X client doesn't use bash at all.  Another vector could be codesshd/code. But the attack require authentication. So, unless you are running some ssh service like a codegit/code server you should be safe.  <answer147214> Yes, if you mean as /bin/sh, but it could be problematic, but if you want to replace bash  as /bin/bash or remove bash entirely,  basically no, though it's not impossible --since, scripts are text files, you could edit every shell script, and then maintain the system yourself, by yourself, for the rest of time...   There is no drop-in-replacement for bash.   Not, that you replacing /bin/sh would easy, but there could be an end to it. If a script presumes your /bin/sh , is actually bash, and uses things unique to bash, then script that begins #!/bin/sh would now break.   I renamed my /bin/sh to /bin/sh.was.bash and then made sh a link to mksh , and rebooted was greeted with a the # prompt. I rebooted again with verbose flag, and found a few lines into /etc/rc  -- export -n, a bash thing,  the korn shell equivalent is typeset +x, I modified the rc script, and, and it booted up,  and  w/ everything good. The system I'm experimenting on is Tiger so there's a rc script, and I can expect no updates from Apple.  Modern OSX doesn't have a rc script,  BUT modern apps might go from intel linux , where /bin/sh is bash, to intel-mac, where /bin/sh is also bash, and a developer could just as easily add bashisms to launch daemons and launch agents, and if not right now, but later when they rush out an update (for their app), which will now will only break on your system.  So, perhaps I should say very problematic, because you should take it as a reason, NOT to do this.  In my defense,  I've been poking around with launch daemons, and the rc scripts, this week  and the week before,  playing with dynamic_pager options, turning off a few launch daemons (making them controllable by variables in hostconfig ), so for me, this I just an experiment just a little bit more radical, than I might have done today, anyway.     IF you want to do something, if think you might be more vulnerable than others, because of additional software, etc, you could look at each script that you're  concerned about, and change the the first line (the shhbang) to do something other than #!/bin/sh or #/bin/bash,  and be prepared to do edit the scripts, since they could have bash specific features.   BASH is really a korn-shell like shell,  more than a bourne-like shell like ash, or dash, so if want to keep edits trivial use a korn shell as  a replacement.  IN fact on tiger /bin/ksh is the "NEW Korn Shell", if this is still true,  I'd say go with that, then you need to install nothing, and leave /bin alone, which isn't a bad idea, just change the scripts to #!/bin/ksh,  remove bashisms for features, common to korn shell,  but you could luck out and there would be none.  There is a chance, that 'shhbang'  could be ignored, since it is if a shell script is invoked like "/bin/sh /etc/rc", then the first line is just a comment,  and ignored, but with this approach you can only break the things you change, as you change them.   <comment173318> possible duplicate of [How do I recompile Bash to avoid the remote exploit CVE-2014-6271 and CVE-2014-7169?](http://apple.stackexchange.com/questions/146849/how-do-i-recompile-bash-to-avoid-the-remote-exploit-cve-2014-6271-and-cve-2014-7) <comment173320> “In most cases it is best to wait for official updates.” Unless someone is running a server, none of this is really necessary. Many folks will be breaking their OS X installs in the next few days as they panic to neuter a threat they barely understand. <comment173321> @JakeGould — I agree. <comment173333> “In the discussion on Hacker News they say OS X client doesn't use bash at all.” Where is this discussion? You should provide a link. <comment173364> Please ask the DHCP exploit part of this question as a *new* question. Thanks. <comment173372> @JakeGould The link is already in the answer. Read the comments. <comment173410> I would copy the files instead of linking -- if for some reasons, you remove the brew installation, your system has a problem.... <comment173413> I think http://apple.stackexchange.com/a/146851/83347 is the better answer, because it uses sources form apple....