Possible to tag a folder via terminal? <body> Is it possible to tag a file or folder in mavericks via terminal command?  <answer110709> You can use xattr. This copies the tags from file1 to file2:  codexattr -wx com.apple.metadata:_kMDItemUserTags "$(xattr -px com.apple.metadata:_kMDItemUserTags file1)" file2;xattr -wx com.apple.FinderInfo "$(xattr -px com.apple.FinderInfo file1)" file2/code  The tags are stored in a property list as a single array of strings:  precode$ xattr -p com.apple.metadata:_kMDItemUserTags file3|xxd -r -p|plutil -convert xml1 - -o - &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;array&gt;     &lt;string&gt;Red 6&lt;/string&gt;     &lt;string&gt;new tag&lt;/string&gt;     &lt;string&gt;Orange 7&lt;/string&gt;     &lt;string&gt;Yellow 5&lt;/string&gt;     &lt;string&gt;Green 2&lt;/string&gt;     &lt;string&gt;Blue 4&lt;/string&gt;     &lt;string&gt;Purple 3&lt;/string&gt;     &lt;string&gt;Gray 1&lt;/string&gt; &lt;/array&gt; &lt;/plist&gt; /code/pre  If the kColor flag in com.apple.FinderInfo is unset, Finder doesn't show the circles for colors. If the kColor flag is set to orange and the file has the red tag, Finder shows both red and orange circles. You can set the kColor flag with AppleScript:  codexattr -w com.apple.metadata:_kMDItemUserTags '("Red\n6","new tag")' ~/desktop/file4;osascript -e 'on run {a}' -e 'tell app "Finder" to set label index of (POSIX file a as alias) to item 1 of {2, 1, 3, 6, 4, 5, 7}' -e end ~/desktop/file4/code  codexattr -p com.apple.FinderInfo file|head -n1|cut -c28-29/code prints the value of the bits used for the kColor flag. Red is C, orange is E, yellow is A, green is 4, blue is 8, magenta is 6, and gray is 2. The flag that would add 1 to the values is not used in OS X.  Edit: you can also use tag:  precodetag -l file # list tag -a tag1 file # add tag -s red,blue file # set tag -r \* file # remove all tags tag -f green # find all files with the green tag tag -f \* # find all files with tags tag -m red * # match (print files in * that have the red tag) /code/pre  tag can be installed with codebrew install tag/code or codesudo port install tag/code.  precode$ tag -h tag - A tool for manipulating and querying file tags.   usage:     tag -a | --add &lt;tags&gt; &lt;file&gt;...     Add tags to file     tag -r | --remove &lt;tags&gt; &lt;file&gt;...  Remove tags from file     tag -s | --set &lt;tags&gt; &lt;file&gt;...     Set tags on file     tag -m | --match &lt;tags&gt; &lt;file&gt;...   Display files with matching tags     tag -l | --list &lt;file&gt;...           List the tags on file     tag -f | --find &lt;tags&gt;              Find all files with tags   &lt;tags&gt; is a comma-separated list of tag names; use * to match/find any tag.   additional options:         -v | --version      Display version         -h | --help         Display this help         -n | --name         Turn on filename display in output (default)         -N | --no-name      Turn off filename display in output (list)         -t | --tags         Turn on tags display in output (find, match)         -T | --no-tags      Turn off tags display in output (list)         -g | --garrulous    Display tags each on own line (list, find, match)         -G | --no-garrulous Display tags comma-separated after filename (default)         -H | --home         Find tagged files only in user home directory         -L | --local        Find tagged files only in home + local filesystems (default)         -R | --network      Find tagged files in home + local + network filesystems         -0 | --nul          Terminate lines with NUL (\0) for use with xargs -0 /code/pre  <answer119370> It's possible to manipulate tags via pure bash commands. There's no need for a 3rd party "tag" util.  This command lists all tags of a file ($src):  precodexattr -px com.apple.metadata:_kMDItemUserTags "$src" | \     xxd -r -p - - | plutil -convert json -o - - | sed 's/[][]//g' | tr ',' '\n' /code/pre  And here is how you can add a tag ($newtag) to a file ($src):  precodexattr -wx com.apple.metadata:_kMDItemUserTags \     "$(xattr -px com.apple.metadata:_kMDItemUserTags "$src" | \     xxd -r -p - - | plutil -convert json -o - - | sed 's/[][]//g' | tr ',' '\n' | \     (cat -; echo \"$newtag\") | sort -u | grep . | tr '\n' ',' | sed 's/,$//' | \     sed 's/\(.*\)/[\1]/' | plutil -convert binary1 -o - - | xxd -p - -)" "$src" /code/pre  Here is a small shell script which exports a "tags" function. Usage:  precodetags &lt;file&gt; Lists all tags of a file  tags -add &lt;tag&gt; &lt;file&gt; Adds tag to a file /code/pre  The function could be easily extend to support removing as well.  precodetags() {     # tags system explained: http://arstechnica.com/apple/2013/10/os-x-10-9/9/     local src=$1     local action="get"      if [[ $src == "-add" ]]; then         src=$3         local newtag=$2         local action="add"     fi      # hex -&gt; bin -&gt; json -&gt; lines     local hexToLines="xxd -r -p - - | plutil -convert json -o - - | sed 's/[][]//g' | tr ',' '\n'"      # lines -&gt; json -&gt; bin -&gt; hex     local linesToHex="tr '\n' ',' | echo [\$(sed 's/,$//')] | plutil -convert binary1 -o - - | xxd -p - -"      local gettags="xattr -px com.apple.metadata:_kMDItemUserTags \"$src\" 2&gt; /dev/null | $hexToLines | sed 's/.*Property List error.*//'"      if [[ $action == "get" ]]; then         sh -c "$gettags"     else         local add="(cat -; echo \\\"$newtag\\\") | sort -u"         local write="xattr -wx com.apple.metadata:_kMDItemUserTags \"\$($gettags | $add | grep . | $linesToHex)\" \"$src\""          sh -c "$write"     fi } export -f tags /code/pre  <comment130337> Yes it is. The tags are stored / read using [xattr](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/xattr.1.html) and stored in com.apple.metadata:_kMDItemUserTags. Do you want to edit in a more specific question (perhaps use python to easily set a tag named "foo" to a specific file) or are you just curious if it's technically possible? <comment130344> related question [here](http://apple.stackexchange.com/questions/106654/how-can-i-apply-tags-in-mavericks-recursively) <comment130617> @bmike thanks, yeah I want to edit programmatically :P <comment139223> Yikes, those are long lines!  I suggested a wrapping edit.  I think they might be better done as small shell scripts, though. <comment236140> In Stack Overflow, with an answer from me: [How can I add OS X “tags” to files programmatically?](http://stackoverflow.com/q/19720376/38108) (2013-11-01) <comment253765> Your `xattr -wx` command fails when the file doesn't already have any tags on it. How can I avoid this? <comment291712> Seems to have some issue in the latest OS X (El Cap 10.11.4).  Running the `xattr -px …` command you've given to show the tags on one of my folders gives the following output: `"language:Objective-C\n2"` (newline) `"platform:iOS\n4"`.  _Honestly, if you're going to wrap up your moderately-complex shell code into a bash function, you're sort of just duplicating the effort of [tag](https://github.com/jdberry/tag/), which has the advantage of being community well-maintained._