Remove dock notification badge for apps not in notification center <body> For nuisance apps that set a badge notification icon, but which are not in the Settings Notifications center, is there a way to block the badge icon?  br / Spotify, for example, creates a notification for every insignificant event, with no way of blocking it in app.  Personally I don't understand how apps are allowed to show a badge icon without being in the Notifications center in the first place.  br / Example:  img src="https://i.stack.imgur.com/PMX9d.png" alt="enter image description here"  <answer194316> I have a solution that I was able to reverse engineer. I've tested it on my machine, running Yosemite 10.10.4 (14E46). If you can find the bundle ID (in the Info.plist file for the app bundle), you can use this script to force the app to appear in the notifications preferences pane.  precode# "Usernoted" seems to be the "user notifications daemon", so get it's PID. pid=$(ps aux | grep -i [u]sernoted | awk '{print $2}')  # Find the sqlite3 database that this program has open. It's in a "private" folder (app sandboxing). db="$(lsof -p $pid | grep com.apple.notificationcenter/db/db\$ | awk '{print $9}')"  # I got the bundleid from Spotify.app/Contents/Info.plist bundleid="com.spotify.client"  # I use 0 as the flags because you can change all the settings in System Preferences # 5 seems to be the default for show_count # Grab the next-highest sort order sql="INSERT INTO app_info (bundleid, flags, show_count, sort_order) VALUES ( '$bundleid', 0, 5, (SELECT MAX(sort_order) + 1 FROM app_info) );"  # Run the command sqlite3 "$db" "$sql"  # Restart usernoted to make the changes take effect killall usernoted /code/pre  At this point you can open System Preferences - Notifications, and you will find the app that you just added at the bottom of the list. You can enable / disable badging the icon from this page.  <answer202773> For those people who are mac noobs like me, to create and run the above script: 1. Open TextEdit, br2. Put the editor into Plain Text mode - Format  Make Plain Text. br(If you skip this step, it will not let you save it as a script.) br3. Paste the above script into the TextEdit window br4. Save the file as a script - File  Save As in TextEdit. Enter your filename followed by the “.sh” file extension, and then Save the document to the Desktop. br5. Open the Terminal application br6. Navigate to the desktop in Terminal - Type in  (then press enter): precd Desktop/pre 7. Set the permissions for the file you just created so you can run it - Type in Terminal (then press en): presudo chmod 700 file.sh/pre (Replace "file.sh" with the name of your script.) br8. Run the file - Type in Terminal: pre./file.sh/pre (Again, replace "file.sh" with the name of your script.) br9. Open Notifications in System Preferences.  You should be able to find the Spotify App and turn off the notifications.  Source for creating a script:  Terminal 101: Automate the Terminal with Bash Scripts    <comment180313> Apps badging their icons, as in your screenshot, long preceded the inclusion of Notification Center in OS X. They do not need to use notification functionality to do so. <comment207624> related: http://apple.stackexchange.com/questions/77331/prevent-application-from-displaying-badge-icon-in-dock <comment207637> Also, this is the best fix I've found yet: hide running app status while running (which hides the badge also):  http://apple.stackexchange.com/questions/68915/hide-a-running-app-from-dock <comment232500> Very clever solution, thank you Ryan! (Although I've now 'fixed' it by dropping Spotify and switching to Apple Music.) <comment234495> FINALLY, a solution for this horrible niggle. Thank you * 1000. <comment238279> You're the man. <comment252874> Brilliant! Thanks. <comment290470> I just want to confirm, that this solution still works! <comment294493> Good tutorial on making an executable shell script, but for the upvoted solution you don't need a bash script. Just open terminal and paste in the commands. Skip lines that begin with a #, because that is a comment in bash. <comment303376> Cool trick! For me it was only working with `pid=$(ps -A | grep -m1 usernoted | awk '{print $1}')` as the original command was showing two PID's instead of one.