Safari 6 rendering issues/artifacts (on Mountain Lion) <body> strongFinal update/strong I just received an email from Apple confirming this bug has been fixed in OS X Mountain Lion 10.8.3  hr  I've been having rendering issues with Safari 6 on different systems all running Mountain Lion, and I'm unable to find a solution. I've attached some screenshots to describe the issue.  strongUpdate/strong Further investigation suggests that this might be a problem with 2012 Mac models only, specifically the ones with HD4000 graphics.  strongUpdate/strong It appears the artifacts don't always show up immediately, requiring some reloads and/or closing/reopening tabs before they show up.  strongUpdate/strong The issue is confirmed as strongnot/strong a WebKit bug, and has been filed as a bug at Apple (problem 12750455 by Simon Fraser).  h3Twitter Bootstrap website on Safari/h3  img src="https://i.stack.imgur.com/UeYvS.png" alt="Twitter Bootstrap website on Safari"  h3Twitter Bootstrap website on Firefox/h3  img src="https://i.stack.imgur.com/4AtjA.png" alt="Twitter Bootstrap website on Firefox"  h3Teak's jsfiddle on Safari/h3  img src="https://i.stack.imgur.com/T0kL6.png" alt="Teak&#39;s jsfiddle on Safari"  h3Teak's jsfiddle on Firefox/h3  img src="https://i.stack.imgur.com/kuUf9.png" alt="Teak&#39;s jsfiddle on Firefox"  Links to the websites shown on the screenshots:  ul liTwitter Bootstrap/li liTeak's jsfiddle/li /ul  <answer71558> Here are things I would do if you can't provide a link to something that is live on the internet for others to duplicate / suss out what's happening.  ol liTry a nightly webkit build to see if it's a bug that's fixed, but not shipping. http://nightly.webkit.org/li liRemove all extensions from Safari to be sure it's not caused by one. /li /ol  <answer72510> I can confirm this is a bug with the Intel Graphics 4000 GPU. I see the graphics artifacts on my 13" Retina MacBook Pro and not on my older MBP which has Mt. Lion and an Nvidia Geforce GPU.  I have first hand experience with this issue while trying to develop css buttons for websites...  I believe the artifacts can be reproduced by using the css3 codeborder-radius/code in conjunction with a codebox-shadow/code. Though obviously it happens in many other circumstances as well. (Which I can confirm)  Here is a link to a bug report on webkit website (though I'm not sure it belongs there):  https://bugs.webkit.org/show_bug.cgi?id=103087  And the SO question it came from:  https://stackoverflow.com/questions/13505314/artifacts-on-css-rendering-box-shadow-on-safari-6-0-2-on-mountain-lion  <answer77584> I can also confirm this bug on retina 15" macbook (osx 10.8.2, safari 6.0.2)  My macbook also has Intel HD4000, but also Nvidia GT 650M for the external display.   To eliminate all other possibilities but the graphics card (driver) I used a thunderbolt to dvi adapter to connect an external display on the Nvidia card.   Result: No weird lines and freaky jquery effects!  conclusion: HD4000 (driver) problem.  <answer78902> This is not Intel HD 4000 bug. I can see this bug only from Safari on Intel HD 4000. If i open page with (Opera, Chrome, Firefox) - i can not reproduce this bug  <answer80673> A quick fix to this problem is using a transform on the object with the border-radius or other damage causing property. That way you're forcing a redraw with the graphics card, and that removes the problem.  Apply the following property: code-webkit-transform: translate3d(0,0,0);/code - And you should be fine.  <answer85542> It was a bug in Safari, resolved in OSX Update 10.8.3!  <comment82754> I tried to edit the text a bit, but before I try to suggest if another site would be better and migrate it, can you clarify what you are looking for primarily? Do you want this to be about JQuery needing a patch or about WebKit/Safari? We are more focused on users here and although some are programmers and web developers, we are not the best place for code level and bug/regression level knowledge. We can point you towards how to file a bug with Apple, but generally don't have detailed html/css/js Q&A here. <comment82756> I am perfectly fine...http://imgur.com/a/vICCs I'm running Safari 6.0.1 on OS X Lion 10.7.5 <comment83096> @bmike My guess is this is a Mountain Lion problem, and not an html/css/js problem. <comment83098> I just asked a colleague who also runs Mountain Lion: no problems there. So the source of the problem remains a mystery to me. <comment83099> Maybe it's something with the HD4000 graphics card. <comment83126> @René OK - it's fine here - just wanted to be sure you were aware of your options. Can you point to anywhere on the internet where others could see and replicate your issue? It looks like DaviesGeek tried downloading jQuery and can't replicate your glitches. <comment83691> I've added links to the websites shown on the screenshots. <comment83692> I tried both your suggestions but unfortunately they didn't work. <comment84083> Interesting: I can confirm the lines before the words problem on the jQuery page. But I can not confirm the problems on the bootstrap page. Got a MBA 2012 with a HD4000 GFX. <comment84457> Thanks for sharing this. I'm not convinced it's a webkit issue though, since this problem is specific to OS X Mountain Lion and only with HD4000 graphics. <comment92808> @René According to http://blackpixel.com/blog/2012/02/radar-or-gtfo.html it's a good idea to raise duplicate bugs with Apple, so it's probably a good idea if you report it too! <comment92813> @OllyHodgson thanks, I'll file a duplicate bug right away! <comment92822> I'm seeing weird artifacts in the web app I'm developing on RETINA MBP Pro in Safari 6 as well. Wonder if it's a Safari rendering problem on RETINA. <comment94172> Has a not insignificant performance cost if you apply it to a div containing lots of stuff, but does workaround the bug. <comment94704> Performance cost? I'd like to see some data on this. Any added cost should be handled by the GPU. <comment97781> A null transform creates a backing texture for that element on the GPU. This makes moving the element cheap as it's a composite rather than a paint, but it makes changes to the element more expensive (eg text, dimension, style changes) as it needs to upload a new texture to the GPU as well as repainting the element. You also take up GPU memory, which can be an issue on phones. <comment97898> Thank you for that. Any good recommendations for information on this? <comment98562> Adding the relevant quote of the update notes, for instance, would highly increase the value of your answer. <comment98565> It wasn't actually noted in the update notes, but it did solve it. Tried it myself before and after update. <comment98618> Looks like it has been fixed by Apple with the release of Mountain Lion 10.8.3 + Safari 6.0.3 this week.