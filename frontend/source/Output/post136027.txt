Get full path of script in PATH environment variable <body> I was wondering if there is a built-in command in Bash (or even something OSX-specific) that would display the fully resolved path of a script that is in the current codePATH/code environment variable.  For example, my codePATH/code currently looks like this:  precode&gt;: echo $PATH | tr ":" "\n" /usr/bin /bin /usr/sbin /sbin /usr/local/bin /opt/X11/bin /Users/Josh/Dropbox/Scripts/Bash /Users/Josh/Dropbox/Tools/WinRAR/OSX /code/pre  And there's a script in Dropbox called codeget-azurelogs.sh/code. That path is in my codePATH/code variable for convenience, but if I wanted to display the complete path to that script, assuming I wasn't sure where it was, is there an simple one-liner way to display the fully resolved path instead of testing it at each of the directories above?  <answer136028> You can use codewhich/code.  From the man page:     The which utility takes a list of command names and searches the path for each executable file that would be run had these commands actually been invoked   <answer136029> precodewhich -a [nameofexecutable] /code/pre  IE:  precodeMacbook-Pro:~ njboot$ which -a chmod  /bin/chmod Macbook-Pro:~ njboot$ which -a nusers /Users/njboot/bin/nusers /code/pre  <answer136031> A good alternative to codewhich/code is the builtin codetype/code. The advantage being that codetype/code is also able to handle bash aliases and functions.  <comment161290> Boom. I knew there had to be something. Will accept the answer as soon as the mandatory waiting period is up. Thanks! <comment161291> whoops, didn't see your answer initially. cheers! <comment161314> There's also `type -P` which restricts itself to executables on disk only - no aliases are shown.