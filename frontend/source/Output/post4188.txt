OS X Package Management <body> I'd like to know if anyone out there has done a comprehensive comparison of the various package manager solutions available for OS X.  More specifically, I'm looking for:  ul liA list of all the major package managers (ie. MacPorts, Fink, etc)/li liA pros and cons list or comparison matrix (either self-written or a web link to one)/li liInformation about any caveats for particular systems/li liInformation about possible incompatibilities or reasons for not having multiple package managers installed simultaneously/li liSubjective reasons why you think one is better than another/li /ul  h3Update Nov 29, 2010/h3  Chiggsy gave a great answer but I would really love some more input on this.  I've been using MacPorts recently and it seems to be pretty well done.  I like that its command line options work in a similar fashion to subversion and that it has an interactive mode.  <answer4190> Good question:    For me, macports is the one.    Why?  I'll bypass a lot of stuff and cut right to the chase:  The party is over with regard to malware, trojans and the like.  Paging through the last security update, there were some vulns that were from the summer although the cure only came last week.  Redownload the developer tools, recompile your macports install, and you have a functioning toolchain that is not dependent on Cupertino, since the Dev Tools from your install disk will serve.  Who uses an old version of Openssh?  Now it does take some care and feeding, like running port selfupdate every day, and the big tip is to check   precodeport variants  /code/pre  so if you have a python dependency, you can run   precodeport install python +no_tkinter  /code/pre  and avoid the agonizingly long Tk install, which would be most unwelcome on a Quartz architecture anyway.  With this, you can freely run software update and not have your stuff break, since it does not depend on anything but the compiler from apple.  I've used it for a long time, and although I tried some others, namely Homebrew, I think that depending on apples versions means inheriting their security flaws.  Remember that PDF hole on the iphone?  I deploy on Linux anyway, so for me, macports tree is the 'office' and my budding MacOS dev career is 'home'  Just an opinion, but the separate tree for all the code is a big plus for me.  <answer4472> Homebrew  ul liEasy to use/li liAlways up-to-date/li liEasy to extend (Github-based)/li /ul  <answer115220> The dark horse package manager for OS X is of course:  ul lidarwinup/li /ul  It's seldom used and sparsely documented, but it does ship from Apple and managed packages on OS X/Darwin.  <comment4006> I think it's a good question, and not subjective. <comment4023> @chiggsy: Did you try others with macports installed at the same time?  If so, did it cause any problems or did they co-exist peacefully? <comment4027> They can exist side by side.  The main issue is although they all use directories in parallel, $PATH is in series, so one will be preferentially selected.  You can always use the homebrew.profile, fink.profile, macports.profile trick, sourcing different files, but that would be tricky to keep track of.. which flags does openssl have per version, for example. <comment4029> I tried fink and macports together for a while, but found macports suited me better.  I like the newest possible versions I can get with a support structure.  If you just want the odd thing, Homebrew is better, I think, assuming you only need that odd thing, and that osX wont blow it away with a software update, or break a library in /usr/lib <comment4048> Homebrew won't coexist with fink or macports as homebrew installs in /usr/local. Fink and macports compiles will find things in /usr/local and so not compile as expected <comment4071> @chiggsy,@Mark: all good info, thanks! <comment4305> +1 for Homebrew. brew formulas is very easy to modify (ruby script). also root privilege ain't required for installing packages. Maybe the only problem is that you should do some manual configuration (adding a few lines in your .bash_profile. it's quite easy) and there are not much formulas available for brew comparing to mac ports (you can use them both). <comment7632> I'm a Fink admin, I can verify that Fink and MacPorts can coexist without any problem, but homebrew will cause trouble unless it's installed in a non-standard location (ie: not /usr/local). I'd recommend that users install both Fink and MacPorts, try them out for awhile, and then decide which they prefer!