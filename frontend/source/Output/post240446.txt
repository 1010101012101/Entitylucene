How to enable/disable grayscale mode in Accessibility via Terminal/App? <body> I'm wondering what would be the process of enabling/disabling the grayscale mode in the Accessibility panel in System Preferences?  I would like to run a simple script, either by clicking on an app in the Dock or by a Terminal command, and have it switch from grayscale to regular mode.  Any ideas?  <answer240449> The .plist files which are modified by the Accessibility panel are found in code~/Library/Preferences/code and they are codecom.apple.CoreGraphics/code and codecom.apple.universalaccess/code.  No changes are made to any files in code~/Library/Preferences/ByHost/code  Execute the commands:  codedefaults write com.apple.universalaccess grayscale -bool yes/code  codedefaults write com.apple.CoreGraphics DisplayUseForcedGray -bool yes/code  Then force the color change to greyscale by unloading and reloading the codeuniversalaccessd/code process:  codelaunchctl unload /System/Library/LaunchAgents/com.apple.universalaccessd.plist/code   codelaunchctl load /System/Library/LaunchAgents/com.apple.universalaccessd.plist/code  To switch back to color execute the same commands with the codedefaults/code parameters set to codeno/code.  Unlike the Accessibility panel, which changes the color instantaneously, this method can take a few seconds to make the transition.  <answer240453> If you want to create an AppleScript application to put in the Dock you can use the following emcode/em in OS X Yosemite (and latter, I believe).  precodetell application "System Preferences"     activate     reveal anchor "Seeing_Display" of pane id "com.apple.preference.universalaccess" end tell tell application "System Events" to tell process "System Preferences"     click the checkbox "Use grayscale" of window "Accessibility" end tell tell application "System Preferences"     quit end tell /code/pre  In Script Editor, save it as Toggle Grayscale changing the File Format: to: Application  You can give the App a different icon via copy and paste into the icon of the App's Get Info sheet and then drag and drop the App bundle onto the Dock.  You'll have to give permission under Accessibility on the Privacy tab of Security &amp; Privacy in System Preferences in order to run it successfully.  hr  If you'd like to use a embash script/em using the emcode/em provided by IconDaemon, the following emcode/em will toggle between using color and grayscale based on how it's currently set.  precode#!/bin/bash  setGrayscale () {      defaults write com.apple.universalaccess grayscale -bool $1     defaults write com.apple.CoreGraphics DisplayUseForcedGray -bool $1     launchctl unload /System/Library/LaunchAgents/com.apple.universalaccessd.plist     launchctl load /System/Library/LaunchAgents/com.apple.universalaccessd.plist      case "$1" in         "NO")             echo "  Changing Display to use color. This will take a moment..."         ;;         "YES")             echo "  Changing Display to use grayscale. This will take a moment..."         ;;     esac  }  _bool="$(defaults read com.apple.universalaccess grayscale 2&gt;/dev/null)"  case "$_bool" in     "0")         setGrayscale "YES"     ;;     "1")         setGrayscale "NO"     ;;     *)         setGrayscale "YES"     ;; esac /code/pre  hr  img src="https://i.stack.imgur.com/AcXP3.png" alt="enter image description here"  <comment295541> Testing on a 2.8 GHz Intel Core i7 and wrapped in a bash script, it took 10 seconds after the script executed for the grayscale to show.  So I'd have to say "a few seconds" is misleading, but +1 anyway. <comment295542> Perhaps there's a different launchctl command that makes it execute quicker? On my 3.4GHz Intel Core i7 it took no longer than 5-6 seconds, tops. I just timed it. <comment295547> I was providing the terminal commands the OP and others could use to create a shell script on their own. I prefer to use perl to create a script with these commands and wrap it in [Platypus](http://sveinbjorn.org/platypus). Give a person a fish - they'll eat for one day. Teach them _how_ to fish, and they'll never be hungry. <comment344271> It worked after I added `delay 1` before the click checkbox. Thanks!