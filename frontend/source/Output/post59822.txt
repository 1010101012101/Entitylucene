How to automatically watch for file changes and perform a custom action inside shell? <body> For example, I'd like to automatically run YUI Compressor whenever I edit a JavaScript source file to output a compressed version.  Ideally the process does not run in the background but in a dedicated shell, so I can easily terminate the process at the end of the day.  What would be the cleanest and most flexible way to watch specific files and/or directories for file changes and perform a custom action inside a shell?  <answer59841> The $25 Codekit does watch folders and files for changes and does compress/minify/combine JavaScript and CSS files.   I know this is only a partial answer for your question, as it is not a generic watcher, but it does fit your example:     whenever I edit a JavaScript source file to output a compressed   version   <answer59884> Watching a file for changes can be accomplished with a LaunchAgent. For example create a plist file at code~/Library/LaunchAgents/watch.and.lol.plist/code and fill it with this content:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;watch.and.lol&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Users/Shared/changeAction.sh&lt;/string&gt;         &lt;string&gt;-force&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;WatchPaths&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/private/var/radmind/client/.radmindOnDemand&lt;/string&gt;     &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Now make sure that the file code/private/var/radmind/client/.radmindOnDemand/code does exist. Then load the launchagent with command code$ launchctl load ~/Library/LaunchAgents/watch.and.lol.plist/code. As soon as the file code~/Library/LaunchAgents/watch.and.lol.plist/code does no longer exist, this launchagent job will be unloaded.  Now write some shell script that watches your file for changes, like:  precodechsum1=""  while [[ true ]] do     chsum2=`md5 /private/var/radmind/client/.radmindOnDemand`     if [[ $chsum1 != $chsum2 ]] ; then                    compile         chsum1=`md5 /private/var/radmind/client/.radmindOnDemand`     fi     sleep 2 done /code/pre  Note: this shell script needs some extra work to be done to make it efficient. Now it polls every 2 seconds (codesleep 2/code). Better is to exit the script after the codecompile/code command has executed. That requires the storage of the output of the md5 hash command that can survive the exit and relauch of this shell script.  <comment68877> Thanks, it looks like a handy app, but it's not exactly the solution I was looking for. I'd really like something generic that can watch files and perform any custom command on changes. <comment69382> Thank you. I don't really fancy writing a launch agent everytime though, I'm looking for a solution flexible enough to add watchers and specify the file to watch and the command to run as an argument on the fly.