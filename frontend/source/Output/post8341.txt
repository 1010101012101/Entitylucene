What are the differences between /usr/bin/login and /usr/bin/bash? <body> Terminal.app has a setting to select with shell it uses, and the default setting is "Default login shell (/usr/bin/login)".br What are the differences between /usr/bin/login and /usr/bin/bash?  <answer8342> code/usr/bin/login/code is a program used to login to the system and is not something you invoke manually under normal circumstances.  Have a look at the info/man pages by issuing one of the following commands:  codeinfo login/code or codeman login/code    code/usr/bin/bash/code is a shell and its job is to interpret input from the user and invoke programs.  You can also see more info on bash by using the commands below:    codeinfo bash/code or codeman bash/code  <answer8458> Griffo is correct. Now in your scenario, the difference boils down to the following:  ol liif you pick code/bin/login/code, then this program will check in the user database what your default shell is and run that shell as a login shell, thereby invoking the rc files that are run only when the shell is run as a login shell (in case of bash those are code/etc/profile/code, code~/.bash_profile/code, code~/.bash_login and /code, and code~/.profile/code./li liif you pick code/bin/bash/code, that shell will be executed as a login shell, independently of what shell is set in the user database. This can come in useful when the shell in the user database does not work properly, or you want to be able to use different shells./li /ol  As per the comment by Chris Page, the shell is run as a login shell in both cases.  If you have not changed your login shell from the default, which is code/bin/bash/code, and you have not changed the rc files of this shell, then the difference will not be noticeable.  <comment49124> As far as I am aware #2 is incorrect: Terminal always creates login shells. In fact, if you set it to a command like `/usr/bin/emacs` it will be invoked as a login process. (The process name is prefixed with `-`.) I just tried this with both the Leopard and Lion versions of Terminal. <comment49128> In addition to the answers to this question, note that regardless of the preference setting, Terminal always runs `/usr/bin/login` to create a terminal session. The preference just controls whether it tells `login` to use your default shell or the custom command. If you look at the Inspector window for an active terminal youâ€™ll see the Running Processes list always begins with `login` followed by either the default shell or the custom command.