How to disable Adobe Core Sync app on OS X from being launched automatically? <body> I have noticed a lot of Adobe processes are running in the background at start up on an OS X 10.11.4 (15E65) machine with Adobe Creative Cloud (CC) installed.  To get rid of this, I removed everything with code"*adobe*"/code in the filename from the directories used by codelaunchd/code, which are: code~/Library/LaunchAgents/code, code/Library/LaunchAgents/code, code/Library/LaunchDaemons/code, code/System/Library/LaunchAgents/code, code/System/Library/LaunchDaemons/code.  It's not a bad idea to browse these directories manually just to get aware of what is - or could be configured to be - launched automatically on your machine.  However, using this approach I got rid of all Adobe processes but one with the process name codeCore Sync Helper/code. The process' UID is me, not root.  Using the OS X activity monitor to get more information about this process it tells us that its parent process is codelaunchd/code. The process' path is:   code"/Applications/Utilities/Adobe Creative Cloud/CoreSync/Core Sync.app/Contents/PlugIns/ACCFinderSync.appex/Contents/MacOS/ACCFinderSync"/code  strongHow does Adobe get this process to be launched automatically?/strong  strongAnd how to stop it from being launched automatically?/strong  strongUpdate:/strong  According to YoshiBotX's answer, I used codelaunchctl list/code as well as the App launchControl to find the service that launches the codeCore Sync Helper/code. To do so, I search for a service with codeadobe/code, codeaccf/code or codecore*sync/code in its name. Unfortunately, there is no such service with an obvious name. All services on the system are by codecom.apple..../code or from a third-party App that hasn't any relation to Adobe.  Also, codelaunchctl list/code lists the PID of each Label. But the PID of the running codeACCFinderSync/code process is not listed there at all. However, as mentioned before, its parent process is still codelaunchd/code so I wonder how this can be.  strongUpdate 2:/strong  Using launchctl I was able to gather more information about the service using its PID (emomitted lines marked as code.../code/em):  precodemacy:~ jens$ sudo launchctl procinfo 352 ... com.adobe.accmac.ACCFinderSync = { ... com.adobe.accmac.ACCFinderSync.apple-extension-service ... com.adobe.accmac.explinder ... ACCFinderSync ... /code/pre  But these aren't service which I can remove using launchctl.  strongUpdate 3:/strong  Based on emchiggsy/em's answer I was able to find more traces of the service (emomitted lines marked as code.../code/em):  precode$ sudo launchctl print gui     com.apple.xpc.launchd.user.domain.501.100008.Aqua = {     ...         unmanaged processes = {     ...             com.apple.xpc.launchd.unmanaged.ACCFinderSync.352 = {                 active count = 5                 dynamic endpoints = {                     "ACCFinderInnerExtensionHost2" = {                         port = 0x59a8f                         active = 1                         managed = 0                         reset = 0                         hide = 0     ...         externally-hosted endpoints = {              0x59a8f    U   A   ACCFinderInnerExtensionHost2     ...  $ sudo launchctl print user     com.apple.xpc.launchd.domain.user.501 = {     ...         endpoints = {     ...              0x59a8f    U   A   ACCFinderInnerExtensionHost2     ...  $ sudo launchctl print system     com.apple.xpc.launchd.domain.system = {     ...         subdomains = {     ...             com.apple.xpc.launchd.domain.pid.ACCFinderSync.352     ... /code/pre  But that still did not help me to disable it.  strongUpdate 4:/strong  kirb nailed it!  <answer237202> Another guess would be to check in code/Library/StartupItems/code.    But codelaunchctl/code does not require your strongservice.plist/strong to be located in one of those directories.br In fact, you do not even need to have a file (as seen in the launchctl submit).br So as long as you register it with codelaunchctl load|submit/code, it will be kept running/starting.  I think your best way is to emdisable the tool with launchctl directly/em or by using an Application like LaunchControl.  <answer237399> codelaunchctl/code  has changed for the better in 10.11.4  Type the command without arguments to get the help. You'll see new domains to search and new commands.   precodelaunchctl print system     #prints the system domain (root)  launchctl print system/com.system.service     #prints details about a service in roots domain. /code/pre  For your processes: if it's not in the system domain it's probably in your user:  precodelaunchctl print user/(your uid)/ launchctl print user/(your uid)/com.user.agent /code/pre  However, since you'll be logged into the gui:  precodelaunchctl print gui/(your uid)/ launchctl print gui/(your uid)/org.adobe.NSAmonitor # or whatever they call what you are looking for /code/pre  Gui domain for things that have a UI/Agents  User domain for daemons for you.   System domain for system daemons.  There are a couple more but I find user and gui are pretty good.   The trick with later versions of OSX is to check the man page and then run the tool help. If it's running, you can find it with launchctl.  precodeman launchctl launchctl -h /code/pre  Good luck.   <answer237585> This is a Finder Sync extension.     In OS X, the Finder Sync extension point lets you cleanly and safely modify the Finder’s user interface to express file synchronization status and control. Unlike most extension points, Finder Sync does not add features to a host app. Instead, it lets you modify the behavior of the Finder itself.   Extensions are parts of an app that are able to integrate with certain core components of the OS. Finder Sync extensions in particular enable tighter integration with Finder by way of sync status badges, and allowing buttons to be added to the toolbar, sidebar, and right click menus.  OS X keeps a database of all known apps on your computer, and this also includes any extensions (code.appex/code bundles). When Finder launches, it queries this database for Finder Sync extensions and launches them. For security reasons, each extension lives in its own process.  Fortunately, you can disable this easily from the Extensions preferences pane (grey puzzle piece icon) – just untick Finder under the app name in question.  img src="https://i.stack.imgur.com/UDUaR.png" alt="Extensions preferences"  <answer264665> The problem is that over the last years Apple has introduced other ways to auto-start items than having plists in specific folders like it works with launch agents and daemons. xpc services, smloginitems are not located in these places but are registered in the launchctl database (can be seen by codelaunchctl list/code) but this specific adobe plugin obviously gets loaded at start but is NOT listed by launchctl at all. you can see some info by using codelaunchchtl print user/501/code but not by codelaunchctl list/code. so what exactly is ACCFinderSync and why does it not show up? the hole launch system is kind of splintered up atm and it is very complicated to observe all forms of startup items. the big question here is: what are application extensions (appex) and how can they get detected (and disabled) at command line level if not by launchctl.   <comment290672> Good hint! Unluckily, the process doesn't seem to have any corresponding launchctl service. I updated my question with details about this. Did I got you right? <comment290737> have you tried looking at 'sudo launchctl list' ? <comment290739> @JensWirth , good so far. have you tried looking at 'sudo launchctl list' ? I get a few more services that way? <comment290803> @YoshiBotX yes, but no further findings :/ <comment291066> so easy? *facepalm* <comment362301> I was racking my brain looking for this as well.  Hands down though [_LaunchControl_](http://www.soma-zone.com/LaunchControl/) (a GUI front-end to `launctl`) is one of the best interfaces to manage these things.  However, it doesn't handle these types of extensions.  Thanks again!