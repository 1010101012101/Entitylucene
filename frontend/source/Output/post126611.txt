How to run a cron job each time the previous execution has finished? <body> I would like to run a Python script each time it finishes and I think I can do this with cron but I am not sure how to do it.  The idea is each time the Python scripts ends, it will have to run again and again.  I have searched for answers here but I can't find something similar to this.  <answer126617> In terminal:  precodewhile :; do ./script_name; done /code/pre  or  precodewhile :; do python programm.py; done /code/pre  If you want add some sleep time before run program again use 'sleep' command:  For example:  precodewhile :; do python programm.py; sleep 90; done /code/pre  in this example cycle will sleep 90 second before run again you program  <answer126618> Cron is a scheduler, it's good if you want your script to run every 5 minutes, or every 3rd Wednesday etc, but for an arbitrary restart upon completion which could (I presume, you don't indicate what the Python script is doing, how long it takes or if the time to completion is variable etc) be essentially random it's not the best choice.  You can either insert some logic into the script directly, or you could simply wrap the script with some Shell Scripting logic as per @user3439968's answer, my version is essentially the same, but I've shown it a little more verbose with options for keeping an eye on the restarts etc.  You can type this into pretty much any command line shell, simplest to just open codeTerminal/code and type it straight into it  precodewhile true do     /path/to/script.py     sleep 60     date &gt;&gt; /path/to/logfile.txt     echo "The script ended, and I restarted it after 60 seconds" &gt;&gt; /path/to/logfile.txt done /code/pre  In the example above the restart isn't immediate but waits 60 seconds, then appends the current date and a message to a log file on each restart.  You can put any control code after the initial run of the Python script and the codedone/code line, even get it to mail you that it's restarted etc.  Because you don't specify what "true" is, it can never be false, so essentially everything between codedo/code and codedone/code is looped over and over until it receives a suitable interrupt signal like a codeCTRL-c/code or a codekill -9 PID/code type command from another command line session.  <comment148347> Why not make the script loop rather than exit or make it run when something happens e.g. a directory changes depending on what it is looking for <comment148373> Do I have to write something like: python programm.py anywhere? <comment148380> The script is used to scraped Google results, so it needs to take some time due to IP overload. <comment148388> while [ 1 ]; do python programm.py; done  You may add another commands if you want:   while [ 1 ]; do python programm.py; command2; command3; etc; done  Just split it with ; <comment148390> Answer below and my answer it's shell scripting. Bash, sh, etc: https://developer.apple.com/library/mac/documentation/opensource/conceptual/shellscripting/Introduction/Introduction.html <comment148396> So it could loop and set launched up to restart it if it crashes (the latter would work even if it ends normally) <comment148519> Thanks @user3439968 - I have used the third instruction and it works like a charm. That is all I need. <comment148548> You are welcome. Enjoy )