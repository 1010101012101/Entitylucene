El Capitan: DNS cache won't flush <body> I'm trying to get my El Capitan's (10.11.6) DNS cache to flush, to try and solve slow localhost domain name resolution, but nothing I do has any effect.  My computer name, hostname and hard disk names used to be as follows:  precodeSanta's MacBook Pro santas-macbook-pro-2.local Santa's MacBook /code/pre  (I didn't choose to put the "-2" at the end of the hostname; that's what the Mac had in the Sharing preference pane.)  I tried editing the codeetc/hosts/code file as follows:  precode127.0.0.1    localhost santas-macbook-pro-2.local 255.255.255.255    broadcasthost ::1             localhost santas-macbook-pro-2.local fe80::1%lo0    localhost /code/pre  but even after a restart the resolution was still as slow as ever.  Tried renaming the computer and hostname to codetrial/code and codetrial.local/code (updating codeetc/hosts/code accordingly) and the hard disk to codett/code.  Got OnyX to flush various caches including system and kernel extensions, restarted, still slow.  In running the little inetTester I get codeSanta's MacBook Pro.local/code returned.  I've tried flushing the DNS cache following the instructions here, restarted, and I still get codeSanta's MacBook Pro.local/code returned.  It seems codediscoveryutil/code doesn't exist any more (in any case it's not on my machine), so I can't even look at the contents of the cache.  What on earth do I have to do to get this machine to forget about being Santa's MacBook Pro?  <answer265631> You are mixing a lot of completely or partly different/unrelated things here.  ol lisTo properly and quickly name resolve your hard disk/SSD, you also have to add its name to the hosts file:  precode127.0.0.1    localhost santas-macbook-pro-2.local tt-this_is_a_VM_volume_and_therefore_slower_than_a_real_disk  /code/pre  Now you can check the response time by pinging it:  precodeping tt-this_is_a_VM_disk_and_therefore_slower_than_a_real_disk  PING tt-this_is_a_VM_disk_and_therefore_slower_than_a_real_disk (127.0.0.1): 56 data bytes 64 bytes from 127.0.0.1: icmp_seq=0 ttl=64 time=0.054 ms 64 bytes from 127.0.0.1: icmp_seq=1 ttl=64 time=0.089 ms 64 bytes from 127.0.0.1: icmp_seq=2 ttl=64 time=0.071 ms  --- tt-this_is_a_VM_disk_and_therefore_slower_than_a_real_disk ping statistics --- 3 packets transmitted, 3 packets received, 0.0% packet loss round-trip min/avg/max/stddev = 0.054/0.071/0.089/0.014 ms /code/pre  The average round-trip time is ~0.071 ms. So the time needed to resolve it is less than ~0.071/2 ms. With a real HDD/SSD you can expect even faster responses.  Please use the short codett/code (the name of your volume) instead of my long codett-this_..../code name to get an even quicker response. /s/li liTo check your DNS cache open Console.app (enter emmDNSResponder/em in the Search field) and Terminal.app.  Check the time and enter in Terminal: codesudo killall -INFO mDNSResponder/code  Roughly the first half of the output in Console with the time stamp noted previously is the DNS cache. The cache part starts with code------------ Cache -------------/code and ends with a summary like codeCache currently contains 391 entities; 33 referenced by active questions/code.  To kill the cache use codesudo dscacheutil -flushcache; sudo killall -HUP mDNSResponder/code  Re-check the cache by entering  codesudo killall -INFO mDNSResponder/code again./li liemdiscoveryutil/em was introduced in OS X 10.10.0 and replaced by its predecessor mDNSResponder in OS X 10.10.4./li liTo modify your local hostname and computer name use codescutil/code:  precodesudo scutil --set LocalHostName trial sudo scutil --set ComputerName Trial /code/pre  If you still get a Bonjour name (e.g. Santa's MacBook Pro.local) your hostname is probably set incorrectly. Either change the hostname by entering:  precodesudo scutil --set HostName trial /code/pre  or remove it completely (recommended) by modifying the file preferences.list:  precodesudo  nano /Library/Preferences/SystemConfiguration/preferences.plist /code/pre  and remove your current malformed HostName near the bottom of the file:  precode    &lt;key&gt;HostName&lt;/key&gt;     &lt;string&gt;Santa's MacBook Pro.local&lt;/string&gt; /code/pre  ☛  precode    &lt;key&gt;HostName&lt;/key&gt;     &lt;string&gt;&lt;/string&gt; /code/pre  You may also have to remove the preferences backup file empreferences.plist.old/em. Reboot afterwards./li liName resolution is roughly done in this order:   precode  files (e.g. /etc/hosts) &gt; mDNS &gt; DNS)  \    ↕︎                         (↓ )   (↓)   | rather remote hostnames DNS cache (memory) (←-----------------)  /    ↑                                       \ memory                                      | rather local hostnames (including hosts file)    ↑                                        |  file (preferences.plist)                  / /code/pre/li liinetTester is a tool to quickly check the elapsed time spent from the Java layer to access the localhost domain name. This is strongnot/strong the time to get (resolve) the local hostname. The hostname is stored somewhere in memory and a system call takes nanoseconds to get it./li liThe name of your main volume (previously emSanta's MacBook/em, now emtt/em) is in strongno/strong way related with the DNS cache or a slow local hostname resolution./li /ol  hr  Regarding item 1 in the list. I wear Dark Vader's shelmet/s party hat and got nasty temporarily.  <comment333055> Thanks @klanomath. I realise the HD has nothing to do with DNS resolution but I'm getting desperate to solve this problem & wanted to make sure nothing about Santa's MacBook was left. I've done your step 2 & the cache has nothing about Santa in it. Good to know. `scutil --get LocalHomeName` and `[...] ComputerName` both give me `trial` so they are clearly set right.  And _still_ inetTester gives me back `Santa's MacBook Pro.local`!!! Having stepped through its source I realise the string is coming from somewhere in memory. The question is _where_, and _how do I get rid of it_? <comment333056> Oops, `scutil --get LocalHostName` <comment333059> Marked as correct answer since the cache is indeed, clearly, being flushed.  However any help you could give me to get rid of `Santa's MacBookPro.local` would be greatly appreciated!!! :-) <comment333063> Awesome.  It was indeed `Santa's[...]` so I changed it to `trial.local`.  inetTester now resolves in 77ms.  Thank you so much for this, I'm now well on the way to solving the original problem which necessitated delving into DNS resolution.  You may sometimes be a Darth, but you're definitely a force for good! ;-) <comment333064> @skiaddict1 By definition trial.local as hostname is wrong. You should set it to trial! trial.local is the **full** local host name (Bonjour) which is built by the LocalHostName set by scutil (or in the Sharing Prefs) and the standard suffix .local. This is part of an [RFC](https://tools.ietf.org/html/rfc6762)! <comment333065> Once again thank you thank you thank you!  That was the missing piece of the original puzzle.  I was getting through all the network stuff but the end result was an error message.  Now there's no error.  I can't thank you enough.