How do I install GCC via Homebrew? <body> I am using Homebrew exclusively (i.e. I don’t, and won’t, use MacPorts or Fink). I also want to keep manual installations to a bare minimum.sup1/sup  … But stronghow can I install GCC?/strong  First of all, I’ve of course installed Xcode but the current version doesn’t ship with a decently up to date GCC (I need ata least 4.5, but would prefer the most recent one) – in fact, it doesn’t ship with a proper GCC emat all/em (it only ships Clang) and that seems to be a problem for Homebrew …  I’m aware of a list of custom GCC and cross compilers but in fact all of those installations require an already installed GCC – at least, codebrew/codeing them fails with linker errors on Lion which I attribute to Clang, and code-use-gcc/code doesn’t work for obvious reasons.  codebrew doctor/code only mentions what I already know, that there is no GCC (4.2.x) installed.  hr  sup1/sup I’ve previously mixed MacPorts, Homebrew and some manual installations and have ended up with a maintenance and versioning hell. I don’t want to go there again.  <answer38232> You might try this - https://github.com/kennethreitz/osx-gcc-installer - I have used it successfully after upgrading to Lion to compile packages with Homebrew and others (Ruby).  From the read me:  strongOSX GCC Installer/strong Downloading and installing the massive Xcode installer is a huge hassle if you just want GCC and related tools.  The osx-gcc-installer allows you to install the essential compilers from either pre-built binary packages or helps you create your own installer.  <answer38247> h2Homebrew solution/h2  To answer my own question, codehomebrew-versions/code now has a fairly up to date formula of GCC. It can be installed using  precodebrew install [flags] https://raw.github.com/Homebrew/homebrew-versions/gcc48.rb /code/pre  Where code[flags]/code should include all the required languages, e.g. (code--enable-cxx --enable-fortran/code).  This will install the executables with a suffix, i.e. codegcc/code has to be accessed as codegcc-version/code to avoid clashes. If necessary, one can create appropriate symlinks to make this version the default.  h2Manual installation/h2  strongAlternatively/strong, an strongup-to-date GCC/strong (as of the time of writing) can be compiled emmanually/em using the following shell script:  precodeVERSION=4.7.0 PREFIX=/usr/gcc-$(VERSION) LANGUAGES=c,c++,fortran MAKE=make # Or # MAKE='make -j 4' # to compile using four cores  brew-path() { brew info $1 | head -n3 | tail -n1 | cut -d' ' -f1; }  # Prerequisites  brew install gmp brew install mpfr brew install libmpc  # Download &amp; install the latest GCC  mkdir -p $PREFIX mkdir temp-gcc cd temp-gcc wget ftp://ftp.gnu.org/gnu/gcc/gcc-$VERSION/gcc-$VERSION.tar.gz tar xfz gcc-$VERSION.tar.gz rm gcc-$VERSION.tar.gz cd gcc-$VERSION  mkdir build cd build  ../configure \    --prefix=$PREFIX \    --with-gmp=$(brew-path gmp) \    --with-mpfr=$(brew-path mpfr) \    --with-mpc=$(brew-path libmpc) \    --program-suffix=-$VERSION \    --enable-languages=$LANGUAGES \    --with-system-zlib \    --enable-stage1-checking \    --enable-plugin \    --enable-lto \    --disable-multilib  $MAKE bootstrap  make install  # Uncomment for cleanup … # cd ../../.. # rm -r temp-gcc /code/pre  This will stage GCC into the path code/usr/gcc-4.7.0/code. Now all you need to do is either create symlinks to the executables or add the codebin/code directory to the code$PATH/code variable.  <answer38273> I too had this problem.  What's more is that I need to use gfortran, which doesn't come with the standard (outdated) install of Mac's llvm-gcc.    I've found the High Performance Computing builds of gcc to be up-to-date and work great on Lion.  <answer86588> The solution provided by @Konrad Rudolph is not entirely correct anymore as the GCC formula that he mentioned was moved from codehomebrew/dupes/code to codehomebrew/versions/code. You can choose which version of GCC to install. For example, at the time of writing this answer, version 4.5, 4.7 and 4.8 are available. You may check out what versions are available here.  In short, you can install GCC 4.8 by using  precodebrew tap homebrew/versions brew install [flags] gcc48 /code/pre  You can view available install flags by using  precodebrew options gcc48 /code/pre  <answer139979> I saw somebody link to this old post today. The best way to install GCC in homebrew right now is just codebrew install gcc/code. If you have the XCode Command Line Tools (they are separate from XCode; you can install them with codexcode-select --install/code) installed, a precompiled version will be installed (which is very fast).  <answer282199> In case anyone looks at this old thread, it seems homebrew/versions, used in the currently accepted answer, has been deprecated in favor of homebrew/core. Just run codebrew install &lt;formula&gt;/code.  <comment43311> What's the output of `gcc --version`? I get  `i686-apple-darwin11-llvm-gcc-4.2 (GCC) 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)` and I simply installed Xcode from the MAS. Also what's the output of `echo $PATH`? <comment43312> @Gio I got the same output. `$PATH` is the usual (this is an almost blank system, after all): `/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin` … but I don’t think that this matters. The formulae provided by homebrew-alt are simply outdated and don’t work with Clang. <comment43315> This only installs the versions also installed by Xcode. In other words: outdated, and not actually GCC but LLVM-GCC. <comment43340> Outdated: Yes. The point of the package is it is the Xcode shipped utilities, but without all the other huge components necessary for Xcode.  Not GNU GCC: Wrong. `/usr/bin/gcc` is a symlink to llvm gcc, but explicit reference to `/usr/bin/gcc-4.2` or setting `export CC="gcc-4.2"` in your .bash_profile or suitable file mitigates the issue as well. (See also [this Stack Overflow](http://stackoverflow.com/a/7829247/106813) question.) <comment57445> I tried this. Not only did it not work, but the installation technique he's using is pretty dangerous. Took me about an hour to carefully undo everything. <comment57447> Oh, I should have said I don't install it the way he suggests.  I just untar the file and make a symlink to the binary I want, making sure that symlink is somewhere in my PATH.  Usually this is done by adding something "local" to my path, like ~/bin/ or something. <comment57608> Yeah, that'd be way more sane. His install procedure is freaking nuts and I should have just assumed as much rather than giving it a go blindly. <comment61182> Trying to compile a working version of wine, I also ran into the problem of a missing gcc - unfortunately installing v4.7 via homebrew gave me some errors; so I went for the Apple v4.2 using `brew tap homebrew/dupes` followed by `brew install apple-gcc42`. This helped me to get a working gcc and wine. You can also get the binaries (as homebrew does) from here: http://r.research.att.com/tools/ <comment61188> @iolsmit You should definitely try the GCC 4.7 install again with a clean, up to date Homebrew. It should work like a charm. If not, please file a bug to the Homebrew-dupes maintainers. <comment62196> `brew tap homebrew/dupes; brew install gcc --use-llvm`.  See https://github.com/Homebrew/homebrew-dupes/issues/20 <comment89618> @KonradRudolph everywhere I turn you're answering the questions I'm asking! Thanks :) <comment99330> Note that this project has been superseded by Apple's official Command Line Tools for Xcode: http://www.kennethreitz.org/essays/xcode-gcc-and-homebrew <comment100615> I tried this and I got it to install but it dies like this: `gcc-4.8 hello.c`   `gcc-4.8: error trying to exec 'as': execvp: No such file or directory` <comment100616> This is OUT OF DATE NOW. <comment100659> @WarrenP Did you install with any `[flags]`? On my machines, I installed without any flags and it works fine. Why not you try to call `gcc-4.8` without any input file and see if you get a fatal error? Also try to `ls /usr/local/Cellar/gcc48/4.8.0/bin` and see if that directory contains `gcc-4.8`. <comment100665> @Warren No need to shout – but thanks for the reminder, because yihang has actually posted a better up to date answer which I’ve now accepted. <comment100672> Excellent. I did a bit of editing on this one so that it's closer to true but still too complicated. <comment100673> It does contain gcc-4.8 and `gcc-4.8 --version` runs but it can't exec out to the secondary tool named `as` and so it dies. <comment100790> Hmm... Frankly I have no idea how to solve this. Maybe we have to wait for some more experienced user... <comment109523> How to add `g++` as a command in my terminal? do I have to soft link `/usr/local/Cellar/gcc48/4.8.1/bin/g++48` in my /usr/bin? <comment109638> @nkint Either that or add `alias g++='g++-4.8'` in your `.bashrc`. <comment178202> Why use Homebrew?  MacPorts is good at managing multiple versions of compilers.  And MacPorts can do *anything* that Homebrew can do. <comment178230> @JeffBurdges Homebrew is better. In pretty much any category. <comment178375> How so?  To be honest, I dislike Homebrew mostly just because it lacks (a) package descriptions and (b) math packages.  Overall MacPorts has maybe six times as many packages as Homebrew, but yeah it's the obscure packages that're missing.  I'm happy with MacPorts overall, although obviously I wish they'd integrate with language package managers like CPAN, CTAN, Caball, etc. <comment178423> @Jeff Personally I haven’t yet found a package that wasn’t on Homebrew (this question notwithstanding). I cannot talk about math packages. Package descriptions do exist (`brew info …`). Apart from all other advantages, its usability is just much nicer, its interface more modern, and creating own formulas is *much* easier. <comment178497> Homebrew has package descriptions only for <comment355322> Can you please explain how this has to do with the OP's question which is how to install GCC via Homebrew? <comment355987> @fsb Answer is updated. <comment356016> This is more of a comment on the accepted answer.  It should not be an answer itself because it doesn't address the OPs question.  Once you have sufficient [reputation](http://apple.stackexchange.com/help/whats-reputation) you’ll be able to add [comments](http://apple.stackexchange.com/help/privileges/comment) and ask follow-up questions. To gain reputation, [answer questions that are clear and concise](http://meta.stackexchange.com/questions/214173/why-do-i-need-50-reputation-to-comment-what-can-i-do-instead). <comment356034> Should a new question be asked to specify the version of brew where this changes? Fixing this old post seems low benefit, high delay. <comment356697> If I had sufficient reputation points I would have commented on the accepted solution instead. Feel free to do that yourself.