Configure emacs to cut and copy text to Mac OS X clipboard <body> Can I configure codeemacs/code, so that I could copy/cut text from emacs (default Terminal version) and paste it somewhere else (into X Window program)?  <answer85613> The version of emacs that is included with OS X is too old to provide this functionality.  Fortunately you can update emacs to a version that is integrated with your clipboard here: http://emacsformacosx.com  I believe that you use kbdCtrl/kbd+kbdY/kbd to paste in emacs, after the update.  <answer85676> To copy the current region to the OS X clipboard, you can use  precode(shell-command-on-region (region-beginning) (region-end) "pbcopy") /code/pre  The inverse, copying the OS X paste buffer to the Emacs kill ring, is not recommended. Kill rings and clipboards are very different structures and there's no good answer to what, exactly, pushing a clipboard into a kill ring should do. Still, you can run codepbpaste/code manually to get the current clipboard contents.  <answer100041> Here's a solution to integrate OS X Clipboard to Emacs' kill-ring by Daniel Nelson: https://github.com/wesen/emacs/blob/master/pbcopy.el  Author's comments:     Enables the kill-ring to interact with the clipboard when running Emacs from a Mac OSX terminal (without losing full kill-ring functionality). All I did was modify codexclip.el/code to work with codepbcopy/code and codepbpaste/code. The real thanks go to Leo Shidai Liu, the author of xclip.el.   <answer127082> Add this to code~/.emacs/code:  precode(defun pbcopy ()   (interactive)   (call-process-region (point) (mark) "pbcopy")   (setq deactivate-mark t))  (defun pbpaste ()   (interactive)   (call-process-region (point) (if mark-active (mark) (point)) "pbpaste" t t))  (defun pbcut ()   (interactive)   (pbcopy)   (delete-region (region-beginning) (region-end)))  (global-set-key (kbd "C-c c") 'pbcopy) (global-set-key (kbd "C-c v") 'pbpaste) (global-set-key (kbd "C-c x") 'pbcut) /code/pre  If you use Emacs in iTerm 2, you can also remap key combinations in the preferences:  img src="https://i.stack.imgur.com/Sn74w.png" alt=""  Then add something like this to code~/.emacs/code:  precode(global-set-key (kbd "&lt;f13&gt; c") 'pbcopy) (global-set-key (kbd "&lt;f13&gt; v") 'pbpaste) (global-set-key (kbd "&lt;f13&gt; x") 'pbcut) /code/pre  <answer168752> I found this post really useful (defining 2 functions and assigning shortcuts to them in your ~/.emacs file).  After adding those lines to your .emacs file, you won't have access to those shortcuts until you open a new shell session (tab/window). Let the changes be applied.  <answer182785> The following just works, got it from here :)  pre class="lang-lisp prettyprint-override"code(defun copy-from-osx ()   (shell-command-to-string "pbpaste"))  (defun paste-to-osx (text &amp;optional push)   (let ((process-connection-type nil))     (let ((proc (start-process "pbcopy" "*Messages*" "pbcopy")))       (process-send-string proc text)       (process-send-eof proc))))  (setq interprogram-cut-function 'paste-to-osx) (setq interprogram-paste-function 'copy-from-osx)) /code/pre  <comment98668> Ah - I forgot to say - the version of emacs that you'll download from that site is graphical (i.e. it doesn't run in the Terminal). It's impossible for applications in the Terminal to access the clipboard without a hack, which I can't find anymore. :/ <comment98678> `pbcopy` and `pbpaste` still exist and are not hacks. <comment98679> That is possible, however I assumed that the OP wants to use keyboard commands to copy and paste. What I meant to say was that Terminal applications can't use keyboard shortcuts to copy and paste along with the OS X clipboard without hacks. <comment98688> "Terminal applications can't use keyboard shortcuts to copy and paste along with the OS X clipboard without hacks." This is obviously not true, since `pbcopy` and `pbpaste` are both terminal applications; any other terminal app could do what they do, or simply call them directly. <comment98711> What I was looking for is hooking `pbcopy` to Emacs cut & copy. Is it possible? <comment217719> This didn't work for me. The marked solution in this [Emacs post](http://emacs.stackexchange.com/questions/10900/copy-text-from-emacs-to-os-x-clipboard) does work however. <comment217762> Could you add a link to the original post? <comment332259> Still the best answer. Thanks! Note for iterm, to create these "Actions" choose "Send escape code," and you omit the leading "^[." (didn't work with "Send text" action type)