How to verify that the transfer of photos/videos from an iPhone went well? <body> Tranferring photos from the iPhone to another device, like a NAS or a computer, in some cases fail, either because of a network error or a file-system error on the different devices involved in the data-transfer.  Because of this it would be benifitial to do a verification that the files on the iPhone and the destination device are equal.  How can it be done?  <comment256949> Wouldn't the tool used to do the transfer be the only one to check image counts and image size changes? I've been using iCloud photo library with good feedback that everything is in sync from iOS to the cloud and then downloading the originals using the web interface. Would that sort of idea be what you are seeking? <comment256972> This could be one way of doing it. I would not be completely sure that the data-transfer were 99% correct if I did not check that the file on my iPhone and the destination device were equal after transfer. If I were to implement this myself I would probably first made a checksum for the file on the iPhone and then transfer the file along with the checksum to the destination device. Then the destination device could make a checksum for the file and compare it with the one made on the iPhone. If equal then transfer was ok. Maybe this happens behind the scene? <comment256974> I have been banging on iCloud photo library since about June. I've currently got 40 GB of data covering 10,000 still images and 250 videos. If Apple achieved 5 nines accuracy on my photo library, 3.6 million bits could still be wrong. My guess is they engineered an extremely good process to avoid data loss. <comment257309> In the end I would like to have my data located on a device that I know that it is relatively safe from hardware-error. iCloud could be that for some people, but for me with an expanding 3TB of jpeg/raw-photos and mov-videos from my iPhone/DSLR it would be an expensive solution as the prices are now. I would like to have a function like `rsync -c` or similar that could be run when the connection between the iPhone and my device is there. I probably should update this question so that it reflects on these "limitations". The original question is probably a bit vague.