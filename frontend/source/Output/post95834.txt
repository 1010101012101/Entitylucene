Why does this Applescript often fail the first time, but always work after that? <body> The following Applescript opens a menubar app called QuickHue and then clicks a specified item in the menu.  Often, when I use the applescript, it does nothing.  But if I wait a moment or two and try again, it works perfectly.  And it keeps working.  But if some time passes and I trigger it again, it'll fail again the first time.  After that, it works like a champ.  Here's the applescript.  Any idea what's going on here?  precodeignoring application responses     tell application "System Events" to tell process "QuickHue"         click menu bar item 1 of menu bar 1     end tell end ignoring do shell script "killall System\\ Events" delay 0.1 tell application "System Events" to tell process "QuickHue"     tell menu bar item 1 of menu bar 1         click menu item 2 of menu 1     end tell end tell /code/pre  <answer95892> You're right, I didn't test it well enough. The error was shown when System Events was not already running. As another workaround, I added codelaunch application "System Events"/code and codedelay 0.2/code to the start:  precodelaunch application "System Events" delay 0.2 ignoring application responses     tell application "System Events" to tell process "QuickHue"         click menu bar item 1 of menu bar 1     end tell end ignoring do shell script "killall System\\ Events" delay 0.1 tell application "System Events" to tell process "QuickHue"     tell menu bar item 1 of menu bar 1         click menu item 2 of menu 1     end tell end tell /code/pre  If it still doesn't work, try increasing the delays.  <answer98807> Perhaps you can write a loop that keeps track of whether or not the script has succeeded and keeps trying until it has (or some cutoff amount of time has passed).  If indeed the problem is that system events is not fully started up, then the loop could ask system events if the application system events is running.  Here's a simple function you could use:  precodeon appIsRunning(appName)     tell application "System Events" to (name of processes) contains appName end appIsRunning /code/pre  Just to be sure it has started up fully, you could implement your delay after the loop.  Here's what the loop function would look like:  precodeon startApp(appName)     set IsRunning to false     set tries to 20     repeat until (IsRunning is true or tries is 0)         set IsRunning to appIsRunning(appName)         set tries to (tries - 1)         delay 0.1     end repeat end startApp /code/pre  Or, maybe you have some other way of determining the successful running of the scriptâ€¦ is there some state you can check to determine success?  If so, you could loop until that condition is met instead of on whether System Events has started up.  Another thing is, I don't know if system events has to "register" with applescript before an applescript fires off in order for it to work.  If it does, then you might try this: you can make a separate helper script that starts up system events and then runs your script like this:  precodestartApp("System Events") set myApp to "/Users/whatever/myScriptAsApp.app" do shell script "open " &amp; quoted form of POSIX path of myApp &amp; " 2&gt;&amp;1 &amp;" /code/pre  Let me know how it goes.  I frequently have the same problem as you with a couple of my scripts.  I just haven't tried this yet.  Good luck, Rob  <comment112467> The ignoring is waiting for application respond! first line  tell application "System Events" than use ignoring statement ect. <comment112468> https://developer.apple.com/library/mac/#documentation/applescript/conceptual/applescriptlangguide/reference/ASLR_control_statements.html <comment112471> I got the above applescript here: http://apple.stackexchange.com/questions/92384/create-hotkey-to-open-a-menubar-app/92386#comment108382_92386  Here's a quote from the answer to that question:  "There is a bug where scripts are blocked for about 5 seconds after clicking some status menu items. ignoring application responses allows the script to exit immediately." <comment112477> No matter how I write this script, it fails the first time I use it.  Nothing happens.  But the second time, it works like a charm. <comment112527> I would look in the Console at the same time stamp for more information. <comment112535> Here's the error I get in Console.  Again, it's noteworthy because if I run the exact same script 1 minute later, it runs perfectly.  `7/8/13 10:37:28.518 AM com.apple.launchd.peruser.501[200]: ([0x0-0xbb7bb7].com.apple.systemevents[12465]) Exited: Terminated: 15` <comment112538> We are getting somewhere :) meanwhile try increasing the delay from 0.1 to 1 ..(I have been asked by our system to move this to chat room, but you do not have enough points for that :( <comment112540> OK the master is here :) <comment112541> I'll test it out!  If it works, I'll be thrilled!  I'm using the phenomenal BetterTouchTool to launch the Applescript via the buttons on my Apple Remote.  QuickHue is an app that turns on my lights, which means the lights in my home, including color shades and dimmer settings, are triggered by remote.  It's really cool, but this script was the only part not always working.  In case you're curious, the Philips Hue lightbulb system is genius!  ...and so are you.  Seriously, thanks so much for the help!  I'm testing it now.  So far, so good! <comment112786> I'm baffled.  I've tried rewriting this script several ways, including changing the delays, moving where the ignore command falls and even saving the applescript as an application, but no matter what I do, the script SOMETIMES stalls before the line where it opens the menubar app.  If I can get it to work once, it keeps working.  But once it hasn't been used for a while - a half hour, maybe - it goes back to stalling when launched. <comment112789> Question:  If I'm at my Mac, listening to iTunes and surfing the web, is there a reason System Events wouldn't already be running?  I'm trying to understand why this applescript fails the first time, but works like a charm every time after that - until it hasn't been used for a while.  Then it fails again the first time. <comment112879> @20h1 I didn't test it well enough this time either. The same thing happened to me after I waited a few minutes, but I couldn't figure out any workarounds for it though. System Events is just used by AppleScript, and it terminates automatically if it's not used for a few minutes. <comment112883> Whew!  That actually makes me feel better.  I was starting to wonder if there was something wacky happening with my Mac.  Well...  the app I'm trying to open is on Github, so maybe the real solution is for me to figure out how to code a trigger into the app to open it (open, meaning display its contents, not open meaning launch).  The only thing preventing a simple system prefs hotkey from working is that the menubar app needs to be open with its menu visible before OSX considers it "active." <comment113246> In the end, I had to bail on this idea.  There comes a point where it's wise to accept the limitations of an operating system.  The above script works most of the time, but it wasn't consistent enough.  Ah well. <comment116140> Thanks!  That's an excellent idea, and I'll keep it in mind for future use.  For this project, I decided to give up and take an entirely different approach.  I gave up on the menubar app and wrote applescripts to do its job rather than using applescript to open it.