Can Finder and the "open" command treat files with .sh or other typical extensions just like .command files? <body> I am looking for a way to inject some more extensions into the OS X launch services database systematically so that when clicked, they execute in the terminal app just like .command files do by default.  Things like code.ksh/code, code.sh/code, and code.csh/code would be nice to start, but I assume once I figure out how to add one, it's easy to do the rest.  An answer specific to Lion or Snow Leopard is fine, so a general-case answer for all OS versions is not necessary. It would be great if this were scriptable and wrote directly to the Launch Services database so I could automate this rather than going to finder on each mac and doing a lot of clicking.  <answer20133> The Unix way of doing this is to open Terminal.app and setting the scripts to executable with codechmod +x scriptname.sh/code.   Or you can make a link from /bin/bash to /Applications and define /Applications/bash to be the default application for .sh files in the Get Info dialog. But this seems to be kind of wierd IMHO.  <answer20138> If a file is opened with Terminal, and has the execute bit set, then Terminal will execute it.  Get Info on a .sh file and set it to be opened with Terminal, and click the Change All button.  <answer49998> h1To prefer Terminal to open .sh files — using the defaults command, without using Finder/h1  In most cases, all that's required should be possible from the command line …  h2Preparation/h2  Two commands:   codedefaults read com.apple.LaunchServices | grep -B 1 -A 3 public.shell-script/code  codedefaults read com.apple.LaunchServices | grep -B 1 -A 4 "LSHandlerContentTag = sh;"/code  h3If either command reveals an existing preference/h3  Use Xcode or any other suitable property list editor to remove the relevant dictionary from the codeLSHandlers/code key within the following file:   code~/Library/Preferences/com.apple.LaunchServices.plist/code  Hints:   ul licodedefaults/code, with which I'm more familiar, seems unsuitable for removal of a single dictionary from an array/li liremoval should be necessary only if (say) the user has previously used Finder to associate code.sh/code files with an application other than the system default/li lia Super User answer under How to change default app for all files of particular file type through terminal in OS X? is recently edited to include a script that uses codePlistBuddy/code — credit to Daniel Beck./li /ul  hr  h2Adding to LaunchServices preferences, for Terminal to view and edit .sh files/h2  Two one-line commands.   Depending on your requirements, the first command alone may suffice:   codedefaults write com.apple.LaunchServices LSHandlers -array-add '{ LSHandlerContentType = "public.shell-script"; LSHandlerRoleViewer = "com.apple.Terminal"; LSHandlerRoleEditor = "com.apple.Terminal"; }'/code  codedefaults write com.apple.LaunchServices LSHandlers -array-add '{ LSHandlerContentTag = "sh"; LSHandlerContentTagClass = "public.filename-extension"; LSHandlerRoleViewer = "com.apple.Terminal"; LSHandlerRoleEditor = "com.apple.Terminal"; }'/code  h2For the new preferences to be respected/h2  Modifications to the stronguser domain persistence layer of Launch Services/strong must be acknowledged. For this, least disruptive to the end user will be:   ul lia restart of the operating system. /li /ul  From the command line, if immediate restart is acceptable:  codesudo shutdown -r now/code  hr  h1Background/h1  h2Understanding Terminal.app support for .sh (public.shell-script)/h2  Consider the result of the following command:   codedefaults read /Applications/Utilities/Terminal.app/Contents/Info/code  ul liunder codeCFBundleDocumentTypes/code (an array of dictionaries describing the document types supported by the bundle) we see that Terminal is designed to support codecom.apple.terminal.shell-script/code /li licodepublic.shell-script/code (the system-declared UTI associated with code.sh/code) is not supported at that level, it appears elsewhere in the property list — under codeUTExportedTypeDeclarations/code/li /ul  Terminal aside for a moment: it's sometimes inappropriate (or simply worthless) to force opening of a document type, by an app that is strongdesigned without support/strong for that type.   For Terminal, I imagine no harm in handling the codepublic.shell-script/code type.   <comment22435> When I made the .sh file executable, another app claimed it on my mac. Going to finder, get info, right click, ignore the warning that Terminal might not be able to open .sh does work. Technically, this is certainly doable - but I'll leave the answer open for something that directly writes into the Launch Services database programmatically instead of through the UI. <comment22436> I'll probably have to dig into the dev docs to suss out what and how UTI are handled to do this properly. http://developer.apple.com/library/ios/#DOCUMENTATION/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html <comment22437> The executable files are claimed by another app. I'm guessing I'll need to massage the database directly and monitor it if other apps as for this UTI - http://developer.apple.com/library/ios/#DOCUMENTATION/FileManagement/Conceptual/understanding_utis/understand_utis_conc/understand_utis_conc.html <comment22441> Searching for RCDefaultApp led me to this answer http://apple.stackexchange.com/questions/9866/programmatically-script-atically-changing-the-default-open-with-setting/9883#9883 but somewhere else recently I saw RCDefaultApp mentioned not far from [Magic Launch](https://www.metakine.com/products/magiclaunch/) … got it: probably not as useful as the first link, http://apple.stackexchange.com/q/13557/8546 <comment57308> [Discuss](http://chat.stackexchange.com/transcript/message/4400756#4400756) … <comment57401> @Lri in two or more tests, Terminal worked as expected for with a simple !sh one-liner — after the run of `lsregister` completed. But (as you note under the other question) using `lsregister` in that way is not without annoyance. I'll post something to Ask Different Chat for your attention. <comment57907> I was really hoping @Lri had words of wisdom. I asked for detail and Graham - you are prolific on detail. I'm not able to put your answer to practical use (yet perhaps) but I very much appreciate the extra eyeballs and suggestions so far on this. <comment57909> [Thanks](http://chat.stackexchange.com/transcript/message/4475386#4475386)! — expect the grey area of this answer to be tidied in due course. <comment58889> In a linked question, [a comment](http://apple.stackexchange.com/questions/50004/why-is-a-command-line-change-to-library-preferences-com-apple-launchservices-p/51416#comment58847_51416) draws attention to [duti](http://duti.sourceforge.net). Should that be an answer here? Or for this question, will you prefer to work only with what's **integral to OS X**?