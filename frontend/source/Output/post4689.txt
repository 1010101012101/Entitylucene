Why is DashboardClient taking so much memory on MBP? <body> img src="https://i.stack.imgur.com/UNehI.jpg" alt="alt text"  In recent days, the DashboardClient process is taking more memory on my MBP. It's a real memory of 144 MB as seen in Activity Monitor.  I have never seen this process occupying memory like this before, as if like Safari. It's started few back before.  I haven't changed my Dashboard for a couple of months...  I am running OS X 10.6.5  <answer4708> Probably the widgets you are using are leaking memory. Try removing them and check which of the widget is taking too much memory.   I use Calendar, 2 Clocks, 1 Weather and 2 Webclips and the Dashboard client is taking up 83Mb. Normally I just force quit if I see it is taking too much memory, and start it again if I need to them back.  <comment4571> What widgets ARE you using? <comment4574> I am using the default widgets and put 2 photos from web.. I added these pics more than 6 months ago. <comment4613> I will try removing some widgets and see what happens. what do you mean by 'force quit', the widget or Dashboard client process from Monitor ? <comment4661> I meant the dashboard client process from Activity Monitor. I tend to "force quit" rather than quit, but you can try "quit". <comment4662> I removed 2 Webclips and couple of widgets, but I am not seeing any improvements, instead the memory consumption went up. <comment4665> I tried closing all the widgets I have, and after Dashboard Client disappeared from the Activity Monitor I added a couple of clocks. The Real Memory was listed as 24MB now. Can you tell me what are the widgets you have ? May be I can check. I suspect Webclips are the memory hogs, I guess they function equivalent to the same safari Tab (loading all the JS from the page and all). <comment4686> Calculator, weather, clock, flight status tracker, iStat Nano, iCal, Ski Report, tile game. But now I closed these widgets (iCal, Ski Report, tile game). Still it shows 141MB. FYI.. I didn't quit/ force quit the Dashboard client. <comment89158> Just to add to the discussion, I recently killed a Dashboard process that was using 2 *GB* of memory...