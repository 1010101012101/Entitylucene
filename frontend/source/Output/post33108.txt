Extract a sound from a Classic application for Mac OS X? <body> How can I extract a single 'snd' resource from a classic application into a form that Mac OS X can play?  I can use derez to get the snd resource out, but from there I'm not sure how to assemble it into a form Mac OS X can read.  This is on Lion; I have no access to earlier Macs.  Derezed,it starts like this:  precodedata 'snd ' (3004, "metal stamp", purgeable) {     $"0002 0000 0001 8050 0000 0000 000E 0000"            /* ......ÄP........ */     $"0000 0000 159E 2B77 45D1 0000 159C 0000"            /* .....û+wE—...ú.. */     $"159D 003C 787D 807E 7D7D 8087 8376 6E72"            /* .ù.&lt;x}Ä~}}ÄáÉvnr */     $"7C87 8782 8789 857F 7169 5F74 9891 7068"            /* |ááÇáâÖ.qi_tòëph */ /code/pre  <answer33129> According to Apple doc http://support.apple.com/kb/HT3775, QuickTime Player supports snd (though you'd probably need to right-click on the snd resource and specify "Open with..." QuickTime Player for it to play).  snd, that's a blast from the past.  <answer40067> File Juicer can extract code'snd '/code resources as QuickTime movies.  <answer64590> Try playing the sound in its original application in Sheepshaver. Sheepshaver is a emulation system for Classic Mac OS running on OSX.  Then use a program such as Audio Hijack Pro or Piezo to record the sound as it plays, by hijacking Sheepshaver.  You'll get a good digital copy of the original sound in an AIFF format if you use Audio Hijack Pro, and in a lesser format with Piezo.  <answer65025> Peter Hosey is correct, snd files are Sun|SGI au files. snd is the original au format: u-law, no header, 8192Hz.   I was able to convert CW metal stamp snd rsrc to an mp3 with very little work.  Requirements: resource editor, hex editor, Audacity.  First, convert the snd rsrc to an au file. br&nbsp;&nbsp;&nbsp;Copy the bhex/b data from snd resource and paste onto a hex editor. Save with an au extension.  Second, import the au file into Audacity. br&nbsp;&nbsp;&nbsp;Open Audacity. Select File-Import-Raw Data. Select the au file. br&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Encoding: bUnsigned 8 bit PCM/bbr &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Byte Order: bNo endianness/bbr &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Channels: bMono/bbr &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Start offset: b0/bbr &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Amount to import: b100/b%br &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Sample Rate: b8192/b Hz  Third, Save the file br&nbsp;&nbsp;&nbsp;File-Export...  HTH  <answer105032> I used SoundExtractor to extract "platinum sound" single file from Mac OS classic (I found it in code/Applications/System Folder/Apparency/Sound Effects/code as I activated classical support, I didn't know where but it can run classical apps this way).  Then the 68 files can't be read. No extension at the end of these files! So I used Amadeus II to turn them in aiff format.  I made all that with my Tiger eMac and "classic", made by Apple for Mac OS X in order to use classic applications.  So you can now put them in the sounds folder (or create it) in your library (code~/Library/Sounds//code).  You can even turn aiff sounds into AAC (m4a) format using iTunes and even more, change the .m4a extension to .m4r to make then as a ringtone for iOS devices!  But when I want to put all those 68 .m4r sounds into iTunes, it refuses them like if they were from an incompatible format. Perhaps it needs to delete all the .m4a files? I'll try that tomorrow!  Please note that I use a French version of Mac so I translated the paths as I think it must be in English.  <answer136256> I had some System 7 Sound files, too. I just tried DaveM's answer, and it worked, except I had to set the frequency to 11025 (not 8192).  My steps:  ol liUsed Rezilla to copy the raw hex from the resource fork./li liUsed Hex Fiend to paste it as a regular file (added .au extension, but that doesn't really do much since it's still not directly playable)/li liAudacity  File  Import  Raw Data, select .au file/li liChange Sample Rate to 11025 Hz/li liExport as wav!/li /ol  <answer181588> What turned out easiest for me was:  First I had to set the file type (it was lost somewhere along the way)  codeSetFile -type 'sfil' AudioFileToConvert.au/code  Then I used the converter tool from SystemSound Converter, which turned it into an AIFF file with no hassle.  <comment37802> Can you link to such an extracted 'snd ' so we can have a look at it? <comment37858> It's copyrighted, so I can't really link to it. But I'm sure I can post the first few bytes, which include the header. <comment37859> I have tried QuickTime player; I'm sure this used to work, but it doesn't now. Unless maybe I need the snd resource to have a specific ID, but if I do, that ID seems to be lost to time. "The file may be damaged or may not be a movie file that is compatible with QuickTime Player." <comment37863> If you really need it, using BasiliskII would be an option. <comment37905> Is your snd resource packaged in a file (i.e. in a wrapper like avi, etc)? AFAIK current QT recognizes/opens the file before reading the resource in it. Sorry I don't know of any free converter that converts a 'snd' resource and wrap it into a file. <comment37913> Getting this sound from Codewarrior to Xcode has been a pet project of mine for over a year; one day I'll get it, one way or the other. In the meantime, I will lose no sleep over it. :) <comment38009> Ah, you didn't mention you're a fellow developer. In this case, I have a lead for you. Check out SoX - http://sox.sourceforge.net. The docs says NeXT 'and'. Hope things work out for you. Cheers. <comment46961> I think this is a really interesting question. Please tell me if you solved it, I'd like to try to solve it, too. <comment47033> I haven't. I think Peter Hosey's answer is probably a great way to go, but unfortunately I can't find the CD with the app on it now. :) <comment58477> @Globalnomad: NeXT .snd (similar to, if not the same as, Sun .au) isn't the same as Apple's 'snd '.