How can I have more than 16 keyboard shortcuts for Spaces (i.e., Mission Control) <body> Okay, so I have:  ol liOne external display connected to my Mac/li liTwenty Spaces (i.e., Mission Control), with ten Spaces on each display/li liMy keyboard shortcuts are strong[Ctrl + X]/strong for the left-hand display, and strong[Ctrl + Alt + X]/strong for the right-hand./li liMy Mission Control settings are strongDisplays have separate Spaces/strong = ON/li /ol  Fine and good. However, the keyboard shortcuts only go up to "Switch to Desktop 16." (i.e., System Preferences  Keyboard  Shortcuts  Mission Control)  I have twenty desktops, but the keyboard shortcuts only go up to sixteen. How can I fix this?  <answer195104> If you cannot set your keyboard shortcuts past 16, then it is a limitation of the OS and nothing we do here is going to fix that.  However, you may wish to try out a utility called Karabiner.    It allows you to remap and assign hot keys to pretty much anything so in theory, you should be able to map the remaining keys to your spaces.   It's free software but they do take donations. I encourage you to give it a shot and if it works I also encourage you to make a donation - whatever you feel the software is worth.  This allows you to try it out without a heavy commitment.  <answer195316> Here's something I tried (on 10.9.5).  Unfortunately, it didn't work, but I'll note it here in case it inspires someone.  ul liI noticed that enabling System Preferences  Keyboard  Shortcuts  Switch to Desktop 16 caused code~/Library/com.apple.symbolichotkeys.plist/code to update./li liI found some information (1) (2) about that plist./li liAccording to that second link, "Switch to Desktop 1" is action 118./li liI tested enabling / disabling Switch to Desktop 16 in that System Preference pane whilst looking at the plist file, using code/usr/libexec/PlistBuddy -c "Print :AppleSymbolicHotKeys" ~/Library/Preferences/com.apple.symbolichotkeys.plist/code and, as I expected, the "enabled" value for action 133 (=118+15) changed./li liI added a value for action 134 based on action 133, which I hoped would cause ctrl-alt-6 to switch to Desktop 17: codedefaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 134 "{enabled = true; value = { parameters = (65535, 22, 786432); type = 'standard'; }; }"/code  Unfortunately this doesn't seem to have any effect on my system./li liSo: I think that the symbolichotkeys plist file contains a mapping from key presses to actions.  The actions include Switch to Desktop 1 through  to Switch to Desktop 16, but there are no corresponding actions for desktops with higher numbers.  Sorry!/li /ul  <comment215725> So I have desktops that go up to [Desktop 20], but I am unable to set keyboard shortcuts past [Desktop 16]. <comment231489> I can confirm that this is an ongoing issue through OSX 10.10.4 <comment233021> No, I installed Karabiner and reviewed the documentation. The product is a tool for either remapping your keyboard layout, or mapping individual keys to an alternative function. Just to confirm that I wasn't overlooking a solution, I queried the developer, but they say that Mission Control is not designed to handle so many Spaces. <comment233023> Just to be clear, one can certainly have more than 16 spaces, but there's a lack of functionality to have corresponding keyboard shortcuts. This appears to be a holdover from before Mission Control had separate Spaces for displays. For example, three years ago, I would have up to [Desktop 10], which would be ten Spaces for each display. As such, it was previously unnecessary to have even [Desktop 16] (i.e., the old limit), since this would be equivalent to 32 Spaces (i.e., hard to keep organized). <comment233159> Good thinking to try that. Some preferences are cached though, so they may require a restart - did you try that? And double check that the changes persisted after the reboot too, just to be sure. <comment233169> Thanks @mjturner - good point! I've just rebooted and retested. The changes have persisted, but sadly ctrl-alt-6 still does nothing.