"bad interpreter: Operation not permitted" Error on El Capitan <body> My team is writing a Mac OS application that needs to call a shell script in an external directory.   The application works fine on Yosemite (10.10.3).  However, if I run it on El Capitan (10.11.2), the application gets errors like this from the script:  precode/bin/bash: &lt;path-to-script&gt;: /bin/sh: bad interpreter: Operation not permitted /code/pre  I can trigger this error on a simple script like this:  precode#!/bin/sh echo "Hello World!" /code/pre  I do not get an error if I run the scripts manually from the Terminal.  The application opens the script directory using a filechooser.  I confirmed that the application can read other files from this directory.  Changing code/bin/sh/code to code/bin/bash/code or a copy of code/bin/sh/code on a different path gives the same error with the new interpreter path.  A coworker tested this issue on a El Capitan machine with System Integrity Protection disabled, but he got the same error.  I am installing the test application from a .pkg file.  The entitlements are:  precode    &lt;key&gt;com.apple.security.app-sandbox&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.security.network.client&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.security.files.bookmarks.app-scope&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.security.files.user-selected.read-write&lt;/key&gt;     &lt;true/&gt; /code/pre  Adding the com.apple.security.files.user-selected.executable entitlement did not make a difference  If I try to run the .app that is generated in an intermediate step in the package build, I am able to run the script with no errors.  The question below describes a similar error.  However, I checked both the application and the script, and I found that neither one had the com.apple.quarantine attribute set.  -bash: Applications/mvim: /bin/sh: bad interpreter: Operation not permitted  UPDATE  Mark pointed out:  mount is adding a quarantine flag, causing: /bin/bash: bad interpreter: Operation not permitted - but not the usual suspects  I checked the parent directories all the way up to my home directory, but I didn't find the "com.apple.quarantine" and "com.apple.rootless".  I am running this from my main boot filesystem, and I confirmed that the "noexec" option is not set for the filesystem.  I am able to run the scripts manually, anyway.  The link also mentions line endings.  I wrote the example script above with vi, so I'm confident that this is not the problem.  <comment297745> see also http://apple.stackexchange.com/questions/64456/mount-is-adding-a-quarantine-flag-causing-bin-bash-bad-interpreter-operatio  The directory might also be quarantined