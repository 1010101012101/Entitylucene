Downloading multiple files with curl with different proxies <body> I'm trying to download multiple urls from different domains using different proxies.  It should do all these in one row of code, running curl just once:  precodedo shell script "curl --proxy 1.2.3.4:800 http://domain1.com/somefile.txt" do shell script "curl --proxy 2.3.4.5:80 http://www.domain2.com/otherfile.png" do shell script "curl --proxy 3.4.5.6:8080 http://domain3.com/file.jpg" ... /code/pre  This fails:  precodedo shell script "curl --proxy 1.2.3.4:800 2.3.4.5:80 3.4.5.6:8080 http://domain1.com/somefile.txt http://www.domain2.com/otherfile.png http://domain3.com/file.jpg" /code/pre  hr  Taking the code from an answer below I tried to run  precodeset url_list to "1.2.3.4:800 http://domain1.com/somefile.txt 2.3.4.5:80 http://www.domain2.com/otherfile.png 3.4.5.6:8080 http://domain3.com/file.jpg"  do shell script "xargs curl --proxy &lt; " &amp; url_list /code/pre  but this fails as well.  <answer91068> When you have a long URL or multiples, use xargs instead:  precodedo shell script "xargs curl --proxy &lt; url-list.txt" /code/pre  url-list.txt  precode1.2.3.4:800 http://domain1.com/somefile.txt 2.3.4.5:80 http://www.domain2.com/otherfile.png 3.4.5.6:8080 http://domain3.com/file.jpg /code/pre  <comment106951> How does the second example fail (error message etc.)? And to the question as a whole: What do you expect from running the three downloads in one row of code? Do you want to run them in parallel? <comment106952> Shouldn't you also pass `-L 1 -P 3` to `xargs` as well to ensure that `curl` is called correctly and that `xargs` runs the downloads in parallel? <comment106962> There is no need to run parallel. <comment106963> What is the motivation to have it all in "one row of code" then? <comment106972> @patrix, yes I normally would, although the `op` didn't have any of those args in their original command - so maybe they didn't want any reattempts. Proxy tunnel args are only necessary if not using HTTP protocol. <comment106973> I would pass them to xargs, not to curl. <comment106974> lol, ironic how those args still apply to the question in the curl aspect - but yes xargs eof and output is helpful no doubt and sorry i didn't notice that in your original comment.