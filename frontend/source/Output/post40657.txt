Is there a way to control the Numa settings on my iMac? <body> Is there a way to control the numa settings on the iMac (Core i7), OS X 10.7.3?  MacPorts doesn't have numactl and tbb/openmp are both slowing down since the memory is allocated incorrectly.  <answer41906> Does Lion even support NUMA ?  For Snow-Leopard, I thought, there was no NUMA support. German article as source.  I could not find a source for NUMA support in OS X, thus I would say that there's as well no way to control the NUMA-settings ;)  This Intel document states:     On multi-socket machines based on the Intel® Core™ i7 processor, NUMA is typically available as a BIOS boot option, but effective use also requires some OS and some user-level intervention.      Windows* OS support for NUMA started with Windows* Server 2003, and Linux* OS support requires kernel 2.6 or higher.   No OS X mentioned.  <answer219291> Why you think you program is slow due to memory allocated incorrectly?  There's always only 1 NUMA node/domain on any iMac, so it is not even a NUMA system; and since it's not a NUMA system there's certainly no control.  For those dual socket Mac Pro, memory are always configured in interleave mode, because the mach kernel is not NUMA aware.  <comment46667> numactl is linux specific. Even if you find it, compile it, you'll not be able to control anything. <comment46735> @mspasov: That is why the question is about how to control numa settings not how to compile numactl. <comment47260> @aterrel Can you describe numa more? What does it do? <comment47317> http://en.wikipedia.org/wiki/Non-Uniform_Memory_Access <comment47624> Most likely OS X doesn't support NUMA because the only Macs which ship with multiple processor chips are some of the Mac Pros. It's probably a lot easier to build that one model with SMP than to add NUMA support to the operating system. <comment47721> @iolsmit Thanks for finding the details. I think the story is that the combination of no NUMA settings and bad gcc openmp implementation are causing the effects I'm seeing. <comment265314> Sorry I don't have the benchmark code from 4 years ago.