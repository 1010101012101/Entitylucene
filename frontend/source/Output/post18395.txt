Does changing a daemon's plist file extension prevent it from being loaded? <body> I particularly want to disable: code/private/etc/mach_init.d/dashboardadvisoryd.plist.disabled/code, but in general for any daemon.br Does changing its codeplist/code extension prevent it from loading?br In the past I moved them to a different folder, but this is more convenient.  <answer18520> launchctl list and sudo launchctl bstree will show you the jobs. You'll need to read up on the mach_init part as well as be aware that launchd gets more and more of the pie as you go from Tiger/Leopard/Snow Leopard/Lion - your in general question is basically "walk me through launched" - The command mdfind dashboardadvisory will search in the areas hidden by default in spotlight as system files.br @bmikebr PS: post it as an answer if you want, so I mark it correct.  <answer25735> The answer is yes. OS X looks only for plist files when loading LaunchAgents or LaunchDaemons, regardless of whether you use the old style "Mach" way (which as bmike has pointed out has long been deprecated) or the current, modern method.  The contents of the plist file are as follows (this shows the AELWriter service):  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;com.apple.aelwriter&lt;/string&gt;         &lt;key&gt;MachServices&lt;/key&gt;         &lt;dict&gt;                 &lt;key&gt;com.apple.aelwriter&lt;/key&gt;                 &lt;true/&gt;         &lt;/dict&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;                 &lt;string&gt;/usr/sbin/AELWriter&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;false/&gt;         &lt;key&gt;UserName&lt;/key&gt;         &lt;string&gt;root&lt;/string&gt;         &lt;key&gt;ThrottleInterval&lt;/key&gt;         &lt;integer&gt;2&lt;/integer&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  You can see that what actually launches the service is a string under the key codeProgramArguments/code. Changing that value would also "disable" the service from running, as would removing the plist, renaming the file extension, or deleting the file outright.  <answer50053> You can also disable a given LaunchAgent or LaunchDaemon with launchctl without renaming the file.  precodesudo launchctl unload -w /Library/LaunchDaemons/com.whatever.you.want.to.disable.plist /code/pre  If you omit the -w, it'll only disable the task for the current boot. This is handy for testing if disabling a launchd task will fubar your system - if you run into trouble all you'll need to do to fix things is reboot, and things will be back to normal. Otherwise you'll have to boot into single user mode and manually edit the plist to re-enable the launchd task.  <comment20101> First check to make sure launchd isn't really loading these. mach_init is deprecated... <comment20118> this is the only hit I get from Spotlighting `dashboardadvisoryd` <comment20120> @bmike how do I check that? <comment20125> `launchctl list` and `sudo launchctl bstree` will show you the jobs. You'll need to read up on the mach_init part as well as be aware that launchd gets more and more of the pie as you go from Tiger/Leopard/Snow Leopard/Lion - your in general question is basically "walk me through launched" - The command `mdfind dashboardadvisory` will search in the areas hidden by default in spotlight as system files. <comment20261> @bmike thanks, after restarting, `launchctl bstree` doesn't show it anymore, so yes, seems it was loading from mach_init.d <comment36613> Note there's also a keyDisabled/key in some plist files which doesn't seem to do anything...