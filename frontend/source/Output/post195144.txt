What's the difference between the OS X version and build numbers? <body> Just for my curiosity and knowledge, from a software and hardware perspective, what's the difference between the OS X version and build numbers?  Example: Version 10.10.3 (14D136)  <answer195147> System Version Number follows codeMAJOR.MINOR.PATCH/code convention. From this site:     Given a version number MAJOR.MINOR.PATCH, increment the:      ol   liMAJOR version when you make incompatible API changes,/li   liMINOR version when you add functionality in a backwards-compatible manner, and/li   liPATCH version when you make backwards-compatible bug fixes./li   /ol      Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.   The number in brackets (14D136) is build number (more info on Apple site). This number is mainly for Apple developers, since normal users do not have access to non public builds. In continous integration, new build can be made daily/weekly - every time build number is incremented. When developers/PMs (or anyone else in charge) is "happy" with the build it can be released. Build numbers are constructed arbitrarly (I don't know of any standard numbering). It looks like Apple increments first number by every MINOR release, then the letter with PATCH release and the last number is the real build number. 