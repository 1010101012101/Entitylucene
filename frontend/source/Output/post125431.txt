What is the technical reason why OS X can't write to NTFS devices? <body> Mac OS X can't write to a hard drive with the NTFS format. It can, however, read it.  Why can't it write to it?  My basic understanding is that a file format dictates how is data stored and retrieved in a device. So, the key to working with a storage device is to know the rules for data storage and retrieval.  Since OS X is able to read devices with the NTFS format, obviously OS X emknows/em such rules. What exactly stops OS X from following the necessary rules to write data to an NTFS device? It emknows/em that it is NTFS (just do Get Info), so I see no reason why it can't do this.  <answer125452> OS X can write to NTFS volumes.  However, it's a hidden switch, and it's not supported.  Use it at your own risk.  OS-level support for a file system is a major technical investment.  It's not just about knowing the rules.  There are fundamental differences between HFS+ and NTFS, such as characters supported in the name and maximum file size.  When writing an OS, not to mention applications, it's very easy to make assumptions in your code that rely on the expected file system.    Reading a file from a different file system is significantly easier than writing a file to a different file system.  In only reading a file, there is very little chance of data loss.  In writing a file, it is imperative that the act of writing the file does not lose data (either in the file that you are writing, or other files on the disk).    Supporting another file system means that there is a massive expense to the OS development and test teams.  If you take a look at this comparison of file systems, you can see many places where these two file systems differ.  Without official support for NTFS, the safest assumption is that it hasn't been sufficiently tested and might not support all of the features of NTFS.    <comment146790> Mac OS X can write to NTFS disks. There is a terminal command (I believe it is this: sudo echo "UUID=ENTER_UUID_HERE none ntfs rw,auto,nobrowse"  /etc/fstab) that allows Mac to write. As to why Apple didn't enable it by default, I don't know. <comment146794> Actually it can and it works well if you do as AnonymousAppDev wrote. <comment146827> Great explanation!  In some cases the interoperability is impossible: a caes sensitive file system where there exit files named `a` and `A` in the same directory can't be correctly managed on an OS which is case *un*sensitive (because this OS won't be able to deal with the difference between these 2 files).