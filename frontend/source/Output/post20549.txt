What are the advantages of Emacs for Mac OS X users? <body> Over the past year or so I've seen a movement towards switching to Emacs on Mac OS X, often away from TextMate. While I understand the motivation for switching away from TextMate (TM2 is more or less vaporware), I don't really understand the appeal of Emacs. I recognize that it's an extremely powerful editor, but it does not integrate with the operating system very well, uses different key commands than most other applications, and has a heck of a learning curve.  With a preponderance of other programmer's text editors on Mac OS X (BBEdit, Sublime Text, Xcode) and some promising upcoming ones (Chocolat, Kod) what is the appeal of Emacs to someone that does not live in a terminal and does not have the muscle memory for it (yet)?  <answer20583> IMO, if you have a UNIX background with previous experience with Emacs, it might make sense to "carry it forward" onto OS X.  As a new text editor, I personally don't think it makes sense.  Yes, it is a fully capable text editor and it can do everything, but as you've said, it does not integrate well into the OS, which for me is a major hurdle.  I use vim on OS X because its my editor of choice on Linux (where I do much of the work that earns me money), however with that said, I've started learning and using BBEdit.  <answer20642> You can use a OSX GUI Emacs in the form of Aquamacs which is configured to be more OSX like it its key commands and menus and integrates with the OS.  One appeal of emacs is because emacs is mainly written in the language (e-lisp) that users can use to extend it there are a lot of scripts that add all sorts of functionality to the editor making it nearly as powerful as an ide. Even configuration is written in the same language so once you learn it you can modify anything you want.  The other reason I use emacs is that it runs on several OSs (Windows, Linux, Solaris and OSX ) and so I don't need a different editor for each one as I would if I used BBEdit etc.  <answer38896> Answers to questions like this are likely to be subjective. I tend to disagree that Emacs.app does not integrate well in MacOS. I'm currently using regular Emacs.app from emacsformacosx.com (not Aquamacs) and a few lines in ~/.emacs can easily use familiar shortcuts, e.g. try  precode(setq mac-option-modifier nil) (setq mac-right-option-modifier 'meta) (setq mac-right-command-modifier 'hyper) ;; M-x to its usual meaning: (global-set-key (quote [343144]) (quote execute-extended-command)) ;;  M-p to its usual meaning: (global-set-key (quote [332412]) (quote next-history-element)) /code/pre  Also shortcuts like cmd-O open the regular MacOS file dialog so no need to learn new shortcuts. Incidentally, several common MacOS shortcuts actually come from Emacs (e.g. C-a for beginning-of-line and C-e for end-of-line which are defaults in most MacOS apps like Safari or iWork).  Main reasons why I use Emacs:  ol liSupport for virtually any programming language, not just syntax highlighting but also styling, completion of identifiers, automatic indentation (just using TAB in emacs  keeps code clean and prevents a fairly good number of typos/mismatched parentheses etc)/li liorg mode/li liGreat support for editing/previewing LaTeX documents using AUCTex/li liWorkflow compatibility with my desktop, which is a Linux computer/li liPowerful tools for software (and not only) development like magit, emerge/li liAmazing support in EmacsWiki/li /ol  <answer46705> Not really a proper answer, but there are some mac specific bindings in the Cocoa Emacs build that are useful.  h1Emacs Cocoa Mac/OS X specific key bindings/h1  ul likbd&#x2318;/kbd + kbd&amp;/kbd kill-this-buffer/li likbd&#x2318;/kbd + kbd'/kbd next-multiframe-window/li likbd&#x2318;/kbd + kbd,/kbd customize/li likbd&#x2318;/kbd + kbd-/kbd center-line/li likbd&#x2318;/kbd + kbd;/kbd ispell-next/li likbd&#x2318;/kbd + kbdshift/kbd + kbd:/kbd ispell/li likbd&#x2318;/kbd + kbdshift/kbd + kbd?/kbd info/li likbd&#x2318;/kbd + kbdshift/kbd + kbdC/kbd popup-color-panel /li likbd&#x2318;/kbd + kbdshift/kbd + kbdD/kbd dired/li likbd&#x2318;/kbd + kbdshift/kbd + kbdE/kbd edit-abbrevs/li likbd&#x2318;/kbd + kbdshift/kbd + kbdH/kbd do-hide-others/li likbd&#x2318;/kbd + kbdshift/kbd + kbdL/kbd shell-command/li likbd&#x2318;/kbd + kbdshift/kbd + kbdM/kbd manual-entry/li likbd&#x2318;/kbd + kbdshift/kbd + kbdS/kbd ns-write-file-using-panel/li likbd&#x2318;/kbd + kbdshift/kbd + kbd^/kbd kill-some-buffers/li likbd&#x2318;/kbd + kbd`/kbd other-frame/li likbd&#x2318;/kbd + kbda/kbd mark-whole-buffer/li likbd&#x2318;/kbd + kbdc/kbd ns-copy-including-secondary/li likbd&#x2318;/kbd + kbdd/kbd isearch-repeat-backward/li likbd&#x2318;/kbd + kbde/kbd isearch-yank-kill/li likbd&#x2318;/kbd + kbdf/kbd isearch-forward/li likbd&#x2318;/kbd + kbdg/kbd isearch-repeat-forward/li likbd&#x2318;/kbd + kbdh/kbd ns-do-hide-emacs/li likbd&#x2318;/kbd + kbdj/kbd exchange-point-and-mark/li likbd&#x2318;/kbd + kbdk/kbd kill-this-buffer/li likbd&#x2318;/kbd + kbdl/kbd goto-line/li likbd&#x2318;/kbd + kbdm/kbd iconify-frame/li likbd&#x2318;/kbd + kbdn/kbd make-frame/li likbd&#x2318;/kbd + kbdo/kbd ns-open-file-using-panel/li likbd&#x2318;/kbd + kbdp/kbd ns-print-buffer/li likbd&#x2318;/kbd + kbdq/kbd save-buffers-kill-emacs/li likbd&#x2318;/kbd + kbds/kbd save-buffer/li likbd&#x2318;/kbd + kbdt/kbd ns-popup-font-panel/li likbd&#x2318;/kbd + kbdu/kbd revert-buffer/li likbd&#x2318;/kbd + kbdv/kbd yank/li likbd&#x2318;/kbd + kbdw/kbd delete-frame/li likbd&#x2318;/kbd + kbdx/kbd kill-region/li likbd&#x2318;/kbd + kbdy/kbd ns-paste-secondary/li likbd&#x2318;/kbd + kbdz/kbd undo/li likbd&#x2318;/kbd + kbd|/kbd shell-command-on-region/li /ul  <comment23042> Emacs is Emacs wherever you go. Learn it once (and print out a good cheat sheet), and you'll know it forever. <comment23798> Also note that many of the Emacs shortcuts work for text editing across OS X, for example Ctrl+D for right-delete, Ctrl+K for Kill and Ctrl+Y for Yank, etc. This plays well with Aquamacs Emacs where the Cmd+? shortcuts such as Cmd+Z for Undo, Cmd+X, +C, +V for Cut/Copy/Paste all work just like the rest of OS X. <comment44071> @Kevin:  I've been using it since 1991, and I'm still learning it.  ;-)  I live in it for work, I use it daily, but I'm still learning tips like M-/ for dynamic local completion... <comment44144> +1 as these are exactly the main reasons I use emacs on OS X, not to mention that is what I used on Linux before switching to Mac.  org-mode is great, and I'm always trying to find more ways to add it to my workflow.