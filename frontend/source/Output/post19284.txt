Can command-line commands be made insensitive to order of filenames and options? <body> I'm new to Mac usage.  It seems that most commands trip over options given after the file names. In linux, which I've used for years, it doesn't matter.  On Apple, it does.  Is there some setting somewhere or some hack to make commands like ls behave "normal"?  precodedwilson 0====&gt; ls -l p* -rw-r--r--@ 1 dwilson  owner  184 Jul 29 13:57 poo.c -rw-r--r--@ 1 dwilson  owner  133 Jul 29 13:57 poo.h  dwilson 0====&gt; ls p* -l ls: -l: No such file or directory poo.c        poo.h  dwilson 1====&gt; /code/pre  <answer19287> The example you have given is normal. I know of no *nix environment that will take flags/options after the file list for codels/code  Some commands are just different versions from whichever *nix environment you are coming from.  You can fix things like this by using codealias/code or other shells.  <answer22487> The reason for this is that Mac OS X uses BSD utils (which have a specific order to their parameters), whereas Linux uses the GNU utils, which can accept arguments in any order.  You can download and compile the GNU coreutils package, which should provide you with the utilities you're used to; I would recommend just getting used to the BSD utils, however, as you'll otherwise have problems moving to other systems. The BSD method works fine on GNU systems, but the GNU method is less portable.  <answer118327> If you are using MacPorts (and as a Linux connoisseur you probably are), you can install GNU coreutils with:  precodesudo port install coreutils /code/pre  and then make sure to add the coreutils path to your path:  precodeexport PATH=/opt/local/libexec/gnubin:$PATH /code/pre  sub[Sources: TJ Luoma comment to the accepted answer and this blog post.]/sub  <comment21156> Did you have `zsh` and a customized environment on linux? You might need to just set that up to get more permissive ordering of arguments. That would make my brain hurt, but if you are used to it - disruptive to change on the mac. <comment21191> The Mac uses tcsh, which I don't use much.  Maybe it's bash that's responsible for ls being so freely reorderable. <comment21217> The man page for `ls` clearly shows all arguments must precede the first file. Only the shell could glob the wildcard and sort the arguments first. Hopefully you can identify the linux settings for that shell and migrate those .files to mac. <comment39356> I recommend getting [Homebrew](http://luo.ma/brew) and installing the GNU coreutils, because they are much more feature-rich than the ones that Mac OS X includes. It's one of the first things I do when setting up a new Mac because I spend a lot of time at the command line and I want the best tools available. Note you'll need [Xcode](http://luo.ma/xcode) to compile Homebrew and other utilities. Otherwise you might want to checkout [Rudix](http://rudix.org) which offers pre-compiled binaries of many popular Unix utilities. <comment195385> That's no problem in the *nix environments I've come in contact with. Weird example though. `tail` is more interesting, for example `tail -f file -n 200` doesn't work as expected in OSX. <comment195827> @frans The `-f` in `tail -f` means "follow", not "file", so it doesn't take a filename as a second parameter. This behavior is consistent for all Unix systems which adhere to the options-before-filenames convention. <comment195923> Ha! Yeah, I actually knew that, I just experienced some kind of brain melt. Well, after installing coreutils I now get the same functionality as on Ubuntu, where `tail -f file -n 200` works, so I'm happy.