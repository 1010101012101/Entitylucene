Easy way to install additional spell-check dictionaries for OS X? <body> I am looking for an strongeasy way/strong to install spell-check dictionaries for languages that are not supported by default on OS X (one example Romanian).  By easy way, I mean a solution that does not require command line usage. While this is ok for me, for average OS X user this could be too complex.  <answer11837> Are you talking about in e.g. Word or Pages - or are you talking about in Browsers like Safari, FireFox etc. - or just a system wide configuration ??  One solution for a system wide configuration could be to install the cocoAspell dictionaries: http://kitblog.com/2010/10/get_romanian_spell-check_in_osx.html  <answer11842> Mac OS X is compatible with the aff/dic open format dictionaries.  All you need to do is to get one dictionary, and place it inside ~/Library/Spelling (you may have to create the directory).  ul liGet the Romanian dictionary from OpenOffice (or search for another language)/li liExtract the file using The Unarchiver or rename the extension to .zip and extract it/li liMove the files with the strong.aff/strong and strong.dic/strong extensions (ro_RO.aff and ro_RO.dic for Romanian) to your strong~/Library/Spelling/strong folder./li liGo to strongSystem Preferences  Keyboard  Text  Spelling/strong  and choose the language of your choice/li li...boom! you have system-wide spell checking :)/li /ul  <comment12376> In which format your would-be dictionary is? (I'm asking because I installed Finnish dictionary by just double-clicking a .pkg file, which I found from the internet â€” I presume this wouldn't help you.) <comment12384> I already installed cocoAspell but I encountered some issues. I had to do some ugly symlinks from /usr to /opt in order to make it use the dictionaries installed by macports. Personally I would like a better solution, one that could be used by common users (as opposed to power users). <comment216412> I'm little confused. Are you sure that it is `dicc` with double `c`? <comment349995> I agree, it should have been `.dic`, so I edited the original answer.