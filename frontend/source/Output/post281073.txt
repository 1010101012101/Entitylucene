Can automator's Filter Finder Items process music based on length? <body> I want to make an automator workflow to find certain audio files in a folder, but I want it to look at the duration of those files.  I'm looking for quite short audio samples of under 2 seconds.  It doesn't appear to have the ability to filter by duration.  Is there any other way to accomplish this in Automator?  Alternatively I can easily make a Smart Folder that contains what I'm looking for, but then Automator cannot find the contents of said Smart Folder in order to further manipulate them.  Is there any way to get the contents of a smart folder in Automator?  <answer281085> Lets assume you have some emaction/em that's passing off emfiles/em to a strongFilter Finder Items/strong emaction/em, set as strongFind files where: All of the following are true/strong emand/em strongKind is music/strong.  This ensures what's passed to the next emaction/em, a strongRun Shell Script/strong emaction/em, set as strongShell: /bin/bash/strong emand/em strongPass input as arguments/strong are music files.  Replace the default emcode/em in the strongRun Shell Script/strong emaction/em, having the above settings, with the following emcode/em:  precodefor f in "$@"; do     d="$(afinfo -r "$f" | awk '/estimated duration:/{print int($3)}')"     if [[ $d -lt 2 ]]; then         echo "$f"     fi done /code/pre  The results of the above emcode/em with be the emfully qualified pathname/em of music files with less than a 2 second duration and is passed to the next emaction/em as a emlist/em.  hr  To address your second comment to my original answer, use the following emcode/em in place of the emcode/em above:  precodefor f in "$@"; do     d="$(afinfo -r "$f" | awk '/estimated duration:/{print $3}')"     if (( $(echo "1.5 &gt; $d" | bc -l) )); then         echo "$f"     fi done /code/pre  <comment353655> What type of audio files? Are there different types, e.g. .mp3, .aiff, etc.? Are there only audio file in the target location? What are you going to do with the files with less than 2 second duration? I can give you a `bash` script that can isolate the audio files with less than 2 second duration if that's helpful. It can be use in a Run Shell Script action in Automator however it might be better if you add the workflow to the question too. <comment353660> That would help, in fact someone is already working on a script that accomplishes my ultimate goal, but there's an issue with spaces we have not been able to overcome yet so I was exploring other solutions.  See https://apple.stackexchange.com/questions/280950/are-true-dynamic-folders-not-a-smart-folder-savedsearch-possible/280999?noredirect=1#comment353651_280999 for the entire use case. <comment353666> I took a quick look at what you linked in the comment and don't want to deal with it as it's late. I'll look at it later tomorrow. I'll post an answer that address the filtering of the music files with less than a 2 second duration of this question without regard to the other question until I can throughly examine the other question. <comment353667> Well hot damn.  So far with your script, one line from the script in the other question, and a little Automagic, I've got a working solution.  I'll play with it a bit more to see if it breaks down anywhere and respond with results tomorrow.  But as far as this particular question goes, your answer nails it.  Thanks! <comment353791> Rats, one other question.  Can this be made to use non-integer durations?  Like what if I want 1.5 seconds or less?  I couldn't get it to work that way, not sure what's needed. <comment353841> It depends on music format. macos doesn't have built in support for most useful audio formats (not even flac and opus), so for them it's certainly easier to use your own index and code. the added benefit would be that you can make it cross platform. <comment353842> I'm just filtering on wav and aif files, that part is easy.  The problem now is getting the code provided below to work with fractional seconds. <comment353843> @Jonathan van Clute, I've updated the answer to handle floating point numbers. <comment353845> So awesome!  I had almost figured it out but wasn't likely going to get there for a while.  Thanks again! <comment353848> @Jonathan van Clute, BTW You can reverse `"1.5  $d"` to `"$d  1.5"` to make it easier to read and adjust the hard coded value of the equation. <comment353849> Thanks I had noticed that but it didn't bother me.  =)