Applescript Calculate Run Time of a Command <body> How would you calculate the time it took to run a command? Specifically, I want to know the time it takes to return a value in a Shell command. I wrote this up, would it work? (Psuedocode)  precodea=currentTime [command] b=currentTime print b-a /code/pre  If translated into Applescript would this work? Is there a better way to do this when calculating the runtime of a shell command (the command is run via codedo shell command/code)?  <answer196976> It’s not AppleScript, but is there a reason why the codetime/code command isn't applicable?  It’s used like this:  precodetime &lt;command&gt; time find /opt time tar xf bigFile.tar.bz2 /code/pre  It gives output like this:  precodereal    0m0.044s user    0m0.000s sys     0m0.008s /code/pre  <comment235420> Is executing the shell command via AppleScript a hard requirement (and if yes, why) or would you also be fine with having a way to measure execution time directly in the shell? <comment235421> Is there a way to have the output in nanoseconds? <comment235422> @patrix It would be fine to measure execution time directly in the shell. <comment235427> Hmmm, I’ve done a bit of reading and it appears not :(  Though I wonder if time smaller than milliseconds would be represented accurately using standard hardware—no idea, just thinking aloud. <comment235428> Just an FYI... From the BUGS section of time(1) man page, "The granularity of seconds on microprocessors is crude and can result in times being reported for CPU usage which are too large by a second."