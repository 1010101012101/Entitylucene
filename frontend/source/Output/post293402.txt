How to export to $PATH permanently because .bashrc file doesn't exist in $HOME directory <body> I am trying to figure out macOS and want to install Composer which was not a problem....but I need the Laravel and Symfony installer and in the documentation it says that I need to export the variable in .bashrc file.  Normally that file is in /home/username/ directory on Linux  But where is the .bashrc file on the Mac? How to export to the PATH?   <answer293414> It should be stored in code/Users/username//code. To append something to your code.bashrc/code file use   precodeecho foo &gt;&gt; ~/.bashrc /code/pre  Make sure to use code&gt;&gt;/code and not code&gt;/code, as the latter will overwrite the file.   As @fd0 said, you probably want this in your code.bash_profile/code to make sure it loads. I would append to your code.bash_profile/code like this:  precodeecho "export PATH="$HOME/path/added:$PATH"" &gt;&gt; ~/.bash_profile /code/pre  <comment370208> But it is not there. And if I create one and write export PATH there it doesn't have any effect <comment370210> You do not need to use `sudo` to write to your own `.bashrc`. <comment370212> you can use `touch ~/.bashrc` to create the bashrc file if it doesn't exist. You'll have to use `$PATH` to reference the correct variable, not just PATH. <comment370213> @fd0 thanks, I edited the answer. <comment370216> The terminal emulator starts the shell as a login shell. `.bashrc` will not be read. Use either `.bash_login`, `.bash_profile`, or `.profile`. <comment370243> where is that .bash_profile file??? <comment370253> @lewis4u in the same directory as `~/.bashrc`, in `/Users/username/`. If it doesn't exist you can create it with `touch ~/.bash_profile` <comment370349> It didn't work, I don't know why....but here is how I solved the problem. I have installed iTerm2 and then zshell and i got the .zshrc file in my home directory and when I exported the PATH in .zshrc file it worked right away...So if you want to write this into your answer i will be glad to accept it and vote you up!