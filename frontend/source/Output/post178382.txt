Script to change downloaded mac wallpaper automatically? <body> I want to change my mac wallpaper daily with microsoft bing images.  I found this script that download the daily picture automatically, but I sill have to set the wallpaper automatically. strongIs it possible to write a script/strong (either terminal or applescript) strongthat set the downloaded picture as wallpaper automatically?/strong  <answer178388> Solved! I used the Bing Wallpaper.app found here that does exactly what I needed.   <answer178389> You could use this script taken from here.  precode#!/usr/bin/env python import os import md5 import pprint import sys import subprocess from time import strftime from urllib import URLopener from urllib2 import urlopen from xml.dom.minidom import parseString  # Defines source and destination of image rss_feed = 'http://feeds.feedburner.com/bingimages'; dst_dir = os.path.expanduser('~/Pictures/DeskFeed/')  SCRIPT = """/usr/bin/osascript&lt;&lt;END tell application "Finder" set desktop picture to POSIX file "%s" end tell END"""   def set_desktop_background(destination): subprocess.Popen(SCRIPT%destination, shell=True)  def parseFeed(rss): destination = "%s%s.jpg" % (dst_dir, strftime( "%y-%m-%d")) if os.path.exists(destination): sys.exit(0)    try: rss_contents = urlopen( rss ) except: print "Failed to read rss feed %s" % rss return rss_src = rss_contents.read() rss_contents.close() dom = parseString( rss_src ) firstitem = dom.getElementsByTagName('item')[0] link = firstitem.getElementsByTagName( 'enclosure' )[0].getAttribute('url') URLopener().retrieve(link, destination) set_desktop_background(destination)   def main(): parseFeed(rss_feed)  if __name__ == "__main__": main() /code/pre  The only downside is you would need to make a cron job to run it every day.  <answer181814> I made a command-line app that can change the desktop wallpaper from the terminal:  precode$ npm install -g wallpaper $ wallpaper unicorn.jpg /code/pre  <comment211270> Glad we could help out :) <comment211275> Sometimes [talking to the duck](http://en.m.wikipedia.org/wiki/Rubber_duck_debugging) does the trick.