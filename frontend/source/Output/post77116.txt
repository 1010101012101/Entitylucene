Merging pdfs with automator <body> I'm scanning my mail and end up with two versions: front &amp; back.  Files are named: scanf 01.pdf &amp; scanb 01.pdf  I'm scanning about 40 pages a day, so it ends up to quite some lists.  Now, with automator, I've done the following:  ol liGet Selected Finder Items # "scanf 01.pdf" &amp; "scanb 01.pdf"/li liCombine PDF Pages/li liMove Finder Items # to Desktop/li liName Single Item # so that its not a random name, but "Scan.pdf"/li liAdd Date or Time # "Scan 2013-01-07.pdf"/li liMake Sequential # "Scan 2013-01-07 01.pdf" (is at least the idea)/li liLabel Finder Items # Adds a red label, so I didnt see it yet/li /ol  Step 6 is not working, as the sequence starts over every time I select two new files. So it says 'name already exists', after that it stops.  Questions:  ol liHow can I make step 6 work?/li liIs there something that automatically merges files, so that Scanf 01.pdf is merged with Scanb 01.pdf and that Scanf 02.pdf is merged with Scanb 02.pdf, and so on. As my current automator setup requires me to select the two files./li /ol  <answer77124> I didn't really test this, but you could use a shell script instead.  precode#!/bin/bash  join="/System/Library/Automator/Combine PDF Pages.action/Contents/Resources/join.py" date=$(date '+%Y-%m-%d') last=$(ls ~/Desktop/$date*.pdf 2&gt; /dev/null | tail -n1 | sed -E 's/.* 0*(.*)\.pdf$/\1/g' || 0)  cd ~/Documents/Scanned/ for f in scanf*.pdf; do     ((last++))     output="$HOME/Desktop/$date $(printf %03d $last).pdf"     python "$join" -o "$output" "$f" "${f/scanf/scanb}"     osascript -e 'on run {f} tell app "Finder" to set label index of (posix file f as alias) to 2 end' "$output" done /code/pre  <answer77156> The reason you're running into unexpected "file already exists" errors is that the strongMake Sequential/strong action only works for single iterations of the workflow. If you run the workflow twice, it will fail the second time, because the counter resets and it tries to start the numbering at 1. So if you already have an item named codeScan 2013-01-07 01.pdf/code, it tries to make another named that and fails.  The workaround is to use a script to do the renaming for you, which can detect if there are already duplicate files and start over.  In place of the strongMake Sequential/strong action, add a strongRun Shell Script/strong action, with the shell set to strong/usr/bin/python/strong, the input to strongas arguments/strong, and paste in this script:  precode#!/usr/bin/python  import sys import os  decimalPadding = 2 # pad to x decimal places returnFiles = ''  for filePath in sys.argv[1:]:     pathNoExt, extension = os.path.splitext(filePath)     counter = 1     newPath = pathNoExt + ' %0*d' % (decimalPadding, counter) + extension      #     Increment counter until we find a file that does not exist     while os.path.exists(newPath):         counter += 1         newPath = pathNoExt + ' %0*d' % (decimalPadding, counter) + extension     os.rename(filePath, newPath)     returnFiles += newPath + '\n'  print returnFiles #pass the renamed files for other automator actions /code/pre  That should get you the results you desire. 