Why is Java consuming 100% CPU on my machine? <body> I have an iMac (early 2010) running 10.7.2 but the problem has been seen on 10.6.x also. The symptom is simple, one of my 2 cores is sitting at 100% utilization with the Java process responsible  for the excessive usage.   What have I done to troubleshoot?  ul listrongReboot/strong - The java process simply restarts and the same condition is seen./li listrongKill the Java process/strong - As with a reboot./li listrongUninstall and reinstall Java/strong - Soon after installing Java the CPU is back at 100%./li listrongUsing ps "process id" I can see that it is launchd spawning the process and that the command used to start the process is/strong:  precodejava -Djava.awt.headless=true -jar /tmp/ics29586 /code/pre/li listrongThe ics29586 file is an 11mb binary file./strong/li listrongDeleted the ics29586 file/strong - File is recreated at next process restart and same condition is seen/li listrongCreated a new user account, rebooted and logged in as the new user/strong - Same condition is seen./li listrongPlayed with Java settings and restarted the process after each change/strong - Same condition seen./li listrongComplete machine rebuild/strong - Soon after installing Java the CPU is back at 100%./li /ul  So, has anyone either got the the answer for what is causing it and how to fix it, or some advice on ways of further troubleshooting the issue?  hr  In response to some of the comments asking for more info:  ul liI'm not running crashplan./li liI couldn't work out how to get Activity Monitor to show me open files, but googling suggested LSOF was a good match for what you wanted to know. It showed no open files:  precodeDeep-Desk:LaunchAgents photo$ sudo lsof -c java Deep-Desk:LaunchAgents photo$  /code/pre/li liThere are 220 ports open for the Java process at present/li liThe only file of interest in either the LaunchDaemons or LaunchAgents folders is:  precode-rw-r--r--   1 root  wheel   568B 10 Mar  2011 com.microsoft.office.licensing.helper.plist      /code/pre/li liEverything else is either com.apple or has a date well after the problem first manifested. By way of a test I have renamed the com.microsoft file to old.com.microsoft but it made no difference. I also moved the file completely out the LaunchDaemons directory and that made no difference either, the process still respawns, hangs around not doing much for a few minutes, then goes out of control and consumes all the CPU on 1 core./li /ul  <answer35781> h2I don't know either, but here's how to find out more/h2  In cases of entirely unknown binaries, strongstrings(1)/strong is often helpful in getting a hint about what the file might be  precodestrings /tmp/ics29586 | less /code/pre  Have a look through the output and see if it's anything familiar.  Failing that, find out which launchd job it is being launched from:  pre class="lang-sh prettyprint-override"codelaunchctl list|awk '{id=$3; print "### " id; system("launchctl list " id)}'|awk '/^###/ {id=$2} /.*ics29586.*/ {print id}' /code/pre  This should output one or more job tags in the form of (for example) strongcom.apple.scrod/strong (and a few errors, which you can ignore).  Once you have the job tag(s), get the launchd config for a job by running:  pre class="lang-sh prettyprint-override"codelaunchctl list com.apple.scrod    # insert your tag instead /code/pre  This (and the tag itself, which often contains an internet domain name in reverse notation) should give you some more information about what this process is. Feel free to post it here if you need further help.  strongUpdate:/strong Forgot to mention this, but since it's a jar file, you can copy it somewhere and unzip it (jar files are really just zip files) and have a look at what sort of Java classes are in there.  <answer35856> Got it. After help from two friends, I can say the following.  ul liin /etc/crontab there was an entry:  precode*/5 * * * * root /usr/bin/adjkerntz /code/pre  -in /usr/bin there was a program called adjkerntz. I believe that this a genuine name for a valid binary in some unix/linux implementations, but not OSX. It also has different permissions to every other executable in /us/bin:  precode-rwxr-xr-x    1 root   wheel     74688 18 Sep 00:26 addftinfo -rwx------    1 root   wheel   2841604 18 Sep 20:49 adjkerntz -rwxr-xr-x    1 root   wheel    223312 18 Sep 00:26 afconvert /code/pre/li liI hashed out the cron entry and killed the java process and hey presto no further issues. /li liI also deleted adjkerntz and on the suggestion of my excellent friends, I did the following to make sure it doesn't reoccur:  precodesh-3.2# touch adjkerntz sh-3.2# chflags schg adjkerntz /code/pre/li liThis makes the file immutable and even root can't modify that file. /li /ul  This does leave the question of how this got there in the first place, but I guess the Internet can be a dangerous place. Thanks to all who have contributed their time to helping me get to the bottom of this.  <answer76177> If you drop into terminal, you can type codeps -ef | grep java/code  You'll see all the processes with "java" in their descriptions and details on the process which launched each of them.  In my case, CrashPlan is doing a restore and the client app is Java-based.  I see:  precode0    85     1   0 10:35PM ??        98:28.26 /usr/bin/java -Dapp=**CrashPlanService** -Xmn10m -Xms15m -Xmx512m -DappBaseName=**CrashPlan** -Djava.awt.headless=true -... /code/pre  Once you know who is using it, you can decide if it's something you want to remove or not...  <comment40746> What open files does the java process have? In the Activity Monitor, click the process, choose "inspect", and look at "Open Files and Ports". Edit that into your question, it will help us know what the process is actually doing. <comment40751> What are the contents of the system-wide LaunchAgents/LaunchDaemons folders? Anything whose name doesn't start with `com.apple` and has e.g. a modification date different from all others? <comment40753> Are you using CrashPlan? Some users reported trouble with it [in a topic on another site](http://superuser.com/a/282412/22317) <comment40788> +1 - Had the same issue. Personally I ended up removing Java and use it only in Parallel on an XP VM... I never seem to need Java on Lion, anyway, so why leave it installed? <comment40839> The strings output showed a whole heap of info, a sample of which is here: `org/apache/commons/io/output/ByteArrayOutputStream.class org/lwjgl/NondirectBufferWrapper.class org/xbill/DNS/GPOSRecord.class net/freehaven/tor/control/TorControlConnection$ReplyLine.class org/mozilla/classfile/ClassFileWriter.class org/mozilla/javascript/Script.class; org/bouncycastle/asn1/BERFactory.class redstone/xmlrpc/serializers/json/IntrospectingSerializer.class org/codehaus/jackson/map/JsonMappingException.class org/joda/time/chrono/ISOChronology$Stub.class` <comment40840> Also the attempt to find the job launching the process was unsuccessful: `Deep-Desk:LaunchAgents photo$ launchctl list|awk '{id=$3; print "### " id; system("launchctl list " id)}'|awk '/^###/ {id=$2} /.*ics29586.*/ {print id}' launchctl list returned unknown response launchctl list returned unknown response launchctl list returned unknown response Deep-Desk:LaunchAgents photo$ ` <comment40846> Did you restart the system after moving away the `com.microsoft.office.licensing.helper.plist` file? What happens when you run `launchctl unload -w com.microsoft.office.licensing.helper`? <comment40848> I didn't but have now to no affect. <comment40849> `Deep-Desk:tmp photo$ sudo launchctl unload -w com.microsoft.office.licensing.helper Password: launchctl: Couldn't stat("com.microsoft.office.licensing.helper"): No such file or directory nothing found to unload` <comment40863> So I also unzipped the JAR as you suggested and can see some the file structure. There is a bit coin miner in there called DiabloMiner.cl and something called klog which worries me <comment40880> I have found that the java process is spawning a process called pipd which I can't find any info about thought there is a reference to pipe in apples developer docs: 'pipd' dotted decimal form Property of class: Internet address Standard Additions : Internet Suite <comment40897> http://www.itwire.com/business-it-news/security/50754-bitcoin-miner-trojan-arrives-for-mac-os-x <comment40898> I haven't installed the software specified but I am by no means innocent of such things. Karma's a bitch aint it. <comment40903> Ouch :) Poor implementation though, if it was only using one core ;-) <comment40922> @ingmar HaHa ;) <comment88388> Thanks for documenting this program and what it's doing / how to track it. Most people are keeping java off their systems, but with legitimate tools like CrashPlan using it, some choose to still be open to running code from the internet.