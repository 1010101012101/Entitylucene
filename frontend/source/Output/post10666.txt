Why setting image as its own icon with sips result a blurred icon? Are there any alternatives? <body> I've successfully changed icons using the procedure described in an another question: Changing or setting a file or folder icon programmatically. Either my codesips/code (or Finder) got broken afterwards or I just zoomed in for the first time (it seems the icon is sharp from ≈100x100 downwards), but, anyway, the icon that codesips -i image.png/code creates is blurry/pixelated:  img src="https://i.stack.imgur.com/LmlX4.png" alt="blurry icon"  What I did before the blurrification:  precode$ cp FIN-2.png FIN-3.png $ sips -i FIN-3.png /code/pre  So FIN-2 and FIN-3 are the same. FIN-2 is a 512x512 PNG-file  strongFurthermore:/strong using codesips/code breaks emall/em further attempts when trying to set a custom icon even with emany GUI method/em and with emany file/em in emany folder/em.  Only cure is to delete code~/Library/Caches/com.apple.finder//code and restart Finder. Then changing icon via GUI (drag&amp;drop, copy&amp;paste) works normally with any file.  hr  Two main questions—and answering to either one probably solves the problem close enough for me:  ol start="2" listrongHow can I set an image as an icon programmatically without using codesips -i/code (= codesips --addIcon/code) in the process?/strong (again, refer to the other question for more comprehensive info)  ul liShell (bash) or AppleScript is preferred/li liI could convert the PNG to e.g. ICNS if needed./li /ul/li liIs codesips/code broken? Why/How? Can it be fixed; how? (Or is it the Finder? Or something else?)/li /ol  <answer10783> I think I've found a workaround!  First off, install codeosxutils/code bundle which is a bit dated (2005) but nevertheless it works. (see the osxutils contents and man pages)  Prepare the PNG to ICNSsup†/sup—ironically you can use codesips/codesup‡/sup. Then use codeseticon/code from the codeosxutils/code bundle to change the icon:  precode$ sips -s format icns FIN.png --out FIN.icns $ seticon -d FIN.icns FIN.png /code/pre  The codeseticon/code also changes the file's attributes, ie. using codeSetFile -a C/code isn't necessary.  hr  †: Using a PNG as a source file for codeseticon/code changes the icon to a generic PNG icon, even with code-d/code option. Furthermore, using codeseticon FIN.icns FIN.png/code changes the icon to a generic ICNS icon. (Consult the seticon's man pages)  ‡: NB: the source file emmust/em be a square and possible side-lengths are: 16, 32, 48, 128, 256 and 512.  <answer238927> Strangely enough the best solution seems to be not to use Apple's own tools but the Python code because it has 3 advantages not being limited by:  ul lioutput file resolutionbr (it works till 1024x1024)/li liinput file formatbr (tried with ICNS and PNG)/li lipermissions to installbr (define it as a function)/li /ul  <comment293086> Welcome to Ask Different! I'd recommend taking a look at [this answer](http://apple.stackexchange.com/questions/230697/create-icns-ad-hoc/230796#230796) to a similar question that uses preinstalled utilities but supports features not supported by previous apps. Not sure why it's blurry in this example. <comment293376> Maybe I am quite new to _this_ subsite, but not the topic, take a look at http://stackoverflow.com/a/31150333/1535581. What are the features you refer to? It's blurry because it uses `sips -i` that seems to be limited at a resolution of 256x256 pixels at the moment.