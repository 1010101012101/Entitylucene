define local keyword globally in a macports config <body> My main target is to globally enable all ports to compile with macports-clang-3.4 and use libc++ instead of libstdc++.  For example when working with one port I need to set codeconfigure.compiler=macports-clang-3.4/code and codeconfigure.cxx_stdlib=c++11/code to the command line. But how I can set this variables via macports configuration globally so that any invocation of codeport/code would automatically use my defaults? codevariants.conf/code accepts only variants and no keywords and codemacports.conf/code only includes global keywords.  <answer122997> I'm assuming you're on a system &lt; Mavericks because otherwise codelibc++/code and a recent clang would already be your default and forcing it wouldn't make a lot of sense.  Use MacPorts trunk (or wait for the 2.3 release) and set the following options in code$prefix/etc/macports.conf/code:  ul licodecxx_stdlib libc++/code/li licodebuildfromsource always/code/li licodedelete_la_files yes/code/li /ul  If you use Xcode = 4.2 I wouldn't bother changing the default compiler, since system clang is already the preferred MacPorts compiler and some ports specifically change that if that doesn't work (which might break if you force it to be a different compiler). If a port doesn't work with your version of system clang, but will work with a newer clang, ports will usually automatically choose a macports-clang instead.  If you use Xcode &lt; 4.2, add codedefault_compilers macports-clang-3.4 macports-clang-3.3 macports-llvm-gcc-4.2 apple-gcc-4.2/code to your codemacports.conf/code. Note that doing this is entirely unsupported, deliberately undocumented, and if it breaks you get to keep the pieces.  You need to reinstall all your ports after doing that.  <comment143634> Thanks, I'll try this. I know there would be a lot of fuzz with ranlib/ar also.