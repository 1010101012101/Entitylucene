Newly Installed App (gem) Via Terminal, Path? <body> I have used codesudo gem install/code to install a few gems. My question is how do I know where the executable was installed, so I can add it to the path in code.bash_profile/code?  <answer4810> I believe that al that is in code/usr/bin/code and similar.  You can always try codewhereis xxxxx/code and codelocate xxxx/code (after both db’s have been rebuilt via the daily/weekly scripts).   Most of those things go somewhere inside code/usr/code sometimes code/usr/local/code.  <answer4811> Ruby "Gems" are not generally applications, most often they are libraries. From the Ruby Gems website     1.1 Really Quick Start Question: I’ve installed RubyGems and I want to   install Rails (for example). How do I   do that?      Answer:  precodegem install rails /code/pre      1.2 What is a Gem?      A gem is a packaged Ruby application or stronglibrary/strong. It has a   name (e.g. rake) and a version (e.g.   0.4.16).   (emphasis mine)  Also, see this information on how to inspect a gem:     2.5 Looking at an installed gem When you run  precodegem specification  progressbar # shortcut: gem spec progressbar /code/pre      you will see all the details of the   ’’progressbar’’ gem.   You should consult the documentation which came with the gem, or, post more details so we can assist you more.  <answer4820> Also if you type: gem list  then you will get a list of all the gems that you have installed. At least that way you can check to see if it installed properly and which ones you currently have installed.  The path to my gems on my Windows PC is:  precodeC:\Ruby192\lib\ruby\gems\1.9.1\gems /code/pre  Probably the same location/file hierarchy on the Mac as well. (except for that whole codeC://code part ;-)  strongEDIT/strong  I took the following quote from the page talking about installing Sproutcore. It might help you in figuring out this path issue. Let me know! (I am a n00b when it comes to this stuff. I just starting learning it yesterday! But I found lots of helpful information!)  http://wiki.sproutcore.com/w/page/12412840/Abbot-Setting%20Up     if you faced a problem during the last part then this probably because the PATH of the gem isn't the default one.  You can call the command as      /var/lib/gems/1.8/bin/sc-init HelloWorld   cd hello_world   sc-server      Or you may reconfigure the path  by running the following command   precode      PATH=/var/lib/gems/1.8/bin       export PATH /code/pre     Then rerun sc-init command.       Now visit http://localhost:4020/hello_world to see your handiwork.   <answer4836> Use the codegem env/code command to display where Gems stores everything.  precodeGreg:~ greg$ gem env RubyGems Environment:   - RUBYGEMS VERSION: 1.3.5   - RUBY VERSION: 1.8.7 (2009-06-12 patchlevel 174) [universal-darwin10.0]   - INSTALLATION DIRECTORY: /Library/Ruby/Gems/1.8   - RUBY EXECUTABLE: /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby   - EXECUTABLE DIRECTORY: /usr/bin   - RUBYGEMS PLATFORMS:     - ruby     - universal-darwin-10   - GEM PATHS:      - /Library/Ruby/Gems/1.8      - /Users/greg/.gem/ruby/1.8      - /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/lib/ruby/gems/1.8   - GEM CONFIGURATION:      - :update_sources =&gt; true      - :verbose =&gt; true      - :benchmark =&gt; false      - :backtrace =&gt; false      - :bulk_threshold =&gt; 1000   - REMOTE SOURCES:      - http://gems.rubyforge.org/ /code/pre  However, to avoid having to use codesudo/code to install gems into the System version of Ruby, I use RVM, which sandboxes all my gems plus any additional versions of Ruby I want to install. I've been using it for a while and love it.  <comment4712> Maybe I'm missing something but `type xxxx` usually works better for me. <comment4714> Huh. Never knew about `type` before. <comment4924> This was actually the root cause of my problem, I was using RVM. But had not set the appropriate version of ruby in my session. Still learning... <comment4925> Use `rvm use 1.9.2 --default` to set a particular version of Ruby as your default. Of course you'll want to substitute the version of Ruby you favor if it's different than 1.9.2.