"sed" or "awk" launched on opening terminal window <body> At some point, I've noticed strange behavior of Terminal app - now on opening new window i get this as normal:  precodeLast login: Tue Nov 27 11:54:21 on ttys001 /code/pre  but can't see the "~" sign afterwards and window title shows "Terminal - sed - 80x24" which means that sed is running. After hitting two times "enter" key, everything goes normal, but now after every new command i enter, i have to hit twice "enter" after it. This drives me insane! Have no idea what happened. Maybe there is some startup-configuration script for terminal/bash? I've checked .bash_profile it looks fine as it used to be.  Here is my .bash_profile file:  precodeexport DOCUMENTS=~/Documents alias twrangler="open -a TextWrangler" alias countloc="find -f . '(' -name '*.m' -or -name '*.mm' ')' -print | xargs wc -l"  # Terminal colours (after installing GNU coreutils) # NM="\[\033[0;38m\]" #means no background and white lines # HI="\[\033[0;37m\]" #change this for letter colors # HII="\[\033[0;31m\]" #change this for letter colors # SI="\[\033[0;33m\]" #this is for the current directory # IN="\[\033[0m\]" # export PS1="$NM[$SI\w$NM] $IN"  export HISTCONTROL=ignoredups # Ignores dupes in the history shopt -s checkwinsize # After each command, checks the windows size and changes lines and columns  # bash completion settings (actually, these are readline settings) bind "set completion-ignore-case on" # note: bind is used instead of setting these in .inputrc. This ignores case in bash completion bind "set bell-style none" # No bell, because it's damn annoying bind "set show-all-if-ambiguous On" # this allows you to automatically show completion without double tab-ing  # Turn on advanced bash completion if the file exists (get it here: http://www.caliban.org/bash/index.shtml#completion) if [ -f /etc/bash_completion ]; then . /etc/bash_completion fi  # Useful aliases alias ls='ls $LS_OPTIONS -hF' alias ll='ls $LS_OPTIONS -lhF' alias l='ls $LS_OPTIONS -lAhF'  alias g='grep -i' #case insensitive grep alias f='find . -iname' alias ducks='du -cks * | sort -rn|head -11' # Lists the size of all the folders and files alias top='top -o cpu' alias systail='tail -f /var/log/system.log'  alias cd..="cd .." alias c="clear" alias e="exit" alias ssh="ssh -X" alias ..="cd .." #alias mysqlstart='sudo /opt/local/bin/mysqld_safe5 &amp;' #alias mysqlstop='/opt/local/bin/mysqladmin5 -u root -p shutdown' #alias remount='sudo ~/scripts/remount.rb' #alias ffman='/Applications/Firefox.app/Contents/MacOS/firefox -ProfileManager' #alias ffdev='/Applications/Firefox.app/Contents/MacOS/firefox -P rainbow' #' -chrome chrome://chromebug/content/chromebug.xul -firefox' #alias fft1='/Applications/Firefox.app/Contents/MacOS/firefox -P test1' #alias ffxr='/Applications/Minefield.app/Contents/MacOS/firefox -P xrefresh-dev' #' -chrome chrome://chromebug/content/chromebug.xul -firefox' #alias ffxr2='/Applications/Minefield.app/Contents/MacOS/firefox -P xr2' #' -chrome chrome://chromebug/content/chromebug.xul -firefox' #alias ff13='/Applications/Minefield.app/Contents/MacOS/firefox -P fb13' #' -chrome chrome://chromebug/content/chromebug.xul -firefox' #alias ffhed='/Applications/Firefox.app/Contents/MacOS/firefox -P hed' #' -chrome chrome://chromebug/content/chromebug.xul -firefox' #alias ffgae='/Applications/Minefield.app/Contents/MacOS/firefox -P gae' #' -chrome chrome://chromebug/content/chromebug.xul -firefox' #alias ffgae2='/Applications/Firefox.app/Contents/MacOS/firefox -P gae' #' -chrome chrome://chromebug/content/chromebug.xul -firefox' #alias runsvn='/usr/bin/sudo -u www /opt/local/bin/svnserve -d -r /var/svn'  #alias spotbuild='sudo mdutil -E /'  if [ -f /opt/local/etc/bash_completion ]; then . /opt/local/etc/bash_completion fi  COLOR_YELLOW="\[\e[33;10m\]" COLOR_RED="\[\e[31;10m\]" COLOR_GREEN="\[\e[32;10m\]" COLOR_BLUE="\[\e[34;10m\]" COLOR_NONE="\[\e[0m\]" COLOR_NONEP="\[\e[38;0m\]"  git_dirty_flag() { git status 2&gt; /dev/null | grep -c : | awk '{if ($1 &gt; 0) print "‚ö°"}' }  parse_git_branch() { git branch --no-color 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/' }  prompt_func() { previous_return_value=$?; prompt="${COLOR_BLUE}\w${COLOR_GREEN}$(parse_git_branch)${COLOR_YELLOW}$(git_dirty_flag)${COLOR_NONEP}" if test $previous_return_value -eq 0 then PS1="${prompt}${COLOR_NONEP}${COLOR_NONE} " else PS1="${prompt}${COLOR_RED}${COLOR_NONE} " fi } PROMPT_COMMAND=prompt_func  # MacPorts Installer addition on 2011-11-02_at_22:46:11: adding an appropriate PATH variable for use with MacPorts. export PATH=/opt/local/bin:/opt/local/sbin:$PATH # Finished adapting your PATH environment variable for use with MacPorts. /code/pre  <answer72896> The only other scripts you are sourcing in your code.bash_profile/code are  precode/etc/bash_completion /code/pre  and   precode/opt/local/etc/bash_completion /code/pre  I would check if they were recently updated and if they are damaged. In any case I would avoid calling both (which could also be the problem). If you use bash-completion from MacPorts just use the second.  <answer72903> ok, I've found the problem. it was tricky and several different results led to it. but it always wise to figure out our mistakes, so here was mine:  ol lii used strong.bash_profile/strong file with some settings for convenient use (like aliases, coloring, etc.). i just copied that file from my friend and never looked at it thoroughly, however should done this. there are some bash functions which adds to the variable codePROMPT_COMMAND/code the name of current git branch, so it is convenient when you make codecd/code in this folder, the branch is shown automatically in green color near code~/code sign, like this: "code~master/code". you can find this in .bash_profile as codeprompt_func/code and codeparse_git_branch/code functions. they are using codegit/code command/li lithis profile file always worked well. but at some point (today) it stopped. so i just pulled my bash history and after some thorough exploration and thinking have found the problem. here is the excerpt of output from codehistory/code:/li /ol     437  curl -s -O http://github-media-downloads.s3.amazonaws.com/osx/git-credential-osxkeychainbr   438  chmod u+x git-credential-osxkeychainbr   439  sudo mv git-credential-osxkeychain `which git`   strange command   precodesudo mv git-credential-osxkeychain `which git` /code/pre  was intended to move file stronggit-credential-osxkeychain/strong to the directory, where git resides (codewhich git/code), for my system it is strong/usr/bin/git/strong. but what actually was made is that this file was moved to the  directory strong/usr/bin/strong with the name stronggit/strong and the directory with the git itself was just overwritten by that file, e.d. gone!! so now, coming back to the scripts functions in strong.bash_profile/strong which is using git, everything looks simple and obvious - there is no git, but the file named git (which is executable btw - utility for setting up git credentials) and functions use this utility thinking that it is git itself.  therefore now, solution for me is to restore git installation and rename stronggit/strong file back to stronggit-credential-osxkeychain/strong  resume - strongnever write bash code in emone-line/em unless you clearly understand what will bring each statement of it to the results/strong  thanks for all who took part in this.  <comment84608> Can you add the contents of your startup scripts? Are there any other in your home dir? <comment84641> well, just .bash_profile that i used for ages. it sets up paths, some environmental variables and aliases. its quite big to post here. do you think it could be the issue? <comment84645> ok, maybe you're right. i removed .bash_profile at all and everything works now. hm, the rest is to figure out what caused that behaviour <comment84650> i've checked it - the if statement not executed, because there is no such file in that directory. anyway, thanks for contribution! i've figured out the problem and posted it as an answer <comment84741> `which ` returns the full part and not just the directory component I'm afraid. <comment84770> that's true, didn't realize that before