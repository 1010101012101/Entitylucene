Is it possible for an AppleScript application's "Quit" button to override (i.e., cancel) an open dialog? <body> To witness the issue to which I refer, follow these steps:  ol liCreate an AppleScript that simply contains one codedisplay dialog/code dialog./li liSave this script as an .app file./li liRun the .app file./li /ol  If you right-click the file's Dock icon, then left-click kbdQuit/kbd, as depicted in the following screenshot:  img src="https://i.stack.imgur.com/1yACl.png" width="200"  you will observe that nothing happens. That is, the application remains open.  The keyboard shortcut, kbd⌘ command/kbd + kbdQ/kbd, is similarly futile.  The only way to quit this application (excluding clicking "Force Quit" in Activity Monitor.app) is to click a button in the application's active dialog.  Is it possible to make an AppleScript application's inherent "Quit" function quit out of the application, even if the application is currently displaying a dialog when the "Quit" function is called?  hr  Note: The codedisplay alert/code dialog and the codechoose from list/code dialog behave in the same domineering manner as the codedisplay dialog/code dialog.  <answer286518> The short answer is, strongno/strong.  The longer answer is: By design, an AppleScript's codedisplay dialog/code creates an application modal object, meaning that until the User responds to the controls of the object, the application waits until is receives appropriate input to that object in order for it to continue.  If a Cancel button exists and not the default button, it can be dismissed by pressing the emEsc/em key or a emCommand-period/em key press to activate the Cancel button. If you use a Cancel button, you can trap the error and execute a codereturn/code that will halt execution of the remaining code of the app.  If if doesn't have a Cancel button then it can't be dismissed without direct interaction or forced quit by any one of several methods.  To force quit:  ul liYou can emoption-right-click/em the app's Dock tile and select Force Quit from App's Dock tile context-menu./li liPress Option-Command-Esc to bring up the Force Quit Applications dialog box./li liForce quit it from Activity Monitor./li liIts process can also be killed from Terminal in a few different ways, but beyond the scope of this answer as it's not a GUI method./li /ul  Also, ⌘Q doesn't work because it's grayed out in the App's Menu bar menu.  All this is also true within the Script Editor itself, not just with an AppleScript app. Once a codedisplay dialog/code is present it must be interacted with appropriately or the app forced quit by one method or another.  <comment361431> ⌘Q doesn't work because it's grayed out in the App's Menu bar menu. You can option-right-click the app's Dock tile and select Force Quit from App's Dock tile context-menu. That said, I do not believe there is any standard AppleScript code you can implement that will quit the app while the display dialog is present by clicking Quit on the App's Dock tile context-menu. <comment361436> I was unfamiliar with option-right-click, _"Force Quit."_ That's a nice tip. This method indeed closes the dialog and the application, just as I desire. I can't imagine that there exists a better answer. So, if you want to post that as an answer, I'll accept it. Thanks! <comment361517> I was to tired last night to write it in the form of a proper answer. :)