AppleScript bug: When placing plain text on the clipboard, the text is always converted to rich text <body> Run the following code to put some text on your clipboard:  precodeset testString to "This string should be plain text." set the clipboard to testString /code/pre  If you open up a new .rtf file in TextEdit.app, and paste the clipboard into this document, you will observe that the clipboard contains rich text. Specifically, the clipboard text is of the font codeHelvetica/code and size code12/code.  I also tried specifying codeset the clipboard to (testString as string)/code or codeset the clipboard to (testString as text)/code. But, the code always puts rich text on the clipboard. This rich text is always of the same style (as described in the previous paragraph).  Is it possible to put text on the clipboard, as plain text, in AppleScript?  hr  subOS X El Capitan, version 10.11.6. /sub  hr  <answer286385> This should work:  precodeset the clipboard to string of (the clipboard as record) /code/pre  In fact, you can safety-proof it using a try statement:  precodetry   set the clipboard to string of (the clipboard as record) on error errMsg   display dialog errMsg end try /code/pre  <answer286391> Maybe copying the text to the Pasteboard using Cocoa-AppleScript will only set plain text to paste to the RTF document.  Otherwise, use the following as a workaround:  precodeset testString to "This string should be plain text." as string do shell script "pbcopy &lt;&lt;&lt;" &amp; quoted form of testString /code/pre  The previous mentioned workaround method adds a codelinefeed/code after codetestString/code to the Clipboard and if that's unwanted behavior, use:  precodeset testString to "This string should be plain text." as string do shell script "printf " &amp; the quoted form of testString &amp; " | pbcopy" /code/pre  The other option is to use strongPaste and Match Style ⌥⇧⌘V/strong instead of strongPaste ⌘V/strong to match what's at the insertion point.  <answer286404> It looks like no matter what you do, if you have plain text selected in your new document tab in your text edit preferences, your clipboard will paste plain text.  However if you have rich text enabled, it looks as if everything will be pasted as rich text in a rtf document.  img src="https://i.stack.imgur.com/0AySR.png" alt="enter image description here"  img src="https://i.stack.imgur.com/FZ5Ag.png" alt="enter image description here"  I also tried selecting the text in the RTF document and tried to convert to plaintext In the format menu.  A dialog window popped up saying that the document would be converted from RTF to plain text If I chose to format the text  <comment361335> I tested your code, but it still puts the rich text on the clipboard. Does this solution work properly in your environment? <comment361345> I can confirm that your code does implement the desired outcome of pasting the string as plain text. However, both code samples reveal a new AppleScript bug: if `testString` contains an em dash (—) or an en dash (–), then these dash characters are converted to mojibake. Regarding your ultimate suggestion, the issue with _"Paste and Match Style"_ is that this command is not scripted into all applications. <comment361348> Interestingly, [this Stack Overflow answer](https://stackoverflow.com/a/21756156) that I found (which cites the exact bug that I described in my original post) approaches the problem from the same angle. <comment361350> Try the following to witness the issue that I am talking about: Create an .rtf document in TextEdit. Then, type some text with any font other than Helvetica, and in any size other than 12. _Now_, paste the clipboard (whose text was set by the AppleScript code). You will observe that the font of this text has been *changed* to Helvetica, and the size has been *changed* to 12. This means that the text on the clipboard is rich text; the unique font data and the unique size data are contained on the clipboard. <comment361371> @rubik's sphere, you said, "Regarding your ultimate suggestion, the issue with "Paste and Match Style" is that this command is not scripted into all applications.", I mentioned ⌥⇧⌘V because you said TextEdit in the OP so I assumed you're using TextEdit. That said, many applications do have **⌥⇧⌘V** although that may call it **Paste Unformatted Text** or similar and many apps have **Paste Special... ⇧⌘V** which can handle this as well. Yes, not all apps may have any or all of these however, you're going to have to work with what you've got if using Cocoa-AppleScript cant't resolve the issue. <comment361372> @rubik's sphere, BTW, EM DASH and EN DASH are not ASCII (plain) Text and in part probably why you get mojibake. That said, AppleScript, as you've come to find out, has lots of bugs, there's no doubt about it especially since similar type operations in other apps work as expected unlike how AppleScript can and does mangle some things. If you can't find a fix/workaround to use with AppleScript, then you'll have to use a different language/method to accomplish the goal. Another option is to just manually correct the occasional occurrences of mojibake. Is that such big deal? <comment361422> 1. On the _"⌥⇧⌘V"_ point, I only mentioned TextEdit in the OP because that is how I concluded that the clipboard set by AppleScript contains rich text. This was my question: _"Is it possible to put text on the clipboard, as plain text, in AppleScript?"_ The script in question does not _paste_ or keystroke the text. The script merely places the text on the clipboard (for the user to paste this text wherever they want). 2. No, the em dash/en dash bug is not a big deal. Your solution fulfills my needs. I will implement your code, and I will add a `replace_chars` statement to account for this bug.