Easy way to copy paste file paths on Macs <body> I am working on some long procedures that will need to reference a lot of file paths of documents located locally and on various external drives and servers. In all cases we are using Apple Macs with either El Capitan or Sierra installed.  strongMy problem/strong - it is taking me a long time to manually type and double-check the file paths are correct.  strongPreferred solution/strong - I would love it if there was just a way to copy and paste the file paths into these procedures.  I did try using the Get Info option, but couldn’t see a file path listed anywhere that I could copy and paste.  I also read this question: Get components (path and filename) of POSIX filepath and did have a go of using the script. This was promising, but it doesn’t quite do what I need.  strongIs there an easy way for me to just copy and paste file paths as I need them?/strong   For example, if I have an image called “Serial Number.jpg” located on an external drive called Server1 the file path would be: code/Volumes/Server1/Serial Number.jpg/code.  <answer295352> I think this is an option that will do exactly what you want. Using your emSerial Number.jpg/em example, do as follows:  ol liIn the Finder browse to the image called “Serial Number.jpg” located on Server1/li liRight-click on the file to display the context menu/li liNow press and hold the kbdoption/kbd key down/li liSelect the strongCopy “Serial Number.jpg” as Pathname/strong option/li liNow go to the procedure you’re editing and paste the pathname you just copied/li /ol  This emshould/em result in your document having the code/Volumes/Server1/Serial Number.jpg/code path pasted into it.  Just use the same steps for any file, regardless of whether it’s stored locally, on an external drive, or on a server. This also works to get the file path of folders.  strongKeyboard shortcut/strong  Thanks to Mateusz Szlosek for pointing out you can also use a keyboard shortcut. Instead of Steps 2 to 4 above, once you've selected the file you can use the kbdoption/kbd+kbdcommand/kbd+kbdC/kbd shortcut to copy the file path. Then you can paste it as usual.  strongWindows etc files/strong  There are custom built utilities to format shares for other operating systems and sub/afp as well:  ul liPathSnagger 2 works very well for this/li /ul  <answer295354> You can just drag &amp; drop a file [or a whole swathe of them] into a text area to get its [their] path[s] - not in all apps but in many, including Terminal [&amp; incidentally in the question/answer space on Stack Exchange too.]  Some apps, like BBEdit, do not support this and take the contents of the file insteat of the full path. For these apps a kbdCommand/kbd 'drag &amp; drop' works as well.  <answer295366> A command line solution that I use for getting paths quickly is to use realpath from GNU Coreutils.  I have installled codecoreutils/code via MacPorts, where the binary is called codegrealpath/code.  You can then call it on a file and it will give you the path.  I like to mix it with codepbcopy/code to quickly get a path into my clipboard: code$ grealpath histograms.root | pbcopy/code  <answer295369> I would preferable just drag &amp; drop a file into a text area to get its path (see Tetsujin's answer)  If this does not work for you, consider writing a very small program in Qt.   From http://qtsimplify.blogspot.de/2013/01/drag-and-drop-files-into-your.html :  Create a new "Qt Gui Application" in Qt Creator.   Edit the header file, mainwindow.h, by adding the following headers:  precode#include &lt;QDropEvent&gt; #include &lt;QUrl&gt; #include &lt;QDebug&gt; /code/pre  Reimplement the protected functions, dropEvent() and dragEnterEvent() protected:  precodevoid dropEvent(QDropEvent *ev); void dragEnterEvent(QDragEnterEvent *ev); /code/pre  In the mainwindow.cpp, add these lines:  precodevoid MainWindow::dropEvent(QDropEvent *ev) {     QList&lt;QUrl&gt; urls = ev-&gt;mimeData()-&gt;urls();     foreach(QUrl url, urls)     {         qDebug()&lt;&lt;url.toString();     } }  void MainWindow::dragEnterEvent(QDragEnterEvent *ev) {     ev-&gt;accept(); } /code/pre  The dropEvent() function is where you recover the name of all the files you drop into your application.   And lastly, add this line into your mainwindow constructor:  precodesetAcceptDrops(true); /code/pre  Then, e.g. if you want to have the paths in the clipboard, you only need to copy them there using QClipboard   precodeQClipboard *clipboard = QGuiApplication::clipboard(); clipboard-&gt;setText(url.toString()); /code/pre  For single file drops, and a list for all files.  <answer295372> I use the codeServices/code Context Menu "Path to Clipboard" in Finder (although more often I use the Context Menu of QuollEyeTree).  I am not sure if this is a default service, or one I created using Automator (mine is dated 2012), but it is trivial to create such a service, it it does not already exist.  <answer295406> Get info (⌘i) of any file or folder.  Triple click on strongWhere/strong under the strongGeneral/strong category to highlight the path.  img src="https://i.stack.imgur.com/Srt1e.png" alt="enter image description here"  Copy (⌘c) this highlighted text and it will put the path on your clipboard.  Close the window (⌘w)  Paste wherever you need to use it (⌘v)  <answer295409> In a finder window, you can select your file. If you have the gear-looking icon on your finder window you can hold down the option key and click that icon. One available option is to copy pathname. If selected it copies full pathname to the clipboard. You don't have to open the file.  <answer295578> There's an app on the app store called "FilePath" IIRC. Click on the file in the GUI then click on the filepath icon and select "copy path" from the menu. It can also copy multiple paths. If you're looking for something quicker I'd imagine you can assign a key combo to the action.   I use this app on a regular basis to share synchronized cloud storage locations with coworkers.  <comment372905> +1 Good call! I didn't know you could drag and drop into Stack Exchange! :) <comment372918> In addition the full keyboard shortcut to copy file path is `⌥ ALT`+`⌘ CMD` + `C`, no need to do this using contextual menu. <comment372975> Thanks for that - this is a great way to copy and paste a folder full of files. <comment372976> This is only good for one file at a time. <comment372977> @MateuszSzlosek “⌥” denotes the option key (the unicode codepoint for this symbol is literally U+2325 OPTION KEY).  The word “alt” is additionally screenprinted on the option key on Apple-made keyboards to avoid confusion when using Apple keyboards with other operating systems (since Apple's command key occupies the spot where the alt key is on other keyboards).  So in the context of macOS keyboard shortcuts, there is no such thing as “alt”, only option; in the context of Apple keyboards, that key is used for either option or alt, depending on the computer it's plugged into. <comment372979> @SlippD.Thompson you’re right, I’m using them interchangeably, but Option is he proper one:) <comment372980> @ThisClark - I'd forgotten you could drag multiple files - added to answer, thanks. <comment372981> alt/opt depends on where you buy your Apple keyboards. The International ones actually say alt, not opt, & have done for at least a decade. the US ones either just have the ⌥ symbol or say both.  There's no surprise it's confusing. Ref: https://support.apple.com/HT201794 <comment373087> Is there a resource for all these secret `opt` reveals? <comment373088> Sorry @geometrikal I'm not sure I understand the question? `opt` as in? <comment373089> @Monomeeth Holding down the alt/option key to reveal new commands in the menu <comment373090> @geometrikal Ah, okay. Good question. There is the official [Mac keyboard shortcuts](https://support.apple.com/en-au/HT201236) page that also has links at the bottom to other keyboard shortcut pages, but I'm not sure if there's a single resource for Option key keyboard shortcuts. To be honest, this is just one I accidentally stumbled across one time. <comment373280> Thanks @MateuszSzlosek for sharing the keyboard shortcut. I've incorporated this into my answer. :) <comment373809> Why this way as opposed to $ pwd histograms.root | pbcopy? <comment373971> That gives you the path of the directory containing `histograms.root`, rather than the full path of the file itself.  You could trivially write a shell script to do it, but I did not.