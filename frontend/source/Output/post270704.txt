How to enable OpenSSh on iOS 10.2 <body> I have sucsessfully jailbroken my iPhone 6s runing on iOS 10.2.  I have installed OpenSSH through Cydia and changed my default password via MobileTerminal.  The only problem is, when I run codessh root@my_iPhone_ip_addr/code, it just hangs and never connects.  I have tried the SSH toggle springboard application, however it still hangs.  Is there a how I could enable SSH on my phone via a terminal command or some other way?  <answer270724> OpenSSH is not compatible with iOS 10.2 and will break things in later releases of the jailbreak. You should uninstall both OpenSSH and OpenSSL (dependency).  yalu102 comes with dropbear.  <answer271874> You should use the built-in Dropbear. As of Yalu Beta 6, you need to first SSH over USB. Then after changing your password you can enable Dropbear on other interfaces.   Linux or macOS:  ol liDownload gandalf binaries (I had zero luck compiling) from the ocaml-usbmux github page. macOS: gandalf_darwin_10_11_x86_64/li liConnect your device via USB cable, and scan for it. /li liPut the udid into a mapping file. Make sure device_port 22 (ssh) is mapped! /li liRun gandalf with your mapping file/li liSSH to the local_port corresponding to device_port 22 in your mapping file. /li liLog in with the password alpine. /li listrongCHANGE YOUR PASSWORD!!!/strong/li /ol  Scan  precode$ gandalf /code/pre  Sample Mapping File  precode[{"udid":"9cdfac9f74c5e18a6eff3611c0927df5cf4f2eca",   "name":"i11", "forwarding": [{"local_port":2000, "device_port":22},                                {"local_port":3000, "device_port":1122}]                                }] /code/pre  Run Gandalf with Mapping File  precode$ gandalf -m myMappingFile.txt /code/pre  SSH to port 2000  precode$ ssh mobile@localhost -p 2000 /code/pre  Change password(s)  precode$ passwd $ su $ passwd root /code/pre  hr  Now that you are in your iOS device (strongyour password has been changed, right?/strong) you can enable Dropbear on other interfaces as follows.   ol liCreate a LaunchDaemon file to launch a second instance of Dropbear. /li liReboot or use codelaunchctl load/code/li /ol  Create LaunchDaemon file:   precode$ cd /Library/LaunchDaemons $ cat &lt;&lt;EOF &gt; ssh10022.plist /code/pre  Paste this into the terminal:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN"  "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;SSH port 10022&lt;/string&gt;     &lt;key&gt;Program&lt;/key&gt;     &lt;string&gt;/usr/local/bin/dropbear&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/usr/local/bin/dropbear&lt;/string&gt;         &lt;string&gt;-F&lt;/string&gt;         &lt;string&gt;-R&lt;/string&gt;         &lt;string&gt;-p&lt;/string&gt;         &lt;string&gt;10022&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;KeepAlive&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Type Ctrl-D to end the input. That now creates the file ssh10022.plist  Reboot or use launchctl  precodelaunchctl load /Library/LaunchDaemons/ssh10022.plist /code/pre  hr  Issues:   Dropbear does not like the iOS default permissions on the mobile home directory, so SSH key authentication does not work. After every reboot I have to log in with password and fix the permissions:  precode$ chmod go-w /var/mobile /code/pre  To debug Dropbear: Redirect Dropbear logs to stderr (the example below runs yet another instance on port 10023).   precode$ dropbear -E -p 10023 /code/pre  <answer272750> You can not connect to ssh over wifi with the 10.2 jailbreak. You need to ssh over USB. They are several options but the easiest is to use codeiproxy/code.  ol listrongInstall iproxy/strong   codebrew install libimobiledevice/code/li listrongOn the terminal now run the following command./strong   codeiproxy 2222 22/code  This will enable you to forward all traffic from port 2222 to port 22 over USB/li listrongNow you can connect to the iPhone by running ssh/strong  codessh root@localhost -p 2222/code /li /ol  Notice you connect to codelocalhost/code not the ip address of your phone. If everything went well, you should be presented with the ssh prompt.  If it doesnt work, check if ssh is running on the iPhone by running  codetelnet &lt;iphone-ip-address-here&gt; 22/code  If you cant connect make sure you install the codeopenssh/code package from Cydia.  <comment340763> This tweet was made prior to the 10.2 Jailbreak's release, so I'm pretty sure it's referring to the highly unstable 10.1.1 Jailbreak. Do you have an updated source? <comment341722> Please follow grgarside's advice: uninstall OpenSSH. See my post for step-by-step instructions to get your ssh back. <comment344951> Probably shouldn't suggested installing OpenSSH because the author of the jailbreak, qwertyoruiop specifically says not to install OpenSSH. <comment345112> I use iPhone Tunnel to connect to my device via ssh over USB: https://code.google.com/archive/p/iphonetunnel-mac/downloads <comment345134> I could not connect using `Dropbear`, in my case i had to install the `OpenSSH` package, that's the reason i suggested that as the other instructions seem to be based on the beta jailbreak