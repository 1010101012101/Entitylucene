Restoring Yosemite server after unloading launch daemons <body> So, while trying to fix a corrupt open directory I came across a fix that said to enter this command...  precodesudo launchctl unload -w /System/Library/LaunchDaemons/  org.openldap.slapd.plist /code/pre  From the formatting I thought these were two separate commands but in fact they were one. As you can imagine after I typed in the "first command" my Mac Mini server shut down and restarted but the loading bar won't get past half way when it tries to boot.  Is there any way to restore the launch daemons after unloading them all? Any and all help is appreciated.  <answer207855> h1Recovery System/h1  Your best option is to use OS X's Recovery System.  To start your computer from Recovery, restart your Mac and hold down the kbdCommand/kbd + kbdR/kbd keys at startup:     h2OS X: About OS X Recovery/h2      OS X Lion and later include OS X Recovery. This feature includes all of the tools you need to reinstall OS X, repair your disk, and even restore from a Time Machine backup.   Alternatively, Single User Mode or Target Disk Mode are possibilities.  h1Single User Mode/h1  Trying booting into single user mode, How to start up your Mac in single-user or verbose mode.  Within single user mode find and remove the plist files that are telling codelaunchd/code not to load these jobs.  klanomath's answer contains instructions for editing the persistent launchd state file code/var/db/com.apple.xpc.launchd/disabled.plist/code.  h1Target Disk Mode/h1  Another option is to use Target Disk Mode to access your Mac's files. In this mode, you will be able to find and remove the plist files that are telling codelaunchd/code not to load these jobs.  <answer207863> You might need a USB drive to fix this if you don't have a full system backup.   ol liBoot to recovery or internet recovery/li liUse disk utility on recovery to partition the USB/prepare for OS X installation into the USB. /li liUse recovery to install OS X onto the USB /li liBoot from USB and then back up the files from the main drive you can't afford to lose. /li liDownload the OS installer for your broken system and run it to repair the system changes. /li /ol  <answer207870> The command codesudo launchctl unload -w /System/Library/LaunchDaemons//code disables all launch daemons residing in /System/Library/LaunchDaemons/ by adding a key with the name of the launch daemon followed by strongemtrue/em/strong in the file /var/db/com.apple.xpc.launchd/disabled.plist. Even if the launch daemon had an entry set to strongemfalse/em/strong (like com.apple.emond in the examples below) in the file previously, it will be set to strongemtrue/em/strong. The disabled.plist overrides all settings in the individual plist files. The single launch daemon plist files in /System/Library/LaunchDaemons/ won't be altered.  Example before the above command was issued:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;com.apple.AppleFileServer&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.hdiejectd&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;com.apple.emond&lt;/key&gt;     &lt;false/&gt; /code/pre  Example after the above command was issued:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;com.apple.AppleFileServer&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.afpfs_checkafp&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.AirPlayXPCHelper&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.applessdstatistics&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.auditd&lt;/key&gt;     &lt;true/&gt;     ...     &lt;key&gt;com.apple.emond&lt;/key&gt;     &lt;true/&gt;     ... /code/pre  hr  So essentially you have to remove /var/db/com.apple.xpc.launchd/disabled.plist on your main volume or replace it by a backup copy:  ul liReplacing the file by a backup copy is preferred because it may already have some non-default entries for some launch daemons set to true or false./li liIf you don't have a backup copy of the file boot to Recovery or Internet Recovery Mode/li liOpen Terminal/li limount your main volume if it's not already mounted/li lienter codecd /Volumes/[Name_Of_Your_Main_Volume]/var/db/com.apple.xpc.launchd//code to change to your main volume/li lienter codepwd/code to be sure about your working directory/li liremove disabled.plist with coderm disabled.plist/code/li liTo rebuild the (hopefully) standard disabled.plist write or copy and paste the following using nano or vi into a new document at the same place after executing codetouch disabled.plist/code:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;com.apple.emond&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;org.postfix.master&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.ftpd&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;com.apple.usbmuxd&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;com.apple.emlog&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;com.apple.mrt&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;com.apple.stackshot&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;org.apache.httpd&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  You may do this later also, after rebooting to your main volume with:  precodesudo nano /var/db/com.apple.xpc.launchd/disabled.plist /code/pre  After the reboot the file should have been rebuilt automatically (but almost empty) and you don't have to create it first./li liEnter exit/li liReboot to your main volume/li /ul  This worked for me (explicitly strongnot/strong executing the command codelaunchctl load -w /System/Library/LaunchDaemons//code as proposed by Graham). So your mileage may vary, because you executed the command earlier.  <comment250763> Hi Graham,  I just tried this and when I executed the command the screen went black then a message saying "there was an error and you need to restart your computer, press any key or wait"  It's trying to boot up again but the loading bar still isn't going past half way <comment250764> I have added notes about OS X's recovery system. Alternatively, you can try [target disk mode](https://support.apple.com/kb/PH19021)? – this will effectively turn the Mac into an external drive. Hope this helps! <comment250769> Installing OSX on top of the "broken system" via recovery is a viable one step solution. It is designed to preserve user accounts and data, but I prefer a two step process that allows a backup in case it's not up to date. <comment250792> Thanks for the reply. Thankfully we have been able to restore from a timemachine backup server, we forgot we set it up ages ago, and that should hopefully fix the issue. If it doesn't I'll give your answer a try <comment250793> @Niuyoi I hope it's a recent backup...