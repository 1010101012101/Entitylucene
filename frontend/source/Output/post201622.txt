Logging for SSHD when started from Launchd with `-d` option? <body> I'm working on OS X 10.8.5, fully patched. I have an updated OpenSSH server installed in code/usr/local/sbin/code listening on port 1522. Connection attempts result in strongemcodessh_exchange_identification: Connection closed by remote host/code/em/strong. codesudo grep 'sshd' /var/log/* 2&gt;/dev/null/code at the server is returning almost nothing, so I'm trying to gather more information at the server on the cause.  According to codeman sshd(8)/code, code-d/code is debug mode and it sends verbose debug output to standard error. I added code-d/code to codeProgramArguments/code in the plist, but the plist also sets codeStandardErrorPath/code to code/dev/null/code. So I'm guessing the debugging information is being discarded.  I checked codelaunchctl(1)/code man page, but I don't see what I should do to modify codeStandardErrorPath/code so that its logged somewhere. The man page does not even discussed the name/value pair.  How should I change the configuration so the debug logging is logged somewhere, and I know where that "somewhere" is?  hr  precode$ cat /System/Library/LaunchDaemons/ssh-7.1.plist &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Disabled&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.openssh.sshd-v7.1&lt;/string&gt;     &lt;key&gt;Program&lt;/key&gt;     &lt;string&gt;/usr/local/sbin/sshd&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;-i -d&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;Sockets&lt;/key&gt;     &lt;dict&gt;             &lt;key&gt;Listeners&lt;/key&gt;             &lt;dict&gt;                     &lt;key&gt;SockServiceName&lt;/key&gt;                     &lt;string&gt;1522&lt;/string&gt;             &lt;/dict&gt;     &lt;/dict&gt;     &lt;key&gt;inetdCompatibility&lt;/key&gt;     &lt;dict&gt;         &lt;key&gt;Wait&lt;/key&gt;         &lt;false/&gt;     &lt;/dict&gt;     &lt;key&gt;StandardErrorPath&lt;/key&gt;     &lt;string&gt;/dev/null&lt;/string&gt;     &lt;key&gt;SHAuthorizationRight&lt;/key&gt;     &lt;string&gt;system.preferences&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <answer201642> To proper logging events from codesshd/code you should not set code-d/code swiches, since this is reserved for debugging, but you should user codesshd_config/code (not sure where is located in OSX).  In codesshd_config/code, there is option codeLogLevel/code, which you can adjust to your needs, basically the most verbose level is codeDEBUG3/code, which gives you a lot of information helpful for debugging.  <answer204724> ol liTo add the code-d/code argument to sshd, it should be added as a new element to the     array:  precode&lt;string&gt;-d&lt;/string&gt; /code/pre  The section should look like:  precode&lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;-i&lt;/string&gt;         &lt;string&gt;-d&lt;/string&gt;     &lt;/array&gt; /code/pre/li liInstead of editing the plist files directly, you can use code/usr/libexec/PlistBuddy/code (-h to show help)./li liThere is a utility script codessh-util.rb/code that can turn logging on/off. It is part of the codeOpenSSH-189/code package found at: opensource.apple.com.  Link to ssh-util.rb  Here are the required commands to run (as produced from the ruby script):  precode/usr/bin/ruby ./ssh-util.rb -l on -v --debug --dryrun /code/pre  or manually:  precodesudo /usr/libexec/PlistBuddy -c "add :ProgramArguments:2 string '-ddd'" /System/Library/LaunchDaemons/ssh.plist sudo launchctl unload /System/Library/LaunchDaemons/ssh.plist sudo launchctl load /System/Library/LaunchDaemons/ssh.plist sudo touch /var/run/com.openssh.sshd-asl-enabled /code/pre/li liWhen finished debugging,, you'll need to run either:  precode/usr/bin/ruby ./ssh-util.rb -l off -v --debug --dryrun  /code/pre  or manually:  precodesudo /usr/libexec/PlistBuddy -c "Delete :ProgramArguments:2" /System/Library/LaunchDaemons/ssh.plist sudo launchctl unload /System/Library/LaunchDaemons/ssh.plist sudo launchctl load /System/Library/LaunchDaemons/ssh.plist sudo rm -f /var/run/com.openssh.sshd-asl-enabled /code/pre/li /ol  Notes on OS X Logging  <comment243099> If I set `LogLevel=DEBUG3`, then won't it be discarded because `StandardErrorPath=/dev/null`? (Sorry to have to ask. I don't usually administer OpenSSH. Usually it "just works"). <comment243100> It is not logged on stderr (at least on other *nix), it is logged using syslog or other logger provided by system (usually using `/dev/log` socket). <comment246897> I think the debugging information will still be discared because something needs to be done with `StandardErrorPath`. <comment246970> The 'magic' is done in the last line (creating the file in /var/run).  I've just turned on logging (via the ```ssh-util.rb``` script) and ```/var/log/sshd.log``` was created. <comment246971> In my answer,  I linked to ```"Notes on OS X Logging"```.   Look in ```/etc/asl``` and also have a look at ```/etc/asl.conf```.  (@Jakuje's comment concerning syslog is correct.) <comment247095> OK, thanks. I'm nut using Ruby.