My Automator Workflow fails because it fails to find the git command within the 'Run Shell Script' command? Need help <body> I have an Automator workflow and one of the actions is to clone a repository. Here's the code for the 'Run Shell Script' action. The command is run within the Bash shell code/bin/bash/code if that matters:  precodeSOURCEDIR="${3/\/Volumes/}"  cd "$2" REPOURL="bob@somedomain.com:$SOURCEDIR" WORKINGDIR="$1"  # Capture any errors with cloning process in log file git clone "$REPOURL" "$WORKINGDIR" &amp;&gt; ./log.txt  // For debugging echo "exit code: $?" echo "PPID: $PPID"  open . /code/pre  Now the Automator App runs fine on my machine. The path to git on my machine (A Macbook Pro) is: code/usr/bin/git/code (I believe I installed git on my machine through Xcode)  But on my co-worker's machine (Also a Mac Pro) the Automator App fails. In fact, the output of the log.txt file says: codebash: git: command not found/code   Now on my co-worker's machine the path to git is: codeusr/local/git/bin/code, which, yes, is different because he installed git through the Google Git Installer for Mac OS X, but I didn't think it should matter because in the script the git command is not absolute path to the command and further more my co-worker can run git normally from a Bash script but when invoked directly from the Terminal.  So what gives? Why does the automator workflow work for me but not for my co-worker?  There must be something fundamental about Bash or Unix that I'm not understanding here but I'm lost.  <answer97506> Scripts run via Automator use the default search path which usually does not include code/usr/local/bin/code. In your case an easy fix would be to put  precodeexport PATH=/usr/local/bin:$PATH /code/pre  somewhere at the beginning of the script.  <answer119109> If you want the Workflow to work on both machines that have git in different locations, then add each location to the PATH variable that patrix mentioned, separated by a code:/code, as explained here: https://developer.apple.com/library/mac/documentation/AppleApplications/Conceptual/AutomatorConcepts/Articles/ShellScriptActions.html  So, at the very top of your Workflow Shell Script, you would add:  codePATH=/usr/bin:/usr/local/bin export PATH/code  <answer167783> For a more general solution to the bash environment in automator differing from your own you could simply load your personal bash profile at the first line of the automator bash script:  precodesource ~/.bash_profile /code/pre  This will make the path and any other environment variables you're used to using available from your automator script.  <answer192645> I solved the same problem of the same "service" workflows being run on differently configured machines by checking what happens when the terminal starts the shell and eventually adding the following snippet to the top of all my "Run Shell Script" actions:  precodeif [ -x /usr/libexec/path_helper ]; then     eval `/usr/libexec/path_helper -s` fi if  [ -f "$HOME"/.profile ]; then     source "$HOME"/.profile elif [ -f "$HOME"/.bash_profile ]; then     source "$HOME"/.bash_profile elif [ -f "$HOME"/.bashrc ]; then     source "$HOME"/.bashrc fi /code/pre  This covers all the cases I've encountered so far.  <comment114400> I actually tried shortly thereafter and it didn't work either. <comment299295> I much prefer this solution. A good overview of the bash login scripts is [here](http://stackoverflow.com/a/415444/1515564)