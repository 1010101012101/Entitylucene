Keep bootable backup with rsync <body> I've ditched Carbon Copy Cloner now that it went commercial, well I felt guilty about using a closed source application anyways.   What codersync/code options do you prefer when maintaining your bootable backups?   precodersync -avhHXR --delete --progress --hfs-compression --protect-decmpfs --stats --exclude=/Volumes / /Volumes/Backup /code/pre  Just by way of explanation : Any large recursive backup wants the archive option code-a/code of course.  And ideally the code-H/code option for hard-links.  We need code-R/code and code--exclude=/Volumes/code since we're using code//code as the source.  We want code--delete/code to delete files not present on the source.  All the option code-vh/code, code--progress/code, and code--stats/code only impact the display. And code-X/code, code--hfs-compression/code, and code--protect-decmpfs/code preserve various HFS+ features.    Add a code-n/code for testing before running the actual backup of course.  Just a few questions :   In Linux, you might want code-S/code for sparse files, but afaik HFS+ lacks sparse files anyways.  I'd leave out code-A/code too since HFS+ lacks acls too.  I presume that's correct?  Are there any benefits to code--inplace/code?  Would it reduce wear?  It's slightly risky if the transfer breaks perhaps.  It conflicts with code-S/code in Linux, btw.  Am I missing anything particularly useful here?    Anything about making a new disk bootable that isn't bootable already?  <answer182468> Just found an open source backup script Counterpart (jedda.me) which does exactly this, seemingly does stuff CCC misses too.   <comment217229> I'll check out a couple more options I see being used here : https://www.davidwaring.net/projects/backup.html <comment217232> Just found a bit more at  http://nicolasgallagher.com/mac-osx-bootable-backup-drive-with-rsync/  and  https://static.afp548.com/mactips/image.html  but maybe a bit dated. <comment217250> And there is this : https://github.com/necolas/dotfiles