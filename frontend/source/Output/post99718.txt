How do I create a Folder Action Script to tar items dropped in folder? <body> I would like to drop/copy files/folders and have them compressed then copied to my desktop. This is what I know so far... and it isn't much so any help would be appreciated.  precodeon adding folder items to theFolder after receiving theAddedItems repeat with x in theAddedItems /code/pre  This will create my list of files dropped into the folder. Now my compression command...  precodetar cvf - *variableForFileListHere* | gzip -9 - &gt; files.tar.gz /code/pre  Somehow I know I have to feed the list "theAddedItems" created in the first part of the script to the tar command. But I'm clueless as to how this might be done. Reading now about tar and it's options as I'm sure there is an "include" function for pointing to a list of items to add to the archive.  <answer99724> Rather than spending your time with Folder Actions (which I, and many others, have found to be unreliable), might I suggest that you give Hazel a try?  http://www.noodlesoft.com  emDisclaimers:/em I'm going to start off by telling you it isn't free (it's US$28), but if you like automation, this is the place to start. There is a free 14-day trial. I am completely unrelated to the company except as an extremely happy user.  Hazel allows you to create 'folder actions' very easily using a nice GUI which is similar to creating Mail.app rules. You can take action depending on filename, extension, kind (i.e. "images, documents, movies") and many other.  Here is the rule I use for any file/folder added to ~/Action/ZipIt/   img src="https://i.stack.imgur.com/85E0v.jpg" alt="Screenshot of Hazel rule"  Hazel looks for any file which is not already an archive (I could have told it to act on any files at all, but I want to avoid compressing files which are already compressed). I could add other criteria (which could be options or requirements, like boolean "AND" or "OR" statements).  Whatever it is will be archived, then moved to the Desktop, then it will be shown to me in the Finder.  See the little "Options" button next to the 'Move to Desktop'? Click on that and you can tell Hazel what to do if it detects that the file you are going to move is a duplicate.  There is also an option to have Finder brought to the front or not.  There are lots of other actions Hazel can do besides archive:  img src="https://i.stack.imgur.com/Efbqm.jpg" alt="screenshot of hazel actions"  em(Note: iPhoto and Aperture are greyed out because I don't have them installed.)/em  The options to run AppleScript/Automator/shell scripts means that you have the power to do pretty much anything you can imagine.  I could go on and on, but here's one more example: I have Hazel watch ~/Downloads/ for .zip files. When it finds them, it unzips them to ~/Action/Unzipped/ (you can do this either by telling Archive Utility to use that folder, or use The Unarchiver). Hazel then looks in ~/Action/Unzipped/ for new files which end with .app and, if found, moves them to /Applications/ and opens them. Voilà! Instant installation of apps.  In the world of 99¢ apps, $28 probably sounds like a huge expense, but to me Hazel is one of those tools which takes something Apple did, but not very well (Folder Actions), and replaces it with something that will make you wonder why Apple didn't do it. You get a 2 week trial, and a dedicated developer who has worked on this app for years, and who is very good at answering support questions.  Sorry to sound like a fanboi, but when it comes to Hazel and a few other Mac apps, I really am.  <answer99725> Try:  precodeon adding folder items to theFolder after receiving theAddedItems     set myList to {}     repeat with x in theAddedItems         set end of myList to quoted form of x's POSIX path &amp; space     end repeat     set myList to text 1 thru -2 of (myList as text)     do shell script "tar cvf " &amp; myList &amp; " | gzip -9 - &gt; ~/Desktop/files.tar.gz" end adding folder items to /code/pre  <answer99934> There is another option.  Instead of a Folder Action (and the problems inherent with them), you could use codeQueueDirectories/code in codelaunchd/code to call a shell script.  For example, this will call the script code/usr/local/bin/mktgz.sh/code any time a file is put into code/Users/foo/Action/Gzip/code  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.tjluoma.mktgz&lt;/string&gt;     &lt;key&gt;Program&lt;/key&gt;     &lt;string&gt;/usr/local/bin/mktgz.sh&lt;/string&gt;     &lt;key&gt;QueueDirectories&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Users/foo/Action/Gzip&lt;/string&gt;     &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  I have a more developed version of this available at https://github.com/tjluoma/mktgz.  <comment117330> I wish it weren't true about folder actions being unreliable, but you're absolutely right. If the OP wants the thrill of creating his/her own folder action, please try that. If it needs to reliably just work, I'd steer away from folder actions, based on my experience. <comment117450> Thank you for the script adayzdone. It doesn't seem to be working  though. I attached it to a folder and dropped a few .PDF files in there. Nothing pops up on my desktop. I did NOT edit the script at all as it seems you made it pretty much portable for any machine and to be used by anyone. Any thoughts and again thank you for your time. <comment117451> I don't want to involve any third party utilities but thank you TJ Luoma for the suggestion. <comment117467> The extra space at the end of the list my have caused a problem. Try it now. <comment117870> Your script is working. Thank you so much. I will use it as a reference in the future to learn more about Applescript in general and to play around with different compression levels. Again thank you!!! <comment117924> Ditto on using Hazel. Also a happy user, running at both home and work. <comment118032> TJ thank you for your reply. I have copied both you and adayzdone's answers and will try them both out to see which I like best. I know people have stated Applescript is "unreliable" but I think it's a fun language to learn even though your way seems to be more powerful on a system level. Thanks again.