Automator simulation of the mouse and keyboard <body> My problem: "watch me do" in automator only recognizes for cocoa buttons and doesn't work for apps like games with interfaces drawn my rendering engines.  Desired solution: an Automator action(s) that simulate mouse movements and clicks to coordinates on screen. "Automator Virtual Input" is a great app but doesn't is far outdated (doesn't work in lion)  And considering the amount of scripts i need to create, applescript isn't a time effective solution  <answer24010> I think that you're trying to push Automator past the practical limits of the tool. Instead, a macro program such as Keyboard Maestro or iKey are better choices, albeit not free.  <answer55569> QuicKeys 4 provides the functionality your looking for.  They offer a free trial version as well as a paid version.  The free version has all the same features as the paid version, only it nags you that it is a trial.  QuicKeys, however, has not been updated in several years &amp; has issues since Mountain Lion.br Some parts work, others fail; so I'd recommend a thorough test.  <answer154180> You can automate a mouse click using Applescript.  precodetell application "System Events"     tell application process "Application_Name"         key code 53         delay 1         click (click at {1800, 1200})     end tell end tell /code/pre  hr  If you want to click within a browser window you can use Applescript with the help of Javascript  precodetell application "safari"     activate     do JavaScript "document.getElementById('element').click();" end tell /code/pre  hr  Purely via terminal, you can create a textfile with the name codeclick.m/code or whatever name you like, save it with the following code  precode#import &lt;Foundation/Foundation.h&gt; #import &lt;ApplicationServices/ApplicationServices.h&gt;  int main(int argc, char *argv[]) {     NSAutoreleasePool *pool = [[NSAutoreleasePool alloc] init];     NSUserDefaults *args = [NSUserDefaults standardUserDefaults];      int x = [args integerForKey:@"x"];     int y = [args integerForKey:@"y"];      CGPoint pt;     pt.x = x;     pt.y = y;      CGPostMouseEvent( pt, 1, 1, 1 );     CGPostMouseEvent( pt, 1, 1, 0 );      [pool release];     return 0; } /code/pre  then compile it:  precodegcc -o click click.m -framework ApplicationServices -framework Foundation /code/pre  and move it to the appropriate system folder  precodesudo mv click /usr/bin sudo chmod +x /usr/bin/click /code/pre  and now you can run a simple terminal command to manipulate the mouse  precodeclick -x [coord] -y [coord] /code/pre  hr  Other scripts you could use include MouseTools or xdotool; both of which are open-source.  <comment26827> i tried keyboard maestro but it lacks a click and hold =/ <comment26828> Apparently iKey can do that. See http://bit.ly/p7gVhu <comment26840> not loving the crashing of that app tbh =/ <comment26926> Contact iKey's developer with your problem. You'll find him to be quite responsive. <comment63954> Can you please add a link to Quickeys? It is always helpful to add a link to what you mention so that the OP can find the right piece of software. <comment181439> Anyone know of any free/open-source applications similar to those listed here so far?