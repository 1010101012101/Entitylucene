Using launchd to change MAC address when joining a specific Wi-Fi network <body> I'm trying to use launchd to solve the above-mentioned.   I have a codenetworkchange.plist/code file as follows:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" \  "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;NetworkChange&lt;/string&gt;   &lt;key&gt;LowPriorityIO&lt;/key&gt;   &lt;true/&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;       &lt;string&gt;*some path*/networkchangeaction.sh&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;WatchPaths&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;/etc/resolv.conf&lt;/string&gt;     &lt;string&gt;/var/run/resolv.conf&lt;/string&gt;     &lt;string&gt;/private/var/run/resolv.conf&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Using codesudo launchctl load -w /Library/LaunchDaemons/networkchange.plist/code after moving it to it's place it executes my bash script just fine when I switch Wi-Fi networks.  My codenetworkchangeaction.sh/code script:  precode#!/bin/bash  lock="/tmp/networkchange.lock" triggerssid="someSSID" macaddress="7c:c5:d7:f2:09:23" ssid=$(networksetup -getairportnetwork en0 | awk -F": " '{print $2}')  if mkdir "$lock"; then    # my attempt at solving the infinite call loop     trap 'sudo rm -rf "$lock"' 0    # $lock is kinda like a mutex     if [ "$ssid" == "$triggerssid" ]; then         sudo ifconfig en0 ether $macaddress    # change MAC address         sudo ifconfig en0 down    # restart wifi interface         sudo ifconfig en0 up         sleep 2                   # wait for it to restart, then join $triggerssid         sudo networksetup -setairportnetwork en0 $triggerssid *wifi wpa2*     fi else     exit 0 fi /code/pre  My problem is that the script is called infinitely as it rejoins the network after changing the MAC address. I tried solving this with a "mutex" (as recommended here), so that only one instance of this script can run at a time, but somehow it still gets called continuously.  strongHow could  I solve this problem/strong, so that the script does not trigger itself?  <comment343626> Having the script called continuously (again and again) is different from using a mutex to prevent parallel execution. Which problem are you trying to solve here? <comment343630> Also I would assume that running `ifconfig` would change some of the watched files which again triggers the script. <comment343633> @patrix i clarified the question. the problem certainly is that the script triggers itself. i assumed that launchd calls the script while the first instance is still running and thus i tried the mutex solution.