OSX recovering ownership after bad chown command <body> In hindsight, I made a bad decision, but I texted my wife a command:  precodesudo chown -R ${USER} /Applications/... /code/pre  to run in a directory.  She didn't think it worked and started putting spaces where spaces shouldn't be, so she wound up running:  precodesudo chown -R ${USER} / /code/pre  She shut it down after I told her she shouldn't have done that, and now I'm having no fun with this thing.  No biggie, I thought.  I've fatfingered some bad recursive commands in my past on Linux, but this is weird.  I've been repairing the root ownership from the recovery command line, but I don't know what happened to the user account.  When I look in code/var/db/dslocal/nodes/Default/users//code, I see codedaemon/code, codenobody/code, and coderoot/code. My wife's user home directory is still there, but the ownership everywhere is 501.  So, clearly I am having some issues trying to chown things back to where they should be, but on top of that I'm not even sure I can resurrect that user to make things seamless.  Any thoughts?  emEDIT - Running OSX 10.11.4, El Cap/em  <answer244786> h2OS X Yosemite (10.10) and older:/h2  ol liApplications &rarr; Utilities &rarr; Disk Utility/li liSelect the startup disk from the list of volumes./li liClick the First Aid tab./li liTo check permissions, click Verify Disk Permissions. To repair permissions, click Repair Disk Permissions./li /ol  Source: https://support.apple.com/en-au/HT201560  You can also do it from Terminal using the diskutil command.  h2OS X El Captian (10.11):/h2  ol liApplications &rarr; Utilities &rarr; Terminal/li liTo verify permissions:  codesudo /usr/libexec/repair_packages --verify --standard-pkgs / /code/li liTo repair permissions:  codesudo /usr/libexec/repair_packages --repair --standard-pkgs / /code/li /ol  Type your password when prompted. You'll need to be root or a member of the codeadmin/code group.  Source: http://osxdaily.com/2015/11/04/verify-repair-permissions-mac-os-x/  <comment301709> Please add your system version! <comment301734> Recovery doesn't use the regular system volume, so it doesn't have the same user database. But if the ownership of her home folder is 501, that's her ID and you can use `chown -R 501`. But please don't try to change the ownership of /Applications, it'll just break things. <comment301735> Note that these only fix system files; user files and other installed software (apps and such) will *not* be reset. <comment301737> @GordonDavisson it sounds like the local user database has become corrupt, since `/var/db/dslocal/nodes/Default/users/` contains only `daemon`, `nobody` and `root`. I'd guess that the user database was automatically reset after it was chown'ed to 501. There should be a lot more users than just those ones -- my own system has several dozen "system" accounts (eg `_nsurlsessiond`, `_mdsnresponder`, etc) in addition to the "regular" user accounts and the three above. I'd guess reinstalling OSX from the recovery partition (cmd+R during boot) would be the easiest way to fix the missing users. <comment301790> @bennettp123: No, recovery mode *never* uses the local user database from the regular startup volume, it always uses its own (minimal) user database. Therefore, not seeing your user account in recovery mode is completely normal. <comment301880> @GordonDavisson oh, I didn't realize those commands were issues from the recovery volume. You're right of course.