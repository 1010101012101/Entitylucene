Homebrew putty installation does not make the putty command recognisable <body> I would like to instal putty with use of Homebrew. I'm performing the following command:  precodebrew install putty /code/pre  which gives the seemingly correct output:  precode==&gt; Downloading https://homebrew.bintray.com/bottles/putty-0.67.el_capitan.bottle.tar.gz Already downloaded: /Users/thisuser/Library/Caches/Homebrew/putty-0.67.el_capitan.bottle.tar.gz ==&gt; Pouring putty-0.67.el_capitan.bottle.tar.gz   /usr/local/Cellar/putty/0.67: 11 files, 1.5M /code/pre  However, the codeputty/code command is not recognised:  precodethisuser-541/41:~$ putty -bash: putty: command not found /code/pre  <answer241711> strongUpdate:/strong Current stable version (code.67/code) of codeputty/code can't be build with codegtk+2/code support on OS X using homebrew. This is a know issue #40951. It seems you can install from codeHEAD/code version (codebrew install --HEAD --with-gtk+3 putty/code) and for me that is also broken.  codebrew install putty/code by default installs from a pre-built codebottle/code. The pre-built codebottle/code for codeputty/code doesn't include codeputty/code, codeputtytel/code or codepterm/code.  If you want codeputty/code then can try installing from source. First remove the installed codeputty/code formula by running codebrew remove putty/code. After that install codeputty/code from source by running codebrew install --build-from-source --with-gtk+3 putty/code.  strongNOTE:/strong emAs of this writing building codeputty/code from source is broken with codehomebrew/code/em  <comment295949> is there a putty in /usr/local/bin <comment295951> Is it possible that you did not add /usr/local/bin to your PATH variable? Execute `echo $PATH` and post the output here. <comment296998> The `/usr/local/bin` is in the `$PATH`. For some reason `putty` is not, only `puttygen`. <comment296999> if it helps - the source of [putty formula](https://github.com/Homebrew/homebrew-core/blob/master/Formula/putty.rb)