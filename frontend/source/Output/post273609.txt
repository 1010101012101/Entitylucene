Applescript result of tell as argouments <body> precodetell application "Safari" to set the content of var1 to URL of active tab of front window do shell script "grep " &amp; var1 &amp; "path-to-my-file/file" /code/pre  If the url of active tab on Safari is  https://apple.stackexchange.com/ the applescript simulate the following command:  grep https://apple.stackexchange.com/     ....../file  I want to do that without store the result of " tell application safari " into a variable. I try this but doesn't work  precodedo shell script "grep " &amp; tell application "Safari" to return URL of ....... &amp; "...../file"  /code/pre  <answer273619> First of all, your first line of emcode/em codetell application "Safari" to set the content of var1 to URL of active tab of front window/code doesn't even compile! It errors out with "strongSyntax Error/strong A class name canâ€™t go after this identifier." pointing to codeactive tab/code. So, codedo shell script "grep " &amp; var1 &amp; "path-to-my-file/file"/code could't possibly work as written anyway!  A proper way to get the codeURL/code would be:  precodetell application "Safari" to get the URL of current tab of window 1 of application "Safari" /code/pre  Or to set it to a emvariable/em, use:  precodetell application "Safari" to set theURL to (get the URL of current tab of window 1 of application "Safari") /code/pre  So, the first two lines of emcode/em in your question would work if used like:  precodetry     tell application "Safari" to set theURL to (get the URL of current tab of window 1 of application "Safari")     do shell script "grep " &amp; quoted form of theURL &amp; " /path/to/target/file" end try /code/pre  ul liNote there is a space after the double-quote before code/path/to/target/file/code and this emspace/em is necessary./li liAlso the emcode/em is wrapped in a codetry/code emstatement/em to trap any errors. Although you'd need to add additional emcode/em to process the emerror(s)/em accordingly using an codeon error/code emhandler/em. While the codetry/code emstatement/em will hide an emerror/em, using it in conjunction with an codeon error/code emhandler/em will be necessary if codegrep/code doesn't find a match and you want to do additional processing based on the results from the codegrep/code emcommand/em not finding a match./li /ul  strongIf you really want to do it without setting the codeURL/code to a emvariable/em, then use this method:/strong  precodetry     do shell script "grep $(osascript -e 'tell application \"Safari\" to get the URL of current tab of window 1 of application \"Safari\"')" &amp; " /path/to/target/file" end try /code/pre  Note that in this case the necessary emspace/em can be as shown, after the double-quote before the empathname/em, or it can be placed after the closing parentheses of code$(...)/code and before the closing double-quote prior to the ampersand, e.g: code...\"Safari\"') " &amp;/code 