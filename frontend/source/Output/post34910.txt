How to hide computer name and user name in terminal command prompt <body> How can I hide username and computer in terminal command prompt?   In Terminal it says  precodeLast login: Mon Jan 13 00:00:14 on ttys000 Whatever:~ UserName$  /code/pre  Is it possible to show just the current folder and code$/code sign?   <answer34914> Change your prompt in your ~/.bashrc file. The example you asked for would be:  precodeexport PS1="\W \$" /code/pre  It would result in the current folder you're in being shown plus a $ for the regular prompt and a # if you're root. Check out this guide for more examples of what you could show in your prompt.  strongEdit:/strong  As per one of the comments below, you might need to source your code~/.bashrc/code from your code~/.bash_profile/code or even put this code in your code~/.bash_profile/code instead. You can read this article for a better explanation on which file to use.  <answer50348> Check out this tutorial on how to change your bash prompt. A very short version (only username and no current path): codePS1="\u$ "/code  Result: codemyusername$ cat something.log/code  <answer107893> precodeecho "export PS1='$ '" &gt;&gt; ~/.bash_profile . ~/.bash_profile /code/pre  This will leave just code$/code as a prompt. If you want to restore the old prompt, you will need to edit .bash_profile to remove that "export ..." line.  <answer209810> I had a similar issue with this but did not get it working at first.  This may of been because I wasn't sudo but either way this works just as well.  ol liOpen the preferences in the terminal (top right)/li liThen go into the shell tab/li liThen copy/paste the command  codeexport PS1="\W \$"; clear;/code/li liThen restart the terminal and should work/li /ol  img src="https://i.stack.imgur.com/KLXP9.png" alt="enter image description here"  <answer255276> Mine is: PS1="\W[\033[32m]\$(parse_git_branch)[\033[00m] $ "  <answer266802> Create/Edit your .bash_profile file or your root:  precodesudo vim ~/.bash_profile /code/pre  and add this line  precodeexport PS1="\W$: " /code/pre  The space will give you some breathing space in command prompt. After this modification your command prompt will looks like this:  precode~$:  /code/pre  <answer296215> Edit ~/.bash_profile to save your changes to prompt.   precodesudo nano ~/.bash_profile /code/pre  At the end, add your changes.   precode# Change prompt export PS1="\W \$ " /code/pre  Exit, save changes. Hit enter to confirm the file name. Run source to see the change.  precodesource ~/.bash_profile /code/pre  <comment39817> I have two questions since I have not that much experience working in the terminal :). 1) Why do you write ``~/.bashrc``? I found this file located at ``/private/bashrc``. 2) I did not manage to edit the file because it is locked. I've tried changing permissions without success. <comment39818> What do you mean by *show current folder*? The current folder is already shown after the ``:``. BTW: I've changed the computer name in **System Preferences - Sharing** to MBP. Now my login prompt is very short: ``mbp:~ matt$`` <comment39819> `/etc/bashrc` is the global file for all users, `~/.bashrc`is your own. Definitions in your own overwrite whatever is defined in `/etc/bashrc`. <comment39856> bashrc files are your bash resource files. Where you can customize the prompt, set aliases, export variables. Things of that nature. Like patrix said, the /etc/bashrc and the /private/bashrc files have system-wide resources. So somewhere in the /etc/bashrc is an export PS1 and if you edit your own bashrc file which is located at ~/.bashrc and export your own PS1 then on your account the command prompt will be different. If you want it changed for all users you have to edit the /etc/bashrc with a sudo command. <comment58697> It works, now the problem is it will not save the new bash prompt. It will show the old one after i shut down my mac. Why? <comment58734> Did you put the variable in the following file: `/Users/yourusername/.bash_profile`? <comment166646> for anyone still looking at this answer.. you may need to put it in ~/.bash_profile  Then run "source ~/.bash_profile" or just open a new terminal. <comment273173> Best simple :). <comment317905> We're looking for long answers that provide some explanation and context. Don't just give a one-line answer; explain why your answer is right, ideally with citations. Answers that don't include explanations may be removed. <comment318115> Delete, i don't care i was only trying to help! <comment348528> This is the best for temporary solutions.