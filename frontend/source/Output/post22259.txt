How to check what's locking a file? <body> I noticed that sometimes Mail.app locks files. The lock itself allows for files to be moved to Trash, but doesn't allow Trash to be emptied. (Perhaps Trash should be renamed Thrash in this case)  strongIs there a way (via a terminal command or an app) to see which app locks the file and/or unlock the file without quitting the app?/strong  <answer22261> Apparently the codelsof/code ("list of open files") terminal command can be used to do that: http://hints.macworld.com/article.php?story=20040121001144687  <answer22265> As Rabarberski says, codelsof/code can be used to find any process that has the file open. Note that you need to run the program as root, i.e., using codesudo/code, and that you can give the pathname to the file you're interested in as an argument, so there is no need for the codegrep/code invocation in the hint that Rabarberski points to. Also, if a process holds a lock on the file, you're supposed to be able to see that from the FD column in the codelsof/code output. See the manual page for the details. (When I run codesudo lsof/code on my machine, I see no locked files, so I won't guarantee that this works right on the Mac. codesudo/code is after all a generic unix program, and conceivably some features don't work on OSX.)  You cannot unlock a file without killing the process that holds the lock. But you can remove it with coderm/code from the command line.  <answer22268> As others pointed out, lsof does the trick. To make the task even simpler, I suggest the (free) app "What's keeping me" (URL: http://www.hamsoftengineering.com/products/wkm/wkm.html) which is basically a frontend for lsof and has a few time-saving options.  <comment24632> +1 for Thrash.. <comment24637> Haha! You got me. ;) <comment24649> Link doesn't seem to work so here's alternative location: http://www.macupdate.com/app/mac/27807/what/'s-keeping-me? <comment164078> [lsof without sudo may **not** produce the required output](http://apple.stackexchange.com/a/76305/8546). <comment181063> Just noted a silly misprint: Where it says “`sudo` is after all …” it was `lsof` I had intended to mention. Not going to edit it – it's too minor to warrant a bump to the front page.