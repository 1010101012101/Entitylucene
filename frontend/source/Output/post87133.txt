Files synced by Synk Pro have wrong owner on both synchronized Macs – how can I fix it? <body> I sync some folders within my Home folder between two Macs (running Lion and Mountain Lion) using Synk Pro, a commercial live file sync application. I have the same account name on both computers.  After syncing, some of my files on both computers are read-only, and they also aren't owned by me, but by the emmacports/em account – why?  img src="https://i.stack.imgur.com/Ldnhp.png" alt="Capture of the &quot;Sharing &amp; Permissions&quot; section of a &quot;Get Info&quot; window, showing &quot;macports&quot; as the owner"  To be able to modify files, I've used Get Info to change permissions of some files to read/write for 'everyone', and I used the app Permissions Reset to reset permissions back to original, but it doesn't change the permissions of sub-folders/files, and I have a huge file tree, so doing this manually is practically impossible. And Disk Utility does nothing to user data.  How can I fix this?  --br Added info:  As suggested, I ran the commands codeid -u/code and codeid -u macports/code on both computers. The result is that on the MacBook Pro, my account has uid 501 and emmacports/em has uid 502, and on the iMac it's the other way around.  <answer87136> You can easily do to this in the shell (terminal) like on Linux using codechmod/code  When using codechmod/code, you have the three letters codeu/code, codeg/code, codeo/code (user, group, other) for defining the instance to which you want to give the permission. And the three letters coder/code, codew/code, codex/code (read, write, execute) to define the kind of permission.  If you want to give all the read and execute permission, you would use codechmod ugo +rx target/code. Similarly, you can take away permissions using code-/code instead of code+/code  <answer87163> The files appearing read-only to you is probably only because you are currently not their owner.br &nbsp; &nbsp; What's likely happening is that the synced files retain the numeric owner-id from the source machine, and since that numeric emuid/em in this particular case corresponds to the account emmacports/em on the target machine (in both transfer directions), emmacports/em has become the owner.  To verify that your account on each computer has the same numeric uid as the emmacports/em account has on the other machine, type the commands codeid -u/code and codeid -u macports/code in the Terminal in your account on both computers.  h3Fixing the cause of the problem/h3  When information was submitted that the syncing is done using Synk Pro, I had a look at the Synk Pro web site and the app, and in the 'Advanced' settings I noticed the "strongOwnership:/strong" option, which by default is set to "Copy If Possible".br &nbsp; &nbsp; Since it looks like Synk Pro transfers files' numeric uid, and there's no option for mapping this uid to another uid/account on the target computer, the way to make synced files be owned by you is to change the "Ownership:" setting to "strongIgnore/strong".  img src="https://i.stack.imgur.com/SInjg.png" alt="screen capture of Synk Pro&#39;s advanced &quot;Ownership&quot; option set to &quot;Ignore&quot;"  h3Fixing the files/h3  To fix the permission problem for the already synced files, you only need to change the owner of the files to your own account. Since (in this case) all of your synced folders are within your Home folder /Users/emyouraccount/em, you can do this with the following command in the Terminal when logged in to an administrator account (you'll have to give sudo the password of the admin account):  precodesudo chown -R youraccount /Users/youraccount /code/pre  using the actual account name (also known as emshort user name/em) of your own account in place of emyouraccount/em. The account name is the same as the name of your account's Home folder in the /Users folder.br &nbsp; &nbsp; This will change all files and folders within the folder /Users/emyouraccount/em to be owned by emyouraccount/em (-R is for recursive), which should give you write-access to all of your files.  Since you earlier gave write-permission to 'everyone' for some files to be able to modify them, you may want to remove those permissions. This command:  precodesudo chmod -R u+w,go-w /Users/youraccount /code/pre  ensures that the owner of your files, and no-one else, has write permission on them.  Type codeman chown/code and codeman chmod/code for more info about these commands.  hr  h3Advice against using Finder to fix a folder's permissions/h3  (emI will update the below later/em)  Note: It is possible to change ownership and permissions of all files and folders in a folder tree using the strongFinder/strong, by use of the controls at the very bottom of the emSharing &amp; Permissions/em section of a Get Info window as shown in the picture in the question. One strongproblem/strong with this is that an account's home folder, and the standard subfolders therein, such as Library, Documents, Public and so forth, have special permissions (by use of ACLs) preventing them from being deleted among other things, and you strongdon't/strong want these special permissions to be removed or propagated to other folders and even files, so you should strongnot/strong use this unless you know very well what you are doing.  <answer87196> There is a drag-and-drop freeware app with a GUI that can do this for you if you don't want to use Terminal commands. It is called BatChmod.   Be very careful in using it, or any other method; changing the privileges of a whole directory tree of files at once can have unintended consequences.  <comment101801> How do I apply chmod to the entire directory tree? And change permissions but how I change the owner back to my user? <comment101910> @ArneStenström just edited my question. I don't get you second question, but not all my files is that way, but I can't track why anymore, because before I start to sync files, I copied some manually using AFP and using external HDD, I'm dealing with that situation for months, I really don't know when this started, I just modifying permissions to 'everyone' to w/r when I try to modify a file and I get a error. I know I messed everything even more. <comment101922> OH you're a genius! MPB `id -u vitim 501` `id -u macports 502` on iMac `id -u vitim 502` `id -u macports 501` <comment101925> use `chmod -R` for the directory tree and `chown user1 user2` to change ownership. <comment101926> Btw, why is my answer voted down? I think it works perfectly fine! <comment101928> I executed `sudo chown -R /Users/vitim/` on both computers and it fixed my files. I changed the Ownership option to Ignore, hopefully this will prevent my files turning ownership to `macports`. Please append your comment to your answer, so I can accept it. Thanks! <comment102213> @ArneStenström - hmm let me think that over. Lets [chat] to see what's best for the site. <comment102255> thanks for editing, hopefully this will help someone else. <comment102263> I know after reading the begining of the @ArneStenström answer that read-only is caused by not being the owner, but I think that worth mentioning "read-only" in the title to help other people finding the question, also the title suggested by Arne is more likely to be find by someone with the same problem. IMHO <comment102284> If the OP here likes @ArneStenström 's edit - please either of you place that in the title. I still like my version better, but I'll defer to any two people having a preference over my suggestion. It was meant to help get votes / be searchable - so everyone can try searching with terms they like and see that the engine yields this question whether or not the title has read-only in it. <comment102289> The next time I edit this answer, I will mention more directly in the lead paragraph that Vitim's accounts on the two Macs have different uid. Seems like it was too obvious to mention ...