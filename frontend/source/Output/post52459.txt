Is it possible to have bash escape spaces in pwd? <body> I'd like to copy the current directory to the clipboard, something like: codepwd | pbcopy/code. However, codepwd/code does not escape the space, so something in "Application Support", for example, doesn't copy correctly. I don't seem to remember this always being the case, so I could have boffed something. Using iTerm2.  Is there bash setting to escape everything? having trouble searching, too many questions/topics about Spaces.app or kbdesc/kbd.  Current:  precode$ pwd /Library/Application Support/Google Earth/ /code/pre  Preferred:  precode$ pwd /Library/Application\ Support/Google\ Earth/ /code/pre  Already seen posts: Copying the current directory&#39;s path to the clipboard and How to cd to a directory with a name containing spaces in bash?, which do not address this. I would have made a comment in the former, but I don't have the privileges.   <answer52463> precodepwd | sed 's/ /\\ /g' /code/pre  But I'm not sure this will ultimately fix your issue. pbcopy is copying exactly what it receives on stdin.  <answer52485> This command will escape spaces properly:  precodeprintf "%q\n" "$(pwd)" | pbcopy /code/pre  You can alias it using something with history like codecwd/code if you don't mind re-defining a different cwd  precodealias cwd='printf "%q\n" "$(pwd)" | pbcopy' /code/pre  Ditch the pipe to pbcopy if you want it to work more like pwd and just print out the escaped path.  <answer52492> There is no built-in way to make codepwd/code output escaped file paths, as this is generally not useful.  It does not make sense for codepwd/code or codepbcopy/code to be adding backslashes to what is copied.  If you wanted to copy the path into a text file or web post, you would not want a backslash inserted into it.    Probably what you want to do is create as separate alias, like codeqwd/code, to print the quoted form of the current directory, or just escape the output of codepbpaste/code, which is as easy as putting it in double-quotes:  pre class="lang-none prettyprint-override"codebash-3.2$ pwd /Users/user bash-3.2$ cd test\ dir/untitled\ \"folder/ bash-3.2$ pwd /Users/user/test dir/untitled "folder bash-3.2$ pwd | pbcopy bash-3.2$ echo "`pbpaste`" /Users/user/test dir/untitled "folder bash-3.2$ cd bash-3.2$ pwd /Users/user bash-3.2$ cd `pbpaste` bash: cd: /Users/user/test: No such file or directory bash-3.2$ cd "`pbpaste`" bash-3.2$ pwd /Users/user/test dir/untitled "folder /code/pre  emstrongNote that it is not just spaces that need escaping./em/strong  Forward and backward slashes, star, question mark, ampersand, semi-colon, and other characters need escaping, too.  Safest is just to use double-quotes as in the example, which will work even if the path includes double-quotes in it.    If you want to be perverse about it, you could make AppleScript quote the current directory for you:  pre class="lang-none prettyprint-override"codebash-3.2$ alias qwd="osascript -e 'return quoted form of POSIX path of (POSIX file \"./\" as alias)'" bash-3.2$ qwd '/Users/user/test dir/untitled "folder' /code/pre  Otherwise I mostly agree with Glenn, except, as above, I would alias the quoted form to codeqwd/code so as not to interfere with the normal codepwd/code:  precodealias qwd='printf "%q\n" "$(pwd)"' /code/pre  <comment60041> I doubt it the copy is correct - what you want is the paste to deal with spaces - which app are you pasting in? <comment60044> Great question. You'll soon have rep enough to comment. Welcome to the site! <comment60057> `pwd | pbcopy` works fine for me in Terminal. Finder/Edit/Show Clipboard confirms it's ok. <comment60063> That will only escape spaces, which is not nearly enough, even though that is what the OP used as an example. <comment60072> @lhf Yes, should have checked in Terminal, which works as you stated. No luck in iTerm2, though. Maybe I should switch back... <comment60090> How can this depend on the terminal emulator you're running? I've just tested and `pwd | pbcopy` works fine in iTerm2. <comment60121> @lhf yes, piping to copy, it works. I failed to explain the crux of the problem: `cd \`pbpaste\`` gives me an unescaped space, and hence, `cd` doesn't recognize the directory. And, you're right, it doesn't matter the terminal emulator. I don't know what I was thinking earlier, because it doesn't work any better in Terminal. Must not have had a space. <comment60134> Grenwar, see [my answer](http://apple.stackexchange.com/a/52492/21703) below. In short, just add double-quotes: `cd "\`pbpaste\`"` <comment60157> Using single-quotes for string literals seems like the best solution, I don't understand why `echo \'$(pbpaste)\'` wouldn't work. <comment60158> Ok, I have a better question, what is your reason for using `pwd |pbcopy`? I am about 98% sure there is a better solution. <comment287207> does not work on mac <comment287208> but this works in most cases the proper one from glenn didn't work out on my mac, there is no output at all <comment287209> You can also use it as alias when you declare a function: function escapePWD() { pwd | sed 's/ /\\ /g'; } and use this for alias: alias epwd='escapePWD' <comment356105> Works on my Mac.