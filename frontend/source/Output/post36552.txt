Run bash script at login stored in the home folder? <body> When I try to load a LaunchAgent plist from codelaunchctl/code I can't find out how to run a script in the home directory.  My code is:  pre class="lang-xml prettyprint-override"code&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;bash&lt;/string&gt;         &lt;string&gt;~/script.sh&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.tyilo.test&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  I have tried both with and without bash and also replacing code~/code with code$HOME/code. I have also tried using codebash -c/code without it working.  The error code is:   precode`com.tyilo.test: bash: ~/script.sh: No such file or directory` /code/pre  <answer36578> It would be helpful to know why the script needs to be run from the user's home directory. If you need the user's shortname for the script you can get it by assigning it to a variable as in  precodeuser=`whoami` /code/pre  Then use code$user/code in the script.  I would really put the script somewhere other than a home directory, then it's accessible by other users on the same computer. You could use the Shared directory or put the script in /Library/Scripts/  You will have to use the full path for the launchd plist. Also, in your launchd plist you won't need to specify code&lt;string&gt;bash&lt;/string&gt;/code as you should have the shebang in the script and it should be executable.  <answer36660> Is it executable?  codechmod 700 ~/script.sh/code   in Terminal. Also, I would not use $HOME or ~ but rather the actual path to the file.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.tyilo.test&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/path/to/script.sh&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  <answer79269> If your script is a user agent (and thus located in the library of the Home folder), codelaunchd/code's current working directory is the Home folder. UNIX refers to the home directory with a period in the path.  So basically, use code./script.sh/code instead of code~/script.sh/code. ;-)  <answer84639> The most reliable I found of doing this was by using codesh/code and the codeHOME/code enviroment variable:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;sh&lt;/string&gt;         &lt;string&gt;-c&lt;/string&gt;         &lt;string&gt;"$HOME/script.sh"&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.tyilo.test&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  strongNote:/strong the quotes are required.  <answer84665> codeEnableGlobbing/code enables tilde and wildcard expansion for codeProgramArguments/code:  precode&lt;key&gt;EnableGlobbing&lt;/key&gt; &lt;true/&gt; &lt;key&gt;ProgramArguments&lt;/key&gt; &lt;array&gt;     &lt;string&gt;say&lt;/string&gt;     &lt;string&gt;~/*&lt;/string&gt; &lt;/array&gt; /code/pre  It doesn't affect codeProgram/code or codeWatchPaths/code, however tilde expansion works in codeWatchPaths/code by default.  <answer153149> strongemEnableGlobbing/strong doesn't work on OS X Yosemite 10.10/em. It has been deprecated (ref).  You can see in logs codeThe EnableGlobbing key is no longer respected. Please remove it./code (from code/var/log/system.log/code)  The problem is that codelaunchd/code cwd (current working directory) is code//code, so you can't use code.//code like some people said.  To run a script from your home the simple way is to use code(bash|zsh|sh)/code code-c/code. option. This way you will have the ability to use the tilde code~/code or the code$HOME/code variable.  precode&lt;?xml version="1.0" encoding="UTF-8" ?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt;   &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;org.your.stuff&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;       &lt;!-- here is the important thing --&gt;       &lt;string&gt;zsh&lt;/string&gt;       &lt;string&gt;-c&lt;/string&gt;       &lt;string&gt;~/you/script/in/your/home&lt;/string&gt;     &lt;/array&gt;      &lt;!-- code below is just for the example --&gt;     &lt;!-- Keep running... --&gt;     &lt;key&gt;KeepAlive&lt;/key&gt;     &lt;true /&gt;     &lt;!-- ...every day. In sec, 60*60*24 = every day --&gt;     &lt;key&gt;ThrottleInterval&lt;/key&gt;     &lt;integer&gt;86400&lt;/integer&gt;   &lt;/dict&gt; &lt;/plist&gt; /code/pre  <comment41578> Try putting the full path e.g. /Users/name/script.sh (Also I would make the script executable and with first line #!/bin/bash and run it directly) <comment41582> I can't use the full path as it is to be used on multiple accounts and computers. <comment41696> Specifying `bash` as the actually command to execute is a good fallback with no real detriment. If he doesn't have the shebang, or forgets to make the script executable (o=rwx), then bash will still invoke / execute the script. <comment41697> If it is to be used my multiple accounts then you should put it in /usr/local/bin/ instead of making multiple copies of it in each user's $HOME. It would be helpful to know what you are trying to accomplish with this script. It sounds like a job for a LoginHook, IMO. <comment41703> There should already be a variable for the username, such as $USER or $LOGNAME. Also, the usual location for shared Unix scripts would be /usr/local/bin/ (not that you couldn't put them elsewhere, but /usr/local/bin/ will most likely already be in your $PATH). <comment41710> Using whoami is just another method for getting at the same info as $USER or $LOGNAME. I suggested the locations above as I didn't want to presume anything of the questioner. Also, before trying to make the launchd plist work, the script actually needs to be able to run from the CLI. <comment92849> What's the reason for the downvote? <comment97471> Nope, the working directory of launchd is actually `/`, not '~'. <comment97490> @Tyilo I'm not sure what you mean. If you mean "launchd's working directory is the root, in all casesâ€”even in user mode", please provide a reference. If you mean "launchd uses a slash instead of a tilde", read my post again. By the way, I have several scripts scheduled in launchd and they follow the behaviour I describe. ;-) <comment97491> @RandyMarch I made a launch agent in `~/Library/LaunchAgents` with the arguments: `sh`, `-c`, `echo $HOME  /Users/Tyilo/launchd_home.txt`. When ran the file `/Users/Tyilo/launchd_home.txt` contained `/`, not `/Users/Tyilo`. <comment97511> This is way better way of doing this. Is there a place where you can view the documentation for the keys in a LaunchAgent plist? <comment97513> man launchd.plist. Or see [this blog post](http://nb.nathanamy.org/2012/07/schedule-jobs-using-launchd/) or [my website](http://lri.me/osx.html). <comment112882> Thanks! That really helped me. <comment146685> This helped me too. Tried in the following Mac OS X Versions: 10.7, 10.8, and 10.9. <comment201465> Please note: This feature has been removed in Yosemite (`Mac OS X 10.10+`). <comment229886> I don't think you can use tilde with `sh`; when Bash is involved as `sh`, it runs in POSIX compatibility mode, which disables many Bash extensions. <comment248040> Looks like it's not in 10.9.5 either <comment358776> `~/` is gobbling so not supported. You can use `./` instead as long as the daemon is saved in the users home library. (`~/Library/LaunchAgents`)