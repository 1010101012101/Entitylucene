How to associate a route with an interface? <body> I have a Mac with two network interfaces, connected to different networks.  For the sake of argument, let's say one is connected to a private network and the other to the Internet.  I understand that I can use the Networks system preference pane to place the Internet interface higher in the "service order" than the private network and that, by doing so, its "Router" will become the system's default gateway (and the other interface's "Router" is ignored).  However, this obviously results in emall/em traffic being routed over the Internet (except the specific subnet of the private network to which the machine is directly connected).  I want to override this behaviour for the ementire/em private network, routing all private traffic via the appropriate interface.  What is the "Apple Way" of accomplishing this?  Merely executing codesudo route add .../code only creates the route temporarily, whereas I want to associate it with the interface in some permanent way (i.e. that will survive the interface changing state, or the system rebooting).  I presume that the solution will involve launchd invoking a script after the interface has come up&hellip; but how?!  <answer157268> strong1 - Here is a emcopied/em solution but deprecated:/strong  First of all, you have to be a local admin.  Open a terminal and change to the StartupItems directory  precodecd /Library/StartupItems /code/pre  Then create a new directory with root priviledges, e.g. AddRoutes and change into it  precodesudo mkdir ./AddRoutes cd ./AddRoutes /code/pre  Now you have to create and edit the bash script  precodesudo touch ./AddRoutes sudo nano ./AddRoutes /code/pre  Paste the following Lines into the bash script and emadapt it for your network/em  precode#!/bin/sh  # Set static routing tables  . /etc/rc.common  StartService () { sleep 10 ConsoleMessage "Adding Static Routing Table" sudo /sbin/route add -net 10.0.0.0 -netmask 255.0.0.0 -gateway w.x.y.z }  StopService () { return 0 }  StopService () { return 0 }  RestartService () { return 0 }  RunService "$1" /code/pre  When you finished with the script, save it.  Then create the corresponding plist.  precodesudo touch StartupParameters.plist sudo nano StartupParameters.plist /code/pre  When you created the plist file, paste the following lines into it.  precode{ Description = "Add static routing tables"; Provides = ("AddRoutes"); Requires = ("Network"); OrderPreference = "None"; } /code/pre  When you finished the plist file, save it.  Finally you have to set the access rights  precodesudo chmod 755 /Library/StartupItems/AddRoutes/* /code/pre  At the end you have to reboot and now your permanent static routes are set.  You can verify with the following  precodenetstat -nr /code/pre  strong2 - Here you may find a more up-to-date solution involving a little program:/strong  staticroute     Configured static routes survive a restart, and will automatically be added and removed as network interfaces go up and down.   <comment184843> Please add some informations about the "entire private network" and how it differs from the "specific subnet private network". <comment184879> @klanomath: For the sake of argument, assume "entire private network" is 10/8 and the "specific subnet" is 10.11.12/24. <comment184894> I'm just asking because NO traffic to private networks is ever successfully routed over the internet (except when VPN is involved) [please check](http://superuser.com/questions/324815/networking-and-routing-of-private-ip-ranges). So some really basic informations about your network infrastructure are missing. <comment184898> @klanomath: That is exactly why I need a static route to ensure the private network traffic is routed over the private network interface. <comment184906> Thank you.  I had seen this solution before.  However, `StartipItems` has been deprecated for a while in favour of `launchd`.  Is there a current recommendation? <comment184907> It works similar. You probably still need the same shell script. Let me have a look... <comment184909> A further problem is that the script will need to be triggered whenever the interface comes up, not just when the machine reboots. <comment184916> did you check this: [staticroute](http://alastairs-place.net/projects/staticroute/) <comment185163> Thanks; I solved it with staticroute - great find!