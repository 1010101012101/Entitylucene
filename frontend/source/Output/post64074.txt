MacPorts Software clean-up: /opt/local/var/macports/software <body> The MacPorts directory code/opt/local/var/macports/software/code is really full of "stuff":  Can all the code.tbz2/code files be deleted?  I am running out of space on the SSD.  <answer64077> Yes all the files in that folder located with in code${prefix}/var/macports/software//code can be deleted. Those are the installer packages for programs that you installed using MacPorts. MacPorts will re-download those as necessary when running the install or presumably the upgrade command too for a given program ,etc.  The descripton of the purpose of the directory ... is noted in MacPorts Guide under Binary Archives.     3.4.1. Binary Archives      Binary archives can only be used on a target system running MacPorts. Binary archives allow MacPorts utilities to begin installation after the destroot phase and install and activate a port on the target system. Binary archives are created whenever a port is installed, and can also be downloaded from a server.      ...      Binary archive files are placed in ${prefix}/var/macports/software/. The archive file type is set in the macports.conf file. The default format is .tbz2; other options are: tar, tbz, tbz2, tgz, tlz, txz, xar, zip, cpgz, cpio.   <answer229870> Before going about deleting files manually in the “software” directory, I would suggest running the command codesudo port uninstall inactive/code. The command will remove all the inactive archives from “software”. If you delete files manually from “software” after that, you’ll be deleting active archives. I’m not sure there’s much harm in doing that, but I’m not sure it’s harmless either.  The MacPorts “install” command goes through several phases, the final two being the “install” phase and the “activate” phase:     stronginstall/strong: Archive a port's destrooted files into code${prefix}/var/macports/software/code. […]      strongactivate/strong: Extract the port's files from the archive in code${prefix}/var/macports/software/code to their final installed locations, usually inside code${prefix}/code.   The “software” directory can contain archives that are not active, in particular old versions of ports that you have upgraded, because the “upgrade” command does not remove old versions by default:     codeupgrade/code does not uninstall the old version of a port. Instead, it deactivates it […] This allows you to go back to the older version if there happens to be a problem with the updated one. […] If you do not want to keep the old versions around while upgrading, you can pass code-u/code when upgrading: […] However, we instead recommend keeping the older versions around for a while and running codesudo port uninstall inactive/code once in a while.   The MacPorts FAQ only suggests using the “uninstall” command to get rid of unwanted files in “software”:     What are the folders in code${prefix}/var/macports//code for and why do they take up so much space?br   […]br   software: Contains the compressed archives of installed software. If a port is activated its files are extracted to the code${prefix}/code folders from the compressed files here. codeport uninstall &lt;port&gt; &lt;version&gt;+&lt;variant&gt;/code would remove it from here, but then this port can not be used anymore.    There doesn’t seem to be a switch for the “uninstall” command to uninstall an archive from “software” without also deactivating it first if it’s the active archive. So I assume it’s not a good idea either to manually remove active archives from “software”.  <answer267184> As Rinzwind said, you can uninstall (ie delete) any inactive versions of ports left behind by upgrades:  precodeport uninstall inactive /code/pre  If you install a port, all its dependencies are installed. If you uninstall a port, its dependencies are emnot/em uninstalled. You can uninstall them using the cutleaves utility:  precodeport install port_cutleaves port_cutleaves /code/pre  This only removes one layer of obsolete dependencies at a time; to remove them all, i use a hacky pipeline:  precodewhile ! yes u | port_cutleaves -b | grep 'There are no new leaves to process.'; do : ; done /code/pre  You can remove all the build-related files (work files, distribution files, temporary archives and logs) for uninstalled ports:  precodeport clean --all uninstalled /code/pre  To remove just the work files for installed ports:  precodeport clean installed /code/pre  The cleaning seems to touch every single port in the tree. I don't know what's going on there.  <comment122972> Is there a means to have this done automatically?  I mean, some configuration so that `sudo port upgrade outdated` always cleans these files when done.  TIA! <comment179767> It is not clear to me from the official description that MacPort will not need these binary archives at some point. However, from the discussion at https://trac.macports.org/wiki/howto/ShareArchives2, it looks like these binary archives can be used when you have multiple computers: you do the compilation on one computer, and then you can share the result. *If* this is their only purpose, then deleting them is obviously fine.