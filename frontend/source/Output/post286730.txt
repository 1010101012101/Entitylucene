I want to create a program with Automator and youtube-dl <body> I want to create an app with Automator on macOS Sierra (MacBook Pro 2012) which fetches the URLs of all pages opened in Google Chrome and add them to a function that I've  created based on youtube-dl.  The function named go:  precodefunction go {     youtube-dl "$1" "$2" "$3" "$4" "$5" "$6" "$7" "$8" "$9" "$10" "$11" "$12" "$13" "$14" "$15" "$16" "$17" } /code/pre  The URLs of the pages should replace the variables $1 $2 .....  <answer286743> The strongAppleScript/strong example emcode/em, shown below, does the following:  ul liIf Google Chrome is running, creates a emlist/em of every emtab/em of every emwindow/em./li liLooks for "YouTube" in the emtitle/em of every emtab/em of every emwindow/em in the emlist/em./li liIf the emtitle/em of a emtab/em contains "YouTube", it adds the emURL/em of that emtab/em to a emlist/em of emURLs/em./li liIf the emlist/em of emURLs/em is not empty, it changes directory to the Downloads folder and then downloads the video of each emURL/em in the emlist/em of emURLs/em, one at a time./li liIf the emlist/em of emURLs/em is not empty, it displays a emnotification/em when the downloading starts, and again when finished. /li /ul  hr  precodeon run     tell application "Google Chrome"         if running then             set theseURLs to {}             set theSearchString to "YouTube"             set theWindowList to every window             repeat with thisWindow in theWindowList                 set theTabList to every tab of thisWindow                 repeat with thisTab in theTabList                     if theSearchString is in (title of thisTab as string) then                         set end of theseURLs to (URL of thisTab as string)                     end if                 end repeat             end repeat         else             tell current application                 display notification "Google Chrome is not open!"                 return             end tell         end if     end tell     tell current application         if theseURLs is not {} then             display notification "Downloading YouTube Video..."             repeat with thisURL in theseURLs                 do shell script "cd \"$HOME/Downloads\"; ./youtube-dl -q --no-warnings " &amp; quoted form of thisURL             end repeat             display notification "YouTube Video Downloading Finished."         end if     end tell end run /code/pre  This strongAppleScript/strong emcode/em can be used in an strongAppleScript/strong emapplication/em or a strongRun AppleScript/strong emaction/em in an strongAutomator/strong emapplication/em.  strongNote:/strong The above example emcode/em does not employ all possible forms of emerror handling/em and is meant only to show one of many ways how to achieve an objective such as downloading a strongYouTube/strong video from each strongYouTube/strong emtab/em in strongGoogle Chrome/strong using codeyoutube-dl/code. The onus is always upon the User to add/use appropriate emerror handling/em as needed/wanted. This would include using codetry/code emstatements/em and codeon error/code emhandlers/em as/where appropriate. Although, as presently coded, it should run okay without that level of emerror handling/em.  If this example emcode/em is not acceptable in lieu of your emgo function/em, then you can modify the emcode/em as needed/wanted to accomplish the end goal of downloading every strongYouTube/strong video of every emtab/em of every emwindow/em in strongGoogle Chrome/strong that has "YouTube" in the emtitle/em (emwhich this code already does/em).  The codePATH/code passed to a codedo shell script/code emcommand/em is code/usr/bin:/bin:/usr/sbin:/sbin/code, and if codeyoutube-dl/code is not in that codePATH/code, then include the emfully qualified pathname/em to the emexecutable/em. As coded in the example emcode/em, I have it in my strongDownloads/strong folder and because I first emchange directory/em to there, all I needed to do is preface it with: code.//code  Also as coded, because it's searching the emtitle/em of each emtab/em for "YouTube", if the strongURL/strong is not in the form of, e.g. codehttps://www.youtube.com/watch?v=/code, it will download all videos on that strongYouTube/strong page. In other words, if it's in the form of e.g. codehttps://www.youtube.com/results?search_query=/code, then it going to do lots of downloading from that page.  If that's an issue, then change the following lines of emcode/em as shown:  ul liChange: codeset theSearchString to "YouTube"/code/li liTo: codeset theSearchString to "youtube.com/watch"/code/li liChange: codeif theSearchString is in (title of thisTab as string) then/code/li liTo: codeif theSearchString is in (URL of thisTab as string) then/code/li /ul  Then only the emURLs/em in that form of the strongURL/strong are added to the emlist/em of emURLs/em to be downloaded.  <comment361884> Just copying the URL text and replacing the variables. automatically <comment361889> You need to provide more and better details on how you expect this to work! Are you targeting specific videos or every video link on a given page, etc.? Please provide a real world example, and edit it into your OP. <comment361891> @ user3439894 I just want to open some videos on chrome and run the automator which will copy the opened video urls instead of the variables in the fonction go. it's too simple to understand my freind. <comment361987> I've update my answer again. :)