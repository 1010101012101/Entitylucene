How do I fix Terminal.app when my shell has been set to an illegal value? <body> Today I was mucking about trying to uninstall macports when I noticed an error being thrown up whenever I used sudo. I killed Terminal and tried to restart it which failed with the error message "You're are not authorized to run this application" and "The administrator has set your shell to an illegal value." How can I fix this?  <answer47022> If you are getting some strange error messages in your Terminal windows when they first open, that likely indicates a problem with your Terminal preferences. Try removing (or just renaming) the Terminal preferences file (code~/Library/Preferences/com.apple.Terminal.plist/code) and then restarting the Terminal application. (Source)  If you still have a problem, then look at what you have in your shell dot files: code~/.bash_profile/code, code~/.bashrc/code, and the like. If you can’t figure out what the problem is, try removing (or just renaming) those dotfiles.  Another place to look for problems is the codedefault.term/code file under code~/Library/Application Support/Terminal/code. This is the file that stores the default settings for Terminal windows.  If all that fails, use Disk Utility to repair the permissions for Terminal. (Source)  <answer47104>    …I'd already resolved the issue using Disk Utility to repair permissions…   If repairing permissions clears up the problem, the cause is (almost certainly) that the permissions of code/etc/shells/code were incorrect, preventing Terminal from reading it.  code/etc/shells/code contains a list of valid shell programs, and Terminal checks to see whether the shell for your user account is listed. If not, it produces the “illegal shell” message. If it can’t read the code/etc/shells/code file due to permission issues, it also produces this message.  More rarely, some people have encountered this problem when the code/etc/shells/code file was somehow altered so that it is empty, in which case you’ll need to restore its contents by copying it from a good system, or with a Time Machine restore, etc.  To answer your original question:  If Terminal complains about an “illegal shell” it means that the shell for your user account was not found in code/etc/shells/code.  You can see which shells are considered valid with codecat /etc/shells/code.  You can check which shell your user account is set to use with codeecho $SHELL/code, or by reading the user information with codedscl . -read "/Users/$LOGNAME" UserShell/code. Or you can use strongSystem Preferences/strong:  ol liOpen strongSystem Preferences/strong and go to strongUsers &amp; Groups/strong./li liClick on the lock and enter your password to be able to read/set user settings./li liControl-Click (or Right-Click) on your user to get a contextual menu and choose strongAdvanced Options…/strong./li /ol  The Advanced Options sheet displays detailed user account information including the shell pathname. You can also use this to edit the shell pathname to re-enable logins if it has been set to a value not listed in code/etc/shells/code.  <answer56096> I got the same error after I ran codechsh/code and made a typo in the path for the login shell.  I wasn't able to open Terminal, and nothing happened when I tried to show the advanced options sheet in the Users &amp; Groups preference pane. I was able to run codechsh -s /bin/bash/code in iTerm 2 though.  You can also change the default login shell with dscl or edit code/var/db/dslocal/nodes/Default/users/$USER.plist/code directly.  <answer74378> For me, I received this error because of a chsh typo as well. I use homebrew and (very stupidly) set my shell to the binary in /usr/local/Cellar rather than the dynamic link in /usr/local/bin. As a result Terminal gagged but surprisingly, iTerm did not. This thread was quite helpful for fixing my problem.  To prevent emmy/em problem: if you use homebrew, ALWAYS reference the dynamically linked binaries in /usr/local/bin, for these will always be kept up to date.   <answer86166> I use zsh, while in the settings don't know why $SHELL is set to strongcode/usr/local/bin/zsh/code/strong, then I changed it to strongcode/bin/zsh/code/strong, problem resolved.  In my case, repair permissions or other approaches above didn't help.  But, thanks anyway.  <comment53847> Thanks for giving a few places to look. I can't confirm if any of them were the cause of my problem because I'd already resolved the issue using Disk Utility to repair permissions but I felt it was a sledge hammer approach and I wanted a better understanding of what went wrong in the 1st place. <comment53935> Neither Terminal application preferences nor any of those files mentioned should be able to affect this particular issue. See my answer for details. Repairing permissions can, though, obviously. <comment57768> Why the downvote without leaving a comment explaining it? Especially on an accepted answer. <comment86410> It looks like link did not get attached to the thread you were referencing.  Also, when referencing another thread, it would be helpful if you could provide at least a brief overview of the fix in your answer. <comment109732> To see why you can't get to a shell, `cat /etc/shells`.  Hmmm