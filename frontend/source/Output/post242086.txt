output of the who command <body> I am trying to understand the output of the codewho/code command. When I add the code-H/code flag to print the headers, the second column ( the one signifying the users logged in) is titled codeLINE/code. I am trying to understand what codeLINE/code is. I am logged into my computer twice, according to the codewho/code command, but one of the lines is bad. To understand what that means, I would like to know what codeLINE/code is.  <answer242098> LINE indicates the TTY the process is running on. It is correct about you being logged into your computer twice, as you are logged in once to Cocoa (the OS X desktop), codeconsole/code, full path: code/dev/console/code, and again in the terminal, codettysXXX/code, full path: code/dev/ttysXXX/code (where "XXX" is a three-digit number, starting from 001).   codeconsole/code is Darwin's (OS X kernel) only 'real' TTY, the only one that isn't running in a terminal emulator. codeconsole/code, being the only non-emulated TTY is therefore the only one GUIs can run on.   The Apple logo that appears when Cocoa is not running (booting and shut-down) is generated by the kernel except when in verbose mode (start the Mac with the boot argument -V either by holding ctrl-V while booting or running codenvram boot-args="-v"/code as root, however that will make your Mac always boot in verbose mode until you run codenvram boot-args=""/code or clear nvram).   When boot in verbose mode instead of an Apple logo the kernel will log any boot messages and related to code/dev/console/code and anything written to code/dev/console/code will show up on the console and therefore on-screen (since nothing is generating a GUI on it, whether that be Cocoa or the Kernel). The main part of this is how other Unix-like/POSIX systems work.   I know this answer is kind of crappy but I hope it helps.  <comment297619> See [What is the exact difference between a ‘terminal’, a ‘shell’, a ‘tty’ and a ‘console’?](http://unix.stackexchange.com/questions/4126/what-is-the-exact-difference-between-a-terminal-a-shell-a-tty-and-a-con) over @ Unix/Linux SE.