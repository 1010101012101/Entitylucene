Sound effects for commands completing in inactive tabs/windows <body> I think my life would be emthat/em much better if a subtle sound effect was played when a task completed in a terminal window/tab that's not the current one. It'd be even better if an exit code 0 sounded different to any other exit code.  Is there any way to make this happen?  (I often start little scripts in a window, like uploading a file to a server, then switch to another tab to do something on the server. It'd be great to hear when the file has arrived.)  <answer121011> It's certainly achievable if you're using scripts, I often use  precodetput bel /code/pre  at the point where work is complete. This will not only beep the terminal but put a badge on the dock icon as well.  In terms of handling exit codes then you can string a couple together for a different sound:  precodeif command_or_exit_status then # exit OK         tput bel else # not ok         tput bel; tput bel; fi /code/pre  <comment141039> Ok, good to know, but I want this to work for all commands - not just certain scripts. Also, any sounds other than `bel`? <comment141041> You could use **afplay(1)** to play any sound file. One way to handle arbitrary commands would be to adapt the above example to work as a wrapper with the command you want as an argument, i.e., test the exit status of `$@` <comment141048> Yeah, could be a good a workaround using a short alias. So I could end up with something like: `./mylongscript.sh ; zz` where zz is an alias that checks the exit code then plays a sound appropriately. <comment141091> Sure, or the other way around if you're grouping jobs up (or not) `beepScript.sh command1 command2 ...`