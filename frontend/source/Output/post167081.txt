How can I customize the symlinks that MacPorts creates/deletes when using its `port select --set <group>` command? <body> I use MacPorts to manage certain *nix packages on my Mac. One such Mac has multiple Python versions installed.  When I switch between Python versions, I use a command like:    pre class="lang-none prettyprint-override"codeport select --set python python27-apple /code/pre  to set the default codepython/code to the Python 2.7 that my Mac shipped with from Apple, as described here.  However, MacPort's codeselect/code command doesn't change any of the utilities that use codepython/code, such as codeeasy_install/code.  This means that regardless of which Python is active, the supporting utilities are always the system default ones:  pre class="lang-none prettyprint-override"codebash-3.2$ which python /opt/local/bin/python bash-3.2$ port select --show python The currently selected version for 'python' is 'python27'. bash-3.2$ which easy_install /usr/bin/easy_install bash-3.2$ ls /opt/local/bin/easy_install-* /opt/local/bin/easy_install-2.7 /opt/local/bin/easy_install-3.4 /code/pre  Notice that installing a Python version with MacPorts brings along its codeeasy_install/code command, but switching to that codepython/code using codeport select --set python27/code does emnot/em also set code/opt/local/bin/easy_install-2.7/code.  This leads to confusing errors where the wrong version of Python was used to install packages.  Thus, my question:  strongHow can I instruct MacPorts to make appropriate symlinks for Python's additional utilities, not just the single codepython/code command?/strong  <comment196159> Did you forward your acurate analysis to the macports project: https://guide.macports.org/#project.tickets ? <comment196330> Not yet, I just figured I had to be missing something. But if I'm not, I will file a ticket. Thanks for the sanity check in any event. :) <comment196334> Okay, I added [Ticket:46568](https://trac.macports.org/ticket/46568) to their bug tracker.