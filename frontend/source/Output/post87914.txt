How can I turn ~/Documents into a symlink? <body> I keep my Documents in an encrypted directory in Dropbox (code~/Dropbox/encrypted/code), which I then mount at code~/clear/code when I log in.  On my other Macs, I have change ~/Documents to a symlink that points at code~/clear/code, but trying to do the same on a new Mountain Lion machine doesn't work:  precodePertinax:~$ pwd /Users/drew Pertinax:~$ ls Desktop         Dropbox         Music           README.markdown tmp Documents       Library         Pictures        bin Downloads       Movies          Public          clear Pertinax:~$ ln -sf clear/Documents . ln: ./Documents: Permission denied Pertinax:~$ ls -l@hd Documents drwx------+ 3 drew  staff   102B Apr  5 15:02 Documents Pertinax:~$ xattr -l Documents /code/pre  It doesn't appear to have odd permissions or extended attributes, so I'm stumped.  I don't recall what I had done previously to make this work on my Lion and prior machines, or if I did anything special at all.  <answer87932> Have you thought about executing the command as codesudo/code? I've got a similar setup on my Mountain Lion Mac where I've just deleted my code~/Documents/code folder and recreated it as a symlink to my code~/Dropbox/code folder.  <answer88092> All of the default subfolders of your home have an ACL set to "everyone deny delete" (ACLs can be viewed with codels -le/code and stripped with codechmod -N/code)  ACLs still don't affect a command run as the superuser.  <comment102883> The "+" after the traditional UNIX permissions indicate an ACL (unlike the @ of an extended attribute), viewable with `ls -le`; all the premade subfolders of your home will have it set to "everyone deny delete", but attempting to `rm -Rf` it ought to succeed. <comment103061> @Ryccardo - You are correct!  The `-e` flag on `ls` is what I was missing.  Could you make this answer so that I can accept it? <comment103076> There it is :~)