What is the "lsd" process on OS X, and why is it using so much CPU power? <body> I looked in iStat Menus and noticed that a process named codelsd/code was consuming 99% of my CPU (Out of 400% for 4 cores). I searched around for a bit, but couldn't find out what this was, and why it's using so much processing power. It's not Little Snitch Daemon, as I never installed that. strikeSomeone else said that it could be Launch Services Daemon, but I thought that process was codelaunchd/code./strike It's Launch Services Daemon.  Upon looking in the console, I notice these messages when searching for codelsd/code:  precode22/12/2015 9:36:02.000 a.m. kernel[0]: Sandbox: AssetCacheLocato(400) deny(1) mach-lookup com.apple.lsd.mapdb 22/12/2015 9:36:02.931 a.m. AssetCacheLocatorService[400]: LaunchServices: disconnect event received for service com.apple.lsd.mapdb 22/12/2015 9:36:02.000 a.m. kernel[0]: Sandbox: AssetCacheLocato(400) deny(1) mach-lookup com.apple.lsd.mapdb 22/12/2015 9:36:02.932 a.m. AssetCacheLocatorService[400]: LaunchServices: disconnect event received for service com.apple.lsd.mapdb 22/12/2015 9:36:03.000 a.m. kernel[0]: Sandbox: AssetCacheLocato(400) deny(1) mach-lookup com.apple.lsd.modifydb 22/12/2015 9:36:03.657 a.m. AssetCacheLocatorService[400]: LaunchServices: disconnect event received for service com.apple.lsd.modifydb 22/12/2015 9:39:41.000 a.m. kernel[0]: Sandbox: SpotlightNetHelp(376) deny(1) mach-lookup com.apple.lsd.mapdb 22/12/2015 9:39:41.995 a.m. SpotlightNetHelper[376]: LaunchServices: disconnect event received for service com.apple.lsd.mapdb 22/12/2015 9:39:41.000 a.m. kernel[0]: Sandbox: SpotlightNetHelp(376) deny(1) mach-lookup com.apple.lsd.mapdb 22/12/2015 9:39:41.996 a.m. SpotlightNetHelper[376]: LaunchServices: disconnect event received for service com.apple.lsd.mapdb 22/12/2015 9:39:42.000 a.m. kernel[0]: Sandbox: SpotlightNetHelp(376) deny(1) mach-lookup com.apple.lsd.modifydb 22/12/2015 9:39:42.370 a.m. SpotlightNetHelper[376]: LaunchServices: disconnect event received for service com.apple.lsd.modifydb 22/12/2015 9:39:58.100 a.m. lsd[296]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist 22/12/2015 10:01:15.000 a.m. kernel[0]: process lsd[237] thread 19967 caught burning CPU!; EXC_RESOURCE supressed due to audio playback 22/12/2015 3:34:04.828 p.m. lsd[296]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist 22/12/2015 3:44:07.469 p.m. sudo[45308]:     MyUsername : TTY=ttys000 ; PWD=/private/var/db ; USER=root ; COMMAND=/bin/mkdir lsd 22/12/2015 3:49:09.183 p.m. lsd[306]: LaunchServices: Scheme mapping file does not exist, creating file. 22/12/2015 3:49:09.400 p.m. lsd[306]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist 22/12/2015 3:49:09.407 p.m. lsd[306]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist 22/12/2015 3:49:39.366 p.m. lsd[306]: LaunchServices: Currently 0 installed placeholders: () 22/12/2015 3:49:50.000 p.m. kernel[0]: Sandbox: AssetCacheLocato(535) deny(1) mach-lookup com.apple.lsd.mapdb 22/12/2015 3:49:50.802 p.m. AssetCacheLocatorService[535]: LaunchServices: disconnect event received for service com.apple.lsd.mapdb 22/12/2015 3:49:51.000 p.m. kernel[0]: Sandbox: AssetCacheLocato(535) deny(1) mach-lookup com.apple.lsd.modifydb 22/12/2015 3:49:51.002 p.m. AssetCacheLocatorService[535]: LaunchServices: disconnect event received for service com.apple.lsd.modifydb 22/12/2015 4:31:57.573 p.m. lsd[306]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist 22/12/2015 4:34:34.075 p.m. lsd[306]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist 22/12/2015 4:34:34.290 p.m. lsd[306]: LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist 22/12/2015 4:37:20.000 p.m. kernel[0]: process lsd[220] thread 26462 caught burning CPU!; EXC_RESOURCE supressed due to audio playback /code/pre  As for this message:  precode22/12/2015 3:44:07.469 p.m. sudo[45308]:     MyUsername : TTY=ttys000 ; PWD=/private/var/db ; USER=root ; COMMAND=/bin/mkdir lsd /code/pre  I did try making a dir called code/private/var/db/lsd/code as root.  Also, my CPU usage seems to be very intermittent (which it never did before).  img src="https://i.stack.imgur.com/eHREq.png" alt="Intermittent CPU Usage"  Looking into code/usr/libexec/code, I found codelsd/code and noticed that it has been created on 17 Sep 2015. Why is it so new (along with everything else in that directory)?  <answer220582> It's part of LaunchServices. You can extract some info (strings) out of it with the strings command:  precodehostname:~ username$ strings /usr/libexec/lsd @(#)PROGRAM:lsd  PROJECT:LaunchServices- &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt; &lt;key&gt;CFBundleAllowMixedLocalizations&lt;/key&gt; &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Other than that, it seems your problem is also being discussed here.  <answer220583> emlsd/em in OS X is indeed the LaunchServiceDaemon. emlaunchd/em is a launch daemon manager! It provides probably the same function as in iOS. According to Apple it provides     support for launching apps and matching document types to apps. As a result, the keys recognized by Launch Services allow you to specify the desired execution environment for your bundled code.   emlsd/em was apparently introduced in OS X 10.11 El Capitan because I can't find it in older systems. The latest version (included in 10.11.2) should have the mod date Dec 3, 2015.  hr  To troubleshoot   ul lithe em"LaunchServices: Could not store lsd-identifiers file at /private/var/db/lsd/com.apple.lsdschemes.plist"/em problem check this post:     Probably not the best way, but I seem to have fixed/suppressed that error message. This is what I did:      codecd /private/var/db/code      lsd directory did not exist      codemkdir lsd/code      Still no joy      codechmod -R 777 /private/var/db/lsd/codebr   (i know, i just opened up my gibson to being hacked)br   codetouch /private/var/db/lsd/com.apple.lsdschemes.plist/code      Seemed to go away after that. Willing to bet a disk repair/permissions check will break it again, but have not tried. If I cat that file the following is the content:      codebplist00?/code /li lithe 100 % CPU-usage: /usr/libexec/lsd using 100% of CPU/li /ul  <answer220594> It seems that codelsd/code gets stuck on _LSCreateRegistrationData for a certain app. If you're having the same issue, follow the guide below.    ol liOpen activity monitor and search for codelsd/code/li liGet the PID of the codelsd/code owned by the coderoot/code user/li liOpen the terminal/li liEnter codesudo sample PID-HERE/code (Of course, replacing PID-HERE with the PID you got in step 2)/li liIf you're having the same issue, there should be something about code_LSCreateRegistrationData/code in the call graph (near the top of the whole output)/li liEnter codesudo lsof -p PID-HERE/code/li /ol  You should be able to recognise an app package within that output. Try deleting or updating it and see if it solves the issue  <answer225776> What worked for me was "sudo xcrun xcscontrol --reset" cpu went from pulsing 95% down to about 4%.  <answer228839> I too discovered that I had problems with lsd. It seems that it is enough to create the directory and touch the file, there was (at least in my case) no need to fiddle with the permissions as described by klanomath.  In my case, it did stop the lsd errors, but I was still seeing frequent errors like these:     Feb 25 14:06:07 iMac system_profiler[259]: LaunchServices: Database mapping failed with result -10822, retrying      Feb 25 14:06:07 iMac system_profiler[259]: LaunchServices: received XPC_ERROR_CONNECTION_INTERRUPTED trying to map database      Feb 25 14:06:07 iMac com.apple.xpc.launchd[1] (com.nomachine.nxserver): Service only ran for 7 seconds. Pushing respawn out by 3 seconds.   I had an installation of NoMachine and deleting that (since I only ever really did use the nxplayer anyway), that error stopped as well.  <comment266996> Ah, thanks for clearing that up (and I'm still on 10.11.1) I still have no idea why it need so much CPU power though... <comment267008> After a lot of digging, I think I may have found the app causing the 100% problem. Robocraft. Lets see if updating it works, and if not, I'll have to uninstall it. <comment267014> Please don't update the question with the answer, post an answer below instead. Otherwise both the search function and users will be confused. <comment279082> I have a properly working `lsd` and no directory `/private/var/db/lsd` existing - perhaps that's a red herring from systems that are older than 10.11 ? It still does a lot of disk writing for reasons I haven't been able to identify from time to time - perhaps that translates into a lot of CPU for systems with spinning hard drives and/or large filesystems with significant data stores? <comment290780> [Related to the same iOS process](http://apple.stackexchange.com/q/155431/37586) <comment351229> Throws an error message:  xcrun: error: unable to find utility "xcscontrol", not a developer tool or in PATH