How can I get the PostScript name of a TTF font installed in OS X? <body> I have a TTF font installed on my Mac that I have added to an X-Code development project.  For the life of me, I can not get it to work with my application but I think it's because I'm using the wrong font name.  Using Font Book, or any other tool, how can I get the Postscript font name from the font meta-data?  I have a hunch that the codePostscript name/code might be different from the codeFont name/code, but I need to verify.  <answer79889> Open the strongFont Book/strong application. (It should be in your strongApplications/strong folder.)  Select the font you need the Postscript Name for.  Select emShow Font Info/em from the emPreview/em Menu. ( Or use kbdâŒ˜/kbd+kbdi/kbd).  img src="https://i.stack.imgur.com/KhHNe.png" alt="screenshot:fontbook font info"  <answer275493> Your assumption is correct. strongiOS requires that you identify a font based on its Postscript name (or Fullname), which is not always the same as the font's actual Filename/strong.  You can get the PostScript name using FontBook (as shown on the accepted answer here), but there are other ways.   From directly inside XCode, you can extract the PostScript Name from the project's installed fonts via codeUIFont/code. Simply run this to print the PostScript names of your installed project fonts :  In strongObjective-C/strong (source):  precodefor (NSString *fontFamilyName in [UIFont familyNames]) {     for (NSString *fontName in [UIFont fontNamesForFamilyName:fontFamilyName]) {         NSLog(@"Family: %@ Font: %@", fontFamilyName, fontName);     } } /code/pre  Or strongSwift 3.0/strong (source)  precodefor familyName in UIFont.familyNames {     for fontName in UIFont.fontNames(forFamilyName: familyName ) {         print("\(familyName) : \(fontName)")     } } /code/pre  Or strongfrom the terminal/strong, from inside the directory where you have your font files, you can run this script to print all the PostScript names of the fonts inside the current directory (uses the codefc-scan/code utility from fontconfig which is probaly already installed) (source):  precodefor file in "$arg"*.{ttf,otf}; do fc-scan --format "%{postscriptname}\n" $file; done /code/pre  Here is a screenshot of the above command running on my code~/Library/Fonts/code directory:  img src="https://i.stack.imgur.com/k4vTt.png" alt="enter image description here"  The script above will run through all the code.ttf/code and code.otf/code files in the current directory, then print out the strongPostScript Name/strong for each font which you can use to reference the font file in XCode or elsewhere.  If you want to get fancy with some additional information (PostScriptName, Filename) and some color coding, you can run this alternative script:  precodefor file in "$arg"*.{ttf,otf}; do      postscriptname=$(fc-scan --format "%{postscriptname}\n" $file);     printf "\033[36m PostScript Name:\033[0m %s \e[90m(%s)\033[0m\n" "$postscriptname" "$file"; done /code/pre  img src="https://i.stack.imgur.com/ICUpu.png" alt="enter image description here"  This is a bit faster than copy-pasting code inside of your AppDelegate.m file to print out the names every time you want to add a new font file, which is the popular method, and it's also faster than opening the Font in FontBook to inspect the PostScript Name.  strongUSEFUL TIP:/strong If you alias the above script in your terminal so that all you need to do is type a single command to get all the PostScript font names for all the files in the current directory, then you will save time in your development workflow and have this handy script ready to use when you need it.  strongHope this helps!/strong 