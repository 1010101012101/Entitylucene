What might fix an installation of KeePass that won't copy or paste on OS X? <body> KeePass will not copy and paste, let alone do autotype.  I have installed the KeePass 2.18 Mac package from http://keepass2.openix.be/. I could not find a more recent Mac package for KeePass, so I also replaced all of that package's  files with those from the  Portable KeePass 2.20.1 (ZIP Package). That was from the page http://keepass.info/download.html, link to actual zip: http://downloads.sourceforge.net/keepass/KeePass-2.20.1.zip. So I'm successfully running KeePass 2.20.1.  I'm running Mono version 2.10.9.  I'm running OS X 10.7.5 on a MacBook Pro.  I can't believe that KeePass's site touts Mac compatibility when it won't copy/paste. That's pretty core functionality to be missing. Searches reveal others have had this problem since 2.18, but no workarounds, no bug reports.  Has anyone been able to resolve this issue?  <answer71069> The KeePass documentation in http://keepass.info/help/v2/setup.html#mono, although not specifically mentioning OS X, describes your issue:     strongClipboard:/strong    On some systems, Mono's clipboard routines don't work   properly. In this case, install the xsel package. If codexsel/code is   installed, KeePass â‰¥ 2.20 uses this utility for clipboard operations.   So codexsel/code should help. (codexsel/code is available from MacPorts (http://www.macports.org/ports.php?by=all&amp;substr=&amp;page=316&amp;pagesize=50). The source is available here: http://www.vergenet.net/~conrad/software/xsel/#download)  strongEDIT/strong: But it doesn't. I was curious so I compiled codexsel/code on my Mac. It didn't solve the issue with copy/paste (tested with Portable KeePass 2.20.1), as I feared, I must say. Why? Because as stated here http://www.kfish.org/software/xsel/ codexsel/code is a tool that manipulates the clipboard contents of strongX11/strong applications. X11 provides the graphical user interface for Linux and UNIX, but OS X uses strongQuartz/strong instead, and so does Mono, as I realized (see http://www.mono-project.com/WinForms#About_System.Windows.Forms).  There's a workaround for strongcopying/strong username and password to clipboard, as explained in this thread http://sourceforge.net/projects/keepass/forums/forum/329221/topic/5106260:     Ureka em(sic)/em. Your 2.19 is on the path to copy paste working on the MAC via   Mono! Your button to copy the username, and your button to copy the   password works now!!!   The poster above refers to these buttons (portable KeePass 2.20.1 shown running on Windows (sorry, no Mac nearby)):  For copying the username:  img src="https://i.stack.imgur.com/27Ylc.png" alt="enter image description here"  For copying the password:  img src="https://i.stack.imgur.com/7S53K.png" alt="enter image description here"  strongEDIT/strong:  I'd like to share how I compiled codexsel/code in case somebody needs it on OS X:  ol liInstall X11 from http://support.apple.com/kb/HT5293 (this only applies to OS X 10.8 "Mountain Lion" users)./li liSymlink header and library files from code/opt/X11/include/X11/code to code/usr/local/include/X11/code and from code/opt/X11/lib/code to code/usr/local/lib/code (alternatively you can symlink to code/usr/include/code and code/usr/lib/code):  precode$ sudo ln -s /opt/X11/include/X11 /usr/local/include/X11 $ for lib in $(ls /opt/X11/lib/lib*); do sudo ln -sf $lib /usr/local/lib; done /code/pre  Otherwise you will get lots of errors about files not found or missing symbols. I tried passing the non-standard X11 directories as an option to code./configure/code without success./li liDownload from http://www.vergenet.net/~conrad/software/xsel/#download and extract, for example, to your Desktop./li liYou need codegcc/code plus libraries. Install Xcode and then install the command line tools from XcodePreferencesDownloadsComponents. /li liChange directory, configure and compile:  precode$ cd xsel-1.2.0 $ ./configure --prefix /usr/local $ make make  all-am if gcc -DHAVE_CONFIG_H -I. -I. -I.     -g -O2 -fno-strict-aliasing -Wall -Werror -g -std=gnu99 -Wdeclaration-after-statement -Wno-unused -MT xsel.o -MD -MP -MF ".deps/xsel.Tpo" -c -o xsel.o xsel.c; \     then mv -f ".deps/xsel.Tpo" ".deps/xsel.Po"; else rm -f ".deps/xsel.Tpo"; exit 1; fi gcc  -g -O2 -fno-strict-aliasing -Wall -Werror -g -std=gnu99 -Wdeclaration-after-statement -Wno-unused   -o xsel  xsel.o  -lX11 $ make install /code/pre/li /ol  You can also install codexsel/code with MacPorts using the command codesudo port install xsel/code. In my setup it also required the symlinks for the X11 libraries and header files and needed emmuch/em longer to compile.  I'd also like to share some caveats when using KeePass on a Mac:  ol liKeePass 2.18 (from http://keepass2.openix.be) has trouble with case-sensitive HFS+. codeKeePass.exe/code is typed codeKeepass.exe/code (notice lowercase 'p') in codeKeePass2.18.app/Contents/MacOS/startkeepass.sh/code (so that it silently fails). I had to use a USB flash drive formatted with case-insensitive HFS+ and run KeePass from there./li liI had a lot of trouble getting KeePass 2.20.1 to work on OS X 10.8 "Mountain Lion". It couldn't get rid of the error message:  precodeSystem.ArgumentException: Directory does not exists Parameter name: path   at System.IO.FileSystemWatcher..ctor (System.String path, System.String filter) [0x00000] in &lt;filename unknown&gt;:0    at (wrapper remoting-invoke-with-check) System.IO.FileSystemWatcher:.ctor (string,string)   at KeePass.Util.IpcBroadcast.FswStartServer () [0x00000] in &lt;filename unknown&gt;:0    at KeePass.Util.IpcBroadcast.StartServer () [0x00000] in &lt;filename unknown&gt;:0    at KeePass.Forms.MainForm.OnFormLoad (System.Object sender, System.EventArgs e) [0x00000] in &lt;filename unknown&gt;:0    at System.Windows.Forms.Form.OnLoad (System.EventArgs e) [0x00000] in &lt;filename unknown&gt;:0    at System.Windows.Forms.Form.OnLoadInternal (System.EventArgs e) [0x00000] in &lt;filename unknown&gt;:0 /code/pre  I finally found the culprit: The release notes for version 2.20.1 state (http://keepass.info/news/n121004_2.20.1.html):     Changes from 2.20 to 2.20.1:   On Unix-like systems, KeePass now stores most of its temporary files in a private temporary directory (preferably in code$XDG_RUNTIME_DIR/code).   According to http://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html:  code$XDG_RUNTIME_DIR/code defines the base directory relative to which user-specific non-essential runtime files and other file objects (such as sockets, named pipes, ...) should be stored. The directory MUST be owned by the user ...  codeXDG_RUNTIME_DIR/code was not set. I set it to a directory I owned and KeePass worked like a charm:  precode$ echo $XDG_RUNTIME_DIR $ mkdir ~/.mono $ export XDG_RUNTIME_DIR=~/.mono/; mono --desktop /Volumes/USB_Flash_Drive/KeePass-2.20.1/KeePass.exe /code/pre/li /ol  img src="https://i.stack.imgur.com/GkOn3.png" alt="enter image description here"  <comment82544> Installing xsel: kudos for at least finding it. But no installable pkg found and it won't compile for me. Need to add gcc to my path (at least). So the solution that worked for me is the last link....but let me be clear about the part of that that worked: installed 2.18 pkg, copied 2.20.1 over it, then the buttons (and ONLY the buttons, not the shortcut keys ctrl-C ctrl-V) do work. The buttons...that's what I missed when I read that link (before I asked this question). <comment82551> Comments only editable for 5 minutes. Very irritating. Anyway: before any mac-police pounce, the shortcuts (that don't work) are of course Command-C and Command-V. Global auto-type: I did not try XDOTOOL. I have no shortcuts, no auto-type, but I do have BUTTONS. Good enough for now. BUTTONS! Why should I be disappointed? I-I definitely have the BUTTONS. I mean, those are BUTTONS!" (a la Tom Cruise in Rain Man: [I got the rose bushes.](http://audiko.net/ringtone/Tom+Cruise/Rain+Man+-+Rose+bushes?ring=8231294)) <comment82614> @minnow: I could finally test `xsel` with KeePass and guess... no, it didn't work, so, as for now, using the buttons is the only possibility on OS X to copy usernames and passwords. I've added it to the answer. I've noticed that Softpedia links to the `xsel` source code, so I've deleted that bit from my answer. <comment100136> Have you tried KeyPass with [Mono 3.0](http://www.mono-project.com/Release_Notes_Mono_3.0)? I haven't tried it but it might work better. <comment177112> Apparently the buttons exist and work in 2.24 version that I am currently using. Did not realize that toolbar buttons can do it differently than context menu. Thank you for sharing the answer! <comment305940> Things have likely changed since this answer was posted. I have XQuartz running, and with `xsel` installed via MacPorts, those buttons work fine without any type of compiling done myself. It would be nice to also getting the keyboard shortcuts working, and even better to get autotype, but that may be a pipe dream for now.