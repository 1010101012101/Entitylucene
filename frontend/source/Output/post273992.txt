Renaming files with special structure in a quick way <body> I checked out the solution here, but it is not adressing my problem too well, because it does not use the specific structure of my naming.  I have a collection of files, enumerated and named in a systematic way, for instance      filep-x   where x is a number that can be quite large and p is a marker for a "makrocollection". I would like to copy all files in such a makrocollection as a template and automatically rename all files copied as     fileq-x   With other words, is there an option that I can replace names automatically using the terminal (like it is possible in many editors) without working with additional documents?  Thank you in advance!  <answer274008> Usually this can be done with a codebash/code loop - not the quickest, but simple. In terminal type:  precodefor f in filep-* ; do mv -iv "$f" "$(echo "$f" | sed 's/p/q/')" ; done /code/pre  Explanations:  ul licodefor f in filep-* ; do/code  - for all files called codefilep-anything/code, do the following/li licodemv -iv A B/code move (=rename) A to B, while telling what you do code-v/code and asking for confirmation before overwriting an existing file code-i/code/li liwere going to move a file code"$f"/code (quotes for addressing problems with e.g. spaces in file names) to:/li licode$( $echo $f | sed 's/A/B' )/code print the file name then use codesed/code to codes/codeubstitute the first(! and first only) occurence of codeA/code with codeB/code (this can also be codesed 's/this123/that456/'/code, but be aware that it will match the first hit)/li /ul  For making sure it behaves as expected, run this first:  precodefor f in filep-* ; do echo mv -iv "$f" "$(echo "$f" | sed 's/p/q/')" ; done /code/pre  This will just print the command to be executed for each file and should look like codemv -i filep-x fileq-x/code.  Note: this is for renaming the files and thus for after you copied them. This does not do the copying and renaming in one. Also it is meant to be executed form the directory where the files are.  <answer274013> This could be a job for codepax/code, assuming that there is a consistent naming convention.  precodecd directory  pax -rws/filep/fileq/ filep-* /path/to/copy/directory /code/pre  <comment344528> I'm assuming you did not actually test your code, because the `for ... in ... done` commands, as written, couldn't possibly execute properly as you've referenced `"$file"` but not assigned it! It should be `"$f"` not `"$file"`. Also, you're attempting to move a file that doesn't exist because `for f in fileq-*` is supposed to be `for f in filep-*`. The existing files have a `p` not `q` before the `-` in the OP and is supposed to be `q` as part of the rename. If I'm wrong about that, then your `sed` command would be wrong. <comment344546> @user3439894 - Thanks for the corrections. I DID test the code, yet used different variables, hence the mix-up between `fileq-` and `filep-` as well as between `$file` and `$f` (this one happens to me in half of my `bash` scripts... a bad habit). - Updated.