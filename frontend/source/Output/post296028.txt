How do I make a volume mounted using sudo sshfs visible without sudo? <body> After upgrading my Mac to macOS Sierra (10.12.5), I upgraded FUSE for macOS (https://osxfuse.github.io) to the latest stable releases: FUSE for macOS 3.6.3 and SSHFS 2.5.0.  But now this no longer works:  precode$ sudo mkdir -p /Volumes/ssh_fs_5810 &amp;&amp; sshfs dspitzer@dspitzer-5810:/home/CORP/dspitzer /Volumes/ssh_fs_5810/ mount_osxfuse: failed to mount /Volumes/ssh_fs_5810@/dev/osxfuse0: Operation not permitted /code/pre  code/Volumes/ssh_fs_5810/code exists:  precode$ ls /Volumes Macintosh HD ssh_fs_5810 /code/pre  Apparently codesshfs/code now requires codesudo/code:  precode$ sudo sshfs dspitzer@dspitzer-5810:/home/CORP/dspitzer /Volumes/ssh_fs_5810/ dspitzer@dspitzer-5810's password: /code/pre  But now code/Volumes/ssh_fs_5810//code is not visible without codesudo/code:  precode$ ls /Volumes ls: ssh_fs_5810: No such file or directory Macintosh HD $ sudo ls /Volumes Macintosh HD    ssh_fs_5810 $ sudo ls /Volumes/ssh_fs_5810 .ICEauthority           .ssh ... /code/pre  How do I make code/Volumes/ssh_fs_5810//code (the directory I mount into using codesudo sshfs/code) visible without codesudo/code?  strongUpdate (addressing SteppingHat's comment):/strong  Yes, the owner of code/Volumes/ssh_fs_5810//code is root:  precode$ sudo ls -l /Volumes Password: total 16 lrwxr-xr-x  1 root      wheel     1 Aug 22 16:09 Macintosh HD -&gt; / drwxr-xr-x@ 1 root      wheel  4096 Aug 22 16:06 ssh_fs_5810 /code/pre  But this doesn't work:  precode$ sudo chown dspitzer:admin /Volumes/ssh_fs_5810/ chown: /Volumes/ssh_fs_5810/: Operation not permitted /code/pre  And note above, code/Volumes/ssh_fs_5810//code is visible after I create it using codesudo/code, but not after codesudo sshfs/code:  precode$ sudo umount -f /Volumes/ssh_fs_5810 $ sudo ls -l /Volumes total 8 lrwxr-xr-x  1 root      wheel    1 Aug 22 16:09 Macintosh HD -&gt; / $ sudo mkdir /Volumes/ssh_fs_5810/ $ sudo ls -l /Volumes total 8 lrwxr-xr-x  1 root      wheel    1 Aug 22 16:09 Macintosh HD -&gt; / drwxr-xr-x+ 2 root      wheel   68 Aug 22 18:05 ssh_fs_5810 $ ls /Volumes Macintosh HD sh_fs_5810 /code/pre  strongUpdate #2 (in response to klanomath's "I've tested my alternative proposal..." comment on his answer below):/strong  Here's what happened when I tried klanomath's alternative proposal:  precode$ ls /Volumes Macintosh HD $ sudo mkdir -p /Volumes/ssh_fs_5810 $ ls /Volumes Macintosh HD ssh_fs_5810 $ sudo sshfs dspitzer@dspitzer-5810:/home/CORP/dspitzer /Volumes/ssh_fs_5810/ dspitzer@dspitzer-5810's password: $ ls /Volumes ls: ssh_fs_5810: No such file or directory Macintosh HD $ sudo chown dspitzer:admin /Volumes/ssh_fs_5810/ chown: /Volumes/ssh_fs_5810/: Operation not permitted $ ls /Volumes ls: ssh_fs_5810: No such file or directory Macintosh HD $ sudo ls /Volumes Macintosh HD    ssh_fs_5810 /code/pre  <answer296325> Create a mount point in your user's realm and mount it there:  precodemkdir -p ~/Shares/ssh_fs_5810 &amp;&amp; sshfs dspitzer@dspitzer-5810:/home/CORP/dspitzer ~/Shares/ssh_fs_5810/ /code/pre  hr  As an alternative you can add a emsudo chown/em command after creating the mount point in strongyour/strong example (mounting to a subfolder of /Volumes):  precode... &amp;&amp; sudo chown %user%:%group% /Volumes/ssh_fs_5810 ... /code/pre  with %user%: dspitzer and %group%: staff (or admin - depends on your user privs).  The total command is then:  precodesudo mkdir -p /Volumes/ssh_fs_5810 &amp;&amp; sudo chown dspitzer:admin /Volumes/ssh_fs_5810 &amp;&amp; sshfs dspitzer@dspitzer-5810:/home/CORP/dspitzer /Volumes/ssh_fs_5810 /code/pre  Running this command for the very first time seems to be rocky sometimes. Connecting to the remote host via ssh first (to add the remote host to the known_hosts file) and/or adding two times codesleep 0.5/code in between may help.  <comment373852> This is probably because the user who own's the directory `/Volumes/ssh_fs_5810` is root, and other users do not have write access to this directory. Try entering `ls -l /Volumes` to see the permissions on the directory. <comment373853> @SteppingHat I addressed your comment above. <comment374293> Your first suggestion above works! I didn't expect that Mountain would list it as an ejectable volume, but it does.  Note in the update to my question I showed that `sudo chown` doesn't work. If you remove this alternative from your answer (or address it), I'll accept your answer and award you the bounty.  Thank you. <comment374295> @DarylSpitzer I've tested my alternative proposal with the pkg installers of MacFuse 3.6.3/SSHFS 2.5.0 and the chown command worked after a hickup (only tested with two separate commands though: 1st `sudo mkdir ...` 2nd `sudo chown ...`(i.e. without the &&s)) <comment374296> See the "Update #2" I added to my question <comment374297> You may want to change "As an alternative you can add..." to "As an alternative you may be able to add..." if you can't figure out why it works for you but not for me. Are you running macOS 10.12.5? <comment374304> @DarylSpitzer My second proposal was ambiguous (obviously). You have to chown after mkdir and **before** running sshfs. I added the complete command.