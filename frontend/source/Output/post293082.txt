What process powers the progress bar during initial boot? <body> I recently learned that launchd was written and used starting with Mac OS X Tiger.  Before it's inception the progress bar would actually give useful information about what process was currently being executed. However, starting with OS X Tiger the progress bar was managed by the emWaitingForLoginWindow/em process.   You can read about this on Wikipedia here and the source of the citation here.  Originally the length of time required for the progress bar to complete was based off of the time that elapsed during the last successful boot as is described below     emWaitingForLoginWindow/em writes the number of seconds it displayed the progress bar during the most recent system boot to /var/db/loginwindow.boottime. Theoretically, you could chart this value over time to measure boot performance, and maybe fire off an email if it goes over a certain percentage (Iâ€™m thinking of 10.4 Server users here).   I can't find any information on whether or not this is the same method used now. All of the information that I can find comes from ~2005-2008.   Is this still the method that is used in macOS to display the progress bar? emWaitingForLoginWindow/em is no longer located in /usr/libexec/.  If this is the method still used, what is happening when the progress bar stops and hangs? 