scheduled account lock Mac OS X <body> You can set your Mac OS X account to automatically lock the screen so that the password is required after a certain amount of time of inactivity, but can you do the same thing using a schedule (say at 5:30 PM every day)? Kind of like how you can have the computer turn on/off or go to/wake up from sleep at a certain time.   <answer49232> strongEDIT: Although I am not certain of why codecron/code fails to work for this specific use-case, this answer is superceeded by the (currently more correct) answer using codelaunchd/code./strong  Use codecrontab -e/code in the terminal application to add code/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend/code to the Crontab at the appropriate time, like so (for 5:30 PM):  code30 17 * * * /System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend/code  <answer49794> You can use codelaunchd/code to do this.  Place the following xml into a new text file in code~/Library/LaunchAgents//code and call it something descriptive with a suffix of code.plist/code.  For example, mine is code~/Library/LaunchAgents/logoutAt1730.plist/code.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt;     &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;     &lt;plist version="1.0"&gt;     &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;Logout At 5:30 PM&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;             &lt;string&gt;/System/Library/CoreServices/Menu Extras/User.menu/Contents/Resources/CGSession&lt;/string&gt;             &lt;string&gt;-suspend&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;StartCalendarInterval&lt;/key&gt;         &lt;dict&gt;             &lt;key&gt;Hour&lt;/key&gt;             &lt;integer&gt;17&lt;/integer&gt;             &lt;key&gt;Minute&lt;/key&gt;             &lt;integer&gt;30&lt;/integer&gt;         &lt;/dict&gt;     &lt;/dict&gt;     &lt;/plist&gt; /code/pre  If you want it to run on the current power cycle (Eg you don't want to restart for this to take effect) use codelaunchctl load ~/Library/LaunchAgents/logoutAt1730.plist/code to tell codelaunchd/code about the new item.  It should load automatically next time you login.  Use codelaunchctl list/code and look for the label string (Logout at 5:30 PM) to validate that codelaunchd/code knows about the item.  I have verified this works on my workstation.  I don't know why codecron/code doesn't.  <answer89253> I wanted something similar, but instead of always locking at a specific time, I wanted to lock only on certain conditions. The script I used to check those conditions was triggered by cron, so I had the same issue.  When I tried codeCGSession -suspend/code in a cronjob, and noticed that when it was triggered, Console.app logged an error, saying only root and the current logged user could trigger a Fast User Switching. So my solution: run it as root.  So in my script, I used the following, to lock the computer:  precodesudo /usr/bin/osascript -e 'tell application "System Events" to do shell script "/System/Library/CoreServices/Menu\\ Extras/User.menu/Contents/Resources/CGSession -suspend"' /code/pre  Convoluted? Yes. Working? Positive!  <comment56457> Thanks for the tip, it doesn't work for me, but that's another question.  (Shouldn't it be 17 instead of 7 for 5 PM?) <comment56486> Ah yeah I did it on the fly.  Good eye.  I just tried the /System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend command by itself and it worked.  what OS are you running? <comment56629> Lion. The command itself worked by itself for me too, but I tried setting a crontab with a time a few minutes in the future and nothing happened when the specified time came. <comment56632> Hmm, I'm experiencing the same issue.  I'll look into it tonight.  Perhaps it would work as a script? <comment56740> No luck there. I think the user running the cronjobs (root) can't call suspend on another user, at least not with this command. <comment56746> You can do that with root using su [username] /System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend <comment56804> Tried that command in crontab, no luck there either. Doesn't that require the entry of a password? <comment56839> It shouldn't as root. <comment57026> Maybe try prefixing the command with 'sudo -u username'. <comment57251> Yes, that worked, thanks! Just named the file suspend instead of logout. Now I just need to get user confirmation with a popup, if that's possible--I'll open another question: http://apple.stackexchange.com/q/49946/8699 <comment58325> New question came up here, FYI: http://apple.stackexchange.com/q/51006/8699 <comment104683> Using `sudo .../CGSession -suspend` directly (without using AppleScript) didn't work either then? <comment104686> Yeah, it didn't. No idea why.