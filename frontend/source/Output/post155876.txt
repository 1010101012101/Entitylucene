On Yosemite, how can I audit the safety of an executable? <body> I would like to audit an executable binary from an untrusted source, and ultimately maintain whether it is safe to run it.br My main interest is to establish, in a emsafe/em fashion, whether said binary tries to manipulate system resources, do some sort of privilege escalation or modify anything else which might compromise integrity or safety of the system.   I have looked into sandbox-exec but could not find any current documentation on the available options.   ul liWhat is a good and reliable method of establishing that an executable is safe?   /li liIs codesandbox-exec/code the right tool?  /li liIs there a place which offers up to date and comprehensive documentation on OSX sandboxing?  /li liWhat could be alternative strategies?/li /ul  <comment183360> You can't tell it might run OK for the first 100 times and then do something untoward - for sandboxing see https://developer.apple.com/app-sandboxing/ however you can't be certain the app was written to fully use this unless it is from the Mac App Store <comment183410> This is why I am asking if a methodology exists to audit a binary, e.g. by restrictevely sandboxing it. <comment183412> @Mark actually your link documents how to achieve  sandboxing when creating your own app. I am rather interested in sandboxing an existing binary though. <comment183466> Is this application a communicating one? Either internally toward local servers or externally through IP. <comment183501> No. It should not need (nor would I want to grant it) network access. I am not sure about IPC sockets though. But I would rather restrict access to those as well. <comment183502> Also, I expect the application does not need to write to the fs (except maybe for /tmp), but I would like to grant it unrestricted reading access to the system.