Is there a way to make pasting into Terminal safe? <body> I paste filenames/etc into Terminal all the time, and occasionally the contents of the clipboard isn't what I expect.  Often the result is several hundred lines of text (eg, source code) pasted into the command prompt, triggering god only knows what nastiness.  Is there some way to prevent bash from blindly executing whatever I paste in? I wish it would just paste the text, and let me decide after if I wanna execute it.  <answer72186> The simplest solution is probably to use a text editor as a buffer where you can double-check the contents, then copy from the text editor to Terminal. If you use TextEdit for this, you'll probably want to make sure it's in plain text mode (emFormat/em menu → emMake Plain Text/em; ⇧⌘T) to avoid issues like links pasting as links, not URLs.  The other thing to note is that Bash will attempt to execute everything preceding a newline character, so if you're copying a block of text, you may want to ensure that your selection stops after the last character, rather than including the end of the line.  You want this: img src="https://i.stack.imgur.com/CIH6Z.png" alt="selection without newline"  Not this: img src="https://i.stack.imgur.com/y9dA2.png" alt="selection with newline"  Of course, if you're copying stuff with newlines within the text (emi.e./em multiple paragraphs), then you'll need to manually edit the selection.  <answer72211> Assuming you are using bash: If you activate emacs shortcuts with codeset -o emacs/code you can also use Emacs to edit the command line:  ul liType kbdCtrl-X/kbdkbdCtrl-E/kbd at the prompt to start Emacs/li liPaste and edit your clipboard content into the Emacs buffer/li liUse kbdCtrl-X/kbdkbdCtrl-C/kbd to exit Emacs and automatically run the command(s)./li /ul  <answer72213> You could put this little Bash script somewhere in your codePATH/code:  precode#!/bin/bash  read -p "Are you sure you wish to execute \`$(pbpaste)\`? (Y/n) "     [[ $REPLY =~ ^[Yy]?$  ]] &amp;&amp; pbpaste | bash /code/pre  If I put these contents in code/usr/local/pbexecute/code for example and make it executable, I could safely execute codepbexecute/code from the command-line, which would prompt my confirmation before executing the contents of the clipboard.  An alternative approach is to launch a text editor with the contents of the clipboard from within the shell and automatically execute the edited contents upon exiting. For example:  precode#!/bin/bash  PBTEMP=$(mktemp -t pbtemp) pbpaste &gt; $PBTEMP nano -t $PBTEMP source $PBTEMP rm $PBTEMP /code/pre  <answer72300> I get this too!  My solution is to paste using Launchbar's clipboard manager, with the hotkey codeCmd+\/code. This brings up a list of recent clippings, allowing me to preview the result before pasting: if I don't see the content I expect, I hit escape before releasing Cmd.  I can also use an arrow key to 'enter' a text clipping, allowing me to see the content line by line.  I believe most launchers do this - Alfred (powerpack addon) &amp; Quicksilver (free), for example.  <answer73088> You might want to look into a clipboard manager. I use a free, light weight one called Jumpcut. It allows me to keep multiple clipboards and see what's stored in them before actually pasting the contents, all from the keyboard.   There are many clipboard managers out there, so if Jumpcut doesn't float your boat, maybe another will better fit your needs   <comment83831> Why the escaped back ticks? Using '' should work as well. <comment83832> @patrix If I don't escape the backticks, bash will already execute it while prompting. <comment83833> Shouldn't omitting the backticks do the trick as well then? <comment83837> @patrix Oh, yes ofcourse, that's just a matter of preference on how you want to format the prompt. I chose backticks because they are the command substitution operator and are commonly used to visually markup commands (see StackExchange editing). <comment83839> I'm ok with this :-) It just seems kind of complicated <comment83966> the problem is, I paste things into terminal several hundred times every day. using a text editor in the middle would be a pain in the ass <comment83967> I don't want to execute what I'm pasting. I just want to paste it in. For example, I might type `svn st [cmd-v][return]` <comment83968> I assume you mean `Ctrl` instead of `Cmd`. Also, without doing `set -o emacs` it seems to use `$EDITOR`. Thanks! this is perfect.