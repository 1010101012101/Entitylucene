Is there any way to programatically remap the keys in a Macbook running OSX Mavericks? <body> I want to remap the keys on my keyboard. I want to do it programatically, because I will use some logic to decide what to input. For example, when a user press "A" followed by "S", I will output "λ". In other words, everytime I type a key on my keyboard, I want to intercept it, apply some logic to it and give it back changed before it goes to the focused app.  How?  <answer138647> Have you looked into Keyboard Maestro?  I use it all the time,  I believe you can accomplish with what you want using Keyboard Maestro.  For example:  You can have it check for a typed in string "good" and return morning or afternoon based on the time of day.  img src="https://i.stack.imgur.com/Y3qPn.png" alt="enter image description here"  With Keyboard Maestro you can execute AppleScript or Shell scripts.  Keyboard Maestro is pretty powerful.   Your macros can then be global or specific to an application.  <answer138672> Most of the text macro tools available on the Mac will be able to trigger scripts (Applescript, shell scripts, etc.) as well as perform standard expansions based on the input and context.   I like to start my expansions with the semi-colon since I know I will rarely accidentally trigger an expansion in my normal typing, and it's an easy key to hit.  For instance:  ul liWhen I type ";check", it automatically expands to "✓" /li li;yen → ¥ /li li;dt → 2014-07-11 (current date)/li li;email → expands to my email address/li lietc. /li /ul  These expansions can also call scripts rather than basic substitutions to perform more advanced functions if you'd like. Some popular software options for this are aText, Typinator and TextExpander among many others.  <answer138673> The answers that others have given are probably the way you want to do this, but if you emreally/em wanted to intercept and inject keystrokes, check out how Karabiner (formerly KeyRemap4MacBook) does it.   Here's the interesting bit: https://github.com/tekezo/Karabiner/tree/master/src/core/kext  It would be pretty involved to adapt their code and do what you want, but it's certainly possible.  <answer138692> Another option is to create code~/Library/KeyBindings//code, save  precode{   "a" = {     "s" = (insertText:, "λ");   }; } /code/pre  as code~/Library/KeyBindings/DefaultKeyBinding.dict/code, and quit and reopen applications to apply changes.  That prevents you from inserting codea/code, but you might replace codea/code with another key combination like code~a/code (option-a) or code\Uf704/code (F1).  <comment163544> http://www.orderedbytes.com/controllermate/ might be worth looking into. Unfortunately I'm not familiar enough with it to give you a definitive answer.