Using simple copy and paste to get the song list out of the new itunes 11 <body> Before iTunes 11, I was able to simply select my view options for the playlist, highlight my songs, hit copy, and paste them into a blog post.  Now, with iTunes 11, it seems I am unable to do something so simple. I found a workaround for now, printing the playlist as a pdf and copying the contents into a blog post. This is irritating to me, as I need something much quicker and more efficient.  Does anyone know how to get back the simple copy and paste functionality? Or is there a simple way similar to this? I don't want to export to an excel file or export the whole library, I just want the view options I have selected, artist, track, and album, not the entirety of each song's information.  <answer74422> Hmm, don't have this problem. Is the emEdit/Copy/em entry enabled for you? Because if I hit copy, and then paste into a text file, for given screenshot I obtain :     2 of 12   Aquele plano para me esquecer       Adriana Calcanhotto     O micróbio do samba Brasileira  6   60  3:01br   6 Suavemente      Elvis Crespo    5* /   Top40     Latin   2   100 4:24br   12    La Camisa Negra     Juanes  5*/Top40        Pop     100 3:35br   1 I Need A Dollar     Aloe Blacc  5* /   Top40     Soul    4   100 4:04   img src="https://i.stack.imgur.com/h09P4.jpg" alt="enter image description here"  is it what you're trying to achieve?  <answer75336> For simplicity's sake, ensure you're in a plain list view, either Songs or Playlist as @kraymer also shows. You cannot accomplish this from the large cover art views.  More specifically I suggest you create a playlist that has your view options enabled, add songs to it, and clear it when you're done.  It is still possible to copy/paste these entries as you were able to do previously:  precodeRocket Man  3:27    Aethernaut  6 of 11 Steam Fist Island II Obstacle Course 4:00    Aethernaut  8 of 11 Steam Fist Island II Unpause the Heat    3:19    Aethernaut  1 of 5  Super Mega Ultra The Moon    3:23    Aethernaut  1 of 1  The Moon 2011-2010=1 2:19    Aethernaut  1 of 6  2011-2003=8 2011-2009=2 3:41    Aethernaut  2 of 6  2011-2003=8 2011-2008=3 3:15    Aethernaut  3 of 6  2011-2003=8 2011-2007=4 3:28    Aethernaut  4 of 6  2011-2003=8 2011-2006=5 4:17    Aethernaut  5 of 6  2011-2003=8 2011-2005=6 4:04    Aethernaut  6 of 6  2011-2003=8 /code/pre  img src="https://i.stack.imgur.com/VjgqK.png" alt="iTunes Playlist Screenshot"  <answer110755> Ok I just ran into this same problem. I do a radio show and used tone able to copy an iTunes playlist, then go into Excel and paste it into a pre formatted template spreadsheet to print out. That no longer works. The hits were in the comments above. Below are the steps I had to do:  ol liSelect and copy the playlist in iTunes. /li liOpen an new document in Textedit and Choose "Make Plain Text" from the "Format" menu. 3. Paste into the new plain text textedit document(this makes the text you want instead of pasting the songs./li liNow while you are still in the plain text textedit document select all and copy./li liGo into to document where you want to paste the data, (in my case I do it in an Excel document)/li liNow just paste the data in/li /ol  What I am doing is using a plain text document to make the data I copied from iTunes i to plain text then I and copying that plain text version and pasting it where I want it to be.  <answer110761> there is a simpler way, that worked for me.  use applescript.   there is a siite called dougscript (http://dougscripts.com) there are a lot scripts and other helpers all around itunes.  i think the one which best fits your needs would be this one http://dougscripts.com/067  <answer110813> h2So here is the script:/h2  precode(* "Export As HTML Table" for iTunes written by Doug Adams dougadams@mac.com  v1.5 mar 15 '04 -- includes composer, rating, and grouping options (this script had not been updated since December of 2001!)  Get more free AppleScripts and info on writing your own at Doug's AppleScripts for iTunes http://www.malcolmadams.com/itunes/ *) ------------------------------------------------------- ------------------------------------------------------- -- U S E R - C U S T O M I Z A B L E    O P T I O N S  -- maintain quotes! -- M A K E   C H A N G E S   A N D   S A V E  (command-s) ------------------------------------------------------- -- initial HTML options property myBackgroundColor : "white" -- background color, can also use "#ffffff", etc property myTextColor : "black" -- text color, can also use "#000000", etc  -- table attributes property mycellpadding : "1" -- padding inside cells property mycellspacing : "0" -- padding outside between cells property myborder : "1" -- thickness of table border, 0 is no border  -- Title line attributes property myTitleJustification : "center" -- (left, center, or right) justification in main title cell   -- TH attributes property myTHJustification : "left" -- (left, center, or right) justification in column headers  -- TD attributes property myTDJustification : "left" -- (left, center, or right) justification in data cells  -- face &amp; size  -- size can be relative (-1,-2,+1,+2, etcetera) or 1,2,3,4,5 -- smaller IS better! -- font can be set to any installed font  -- top line where name of playlist, number of songs, time, and length appear property myTitleFont : "Geneva" -- font for title line property myTitlesize : "-2" -- font size for title line  -- column headers property myTHFont : "Geneva" -- font for headers property myTHsize : "-2" -- font size for headers  -- text in cells property myTDFont : "Geneva" -- font for data property myTDsize : "-2" -- font size for data ------------------------------------------------------- ------------------------------------------------------- -- DON'T CHANGE ANYTHING BELOW UNLESS -- YOU KNOW WHAT YOU'RE DOING ;) ------------------------------------------------------- property myChoices : {"Artist", "Album"} -- remember last batch or always default to these property myOptions : {"Play Order", "Artist", "Album", "Composer", "Genre", "Grouping", "Rating", "Size", "Time", "Track Number", ¬     "Track Count", "Year", "Date", "Date Added", "Bit rate", "Sample rate", ¬     "Volume", "Kind", "EQ", "Comment", "Location"} global html_contents, thePlaylist, file_name, TDopen, TDclose, THopen, THclose, do_number  property okflag : false ------------------------------------------------------- -- OKAY, LET'S GO! -- check if iTunes is running  tell application "System Events"     if (get name of every process) contains "iTunes" then set okflag to true end tell if okflag then -- iTunes is running, let's go     tell application "iTunes"         -- ask user         set myNewChoices to (choose from list myOptions with prompt ¬             "Include table cells for which selected items below?" &amp; return &amp; "(\"Title\" is always included.)" default items myChoices OK button name ¬             "Choose" cancel button name "Cancel" with multiple selections allowed and empty selection allowed)         if myNewChoices is false then error number -128 -- cancel was clicked          copy myNewChoices to myChoices         --initial iTunes variables         set thePlaylist to the front window's view         my get_the_file_name()          -- which tracks to use?         if selection is {} then             set allTracks to every track of thePlaylist             set tableTitle to "Playlist: "         else             set allTracks to a reference to selection             set tableTitle to "Selected in Playlist: "         end if          -- fig total tracks time, size, and number even if selection         set totalSeconds to 0         set totalSize to 0         repeat with this_track in allTracks             set totalSeconds to totalSeconds + (this_track's duration)             set totalSize to totalSize + (this_track's size)         end repeat         set myTotalTrackTime to (my calc_total_time(totalSeconds))         set myTotalTrackSize to (my calc_size(totalSize))          set num_of_tracks to (count of allTracks)         set s to "s"         if num_of_tracks is 1 then set s to ""          -- initialize some elements         -- open and close for all TD &amp; TH cells         set TDopen to "&lt;td align=" &amp; myTDJustification &amp; "&gt;&lt;p&gt;&lt;font face=" &amp; myTDFont &amp; " size=" &amp; myTDsize &amp; "&gt;"         set TDclose to "&lt;/font&gt;&lt;/p&gt;&lt;/td&gt;"         set THopen to "&lt;th align=" &amp; myTHJustification &amp; "&gt;&lt;font face=" &amp; myTHFont &amp; " size=" &amp; myTHsize &amp; "&gt;"         set THclose to "&lt;/font&gt;&lt;/th&gt;"         -- removed &lt;p&gt; tags from &lt;TH&gt; 'cause Netscape doesn't like correct HTML spec          -- how many columns in table         set myColspan to ((count of myChoices) + 1) -- number of cells across = number of all myChoices plus Title always chosen         --  end then begin new table row         set startNewRow to "&lt;/tr&gt;" &amp; return &amp; "&lt;tr&gt;"         --begin page         set startHTML to ((("&lt;html&gt;" &amp; ¬             "&lt;head&gt;&lt;title&gt;" &amp; tableTitle &amp; (get thePlaylist's name) &amp; "&lt;/title&gt;&lt;/head&gt;" &amp; return ¬             &amp; "&lt;body bgcolor=" &amp; myBackgroundColor &amp; " text=" &amp; myTextColor &amp; "&gt;" &amp; return &amp; ¬             "&lt;table cellpadding=" &amp; mycellpadding ¬             &amp; " cellspacing=" &amp; mycellspacing ¬             &amp; " border=" &amp; myborder ¬             &amp; " width=100%&gt;" &amp; return &amp; "&lt;tr&gt;" &amp; return &amp; "&lt;td colspan=" &amp; myColspan as string) ¬             &amp; " align=" &amp; myTitleJustification &amp; "&gt;&lt;p&gt;&lt;font face=" &amp; myTitleFont &amp; " size=" &amp; myTitlesize &amp; "&gt;" &amp; tableTitle &amp; "&lt;b&gt;" &amp; thePlaylist's name ¬             &amp; "&lt;/b&gt; " &amp; num_of_tracks as string) &amp; " song" &amp; s &amp; ", " &amp; myTotalTrackTime ¬             &amp; " total time, " &amp; myTotalTrackSize) &amp; TDclose &amp; return &amp; "&lt;/tr&gt;" &amp; return &amp; ¬             "&lt;tr&gt;" &amp; return &amp; (my make_headers()) as string         -- end page         set endHTML to "&lt;/tr&gt;" &amp; return &amp; "&lt;/table&gt;" &amp; return &amp; "&lt;/body&gt;&lt;/html&gt;"          -- init main container         set html_contents to ""         -------------------------------------------------------         -- S T A R T   T H E   P A G E           -------------------------------------------------------          my add_to_contents(startHTML)          repeat with thisTrack in allTracks -- do each track for each row              my add_to_contents(startNewRow)              if do_number is 2 then my add_another_TD(thisTrack's index as string)              my add_another_TD(thisTrack's name) -- must always appear!              if myChoices contains "Artist" then my add_another_TD(thisTrack's artist)              if myChoices contains "Album" then my add_another_TD(thisTrack's album)              if myChoices contains "Composer" then my add_another_TD(thisTrack's composer)              if myChoices contains "Genre" then my add_another_TD(thisTrack's genre)              if myChoices contains "Grouping" then my add_another_TD(thisTrack's grouping)              if myChoices contains "Rating" then my add_another_TD(thisTrack's rating)              if myChoices contains "Size" then -- size calculation                 my add_another_TD(my calc_size(thisTrack's size))             end if              if myChoices contains "Time" then my add_another_TD(thisTrack's time as string)              if myChoices contains "Track Number" then my add_another_TD(thisTrack's track number as string)              if myChoices contains "Track Count" then my add_another_TD(thisTrack's track count as string)              if myChoices contains "Year" then my add_another_TD(thisTrack's year as string)              if myChoices contains "Date" then                 my add_another_TD(my fix_date_string(thisTrack's modification date))             end if              if myChoices contains "Date Added" then                 my add_another_TD(my fix_date_string(thisTrack's date added))             end if              if myChoices contains "Bit rate" then my add_another_TD(thisTrack's bit rate as string)              if myChoices contains "Sample rate" then my add_another_TD(thisTrack's sample rate as string)              if myChoices contains "Volume" then my add_another_TD(thisTrack's volume adjustment as string)              if myChoices contains "Kind" then my add_another_TD(thisTrack's kind)              if myChoices contains "EQ" then my add_another_TD(thisTrack's EQ)              if myChoices contains "Comment" then my add_another_TD(thisTrack's comment)              if myChoices contains "Location" then                 set myLocation to (thisTrack's location as text)                 if myLocation is "missing value" then                     set myLocation to "&lt;i&gt;not available on local drive&lt;/i&gt;"                 end if                 my add_another_TD(myLocation)             end if          end repeat          my add_to_contents(endHTML)         -- contents now assembled     end tell -- iTunes      -------------------------------------------------------     -- S A V E   F I L E  &amp;  E N D     -------------------------------------------------------      my Make_The_File(file_name, html_contents as string)     set dMes to return &amp; return &amp; "Would you like to view the exported HTML file?"     set myEnding to (display dialog "Done!" &amp; dMes buttons {"Done", "Yes"} default button 2 with icon 1 giving up after 30)     if button returned of myEnding is "Yes" or gave up of myEnding is true then         tell application "TextEdit"             activate             try                 open (file_name as alias)             on error errMs                 display dialog errMs buttons {"Cancel"}             end try         end tell     end if -- button is "Done" end if -- iTunes not running  ------------------------------------------------------- -- S U B R O U T I N E S ---------------------------- ------------------------------------------------------- -- create file in Finder to Make_The_File(file_name, cont)     try         copy (open for access file_name with write permission) to fileRef         write cont to fileRef         --set eof of fileRef to (length of cont)         close access fileRef     on error m number n         try             close access fileRefr         end try         if (n is equal to -48) then             --display dialog "File exists"             do shell script "rm " &amp; quoted form of POSIX path of file_name             my Make_The_File(file_name, cont)         else             display dialog "There has been an error creating the file:" &amp; return &amp; return &amp; m &amp; return &amp; "error number: " &amp; n buttons {"Cancel"}         end if     end try end Make_The_File  -- choose file to get_the_file_name()     set file_name to (choose file name with prompt ¬         "Enter a name for the exported HTML file" default name ((thePlaylist's name as text) &amp; ".html"))     if file_name is false then error number -128 -- cancel     --return file_name end get_the_file_name  -- add TD stuff to eventual contents to add_another_TD(x)     if x is "" then set x to "&lt;i&gt;n/a&lt;/i&gt;"     my add_to_contents(TDopen &amp; x &amp; TDclose) end add_another_TD  -- add text to eventual contents to add_to_contents(x)     if x is "" then set x to "&amp;nbsp;"     copy (html_contents &amp; x &amp; return) as string to html_contents end add_to_contents  -- construct headers based on user selection to make_headers()     set do_number to 1     set myNewHeaders to ""     if myChoices starts with "Play Order" then         set myNewHeaders to THopen &amp; "#" &amp; THclose         --      copy items 2 thru -1 of myChoices to myChoices         set do_number to 2     end if     set myNewHeaders to myNewHeaders &amp; THopen &amp; "Title" &amp; THclose     repeat with i from do_number to (count of myChoices)         copy item i of myChoices to thisHeader         set myNewHeaders to myNewHeaders &amp; return &amp; THopen &amp; thisHeader &amp; THclose     end repeat      return myNewHeaders end make_headers  -- abbreviate date strings to fix_date_string(x)     set dateList to (my TextToList((x) as string, " "))     set myDateAdded to ((((get characters 1 thru 3 of item 1 of dateList) as string) &amp; ¬         ", " &amp; ¬         (get characters 1 thru 3 of item 2 of dateList) as string) &amp; ¬         " " &amp; (item 3 of dateList) &amp; ¬         " " &amp; ¬         (item 4 of dateList) &amp; ¬         " " &amp; ¬         (get characters 1 thru -4 of item 5 of dateList) as string) &amp; ¬         (item 6 of dateList) as string     return myDateAdded as string end fix_date_string  -- obligatory text-&gt;list,list-&gt;text GREAT SUBROUTUNES on TextToList(theText, theDelimiter)     set saveDelim to AppleScript's text item delimiters     try         set AppleScript's text item delimiters to {theDelimiter}         set theList to every text item of theText     on error errStr number errNum         set AppleScript's text item delimiters to saveDelim         error errStr number errNum     end try     set AppleScript's text item delimiters to saveDelim     return (theList) end TextToList  on ListToText(theList, theDelimiter)     set saveDelim to AppleScript's text item delimiters     try         set AppleScript's text item delimiters to {theDelimiter}         set theText to theList as text     on error errStr number errNum         set AppleScript's text item delimiters to saveDelim         error errStr number errNum     end try     set AppleScript's text item delimiters to saveDelim     return (theText) end ListToText  to calc_total_time(totalSeconds)     set theHour to totalSeconds div 3600     if theHour is not 0 then         set theHour to (theHour as string) &amp; ":"     else         set theHour to ""     end if     set theMinutes to (totalSeconds mod 3600) div 60     if theMinutes is not 0 then         if theMinutes is less than 10 then set theMinutes to "0" &amp; (theMinutes as string)         set theMinutes to (theMinutes as string) &amp; ":"     else         set theMinutes to "00:"     end if     set theSeconds to totalSeconds mod 60     if theSeconds is less than 10 then set theSeconds to "0" &amp; (theSeconds as string)     -- gets the number of seconds after the minute     return theHour &amp; theMinutes &amp; theSeconds as string end calc_total_time  -- below is from SIZE OF FINDER SELECTION -- ©1998 Sal Soghoian, Apple Computer -- slightly modified for this script -- I have used a factor of 1024 and 1048576 -- but I am not completely happy with any results; they do not match what -- is in iTunes' display exactly. However, there is less of a difference -- created in this version of the script than in previous to calc_size(x)     if x &gt; 1.0E+9 then         set a to (x div 1.0E+9)         set b to (x mod 1.0E+9) div 10000000 -- notice NOT 100000000         set b to (round (b / 10) rounding up)         if b &gt; 9 then set b to 9         set x to (a &amp; "." &amp; b as string) &amp; " GB"     else if x &gt; 1048576 then         set a to (x div 1048576)         set b to (x mod 1048576) div 10000 -- notice NOT 100000         set b to (round (b / 10) rounding up)         if b &gt; 9 then set b to 9         set x to (a &amp; "." &amp; b as string) &amp; " MB"     else if x &gt; 1024 then         set a to (x div 1024)         set b to (x mod 1024) div 10 -- notice NOT 100         set b to (round (b / 10) rounding up)         if b &gt; 9 then set b to 9         set x to (a &amp; "." &amp; b as string) &amp; " KB"     else         set x to x &amp; " Bytes"     end if     return x end calc_size /code/pre  source: http://dougscripts.com/067 Great Thanks to Doug Adams for all his work on these scripts  <comment87483> That is what we are trying to achieve. It doesn't work for me, either. I get embedded media -- a speaker icon in Pages, a playback widget in Text Edit. Have tried with both the menu and cmd-C. I am on Lion. Perhaps it is an OS-level difference? <comment87490> @Jim Did you try pasting to a plain text view (or selecting Make Plain Text in TextEdit)? <comment89481> If you are using wordpress for your blog, like I am, I used the little icon of a clipboard with a T in it, which stands for insert plain text.  They also have a W one next to it which is for insert from Microsoft Word.  The plain text (T) one worked for me, hopefully it will work for you.  Maybe you could try pasting into Text Edit and then copying from there if you don't use Wordpress for your blog <comment130411> Unfortunately this seems to be an AppleScript compiled for PPC which will not run on current Mac models. <comment130418> ok when i'm @home i would have a look at my mac and hopfully have the script there already converted to intel. i'll let u know if i have the script. <comment130456> If have now look over it. My Script still works, butt i didn't use the One "Export to HTML" i use the "Export to HTML Table" One. <comment130458> Can you fix the link in your answer then please? <comment130460> if fix the link also if added a new answer with the script in it. hope this also works for you