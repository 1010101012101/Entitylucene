Why do downloads (storedownloadd) from the Mac App Store consume so much CPU? <body> I have noticed this often with large downloads such as Xcode updates and OS X updates and that sort of thing.   Basically we see this for however much time it takes for the download to proceed:   img src="https://i.stack.imgur.com/3rX91.png" alt="enter image description here"  Today (currently) I am downloading Xcode 7.2.1.   You can see storedownloadd appears to be pegging an entire core, and about 30% of this work is handled by the kernel.  What I'm puzzled about is what is this "work"? Why does it need to do this work? What amount of processing could it possibly be doing, because decrypting a stream at a few megabytes per second does not require this much resources. I could be downloading a large file like this using hundreds of connections over the internet and running integrity checks on it (with a protocol like bittorrent) and it wouldn't approach anywhere close to what's happening here with resource use.  <answer231126> The CPU usage is caused by both sloppy coding and encryption/decompressing. Engineers have become very careless with our CPU in the age of quad core notebooks with eight virtual cores.  Someone should chase Apple around about optimising the codestoredownloadd/code routine. Considering that we had to put up with broken networking for over a year until Apple replaced the broken by design codediscoveryd/code with codemDNSresponder/code.   Darker thoughts might suggest that the store is also compressing data for upload and sending it. Microsoft was caught out doing this many times but I haven't seen a documented case in Apple's case.  <answer234748> Ran into the same issue today when updating XCode: codestoredownloadd/code pegs a CPU core for 20 minutes.   I tried breaking into  storedownloadd with a debugger and I see some emincredibly/em long stack traces and a lot of time spent inside codeSecurity::CodeSigning/code.  I suspect that it is recursively verifying the digital signatures of a lot of tiny files one-by-one. I have no idea why it would do that instead of verifying the whole package as it is being downloaded. I also see a lot of string manipulation inside codeSecurity_CodeSigning::RequirementLexer::RequirementLexer/code.   Whatever codestoredownloadd/code does, it is too damn slow!   <answer252634> just killed it in terminal ;-) ...taking 1.5MB/s from my slow broadband  precodekillall storedownloadd /code/pre  <comment282210> I think one thing we should consider is that maybe `storedownloadd` is *uncompressing* package data in a really computationally intensive way. There's not much reason at this point to suspect anything particularly nefarious <comment282212> Sorry you actually did mention it. so I do mean to say that I think the most plausible thing is that this has something to do with file decompression. <comment282213> Steven, even decompression doesn't make sense over the period of a long download (decompression usually happens at the end of a download). Only encryption makes sense. I think it's a situation like discoveryd where the code has never been properly optimised (the Ars Technica citation clearly shows just how behind Apple is in fixing core OS X routines, even one's far more central to user experience than store downloading - which shouldn't be that big a part of any non-tester user's total Mac experience). <comment287121> How were you able to see stack trace content? (Doesn't that generally require debug symbols?) Did you use Xcode to debug storedownloadd? Instruments? How do you do that? <comment287123> @StevenLu Yeah, I used Xcode. I don't think I have debug symbols. The function names probably came from the shared libraries which declare those functions. <comment287157> That's neat, though. I should try to do that more often. Thanks <comment315358> it's doing that BEFORE the download begins... so if it checks code signing, it does that at local files. maybe it's checking the integrity of the whole local xcode installation before download? <comment333038> I see this after using the migration assistant to migrate users to a mac. As described above, it seems to verify the apps downloaded fron the store. If it would not do that, every single app had to be verified by typing the Apple ID password. So just let it go - it will end somewhen (here after about 1 hour) <comment336503> For anyone who doesn't need updates to download automatically and just wants to make this CPU usage go away, go to Apple Menu - System Preferences - App Store and uncheck the option "Download newly available updates in the background" (El Capitan) and then restart the computer.