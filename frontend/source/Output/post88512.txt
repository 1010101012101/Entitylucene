Terminal: Is there a way to be notified of activity when tailing an error log <body> I often ssh into a machine and tail -f it's php error log. My ideal situation would be to leave this terminal window open in the background, but when there's activity from the tail command, have the terminal window be activated and moved to front, or notify me in some way that an error has been written. This way I wouldn't have to always keep space on my desktop reserved.  Does this make sense?  <answer88548> I thought about suggesting an AppleScript, or Hazel or Keyboard Maestro, but then I remembered iTerm.  iTerm posts a notification when there is activity, via Growl. From the Online help:     strongGrowl Support/strong      If you enable Growl (Preferences  Profiles  Terminal  Enable Growl   Notifications) and you have Growl installed then you'll receive   messages when a terminal beeps, has output after a period of silence,   or terminates.   <answer88561> Terminal's Dock icon starts bouncing if a tab that isn't active prints \a:  precodetail -f /var/log/system.log | sed $'s/$/\a/' /code/pre  Or run codesudo gem install terminal-notifier/code and do something like this:  codetail -f /var/log/system.log | while IFS= read -r l; do echo "$l"; terminal-notifier -message "$l" &gt; /dev/null; done/code  <answer156817> I've got the same situation: a server with log files and my local machine I want to be notified on on errors and warnings.  What I do is to fetch the log files periodically to my local machine and watch them with a tool called Logistic (www.logtastic.net).  The command fetching my log files from the server is:  precodewhile true ; do FONTDEFDEFAULT='\033[0m' ; FONTDEF='\033[1;35m'; echo -e "${FONTDEF}Copy ...${FONTDEFDEFAULT}" ; scp [USER]@[YOUR-SERVER]:/path/to/log/files/* /var/log/ ; sleep 3 ; done /code/pre  Be sure you'd generated and shared ssh-keys to prevent to enter the password every time.  <comment131161> for some reason this doesnt work with the apache log `tail -f /var/log/apache2/error_log | while IFS= read -r l; do echo "$l"; terminal-notifier -message "$l"  /dev/null; done`