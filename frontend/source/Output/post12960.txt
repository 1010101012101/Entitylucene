Off-site backup of “login.keychain” <body> I’m using the strongKeychain.app/strong to manage all my (website) passwords, and I am also using the “Password assistant” to generate secure random passwords.  But obviously I’m paranoid that my laptop is lost or damaged and that I’m using emall/em my passwords so strongI’m searching for a secure, comfortable backup option/strong.  In particular, the backup has to be emimmediate/em (as soo as I’m adding a new key or editing an existing one). This can be done by registering a launch agent.  Furthermore, the storage should be strongoff-site/strong. Ideally, this would mean emDropbox/em. But I’m paranoid: their storage may be encrypted but they theoretically still have access to my data.  Now, the keychain is encrypted anyway. But is this encryption secure? emCan I just rely on this and upload the backup to an essentially public storage?/em  <answer12961> 1Password is a product that may interest you.  Seems to tick all the boxes in terms of speed, off-site and secure storage.  Plus it allows you to use it on all your devices too (iPhone, iPad etc).  <answer12963> Dropbox doesn't currently support "Watch Any Folder" so you'll have to assemble a second script or use a tool like DropLink (@dr0plink on twitter) to copy the files to the one folder it watches. That's more complicated and more prone to failure.   CrashPlan is a much better solution as it will let you watch specific folders (or the whole drive). This is less likely to break and will let keychain store the file where it prefers.  You can rent space with them or set up your own off-site storage and use the software for free. There are many other products similar to CrashPlan but it's the one I use and chose due to features, price and support.  Don't forget MobileMe will allow you to sync those keychain items to the cloud. You can evaluate that for free for some time before you have to pay a yearly fee.  You will want to do some research - it's fairly involved to do encryption correctly. PGP has some good primers on the basics, but you want someone that takes the time to explain their experience and not over promise. Also - if you can do the encryption yourself, your keys are in your control so others can't feel inclined to release them. This is where relying only on Dropbox's encryption has disappointed some people that didn't first encrypt their data before sending it to their Dropbox folder.  Nothing is totally secure. I try to mitigate that by using tools from someone that patches holes promptly and lets me know if I need to upgrade things once a weakness is patched. I also try to know enough about what's going on under the hood so I don't make silly mistakes like trusting the wrong key signing authority.  The nice thing is all of these products have free trials so you can see what works best before spending money.  <answer13090> h2Suggestion/h2  I myself actually dun care strongthat much/strong about preventing people to get in. I just do as many backups as I can, as that's the only thing I consider data security. Including everything online and offline. But that's not to say I don't try quite hard to prevent issues with anyone getting in anywhere.  If I were as paranoid as you I wouldn't trust encryption, I would do my own nutzy way to store it in a HTML or even TEXT, and then replicate it along with many other stuff. The idea is hiding the password in plain sight, but only you know what to look for. Grab a digital book or something, make a simple rule only you know, and use it as your password. For instance:     The quick brown fox jumped over the lazy dog... and DIED!   The password here could be: codeTbjtd.D!2011/code - There, I even added the year. Eventually I get used to typing it and I don't even need to look at the reference anymore.  As we were discussing, yes this is security through obscurity, but this is only for an individual. If you get such a random selection of characters in your mind only, and never write it down nor pass it along to anyone, there's conceptually not a safer password because it is unpredictable by definition (randomness). It only needs to be big enough to prevent computational power to brute force it. It's that simple.  So if you write it down in an unpredictable fashion strongand/strong add a honeypot with all encryption and stuff you've talked about strongbut/strong don't add your main password in there, you just added yourself many layers of the topmost security while making a perfect and impossible to follow path that makes sense only to you. The point on writing it down in my suggestion is simply as a mnemonic device so you can remember your password may you ever forget it.  Keep in mind this is a very specific use case not meant to generate security measures for data nor encryption, but a strongpassword/strong.  h2Direct Answer/h2  But if you want to rely on some encryption and don't know if you can trust Keychain.app (I know I can't), try the open sourced KeePassX, which is the only way to trust encryption, as I see it. You can combine it with Dropbox and try to ease up your mind by trusting your key will never leak.  I'm glad to see you actually found a "better" (at least if you only use macs) replacement for KeePassX (the DMG) and were even able to add an automated way to updating it through LaunchAgents. The rest is basically what I said above.  No encryption or security measure can be 100% trustable almost per definition but it's still useful as an extra layer if you don't care for calling attention to your relevant data and concentrating it into a big safe saying "here, try here and if you succeed opening this, you got it all" considering it is indeed very hard to break it.  <answer13932> I did end up using an encrypted volume and Dropbox. The following is a strongstep-by-step guide/strong (this assumes that Dropbox is already installed):  ol liCreate an encrypted volumne in codeDisk Utility.app/code, and save the image file in your Dropbox folder.  ol liOpen the “Disk Utility” application./li liAdd a new disk image:  img src="https://i.stack.imgur.com/KMJUk.png" alt="Before adding a new image"/li liSave the file as “Keychain” (extension will be added automatically) in your Dropbox folder and enter the following information:  img src="https://i.stack.imgur.com/sirpt.png" alt="Information of the volumne"/li liAfter pressing “Create”, you will be asked to provide a password:  img src="https://i.stack.imgur.com/kGsjp.png" alt="Choosing a password"/li /ol/li liAdd the volumne file to your login items so that the image is automatically mounted on login.  ol liOpen your System Preferences, go to Account preferences./li liGo to the “Login Items” tab./li liDrag and drop your codeKeychain.sparseimage/code file from the Dropbox folder into the Login Items list:  img src="https://i.stack.imgur.com/Ece6Y.png" alt="Adding a login item"/li /ol/li liCreate a launch agent which watches for changes in the keychain and copies it into the encrypted volume.  ol liOpen a terminal (e.g. codeTerminal.app/code)./li liChange into the launch agents path: codecd ~/Library/LaunchAgents//code/li liCreate a text file in that folder (e.g. using codevim/code), name the file codenet.madrat.utils.keychain-sync.plist/code and paste the following content into the text file:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;net.madrat.utils.keychain-sync&lt;/string&gt;     &lt;key&gt;OnDemand&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/bin/cp&lt;/string&gt;         &lt;string&gt;/Users/USERNAME/Library/Keychains/login.keychain&lt;/string&gt;         &lt;string&gt;/Volumes/Keychain/&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;StartInterval&lt;/key&gt;     &lt;integer&gt;1800&lt;/integer&gt;     &lt;key&gt;UserName&lt;/key&gt;     &lt;string&gt;USERNAME&lt;/string&gt;     &lt;key&gt;WatchPaths&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Users/USERNAME/Library/Keychains/login.keychain&lt;/string&gt;     &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  (Replace all occurrences of codeUSERNAME/code by your login user name.)  strongImportant:/strong The file name of this file must correspond to the codeLabel/code string, plus the code.plist/code extension. If you change either you must also change the other./li /ol/li liActivate and test the launch agent.  ol liIn the terminal, execute codelaunchctl load net.madrat.utils.keychain-sync.plist/code. The launch agent is now active./li liTest the agent by adding a new key to your keychain, and observe that Dropbox updates the codeKeychain.sparseimage/code file./li /ol/li /ol  <comment13608> I'll add a note about dropbox. No one is disputing that they encrypt the files, but some were confused between the policy that DropBox employees were prohibited from accessing files (by retrieving the key they store for YOUR files and applying it to your files) and the fact that they can and will do that when asked by lawyers or the government. DropBox is as reasonably secure as anything humans design and control. <comment13609> That looks very nice but I’m not sure that I want to spend 40 $ if all the features would also be available anyway. In particular, many of the (admittedly, very nice looking!) features such as “Go & Fill” or device synchronisation are of no interest to me. <comment13610> @bmike Dropbox essentially acts as an escrow agent: they are capable and willing to provide an “authorised” agency with the data. I fundamentally oppose this concept. The whole idea behind modern security is to mistrust everybody, in particular the government, and much of modern security centers around the opposition of escrow. That may seem like a petty issue to some but I think it’s a fundamental civil rights issue which is undermined by ignoring it. <comment13611> +1 for 1Password (more like +8 as it's really awesome even as a stand alone product) - it is so much faster more refined for password storage than Keychain. They also work well with dropbox so if you're OK with their security policy (which is about what you'll get from most consumer sites that try to protect/encrypt your data) the time + money for the mac software alone might be cheaper than another backup solution assuming you don't need to back anything else up offsite. <comment13613> @bmike Of course. The aim is still to minimise this. FWIW the situation isn’t quite as dire in Germany (where I live). For instance, ISPs don’t save traffic data so they cannot provide this information. <comment13614> I’m already using the launch daemon to monitor my files for changes and perform automatic Dropbox backups so that’s not an issue for me. But CrashPlan looks awesome. +1 also for MobileMe, I had never considered that. <comment13615> Your ISP, any hosting service, and any software vendor that has income is capable and willing to provide "authorized" agency with your data - often without notifying you. We only get to choose what country we store our data and what country we store our property. I do not disagree with your premise but maintain that Dropbox isn't any worse or better than the other options. Even PirateBay has compromised user IP/email and trivial to hack MD5 hash of passwords. Going online makes you far more insecure and there is no way around that. <comment13617> I totally love launchd - it's so awesome to not have to hack/grok fseventsd but have a tidy and powerful wrapper to kick off scripts. <comment13792> + for crashplan. I use it along with dropbox and it's great. <comment13830> +1  I am a Mac app "junkie", and I consider 1Password to be the most important app I use. <comment14879> Hat-tip to [@barbaz](http://apple.stackexchange.com/users/6195/barbaz) for coming up with the idea of using an encrypted OS X volume. <comment16828> Even though I still think that's asking to be robbed, this is a very elegant solution indeed! ;) <comment16830> @Cawas I’m pretty confident that a modern AES encryption isn’t crackable. How is this asking to be robbed? <comment16832> I like to think on ultimate measures, almost utopian if you will... "modern [put your technology here]" to a hacker is almost like a bank with the most technological safe storing money to a robber. Can you really say nobody can break it? Well, in my mind, if I want information safeguarded the only way I know it will be is if nobody, and I mean nobody, knows about it. AES was not made by me, so someone knows about it. <comment16835> @Cawas You seem to have a grave misunderstanding of modern cryptography. What you are advocating is known as “security by obscurity” and it’s generally acknowledged by security experts that this concept is fundamentally broken: it doesn’t work. AES and related measures will be broken in the future, and they may in fact already be broken but the probability of this is *much* (!) smaller than that your obscurity will be pierced by a dedicated attacker. <comment16838> Call it "security by obscurity" and that's juts the first step of what I'm suggesting. I'm not advocating it because I don't do it myself, I don't have anything in digital media that needs to be so safe guarded. I just like thinking about it. Keep in mind probability is just a statistical measure of historical facts. And you're only worried about encryption while there are many more aspects to consider. Talking about "security experts" and "it doesn't work" is way too vague, but I agree I'm also being vague, though that's because there's more to say than I can write. I'll edit my answer. <comment16839> there, if you're still interested. :)