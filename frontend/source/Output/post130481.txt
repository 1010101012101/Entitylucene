How to upgrade Apache 2.2 to 2.4 in MacOSX Mavericks <body> My ISP has upgraded the server to Apache 2.4.9 from 2.2.xx. It has broken a couple things in my setup and I want to bring my local copy of Apache 2.2.26 to 2.4.9 so that I can test locally.  I've been trying to find some information online, but I canâ€™t seem to find a step by step instructions on how to do it, and mostly I find recommendations of NOT doing it. Instead I find people suggesting Homebrew, MacPorts, or Fink.  Given that I have a number of sites working with local.xxxx.com and it all works well (edit locally, test by visiting their corresponding url with the local. prefix) and it is all pretty convenient and nice, I would like to continue doing the same, but with Apache 2.4.9. Any advice as to what's the best way to do this, or a pointer to instructions would be greatly appreciated.  <answer130487> You can upgrade the Apache that comes with Maverics but there is a big chance that every time you install a system update the Apache will break.  It's pretty easy to use homebrew, but it's a command line thing. With homebrew you can pin point the Apache version.  If you want a solution with a graphical interface use MAMP, it's free. But you will need to use the Apache version they ship (2.2.26).  I will stay away form macports, homebrew is the new king in town.  To install homebrew type this on the terminal  precoderuby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)" /code/pre  Installing a specific version is more trick, you can see the instructions on this stack exchange post:  https://stackoverflow.com/questions/3987683/homebrew-install-specific-version-of-formula  But I'm wondering what kind of problem you are getting, Apache version changes normally don't break anything, are you sure is a Apache thing? The problem can be because of another technology, like PHP, Ruby...  Would you please post the errors you are getting.  <answer130488> h3If you succeed, you will break part of the System/h3  You don't want to do that. Apache2 is part of the OS. If you somehow achieve what you are after, you will break any ability to upgrade Apache2 or have any security updates Apple roles out that is applied using the built-in Mac App Store or softwareupdate from Apple. You should leave it be and install a different Apache2. Also, that way you will be assured that subsequent Apple updates also do not break your upgraded version of Apache2, which is just as likely (if not inevitable).  hr  h1MacPorts/h1  MacPorts is a robust, stable, mature and easy to use package management solution, for OS X. It is modeled after FreeBSD's ports system, which has been adopted as the basis of NetBSD's pkgsrc. I highly recommend MacPorts.   h2install Xcode 5.1.1/h2  MacPorts requires an appropriate version of xcode; xcode_5.1.1.dmg is the most recent version for Mavericks (after registerring for a free developer account, and logging into developer.apple.com, that link will begin your xcode download). Once the download completes:   precode hdiutil attach -quiet -noverify -nobrowse -noautoopen ~/Downloads/xcode_5.1.1.dmg  cp -npR /Volumes/Xcode/Xcode.app /Applications/  hdiutil detach -quiet /Volumes/Xcode  open -g /Applications/Xcode.app  sleep 8  killall Xcode.app /code/pre  h2Install MacPorts/h2  Get to know  MacPorts  precode curl -Ok https://distfiles.macports.org/MacPorts/MacPorts-2.2.1.tar.bz2  tar xf MacPorts-2.2.1.tar.bz2  cd MacPorts-2.2.1  ./configure  make  sudo make install     # *not war!*  cd ..  rm -rf Macports-*  sudo /opt/local/bin/port -v selfupdate  diskutil quiet repairPermissions / /code/pre  h3add MacPorts to your $PATH:/h3  precode export PATH=/opt/local/bin:/opt/local/sbin:$PATH  export MANPATH=/opt/local/share/man:$MANPATH /code/pre  h3install Apache 2.4.9/h3  precode Jose@stack:~$  Jose@stack:~$  Jose@stack:~$ port info apache24-devel   apache24-devel @2.4.9 (www)   Variants:       eventmpm, openldap, [+]preforkmpm, universal, workermpm    Description:    Apache is an HTTP server designed as a plug-in replacement for the NCSA server version 1.3                   (or 1.4). It fixes numerous bugs in the NCSA server and includes many frequently requested                   new features, and has an API which allows it to be extended to meet users' needs more                   easily.   Homepage:       http://httpd.apache.org/    Library Dependencies: apr, apr-util, expat, openssl, pcre, perl5, zlib   Platforms:            darwin, freebsd, openbsd   License:              Apache-2   Maintainers:          ryandesign@macports.org, macintosh@mathiesen.info, pixilla@macports.org,                         openmaintainer@macports.org  Jose@stack:~$  Jose@stack:~$  Jose@stack:~$ sudo port -vsc install apache24-devel /code/pre  That's really all there is to it. If you can configure httpd.conf, you can do this too. And you can keep it updated to the nosebleeding edge simply with:  precode sudo port -vsc selfupdate  sudo port -vsc upgrade installed /code/pre  MacPorts will not interfere with the use of OS X internal Apache2 server, nor with any other software. It keeps everything it installs in its /opt directory.  If for whatever reason you are unsatisfied and/or need to remove MacPorts:  h3to completely uninstall MacPorts/h3  precode sudo port -dfp uninstall --follow-dependencies installed  sudo port -dfp uninstall all  sudo rm -rf /opt/local    sudo rm -rf /Library/Tcl/macports* /code/pre  <comment152964> Current version of http://www.ampps.com includes Apache 2.4.7 <comment152974> The error I get on visiting local.xxxxx.com is an Internal Server Error. Checking in the console, I see this:[Mon May 12 13:38:18 2014] [alert] [client 127.0.0.1] /Users/jose/Sites/local.xxxxx.com/html/.htaccess: RewriteRule: unknown flag 'END'. Rather than working around that, I would prefer to simply have my system running with 2.4.9 so that I can have as close a local setup as possible to the ISP's setup <comment152989> These seem to me the most complete set of steps. I have started with the link "know MacPorts" and first run xcode-select --install (which installed command line utilities, after I had installed XCode).  Next I downloaded the .pkg as per the instructions on the MacPorts site and carried on with the  sudo /opt/local/bin/port -v selfupdate followed by the  diskutil quiet repairPermissions /  I then skipped adding to the PATH (it seems the installation did that for me).  The whole process took a while with one dialog popping up asking for "javac," needing Java SE 6, which I declined. <comment152995> Perhaps the MacPorts docs need updating. Its not a huge team of maintainers, which is one reason I have taken it upon myself to evangelize about it: the more adopters, the better it will be. I've been using it for almost 8 yrs, and I'm no programmer/developer. Once familiar with syntax (which I was a bit from using NetBSD and pkgsrc) it begins to get useful. Migration is a breeze, "port list requested" tells you all the ports you asked for, and you can script that list easily on a new system. Love rolling my own software everywhere I go. Visit #macports @freenode irc for realtime support.:D <comment153003> Now, this seems to work, but the browser appears to still go to the 2.2.26 version of Apache. In the command line, though, running "apachectl" seems to be looking in the right place. At the moment is giving me an error [Syntax error on line 53 of /opt/local/etc/apache2/extra/httpd-vhosts.conf: Invalid command 'php_value', perhaps misspelled or defined by a module not included in the server configuration] but that's because I haven't got the module for php loaded, which I will try to figure next. So how do I "turn off" the 2.2.26 and make sure that a local.xxxx.com request uses 2.4.9? <comment153008> Figured how to turn it off: sudo launchctl unload -w /System/Library/LaunchDaemons/org.apache.httpd.plist. <comment153018> @Jose the macports version is controlled similarly. [hard to read](https://lists.macosforge.org/pipermail/macports-users/2010-February/018909.html) but good stuff in there, including launchctl command to start/stop apache2, & I think you can also use apachectl, but may have to configure for the macports version of that cmd as well. Everything should be in /opt  like /opt/local/apache2/conf/httpd.conf <comment153029> Thanks. Now, with the installation, something is not quite right. The apachectl seems to be reading /opt/local/etc/apache2/httpd.conf but apxs seems to be looking at /opt/local/apache2/conf/httpd.conf for the configuration file. It might not have been a good idea to install the .pkg version. I have now uninstalled and done all manually as suggested. [note: with add MacPorts to your $PATH:, there is an unnecessary space in "...cal/share/ man:$MANPATH"] Now, knowing that I want php5 with all this, should the installation be "sudo port -vsc install apache24-devel +php5"? <comment153984> I found a couple things regarding PHP 5 with Apache24-devel and it doesn't look good (http://trac.macports.org/ticket/41478) and (http://trac.macports.org/ticket/35824). I also found somewhere, but can't seem to find it again, how to use local ports to install php 5, but after giving it a go without success, I am looking at trying something else. <comment153987> I moved away from MAMP a few years back because their support for the latest (stable) versions of some packages was lacking. And I just checked, and sure enough, with their latest release, they are still on Apache 2.2.26. Going to see if Homebrew covers an easy installation of Apache 2.4.9 and PHP 5. Will check the link provided. <comment154041> @Jose thx for note about space! Breaks stuff. fixed. The syntax you use in that cmd is for variants, and I don't see a variant php5 for that port. The command would then be `sudo port -vsc install apache24-devel php5` and that would do it. In the future, if you want to install more than one port you just list them together without any punctuation `sudo port -vsc install apache2 mod_perl2 apachetop mysql5-server php5` and so on. To install php5 by itself its `sudo port -vsc install php5` -seek answers in the [documentation](http://guide.macports.org/). To persevere, don't give up so easily!! <comment154437> Thanks! I haven't given up. Now, this command you mention did appear to work. Also, launching Apache shows up with 2.4.9 (apachectl -v). I have still an issue when trying to launch Apache, with this error coming up:    httpd: Syntax error on line 290 of /opt/local/etc/apache2/httpd.conf: Cannot load apache2/modules/libphp5.so into server: dlopen(/opt/local/apache2/modules/libphp5.so, 10): Symbol not found: _unixd_config\n  Referenced from: /opt/local/apache2/modules/libphp5.so\n  Expected in: /opt/local/sbin/httpd\n in /opt/local/apache2/modules/libphp5.so <comment154648> After changing line 290 from reading "LoadModule php5_module apache2/modules/libphp5.so" to "LoadModule php5_module lib/apache2/modules/libphp5.so" in order to match how all the ohter modules are loaded, now I get a slightly different error: httpd: Syntax error on line 290 of /opt/local/etc/apache2/httpd.conf: Cannot load lib/apache2/modules/libphp5.so into server: dlopen(/opt/local/lib/apache2/modules/libphp5.so, 10): image not found. I also realized that apache is running, but it's the older version. Turned that off again (checked by going to localhost) but still the same error. <comment154650> Seems libphp5.so is in /opt/local/apache2/modules but not in /opt/local/lib/apache2/modules. All other modules are in both places. I now copied it across. Launching apache now reports: httpd: Syntax error on line 290 of /opt/local/etc/apache2/httpd.conf: Cannot load lib/apache2/modules/libphp5.so into server: dlopen(/opt/local/lib/apache2/modules/libphp5.so, 10): Symbol not found: _unixd_config\n  Referenced from: /opt/local/lib/apache2/modules/libphp5.so\n  Expected in: /opt/local/sbin/httpd\n in /opt/local/lib/apache2/modules/libphp5.so. Seems I am going in circles. <comment154652> I commented out the line loading the php module, just to test everything else, and it is all working. I can see the page that I had in /opt/local/www/apache2/html/index.html. I also added Location /server-info SetHandler server-info /Location to the httpd.conf file and visiting localhost/server-info displays all the right information. Server Settings  Server Version: Apache/2.4.9 (Unix) OpenSSL/1.0.1g Server Built: May 20 2014 16:03:14 Server loaded APR Version: 1.5.1 Compiled with APR Version: 1.5.1 Server loaded APU Version: 1.5.3 Compiled with APU Version: 1.5.3