Quickly create/edit keyboard shortcuts for menu items <body> Currently, if I want to bind a new keyboard shortcut to a menu item, I need to go through a somewhat tedious, many-step process:  ol liOpen System Preferences, then Keyboard pane, then App Shortcuts/li liClick the code+/code button/li liFind the application in the menu/li liForget the exact name of the menu item I want to bind/li liGo back to the other application, find the menu item, remember exactly what it’s called/li liGo back to System Preferences and type that in the field/li liType the desired shortcut and click “Add”/li liOn testing it out, find that I somehow mistyped it and spend a couple minutes troubleshooting steps 5–7/li /ol  For something so simple as binding a keyboard shortcut to a menu item, I feel like there should be a very easy way to achieve this in about two seconds.  strongIs there some sort of script or app which I can use to emeasily/em manage an app's keyboard shortcuts?/strong  I would be equally happy with something resembling either of these:  ul liA small script/background app which I can call, which prompts me to select a menu item and type my desired shortcut/li liA somewhat larger program which will emlist/em and let me emedit/em every menu item and/or keybinding within a certain app/li /ul  <answer281061> Here's the AppleScript for it:  precodeon run  tell application "System Events"     set theActiveApp to name of 1st process whose frontmost is true end tell  set theApplicationID to id of application theActiveApp set theMenuItem to text returned of (display dialog "Enter menu item name" default answer "Example: New Window") set theShortcut to text returned of (display dialog "Enter shortcut (use these: ⌘=@,  ⌥=~,  ⇧=$,  ^=^)" default answer "Example: @$1")  do shell script "defaults write " &amp; quoted form of theApplicationID &amp; " NSUserKeyEquivalents -dict-add " &amp; quoted form of (quote &amp; theMenuItem &amp; quote) &amp; " " &amp; quoted form of (quote &amp; theShortcut &amp; quote)  end run /code/pre  So, it gets the current application's identifier and then adds your menu item name and shortcut as required. You can even click the application's menu bar without the popup going away!  emHowever,/em note that this is merely a rudimentary version of what you wanted; it only adds entries. If you make a mistake, that's yours to manually fix (and it might not appear in System Preferences). Also, lastly, it did not seem to work in Automator or Script Editor, but worked fine for the Finder. As for the former two, it adds the entries but for some reason they don't show up in System Preferences and can't be used, even after restarting the app. I don't know why but hey, at least it's emsomething/em ;)  <comment353423> Some apps do that internally - usually the ones with half a million options, Photoshop & Cubase are two that spring immediately to mind. For the rest, there's your example method. <comment353428> I'd imagine this would be not terribly hard to program — These settings seem to be stored in NSUserKeyEquivalents keys in each application's preference plists (or the Apple Global Domain one, for globally-set shortcuts). You can easily see all the existing bindings with `defaults find NSUserKeyEquivalents`, and writing them isn't much different. <comment353430> Just tried that command - it doesn't even cover my keyboard sys prefs changes, let along the myriad I have in pshop & cubase. <comment353432> @Tetsujin Well of course it doesn't cover the changes done in proprietary ways! I'm only talking about the native functionality for this; those are kind of irrelevant. Though it's strange that it doesn't include all your bindings in System Preferences... it works fine for me. Are you running it with appropriate permissions? <comment353435> I had a list of precisely 4 items using that command [all 'true']. My actual prefs list is in the dozens, excluding those particular apps with built-in functionality, which show only in those apps. <comment353436> @Tetsujin That's really weird, none of them should even be boolean! Here's what it returns for me: https://cl.ly/k24a <comment353437> by 'true' I meant they were actual recognised non-standard values, not boolean. Sorry. <comment353596> Oh please. I need this. I suffer from this all the time. As a side note, BetterTouchTool allows you greater flexibility as you can use wildcards, select the nth menu item, and set the same shortcut to multiple menu items (in case they change based on state), but unfortunately the process of adding the shortcuts isn't much shorter.