A way to change NIC's MAC-address except with CLI ifconfig's "ether" option? <body> Some ISPs do MAC-address port locking or/and use DHCP to assign IP-addresses to clients' network interfaces. Assuming you don't wanna bother calling them, what are your options then? If codeifconfig/code's is the only one, where should it be called from so early during boot time that no Ethernet frame would ever went to wire with its original MAC-address?  P. S. sAlas, there's no 'mac-address' tag yet and you need at least 300 reps to create one./sThanks to @gentmatt, now we have one. ;-)  <answer55833> You won't be able to permanently change the MAC address of the card, as it is hard coded on the card itself.  However, as you have guessed, you could create a script and run it at boot in order to change it every time the computer boots.      This post details the steps it takes create the script and how to have it run when you want it to.  If you follow that, you should be good to go.   <comment64075> May NIC's drivers in Windows, for e. g., have GUI tweaks for that, they just override MAC when initializing the driver and it has nothing to do with "hard coded" values at all. I see no reason why Mac OS X couldn't have such things as well. <comment64077> @poige I've wanted to permanently change the mac address for my second hand MBP as well, but so far I've not found a solution to change it permanently as it gets reset after boot like davis_m says. <comment64078> @gentmatt, you seem to not understand how things work. Driver can change MAC-address usually, but it needs some init value for it. It has such a value in its EPROM and uses it by default. But it can as well use another value instead — from parameters given when initializing from config file or registry. Open NIC settings in Windows, and you will see how simple it is there. <comment64079> @poige I don't know at all how Windows handles this. But I'd be glad to learn how OSX does it as I don't know much about it either. What you say makes sense though, so I'll be glad to get a different answer :) <comment64083> @gentmatt, I would be glad as well, but as far as we know, at least there's no standard GUI tweak for that. <comment64084> Why do you want to change the MAC address at all? <comment64087> @patrix, well, one situation is your ISP blocks your eth. port when it sees different MAC on incoming eth. frame. You might need temporarily connect another computer though, then revert it. What would you do? Call ISP every time? — It's absurd. In Windows you just change NIC settings using standard GUI dialogue. It's plainly convenient. <comment64088> Thanks for the explanation. Couldn't you use your PC as a router in this case (like Internet Sharing on OS X) and route the Mac traffic via the PC as well? <comment64089> @patrix, look, if you have 2 comps, both are Macs, the 1st was the router for the 2nd, for e. g., and you need to connect the second directly due to some technical problems with the 1st, what's then?… <comment64091> Got that. But you can't have two machines with the same MAC in a network so if you need to bring the second computer online you can first set its MAC address and plug it in afterwards. Whether you do this in a GUI or via a shell script shouldn't actually matter. <comment64094> @patrix, the routing comp is a member of 2 networks: ISP and LAN. So, having the same MAC-address on both of the networks is not a problem — they are in different collision domains. Now, while you troubleshoot the 1st comp, it's totally disconnected and you have the 2nd connected to the ISP. Suppose you need to reboot it and then, if you've forgotten to disconnect it preliminarily, on its boot it would emit DHCP request with unexpected (for ISP's switch) MAC-address. The port gets locked, you're to waste your time calling ISP, and so on. <comment64120> @poige Having the driver doing it is the same thing as we are doing here.  It isn't actually changing the MAC address, it is just setting a different one.  There is no option to do that on OSX, at least not with the factory NICs, so we have to do it ourselves. <comment64125> @davis_m, just terminology.