How to fix the OS X Server "LibClamAV Error: mpool_malloc(): Attempt to allocate 8388608 bytes." reboot loop? <body> Since last friday (October 21st, 2016) a reboot of both 10.6 (Snow Leopard Server) and 10.7 (Lion Server) result in numerous repetitions of the logged error message:     LibClamAV Error: mpool_malloc(): Attempt to allocate 8388608 bytes.   and     WARNING: [LibClamAV] mpool_malloc(): Attempt to allocate 8388608   bytes. Please report to http://bugs.clamav.net Log size = 1048612, max   = 1048576 LOGGING DISABLED (Maximal log file size exceeded).   h2Workaround (not a fix)/h2  After disabling "Server Admin"  "Mail"  "Settings"  "General"  "Filters":  ol li[ ] Enable junk mail filtering/li li[ ] Enable virus filtering/li /ol  the error message was gone and the reboots stopped.  h2Regression/h2  It seems that the ClamAV engine (code$ /usr/bin/clamscan --version/code ... code0.97.8/code) is too old according to ClamAV.net bug 11647.  h2How to fix?/h2  How to fix the ClamAV "codeLibClamAV Error: mpool_malloc(): Attempt to allocate 8388608 bytes/code" error permanently and stronghaving email junk and virus filtering functionality/strong? In other words emHow to upgrade the built-in clamav scanner of Mac OS X Lion 10.7 server (without installing Xcode on the machine running the outdated ClamAV)/em?  <answer258787> I had the same issue and disabled mail (we don't use it), the issue seems to have gone away.   I'm thinking ClamAV pushed out a definition or update that was bad. Your best bet is to probably keep filtering disabled for now until they release an update. It might also help to report it to them at http://bugs.clamav.net as requested.   <answer258986> h1Updating Apple's ClamAV on 10.7 (Lion)/h1  The update recipe below requires "Xcode" and "Xcode Command Line Tools" to build software from its source code. The Terminal.app commands below are tested with Mac OS X 10.9.5, Xcode 6.2 in a zsh shell. For details why several choices were made, see "Background" section at the bottom.  h3Build pcre 8.39/h3  precode$ cd ~ $ mkdir src $ cd /tmp &amp;&amp; curl -O ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.39.tar.gz &amp;&amp; cd - $ cd src $ tar zxf /tmp/pcre-8.39.tar.gz &amp;&amp; rm /tmp/pcre-8.39.tar.gz $ cd pcre-8.39 $ ./configure --prefix=/usr/local/pcre $ make &amp;&amp; make check $ make install DESTDIR=/tmp/pcre $ rm -r /tmp/pcre/usr/local/pcre/share #remove docs $ tar czvf ~/pcre-8.39.tgz -C /tmp/pcre --exclude=.DS_Store usr/ /code/pre  h3Build clamav to overwrite Mac OS X built-in version/h3  precode$ cd ~/src $ cd /tmp &amp;&amp; curl -LO https://www.clamav.net/downloads/production/clamav-0.99.2.tar.gz &amp;&amp; cd - $ tar zxf /tmp/clamav-0.99.2.tar.gz &amp;&amp; rm /tmp/clamav-0.99.2.tar.gz $ cd clamav-0.99.2 /code/pre  Without code-mmacosx-version-min=10.X/code ClamAV 0.99.2 will be build with compiler code optimizations that do run on the host (10.9) OS X version, but don't work on 10.6 and 10.7.  In case you are not building for running on 10.6.8 or 10.7.5 you might need to change code10.8.0/code or code11.4.2/code to the output of the command codeuname -r/code executed on your (remote) host Mac.   h310.6.8/h3  precode$ CFLAGS="-O3 -march=nocona -mmacosx-version-min=10.6" CXXFLAGS="-O3 -march=nocona -mmacosx-version-min=10.6" ./configure --prefix=/usr --libdir=/usr/lib --with-pcre=/usr/local/pcre --enable-llvm --build=x86_64-apple-darwin`uname -r` --host=x86_64-apple-darwin10.8.0 --sysconfdir=/private/etc $ CFLAGS="-O3 -march=nocona -mmacosx-version-min=10.6" CXXFLAGS="-O3 -march=nocona -mmacosx-version-min=10.6" make $ CFLAGS="-O3 -march=nocona -mmacosx-version-min=10.6" CXXFLAGS="-O3 -march=nocona -mmacosx-version-min=10.6" sudo make install DESTDIR=/tmp/clamav-0.99.2 &amp;&amp; sudo rm -r /tmp/clamav-0.99.2/{private,usr/include} &amp;&amp; sudo chown -R root:wheel /tmp/clamav-0.99.2 $ tar czvf ~/clamav-0.99.2.tgz -C /tmp/clamav-0.99.2 --exclude=.DS_Store usr/ /code/pre  h310.7.5/h3  precode$ CFLAGS="-O3 -march=nocona -mmacosx-version-min=10.7" CXXFLAGS="-O3 -march=nocona -mmacosx-version-min=10.7" ./configure --prefix=/usr --libdir=/usr/lib --with-pcre=/usr/local/pcre --enable-llvm --build=x86_64-apple-darwin`uname -r` --host=x86_64-apple-darwin11.4.2 --sysconfdir=/private/etc $ CFLAGS="-O3 -march=nocona -mmacosx-version-min=10.7" CXXFLAGS="-O3 -march=nocona -mmacosx-version-min=10.7" make $ CFLAGS="-O3 -march=nocona -mmacosx-version-min=10.7" CXXFLAGS="-O3 -march=nocona -mmacosx-version-min=10.7" sudo make install DESTDIR=/tmp/clamav-0.99.2 &amp;&amp; sudo rm -r /tmp/clamav-0.99.2/{private,usr/include} &amp;&amp; sudo chown -R root:wheel /tmp/clamav-0.99.2 $ tar czvf ~/clamav-0.99.2.tgz -C /tmp/clamav-0.99.2 --exclude=.DS_Store usr/ /code/pre  h3Upload or copy the .tgz files to the remote 10.7 machine/h3  SSH should be enabled on the remote (receiving) host for these example commands to work.  precode$ scp ~/pcre-8.39.tgz remote.host.tld:/tmp/ $ scp ~/clamav-0.99.2.tgz remote.host.tld:/tmp/ /code/pre  You could also upload the .tgz files to a webserver and download them on the remote host machine(s), for example with this command:  precode$ cd /tmp &amp;&amp; curl -O http://crashplan.probackup.nl/install/mac/pcre-8.39.tgz &amp;&amp; cd - $ cd /tmp &amp;&amp; curl -O http://crashplan.probackup.nl/install/mac/clamav-0.99.2.tgz &amp;&amp; cd - /code/pre  h3Install pcre 8.39 on remote host Mac at /usr/local/pcre/h3  precode$ sudo tar zxvf /tmp/pcre-8.39.tgz -C / /code/pre  h3Optionally create links to pcre executables in /usr/local/bin/h3  precode$ cd /usr/local/bin &amp;&amp; sudo ln -s ../pcre/usr/local/pcre/bin/{pcre-config,pcregrep,pcretest} . &amp;&amp; cd - /code/pre  h3Install ClamAV 0.99.2 on remote host Mac/h3  precode$ sudo tar zxvf /tmp/clamav-0.99.2.tgz -C / /code/pre  h3Update clamd sandbox configuration (for 10.7)/h3  precode$ sudo sed -i '' 's#(lib|share)#(lib|share|local/pcre/lib)#' /usr/share/sandbox/clamd.sb $ grep -q -F '(regex #"^/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent$")' /usr/share/sandbox/clamd.sb || { awk '/\(regex #"\^\/private\/var\/clamav\/"\)/ {print "\t(regex #\"^/System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\$\")"}; {print}' /usr/share/sandbox/clamd.sb &gt; ~/temp-clamd.sb; cat ~/temp-clamd.sb | sudo tee /usr/share/sandbox/clamd.sb &gt; /dev/null; rm ~/temp-clamd.sb; }; /code/pre  h3Start freshclam daemon/h3  precode$ sudo /bin/launchctl load -w /System/Library/LaunchDaemons/org.clamav.freshclam.plist /code/pre  h3See whether freshclam is updating/h3  precode$ tail -f /private/var/log/freshclam.log /code/pre  Press kbdCtrl/kbd + kbdC/kbd stop stop displaying the "tail" of the log file.  Or check the database version at the codeclamd/code executable:  precode$ clamd --version ClamAV 0.99.2/22442/Thu Oct 27 20:03:54 2016 /code/pre  h3Start clamd daemon/h3  precode$ sudo /bin/launchctl load -w /System/Library/LaunchDaemons/org.clamav.clamd.plist /code/pre  h3Cleanup installer archive files/h3  precode$ rm /tmp/pcre-8.39.tgz $ rm /tmp/clamav-0.99.2.tgz /code/pre  That's it.  hr  h1Background/h1  h3Overwrite Apple's clamav/h3  Because the Mac OS X 10.7 ClamAV version 0.97 is so outdated that it breaks the system, I think it is wise to overwrite the built-in ClamAV with a more recent version. Normally this it not recommended because Apple updates would overwrite such a change. The last "Software Update" for 10.7 that Apple released dates back to strikeSeptember 2012/strike September 24th, 2014. For that reason I don't expect that Apple will release any software update for Lion, ever.  h3pcre/h3  The current (October 2016) release of ClamAV is 0.99.2. That clamav release has a dependency named "pcre" that wasn't required for running the current failing clamav version 0.97. Therefore some newly required software needs to be installed too. I am not sure where it is better to install that in location /usr or /usr/local. To be one the safer side I choose to not change system software at /usr, thus use the folder /usr/local/pcre.  h3Seperate built and release machines/h3  For open source it is quite common to built and install the software from source on the same machine. Because the server that runs outdated clamav is a production server, I don't mess with it. Software compilation/building is done on a different Mac box.  h3Regards/h3  With regards to Wildcard for help building the awk command to insert a new line prepended with tab character to clamd.sb.  <answer259772> I ran across this page dealing with the issue on a carefully rebuilt OS X server running 10.6 (I have reasons). The compile-it-yourself answer by Pro Backup is fantastically detailed, but I may have run across a simpler answer, at least in the short term. I noticed another machine I had, also using 10.6 Server, didn't have the issue. Checking the versions of each using code/usr/bin/clamscan --version/code, I saw they were the same engine versions, but different definition versions:  h3Has the issue/h3  precodeClamAV 0.97.8/22421/Sun Oct 23 22:58:38 2016 ClamAV 0.97.8/22422/Mon Oct 24 12:02:38 2016 /code/pre  versus  h3Doesn't have the issue/h3  precodeClamAV 0.97.8/22470/Wed Nov  2 19:05:24 2016 /code/pre  h1Manual download clamAV definitions/h1  So, decided to try manually downloading the virus definitions using code/usr/bin/freshclam/code (as codesudo/code). It ran through lots of versions, finishing with 22471. Not yet sure if this will do the trick, but I'm hoping it's on the right track.  <comment323764> The linked bug description recommends to upgrade the scanner. Did you already try that? <comment323775> @patrix "**How to upgrade the clamav scanner on Mac OS X Lion 10.7 server?**" is another way of phrasing my question. There is no upgrade available from Apple. So I am look for a recipe to (hack) upgrade the built-in ClamAV scanner. Note: I am currently stuck at sandboxing, how to edit clamd.sb from a (bash) script. <comment323776> Is upgrading to https://www.clamxav.com/download.html an option? Or compiling ClamAV from source? <comment323778> @patrix Upgrading to clamxav is not an option, because that doesn't fix the built-in clamd. Accidentally enabling built-in clamd or freshclam will make the system crash (reboot loop) again. Compiling from source is an option, though not on that host, only on a separate mac. My current xCode machine runs 10.9.5. Thanks for refining my question. <comment323786> IMHO in one way or the other you will need to upgrade (either clamav or macOS) and/or comile something yourself (and then replace the built-in version). Ruling out these options puts rather strong boundaries on the solution space here. <comment323788> @patrix Compile something yourself/myself is an option. However not on the Mac that needs an upgraded clamav engine. That Mac is a production server and needs to stay a production server and not a software building box a.k.a. development or testing machine. <comment323796> Please tell me YOU reported it too? <comment323867> @MauryMarkowitz There is not much sense to report, because [ClamAV end of life policy](https://www.clamav.net/documents/end-of-life-policy-eol) states that they will not fix issues in engines older then current (0.99) and one major release generation before that (0.98). Quote: "_Currently, every version from ClamAV .97 and down, including all minor versions, are unsupported._" <comment332000> I can confirm that the manual ClamAV definition update works. Though that still leaves your ClamAV engine at the outdated and no longer signature tested version 0.97. [ClamAV announced engine 0.97 End Of Life: June 1, 2016](http://blog.clamav.net/2016/05/clamav-097-engine-end-of-life.html). Quote: _signatures may work past June 1st, we are no longer testing that configuration, so you are on your own_. <comment332004> Though only updating the definitions is a quick short-therm fix, the root cause is that definitions for this engine will not be tested any longer. Therefore I can't award this answer the accepted answer flag.