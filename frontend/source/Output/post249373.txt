terminal create file(file_name as bash arguments) then write text into it, relate to .bash_profile <body> I am using sublime, I guess any text editors work the same. I've just learned from this form that alias won't work and I should use function. here is what I come up with, in code.bash_profile/code:  precodefunction sln() {     sublime "$1" | echo "'use strict';" &gt; "$1"; } /code/pre  codetype sln/code does return the function I defined, as this:  codesln is aliased to 'sublime "" | echo "'use strict';" &gt; ""'/code; but when I do codesln test.js/code, console says: codeNo such file or directory/code FYI: it works when I do codesublime test.js | echo "'use strict';" &gt; test.js/code, and codetest.js/code will open with text code'use strict';/code at the beginning. br Can someone explain and offer some solutions? Thanks.  <answer249379> After modifying .bash_profile you have to either source the modified bash profile with codesource ~/.bash_profile/code or close the current and reopen a new Terminal window to have the changes take effect.br UPDATE: I had done some testing, now the solution is definitely strongrestart Terminal.app/strong. codesource ~/.bash_profile/code to reload is not enough.  <answer249561> Pipes send the standard output of one command to the next command in the pipe which becomes standard input for that command. In your command statement:  precode sublime "$1" | echo "'use strict';" &gt; "$1"; /code/pre  the pipe is useless. The next command codeecho/code does not use any output coming through the pipe. Plus text editors normally display the buffer which is not standard output. Text editors will except standard input given the proper options and placement in the pipeline. The following should open a new unnamed text file with the first line code'use strict';/code  precodeecho "'use strict';" | sublime - /code/pre  <comment309301> Do you mean console or Terminal.app also which directory are you in <comment309303> @Mark Terminal .app if to answer you question, also I am in home directory, the default one when I open terminal.app. Terminal, console, command line, bash, etc, they are kind of the same thing to me. <comment309304> They are not the same thing which is why you need to make it clearer what you are doing. Writing computer things depends on getting the details exactly correct. If you can't distinguish then you have the problem and others can't help <comment309306> @Mark Well, I know that. Just don't know any better. Anyway, do you know what is the problem concerning to my question? <comment309307> @Mark The thing is, the application I am using is Terminal, and when I open Terminal, the tab title is "-bash", and when ever I am code, if I do console.log, stdout and stderr will be showing on Terminal. You get the idea, right, I don't know how to distinguish them. <comment309311> Command line basics: [The Linux Command Line](http://sourceforge.net/projects/linuxcommand/files/TLCL/16.07/TLCL-16.07.pdf/download) also worth reading for OS X users <comment309312> @klanomath Thanks, it works now. I've done nothing though. When the problem persists, and when I in another directory instead of home directory, type sln returns nothing(I blame the session time, but I really don't know). Now everything is working, as I explain in my answer. <comment309740> Actually, it works perfectly, and pipe is necessary. I've tried &&, the outcome is the same, but pipe solution is instant(create a new file, write texts into it). The && solution will create a new file, then wait for like 2 seconds, then write the text into the new file, which is quite annoying. Your last suggestion echo then pipe doesn't work at all(I need the command to create a new file with name). <comment309773> @Yucheng Xu  The only suggestion I have for you is to focus on how the command statement is working not that "it works" and the pitfalls of writing that way. Good luck.