How to increase max socket connections for Yosemite 10.10 <body> I'm trying to test a network service app that allows for a large number of simultaneous socket connections.   I have adjusted code/etc/sysctl.conf/code with the following:  precodekern.maxfiles=65536 kern.maxfilesperproc=65536 kern.ipc.somaxconn=10000 /code/pre  With this in place, codeulimit -n/code shows I have a 65536 "open file" maximum. Yet my service still gets stuck around the 1000th connection.   Thinking that perhaps it's something specific to the platform (Node), I re-implemented a simplified version of it in Golang, but it exhibits the same problem.   It also happens if I split the "client" side up into several procs that each open a handful of connections. The service always get stuck around the 1000th connection.  codelsof -p &lt;pid&gt;/code shows 1011 IPv6 connections like so:  precodegochat  25034 username  178u    IPv6 0x11c1273e19ee5c8f       0t0       TCP localhost:http-alt-&gt;localhost:50080 (ESTABLISHED) /code/pre  What is imposing this maximum socket connection limit, and how can I expand it?  <answer176301> So it turns out that the Go socketio library  has a default max setting of 1000 simultaneous socket connections. Calling codeserver.SetMaxConnection(10000)/code (in conjunction with an appropriately high codeulimit -n/code, as mentioned in the question) will allow  1000 simultaneous client connections.  <comment207950> how about this one http://blog.whatsapp.com/196/1-million-is-so-2011 <comment207951> @buscar- looks promising, but doesn't work on OSX:  sysctl: unknown oid 'kern.ipc.numopensockets' <comment207963> how about this one http://stackoverflow.com/a/9676852 ) on Linux server. And this one http://stackoverflow.com/a/7580233