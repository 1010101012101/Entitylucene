Environment var (LD_LIBRARY_PATH) weirdly hidden under bash on Mac <body> Here is a brief, self-explanatory bash session on Linux:  precode$ env | grep LD_LIBRARY_PATH $ export LD_LIBRARY_PATH=foo $ env | grep LD_LIBRARY_PATH LD_LIBRARY_PATH=foo $ echo $LD_LIBRARY_PATH  foo /code/pre  Here is the same session on a Mac:  precode$ env | grep LD_LIBRARY_PATH $ export LD_LIBRARY_PATH=foo $ env | grep LD_LIBRARY_PATH $ echo $LD_LIBRARY_PATH foo /code/pre  Notice that, oddly, codeenv/code does not include codeLD_LIBRARY_PATH/code, even though it has been exported, and echo finds it. But it's not just an codeenv/code thing. Other programs cannot find the environment variable. Here is a JVM (via the Scala REPL), after setting codeexport LD_LIBRARY_PATH=foo/code:  precodescala&gt; System.getenv("LD_LIBRARY_PATH") res0: String = null  scala&gt; System.getenv("SHELL") res1: String = /bin/bash /code/pre  On Linux, codeSystem.getenv("LD_LIBRARY_PATH")/code yields the expected codefoo/code.  I'm trying to execute an external process from Scala that needs to inherit codeLD_LIBRARY_PATH/code from the parent shell. But if the JVM can't see the parent shell's codeLD_LIBRARY_PATH/code, and doesn't inherit automatically, it's hard to get right.  On Linux everything works as expected.  Thank you for your help!  <comment350298> If you are using LD_LIBRARY_PATH on MacOS you probably have got something wrong. If on Sierra SIP stops you setting it. http://apple.stackexchange.com/questions/212945/unable-to-set-dyld-fallback-library-path-in-shell-on-osx-10-11-1/212954#212954  macOS is not the same as Linux. So you need to read up on macOS shared librarioes and bundles. <comment350300> @mark Please post this as an answer :-) <comment350301> @patrix - in that case isn't this a dup of the answer I linked to? http://apple.stackexchange.com/questions/212945/unable-to-set-dyld-fallback-library-path-in-shell-on-osx-10-11-1/212954#212954  I was wondering if there was a quick solution or do we have to look at the whole packaging oif the app? <comment350302> @SteveWaldman - You need to provide details of the app you are executing - to see if it can be packaged in a mac way - or could you make it a library and call via JNI <comment350303> @SteveWaldman If you are looking for ways to solve the problem of running an external process from Scala, please ask a new question about this specifically. <comment350357> Thanks. It's very clear now what the issue is.