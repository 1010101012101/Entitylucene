Murus firewall - redirect an ip to localhost web server <body> strongEdited to simplify question:/strongbr/  using host file, we can redirect a domain (example.com) to localhost:  precode127.0.0.1 example.com /code/pre  How can we redirect an ip (for example 35.166.133.11) to localhost (web server port 80) using Murus firewallâ€™s custom pf rules?  img src="https://i.stack.imgur.com/BEZiY.png" alt="enter image description here"  strongAction/strong: block, pass, rdr, rdr pass, dummynet, no dummynetbr/ strongDirection/strong: in, outbr/ strongProtocol/strong: all, tcp, udp, icmp, igmp, gre, espbr/ strongInterface/strong: all, gif0, stf0, en0, p2p0, utun0  img src="https://i.stack.imgur.com/JP1W5.png" alt="enter image description here"  <answer267136> IMHO your web server environment is flawed because you may simply replace 35.166.133.11 by 192.168.1.2 in the sources instead of routing packets from 192.168.1.2 to lo0 (35.166.133.11 keep state) and later redirecting them from lo0 to the source en0(192.168.1.2) again.  But in other setups it may be useful. E.g. if you run a second web server mimicking the Amazon Linux AMI Test Page at localhost or 192.168.1.3/4/5.  hr  rdr only accepts incoming packets. Thus, you have to first route those packets to lo0, then add an rdr rule there (which will catch them as they will be routed in from "somewhere") to send them to your local web server at 192.168.1.2.  The order in the config file is necessarily emrdr incomming packets/em, then emfilter packets/em (like pass), but chronologically the 2nd rule will hit first (on en0), which will then activate the first rule (on lo0).  precode# Step "2". redirect those same packets that were routed to lo0 below rdr pass log on lo0 proto tcp from en0 to 35.166.133.11 port 80 -&gt; 192.168.1.2 port 80 # Step "1". Route new IPv4 TCP connections leaving en0 to lo0 pass out on en0 route-to lo0 proto tcp from en0 to 35.166.133.11 port 80 keep state /code/pre  in pf.conf this would look like this:  precode... scrub-anchor "com.apple/*" nat-anchor "com.apple/*" rdr-anchor "com.apple/*" rdr pass log on lo0 proto tcp from en0 to 35.166.133.11 port 80 -&gt; 192.168.1.2 port 80 dummynet-anchor "com.apple/*" anchor "com.apple/*" load anchor "com.apple" from "/etc/pf.anchors/com.apple" pass out on en0 route-to lo0 proto tcp from en0 to 35.166.133.11 port 80 keep state /code/pre  In the above example you would have to change the interface en0 to e.g. en1 if en0 strongdoesn't/strong have the IP 192.168.1.2 but en1 strongdoes/strong.  Unload your current pf.conf and stop pf: codesudo pfctl -d/code. Then add the two additional lines above. After modifying pf.conf check the syntax of the file with codesudo pfctl -vnf /etc/pf.conf/code which should result in the following output:  precodepfctl: Use of -f option, could result in flushing of rules present in the main ruleset added by the system at startup. See /etc/pf.conf for further details.  scrub-anchor "/*" all fragment reassemble nat-anchor "/*" all rdr-anchor "/*" all rdr pass log on lo0 inet proto tcp from 192.168.1.2 to 35.166.133.11 port = 80 -&gt; 192.168.1.2 port 80 anchor "/*" all pass out on en0 route-to lo0 inet proto tcp from 192.168.1.2 to 35.166.133.11 port = 80 flags S/SA keep state dummynet-anchor "/*" all /code/pre  and if successful load it with codesudo pfctl -e -f /etc/pf.conf/code.  After shutting down the web server on port 80 you can test this with netcat:  In a terminal window enter codesudo nc -l 80/code. In a second terminal window enter codesudo nc 35.166.133.11 80/code. Now enter some text in the second nc session and hit the enter key. The text should appear in the first, "listening" nc session. You can also enter text in the listening session which should appear in the second window. To end the session enter kbdctrl/kbdkbdD/kbd in either of the two nc sessions.  <comment335077> What other actions are there besides "block"? <comment335082> You can only redirect **incoming** traffic - now it depends where you configure pf: on 192.168.1.2 **or** on another Mac configured as a router. If  you want to redirect the outgoing traffic from and to 192.168.1.2 with pf you have to re-route the traffic locally first to make it "incoming". <comment335083> @patrix Thanks for your reply. I have updated my post to show other actions <comment335087> @klanomath Thank you very much for your feedback. I'm configuring pf on 192.168.1.2 and yes, I want to redirect outgoing traffic from 192.168.1.2 to 35.166.133.11 to return again to 192.168.1.2 May you please provide more about re-routing traffic locally? <comment335159> @Basem I'm still searching for a proper "route-to"-rule in Murus. I will add it as soon as I have found one. The rdr is easy to create in Murus. <comment335160> Yes, please. It's really great to do this. I will have a close monitoring for this post looking forward to see it.