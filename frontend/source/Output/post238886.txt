Remappings for Ctrl vs. Command for easier alternating between Mac and PC <body> I use both a PC and a Mac about equally often. This was hard at first but after a while I got comfortable context-switching between the two.  One thing that's been very helpful is using the same USB keyboard for both so at least my fingers don't go hunting for the same key in different spots.   But one remaining challenge has been remembering whether to press Command or Control for common operations, especially copy (C), paste (V), cut (X), save(S), select-all (A), and refresh (R).  I always have to stop and think for a moment about which key to press.   To speed things up, I've been thinking about remapping keys on either the PC side or the Mac side (or both) so I can use the same muscle-memory keystrokes in both environments. I'd be using Karabiner on Mac and some TBD tool on PC for the remapping.   Choices include:  1) remap the PC so Alt+Letter will work like Control+Letter normally does 2) remap the Mac so Ctrl+Letter will work like Command+Letter normally does 3) add mappings on both, so either Command or Control will work in both environments  Which of these options is likely to cause the least amount of problems, where "problems" means that I'd be hiding other frequently-used keyboard shortcuts?  What are other considerations I should be thinking about before deciding to remap?  Note that I'm not asking about emhow/em to do the remapping in Karabiner or another tool-- I know how to do that-- but instead I'm asking about emwhat/em keys would be best to remap and what potential problems I should expect if I do it.   <answer238889> I know this is really going to just be opinion-based, but...    Honestly, I'd just learn to live with the difference. Long-term I'm certain it's best.    Yes, you will occasionally type a v in Windows when you meant to paste &amp; yes you'll pop up the Start menu without meaning to... but overall life is simpler if you maintain awareness of the difference rather than try to mask it.   This is based on 20+ years of cross-platform working &amp; watching others try to do the same thing. 