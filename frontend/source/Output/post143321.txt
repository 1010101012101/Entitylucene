Extract a GPS track (as .gpx) from a series of jpg photos <body> I have a bunch of code.jpg/code photos containing GPS information. What is the easiest way to extract the GPS information and save it into a code.gpx/code file (or code.kml/code, for that matter)?  I have seen this answer pointing to codeexiftool/code, which gives a readable output, but I would like to import the track into other applications (e.g. Oruxmaps or Google Maps). Answers to this question on gis.stackexchange.com point to Windows programs, but I am looking for a usable alternative on Mac OSX.  <answer143357> Exiftool is going to be the easiest way to do this.   Here is a script that generates KML output for a list of images. You can modify this if you want a KML path, etc...  pre class="lang-python prettyprint-override"code#! /usr/bin/env python # -*- coding: utf-8 -*-  """  Create a KML file based on exif data  Requires exiftool to have been installed     Usage: exif2kml.py *.jpg &gt; output.kml  """  import os import sys import re import time  def decimalat(DegString):     # This function requires that the re module is loaded     # Take a string in the format "34 56.78 N" and return decimal degrees     SearchStr=r''' *(\d+) deg (\d+)' ([\d\.]+)" (\w)'''     Result = re.search(SearchStr, DegString)      # Get the (captured) character groups from the search     Degrees = float(Result.group(1))     Minutes = float(Result.group(2))     Seconds = float(Result.group(3))     Compass = Result.group(4).upper() # make sure it is capital too      # Calculate the decimal degrees     DecimalDegree = Degrees + Minutes/60 + Seconds/(60*60)     if Compass == 'S' or Compass == 'W':         DecimalDegree = -DecimalDegree       return DecimalDegree  def writePlace(filename,lat,lon,date):     PlacemarkString = '''     &lt;Placemark&gt;      &lt;name&gt;{0}&lt;/name&gt;      &lt;Point&gt;       &lt;altitudeMode&gt;absolute&lt;/altitudeMode&gt;       &lt;coordinates&gt;{1}, {2}&lt;/coordinates&gt;       &lt;TimeStamp&gt;         &lt;when&gt;{3}&lt;/when&gt;       &lt;/TimeStamp&gt;      &lt;/Point&gt;     &lt;/Placemark&gt;'''.format(filename,lat,lon,date)     return PlacemarkString   HeadString='''&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt; &lt;kml xmlns=\"http://earth.google.com/kml/2.2\"&gt; &lt;Document&gt;'''  if len(sys.argv)&lt;2:     print &gt;&gt; sys.stderr, __doc__  else:     placestring = ''     FList = sys.argv[1:]     for F in FList:         ExifData=os.popen('exiftool "'+ F +'" -DateTimeOriginal -GPSLatitude -GPSLongitude').read()         if "Longitude" in ExifData:             print &gt;&gt; sys.stderr, F,"\n",ExifData.rstrip()             Fields = ExifData.split("\n")             for Items in Fields:                 if len(Items)&gt; 10:                     K,V = Items.split(" : ")                     if "Latitude" in K:                         lat = decimalat(V)                     elif "Longitude" in K:                         lon = decimalat(V)                     elif "Date" in K:                         date = time.strptime(V.strip(),"%Y:%m:%d %H:%M:%S")  # time format             if lat:                 TimeFmt = "%Y-%m-%dT%H:%M:%S"                 placestring += writePlace(F,lon,lat,time.strftime(TimeFmt,date))                 lat = ''     # Generate the output file...     # This just prints to screen -- use &gt; to capture to file...     print HeadString     print placestring     print """&lt;/Document&gt;\n&lt;/kml&gt;""" /code/pre  <comment168781> Would running a Windows tool in a wrapper for OS X be ok or are you looking solely for a native tool? <comment168783> @GeorgeGarside Sure, a Windows tool in a wrapper would do. If it's easier then hand-crafting a script that uses exiftool and produces xml output.. <comment168853> Thanks a lot for this script! I wonder why apparently no app developer jumped into that niche yet, to develop a nice _iSomething_ GUI to extract tracks from photo albums etc... :) <comment168918> Yes, this kind of "join x data to y format" ends up being quite useful. I was able to merge pieces of other existing scripts to make this. Haven't checked the date field of the placemarks, so you might want to double check, if that is important to you. If you want to make a tour, you could probably even add the ability for the images show up as thumbnails along a route, etc.