How can I open a .pkg file manually? <body> Some applications come in .pkg files, and ask for you administrator password, even if all they do is copy the binary to /Applications.  I like to have my applications in ~/Applications, and I do not like to give administrative permissions to anything that is not from the mothership.  Is there a way that I can manually open the .pkg file and pull out the application? There is PackageMaker in the Developer Tools, but that does not seem to do it (it did produce some output that makes me think that there really are no scripts or other pieces in the installer, just the application).  <answer15659> If you don't trust the installer enough to give administrative permissions to install, then why do you trust the binary in /Applications?  Pacifist will let you look in package files. This doesn't necessarily just let you "pull out the binary".  <answer15665> If you right click it, and click strongShow Package Contents/strong you'll get a few files in a Contents folder. (Note: if you do not see strongShow Package Contents/strong you will need to open Terminal.app and run codepkgutil --expand mystubbornpackage.pkg path/to/expand/code)   One is a BOM file (bill of materials) which gets turned into a receipt that you can use to uninstall the app.  This file contains a manifest of everything the package will install and where to; to read this file, use the stronglsbom/strong command.  Most packages (I'm using Office 2008 here) also have an Archive.pax.gz file, this contains everything that Installer will move into the various folders as instructed in the BOM file.  Most apps seem to have the .app in this archive, although dragging that to /Applications might leave it without frameworks it needs to run; so you'll have to figure out which other files it needs and where it needs them to get it to work.  Additionally, all packages can log messages, if you hit strongCmd-L/strong (or choose the strongInstaller Log/strong option from the strongWindow/strong menu, you can view them as they're generated.  This might give you an idea what extra things it's installing, at the very least it's some more information if you're untrusting of the package.  <answer15666> Alternatively you can try,   precodesudo installer -pkg ~/Downloads/packagename.pkg -target ~/Applications/ /code/pre  OR  precodeinstaller -pkg ~/Downloads/packagename.pkg -target ~/Applications/ /code/pre  <answer15668> In addition to what Matthew Hall said, you can also hit Cmd-I in the Installer app to see what files the installer will install and where.  <answer21741> ol liAfter you succeed in opening the package, look for the Archive.pax.gz file that was mentioned earlier./li liCreate a new empty folder on your desktop naming it whatever you wish. I usually name them "xxxx" or "zzzz" etc. to make typing easier later./li liOption-drag a copy of the Archive.pax.gz file into that new folder "xxxx" on your desktop.  If the file is inside of read-only media you can just drag it to your "xxxx" folder without the Option key to create a copy./li liNow open Terminal.app and at the command line navigate to your new "xxxx" directory and list the directory's contents to confirm that your Archive.pax.gz file is there:  precodecd ~/Desktop/xxxx ls -al /code/pre/li liNow there are two simple commands to enter:  precodegunzip -v Archive.pax.gz /code/pre  Gzip will tell you that it has replaced "Archive.pax.gz" with "Archive.pax") Now list the directory's contents again to confirm this.  precodepax -r -f Archive.pax /code/pre  (You must separate code-r/code and code-f/code, as code-rf/code will not work)/li liFinally, list the directory's contents again with codels -al/code. In addition to your Archive.pax file you will now see a directory hierarchy probably containing one or more directories.  The files in that directory hierarchy will illustrate to you where the OS X installer would install files on your system as if your "xxxx" directory was the root directory "/"./li liYou may then manually copy those files to their destinations if you wish./li /ol  <answer110704> The Unarchiver can do this; it will do the same as codepkgutil --expand/code but using drag-and-drop. It's a better replacement for Apple's Archive Utility.app anyways.  <answer242438> UnArchiver did the trick.  Install UnArchiver, open UnArchiver; while it is open - double click on that pesky codeMAMP_MAMP_3.5.pkg/code  Follow the steps to install MAMP.  <comment17081> I don't get "Show Package Contents" in the right-click menu. <comment17082> I do not trust the binary, either. I want to never ever give it administrative permissions (which it should not need anyway). <comment17083> That did not work unfortunately. It still insisted to "Installing at base path /" and then asked for the admin password. <comment17084> +1. With this I could quickly verify that there is just the application binary in there, no other system-wide stuff. <comment17494> @Thilo If you aren't getting the option to "Show Package Contents" then the pkg file was created as flat file. Apple introduced flat-style pkg's a couple years ago <comment17495> @username: So how do I open those? <comment17525> [`pkgutil`](http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/pkgutil.1.html) will do that.   You can expand it using `pkgutil --expand file.pkg path_to_expand` and it'll convert it into a directory style package. <comment17648> As long as you don't run the app from any user that has admin privileges, your trust will be upheld. Don't forget that even a user level app can make requests from admin level processes so it's a lot of work to run apps you don't actually trust. <comment23986> In other words `cd ~/Desktop; cp Package.pkg/Contents/Archive.pax.gz .; gunzip -v Archive.pax.gz; pax -r -f Archive.pax`.  You don't need to describe everything at *that* level of detail. <comment24106> Lri, I gave that amount of detail so users at any level of expertise would be able to follow it and be successful. Granted, your cryptic version would achieve the same results. However, other users reading this in the future who may not be familiar with the command line might be hopelessly lost. <comment64526> Try [unpkg](http://www.timdoug.com/unpkg/). <comment374255> It's possible to install to a disk image created with something like `hdiutil create -size 200m -fs HFS+ -volname Scratch scratch.dmg` and then copy the files to the locations you prefer. You still need the sudo to run the installer unfortunately.