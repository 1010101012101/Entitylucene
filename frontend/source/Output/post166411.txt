Re-image Macs in Bulk and administer them <body> I've recently been called in to deal with the IT infrastructure of a small non-profit organisation that is going through a restructure that involves purging all its staff and employing new ones from scratch. They have 6+ Mac Minis, an iMac, a MacBook, a MacBook Pro and a Mac server (not a Mac Pro, a silver desktop box).  One of the things I would like to do is take backups of hard drive content, then re-image them with 10.8 and reinstall Microsoft Office 2011.  My research seems to indicate that I need to press âŒ˜ + R at the BIOS screen, but then other places indicate this this will keep files.  With 10+ (I'm still finding computers in cupboards, the old staff did not keep an asset register) computers, downloading the OS 10+ times seems slow and useless.  I have also seen indications that this will only download the version that came as OEM, which means I would need to update them as well.  How can I re-image all these Macs in a sane way? Coming from a Linux background, all this seems overly complicated. Bonus points if someone can point me to some free software that will help me administer all of these (I watched Google's talk on the matter, but there didn't seem to be anything out of the box).  <answer166417> Faced with administering those machines, I would look at Apple Remote Desktop (ARD). ARD allows system imaging, software deployment and host of other features. Not free, but the $80 it costs will recoup itself in the time you'll save trying to manage what you need to accomplish.  <answer166418> Nice thing about the Mac OS is it can be cloned, even while it is running.   What you want to do is create a bootable disk exactly as you want everything to be. Install applications as desired, create one user (admin) that you will use for maintenance. If you are using Open Directory it's a bit more involved but not much.  With only a dozen or so machines you can do them manually in under a day.  The process I would use is:  ol liCreate the working image on what will be your computer. Use Carbon Copy Cloner to copy it, file mode, to external drive A. Partition drive A to be only a hundred megabytes or so larger than the data (important for next step)/li liAttach the hardware to your desktop in target disk mode (hold T on startup - it now behaves like an external firewire case. Yes, you need a firewire cable. No, doesn't work with USB.)/li liCopy (finder drag works fine) computer - Users - theirName to Large External Drive B/li liGo back to Carbon Copy Cloner. Source disk: Drive A. Destination: other computer in target mode. Copy type: Block (you may need to enable this mode in preferences. Wait. Repeat from step 2 as needed./li /ol  The first clone-to-external in file mode means that everything is linearized and doesn't include things like /tmp/ and /swap/. The second clone in block mode is  lot faster and doesn't have the write-amplification issues if the destination is an SSD.  <answer166423> If the silver desktop runs any recent version of Mac OS Server, you can set up a "Net Install" service which can install an image of a single computer onto any computer on the same network (it completely erases the other computer).  To create the Net Install image, you need two computers running the OSX version you want to clone:  The clone-source, and another Mac which will run the image creation utility.  For 10 computers, the payoff for setting this up might not be worth it -- especially, if you have to backup important data from each of the other computers before you install the new image.  But, it is an option.    <answer166430> DeployStudio, it's free and it's built for the exact purpose you want as well as being highly configurable, and it's tried and tested. We use it here at school for deploying hard disk images to 200+ iMacs and MacBooks. The fact that such a powerful tool is free should put it at the top of your list of options.   You will need a machine running OS X server for the other Macs to NetBoot from but it's not expensive and once it's up and running you won't look back. The caching server service on OS X server is another good reason for going down this route as it will save your organisation's bandwidth by caching Apple updates and software from the App Store.  <comment195044> Neat! Would you recommend using Open Directory or not? <comment195049> @BardiHarborow If everyone uses the same hardware every day, and largely has their own files, No. If users log in from different desks, share a common file repository, and are technological luddites, Yes. <comment195050> If the Macs are new enough, Thunderbolt would also work instead of FireWire.