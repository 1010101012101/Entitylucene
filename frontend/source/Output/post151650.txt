Using RVM and installing rspec gem for Ruby <body> I think I installed rvm correctly. When I type in rvm -v it outputs  precodervm 1.25.33 (stable) by Wayne E. Seguin &lt;wayneeseguin@gmail.com&gt;, Michal Papis &lt;mpapis@gmail.com&gt; [https://rvm.io/] /code/pre  However, I am trying to install the gem rspec. I type in  precodegem install rspec /code/pre  but the output is  precodeERROR:  While executing gem ... (Gem::FilePermissionError) You don't have write permissions for the /Library/Ruby/Gems/2.0.0 directory. /code/pre  What should I do? What is going wrong? I can't understand the rvm docs either!  <answer151663> That command is trying to install the gem in the global directory (available to every user on the computer), if that's what you want then execute the command with codesudo/code. But if you just want to install rspec you can do codegem install rspec/code.  You can check if you are using the gem executable from rvm by doing codewhich gem/code if it shows a function then it's from rvm. If the output is a path then do codervm use default/code.  <answer151777> RVM controls which Ruby your current shell points to, but it doesn't install a user-controlled Ruby for you by default. If you haven't installed any specific Ruby versions via RVM, the only Ruby you have is the one OS X installed and that requires codesudo/code permissions to write to.  You can see available Rubies with:  precode&gt; rvm list  rvm rubies  =* ruby-2.1.2 [ x86_64 ]  # =&gt; - current # =* - current &amp;&amp; default #  * - default /code/pre  In my case I have 2.1.2 installed and it's both the current Ruby and the default Ruby when I start a new shell:  precode&gt; which ruby /Users/ian/.rvm/rubies/ruby-2.1.2/bin/ruby /code/pre  To install a Ruby version with RVM do:  precode&gt; rvm install ruby-2.1 No binary rubies available for: osx/10.10/x86_64/ruby-2.1.3. Continuing with compilation. Please read 'rvm help mount' to get more information on binary rubies. ...snip... Install of ruby-2.1.3 - #complete Ruby was built without documentation, to build it run: rvm docs generate-ri /code/pre  Now that you have an RVM-managed Ruby installed that's owned by you specifically you can codegem/code-install anything you like without needing to use codesudo/code:  precode&gt; rvm list  rvm rubies   * ruby-2.1.2 [ x86_64 ] =&gt; ruby-2.1.3 [ x86_64 ]  # =&gt; - current # =* - current &amp;&amp; default #  * - default &gt; rvm gemdir /Users/ian/.rvm/gems/ruby-2.1.3 &gt; gem install packer-config /code/pre  That gem has been installed for the 2.1.3 version of Ruby that RVM put under code~/.rvm/code for me. If I was to switch to the 2.1.2 version via codervm use ruby-2.1.2/code I would not see that gem, I'd have to re-install it to make it available to that Ruby version.  You can also manage gems as sets so they're not even shared with a Ruby install. See the gemset basics on the RVM web site for more details.  <comment178563> I am doing gem install rspec, but the error message arises. Any suggestions? <comment178571> Oh, that error means that you're using the system's ruby and not the one provided by rvm. Check the rvm troubleshooting [guide](https://rvm.io/support/troubleshooting)