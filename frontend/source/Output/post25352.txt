List all defined aliases in Terminal <body> A friend who owned my current Mac before me created a lot of alias commands.  Is there a way to list all defined aliases and the command that is associated with them?  And if so, am I able to edit them or should I just remove them using unalias and recreate them?  <answer25353> You should have a look in these files:  precode/etc/profile ~/.profile ~/.bash_profile ~/.bashrc /code/pre  They are plausible startup files for your shell (that I assumed is bash).  <answer25355> All you need to do is type codealias/code at the prompt and any active aliases will be listed.  Aliases are usually loaded at initialization of your shell so look in code.bash_profile/code or code.bashrc/code in your home directory.    codeunalias/code will only work for your current session.  Unless you find where it is defined and loaded, it will be loaded again when you start a new Terminal session.  code~/.bashrc/code gets run for both login and non-login shells, code~/.bash_profile/code only gets run for login shells.    strongAs per comment from Chris Page:/strong  You should put most of your customizations (including aliases) in code~/.bashrc/code and have code~/.bash_profile/code run code~/.bashrc/code, so they apply to both login code(~/.bash_profile)/code and non-login code(~/.bashrc)/code shells. Also, decide which of these should be "primary" and if the strongprofile/strong is your choice, tack on the strongrc/strong file at the end. If the strongrc/strong file is primary, source that at the beginning of your strongprofile/strong  These lines should be in the file code~/.bash_profile/code:  precodeif [ -f "$HOME/.bashrc" ] ; then   source $HOME/.bashrc fi /code/pre  This will include code~/.bashrc/code for login shells and in the order you wish if one file depends upon the other based on what you are setting.  <comment28659> good stuff thanks - I didn't know that <comment29647> ".bashrc" is the correct name of the file. <comment29648> I recommend you put most of your customizations in ~/.bashrc and have ~/.bash_profile run ~/.bashrc, so they apply to both login (~/.bash_profile) and non-login (~/.bashrc) shells. e.g., put this in ~/.bash_profile: `if [ -f "$HOME"/.bashrc ]; then     . "$HOME"/.bashrc fi` <comment29651> You're right, I don't why I wrote it like that. <comment29653> I would have just edited it without comment, but StackExchange wouldn't let me make a one-character edit. <comment29693> Also check in the system-wide /etc/bashrc <comment341669> Dont forget all the files that are sourced using source or . (dot) in these files.