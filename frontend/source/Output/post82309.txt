Are there any global key combinations suitable or specifically reserved on OS X for user assignment? <body> I'm trying to identify an appropriate global hotkey to set in iTerm2's preferences for showing/hiding it:  img src="https://i.stack.imgur.com/cIRAO.png" alt="enter image description here"  I'd like to avoid any conflicts with other applications' hotkeys or other future use. Are there any blocks of key combinations strongreserved for user assignment in OS X, or groups of key combinations which aren't generally used/strong, which would be particularly suitable?  <answer82319> To find all the currently-assigned system shortcuts, open System Preferences - Keyboard and select Keyboard Shortcuts. You can then scan through the options and see if the combination you like has been chosen. If it has, you can double-click the assignment and change it if you want, or just pick a different set of modifier keys. With Shift, Control, Option, Command, and Escape to choose from, finding an easy-to-remember and sensible combination shouldn't be too hard.  <answer82734> This is regarding a EU (European) keyboard, however, I use kbdctrl/kbd and the key directly above it (kbd &lt; /kbd). It has yet to conflict with anything.  <answer82740> Here are Apple's official OS X Human Interface Guidelines for Keyboard Shortcuts.   The document appears to be a current, authoritative, and complete guide to assigning keyboard shortcuts. It covers both the conceptual basis for using particular modifier keys, as well as the nitty-gritty of exactly which keys and which combinations are reserved system-wide, or likely to be reserved in the future.  Here's second Apple page showing a complete summary of existing keyboard shortcuts.  <answer82777> Any application can use any keyboard shortcut. If the application isn't a windowed application, then the developers need to ensure that they're not conflicting with existing system shortcuts. For example, you don't want a faceless app using, say, kbdCmd/kbd+kbdShift/kbd+kbdG/kbd, which is the Go To Folder command in Finder. (And I think that the system would override such usage anyway.)   I tend to use multiple modifier keys when creating custom shortcuts for anything that might conflict with the system. Within specific apps, you just need to find shortcuts that the app doesn't use. And System Preferences will tell you if there is a conflict.  <answer83138> This is something I've been (and still am) tremendously bothered with, and have sinked a considerable amount of time to find something that both works as I'd like it to, and not interfere with the myriad of shortcuts already existing in OS X.  I was pretty partial to using the kbdcmd/kbd+kbdalt/kbd+kbdctrl/kbd+kbdsome key/kbd combo for a long time, and it works pretty well across the board. But, if you want something almost bulletproof, and seek to increase your geek cred all at one fell swoop, take a look at this blog post by Brett Terpstra, the guy behind nvAlt, among other things. It walks you through replacing your kbdCaps Lock/kbd key with the combo kbdcmd/kbd+kbdalt/kbd+kbdctrl/kbd+kbdshift/kbd, so you can do a 5-key combo (kbdCaps Lock/kbd+kbdsome key/kbd) with 2 keys, which is awesome. This method gives you a whole keyboard worth of shortcuts not used by any app.  PS: Look at the comment section of the blog post to disable the kbdesc/kbd functionality.  <answer169134> I have found that kbdCmd/kbd+kbdControl/kbd+kbdA-Z/kbd are usually available for your custom global shortcuts.  I too would like to be able to access a complete list, however, which is how I arrived to this page.  <comment95104> Thanks. That's only part of the story though; that tells me what global shortcuts are already picked, but not which key combinations applications are using. What I was looking for was a more general Apple design-oriented statement; that applications might be encouraged to AVOID using key combinations in a particular range. <comment294352> That's `Cmd + ,` on a mac keyboard and it works great. <comment361894> The link to interface guideline is broken. The current link is [Human Interface Guidelines: Keyboard](https://developer.apple.com/macos/human-interface-guidelines/input-and-output/keyboard/). <comment373712> The link should be fixed now.