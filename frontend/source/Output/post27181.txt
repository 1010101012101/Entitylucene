How can I execute sudo commands as a cron job? <body> I'm trying to execute a shell script as a cron job. The problem is that my script needs to be run as a super user. I tried it with just writing codesudo/code infront of the command in my codecrontab/code file, but it didn't work.  <answer27183> It's a security risk, but you can enable the root user and run the command in root's cron. Alternatively, have you tried using codesudo -s/code to get a "root shell" and making root's cron that way. Depending on your OS level, you might not need to have root enabled as a user for it's cron to run.  If you want to do it without enabling the root user (which is not really necessary in this case), you may (as any administrative user) enter codesudo crontab -u root -e/code to edit root's crontab directly.  <answer27188> Cron is not in any way deprecated, but LaunchD has more versatility and is used, and actively maintained/supported by Apple.  Their best practices guide is here  LaunchDaemon jobs(versus LaunchAgents, which take on a users id) run in root's context without needing to enable the root user. All that is required is a properly formed XML file(you can just copy-paste pre-existing ones in /Library/LaunchDaemons, substituting your script for the ProgramArguments with the applicable schedule keys) with the proper ownership/permissions.  An older writeup can be found here: afp548's launchd-in-depth article    <answer69751> Comment "Defaults    requiretty" from /etc/sudoers using visudo.  <comment31142> It works! Thank you so much! <comment81038> Cron is actually deprecated. See [Daemons and Services Programming Guide: Scheduling Timed Jobs](http://developer.apple.com/library/mac/#documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/ScheduledJobs.html). <comment81045> This should be two answers =1 for enable root, but +1 for the edit crontab as another user <comment81049> And where does the password come from in this case?