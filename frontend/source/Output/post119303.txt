Using rsync to copy data from one Drobo (NTFS) to another Drobo (Mac OS Extended (Journaled)) <body> I have been using Windows 2008 in Parallels on my Mac Server to serve up files to my Windows clients on the network with a USB attached Drobo (NTFS). Now I want to move these files to my Mac Drobo (Mac OS Ext) and maintain as many file attributes as possible, such as date created and modified.  Recently I learned how to copy large amounts of data using rsync on my Mac. I assume permissions will not translate, but can I use the same command to copy the data from a NTFS formatted Drobo to the Mac OS Extended Drobo and maintain file attributes/metadata?  Here's the commend I used before:  precodesudo rsync -va --progress /Volumes/SourceName /Volumes/DestinationName /code/pre  Thank you.  <answer119312> Check out the man page for codersync/code. In particular, the code-a/code (archive) option you show will invoke the code-rlptgoD/code options.  ul li-r, --recursive (recurse into directories)/li li-l, --links (copy symlinks as symlinks)/li li-p, --perms (strongpreserve permissions/strong)/li li-t, --times (strongpreserve times/strong)/li li-g, --group (preserve group)/li li-o, --owner (preserve owner (super-user only))/li li-D (preserve device and special files)/li /ul  Permissions can be preserved, but everything you copy will be owned by you unless you run under codesudo/code so the code-o/code option will take effect. Also note that without codesudo/code, codersync/code gives you no special abilities to copy files that you do not have access to on the source drive.  You may also want to look at the code-E/code option, but I don't know if it will work from an NTSF drive. Maybe it will preserve ACLs (if they exist on the source)?  <comment139181> Thank you. I guess my primary concern is that it copies all data (doesn't skip files that might be hidden, or Windows sys files) and preserves all attributes. So will my original command accomplish this? <comment139214> Yes, it should. `rsync` has many advanced filtering options, but in your usage above, it will "archive" everything in `SourceName` (assuming that is a directory) into a directory named `/Volumes/DestinationName/SourceName`. If you don't want the extra directory created, the first path should include a trailing slash: `/Volumes/SourceName/`. <comment139215> One caveat I should mention: If you use `sudo` to preserve file ownership, the numeric ownership **ID** will be preserved. Your Mac and Parallels systems may have different ideas of which user a particular ID refers to, and the Mac side may ignore the ownership completely, in which case `rsync` can't do much about it.