Is $PATH just a file with a list (in order of preference) of directories? <body> I'm having trouble understanding exactly how $PATH works?  I am on a Mac..  If I install Python with Homebrew, it will install Python into the /opt/local/bin directory.  Now assuming Homebrew didn't make any changes to my bash profile, if I run a generic Python script, that will run using the system included Python located in Library I think.  My understanding is that if I go into my bash profile and add this line:  precodeexport PATH=/opt/local/bin:$PATH /code/pre  then it will add these directories to the front of the list.  I guess the question I have is, why do I add this line here.  Why can't I go directly to the source which I think is $PATH and add the line manually there.br Is $PATH a file?  And if so where is it located?  <answer221771> The shell path (i.e. PATH) for a user in OSX is a emvariable/em defining a set of locations in the file system whereby the user can use certain applications, commands and shell scripts without the need to specify the full path to that command or program in the Terminal.   If you enter codeabc/code in Terminal the first occurrence of codeabc/code in one of the paths defined in PATH will be executed.  To access or print the variable PATH you have to use $PATH.  Example:  precodeecho $PATH /code/pre  The variable PATH has a general and a user specific part.  strong1. General part:/strong  The general part is defined by the (superior) file em/etc/paths/em and by the (inferior) content of the folder em/etc/paths.d/em.  The default content of the file em/etc/paths/em (in OS X) is:  precode/usr/bin /bin /usr/sbin /sbin /usr/local/bin /code/pre  The default folder em/etc/paths.d/em is empty. On older systems with an X11 installation the folder contains a file named em50-X11/em with the content   precode/usr/X11/bin /code/pre  which adds an additional path (em/usr/X11/bin/em) to PATH.  The prepended emnumber-/em just defines the load order.  My em/etc/paths.d/em folder contains the following files:  precode/etc/paths.d/40-mysql    #file content: /usr/local/mysql/bin /etc/paths.d/50-X11      #file content: /usr/X11/bin /etc/paths.d/60-testdisk #file content: /usr/local/testdisk /etc/paths.d/70-git      #file content: /usr/local/git/bin /code/pre  The resulting PATH is   precodeecho PATH$  /usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/mysql/bin:/usr/X11/bin:/usr/local/testdisk:/usr/local/git/bin /code/pre  strong2. User-specific part:/strong  The user-specific part is defined by the file em~/.bash_profile/em. If you have created a folder bin in your user folder and installed some apps in there you can add the following line in em~/.bash_profile/em  precodeexport PATH="/Users/username/bin:$PATH" /code/pre  or  precodeexport PATH="$PATH:/Users/username/bin" /code/pre  The first entry preferably executes a command codeabc/code found in the /bin folder of the user, the second one a command codeabc/code found in the general path before executing an identical named one in the ~/bin folder.  This part of PATH defined by .bash_profile is only effective for the respective user.  To add the path entered in em.bash_profile/em to the current PATH immediately you have to source the file once:  precodesource ~/.bash_profile /code/pre  strong3. Temporary paths/strong  By issuing codeexport PATH="/Users/username/bin:$PATH"/code or codeexport PATH="$PATH:/Users/username/bin"/code in Terminal you can add a path temporarily.  This part of PATH is lost after closing the Terminal window, logging out or rebooting the Mac.  strongExamples/strong (using the general part from above):  The file em~/.bash_profile/em contains codeexport PATH="/Users/username/bin:$PATH"/code and you issue in Terminal codeexport PATH="/Users/username/bin2:$PATH"/code then the resulting PATH is:  precode/Users/username/bin2:/Users/username/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/mysql/bin:/usr/X11/bin:/usr/local/testdisk:/usr/local/git/bin \____temp. path_____/ /code/pre  The file em~/.bash_profile/em contains codeexport PATH="$PATH:/Users/username/bin"/code and you issue in Terminal codeexport PATH="/Users/username/bin2:$PATH"/code then the resulting PATH is:  precode/Users/username/bin2:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/mysql/bin:/usr/X11/bin:/usr/local/testdisk:/usr/local/git/bin:/Users/username/bin \____temp. path_____/ /code/pre  strongSummary/strong  PATH (or $PATH) is defined by several files: /etc/paths, the files in /etc/paths.d and ~/.bash_profile and in case of adding a temporary path by additional RAM content.  <comment268560> `PATH` is an environment variable. `$PATH` is the string you use when you want to access its contents. <comment268561> That's the way it's supposed to be done, just do as instructed!