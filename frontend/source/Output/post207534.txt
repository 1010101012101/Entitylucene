Terminal prompt 'saving' certain commands on up-arrow <body> I added a little bit of shell scripting to my prompt for fun. It alternates the colors of prompt items randomly. I did it purely because a gray screen gets boring after awhile. The following is my prompt in .bash-profile:  precodefunction next_hue {     color1=$((31 + (++color % 7)))   # set 31 to 30 for dark on light     color1=$((31 + (++color % 7)))     PS1="\n\e[0:${color}m[\W]\n\e[0:${color}m[\u]-&gt; $reset" # set 1 to 0 for     dark on light } /code/pre  This alternates the color of my prompt. Yay!  The problem is that sometimes the shell will get "stuck." For instance, the shell is usually like this:  precodedirectory [username]-&gt; /code/pre  If I have recently run the codedocker run/code command, and I up-arrow into the history, `docker run gets stuck and I end up with this:  precodedirectory [username]-&gt;docker run /code/pre  If I add a new command it stacks on codedocker run/code:  precodedirectory [username]-&gt;docker runcd /some/path /code/pre  I have to use codectrl-c/code or some other such option, and I can't use the codedocker-run/code command again unless I type it all out. WHat could be causing this error? I have looked over my prompt quite a bit and I think it is okay, but it was confusing to figure out in the first place.  <answer264025> You're not escaping the non-printing characters in your prompt. See this article, and use "code\[/code" and "code\]/code" around the colors, something like this (untested) for example...  precodePS1="\n\e[0:\[${color}\]m[\W]\n\e[0:\[${color}\]m[\u]-&gt; $reset" /code/pre  You may need to tweek that. Like I said, this is untested so I may have inserted a "code\]/code" in the middle of a colour code. For my prompt I do the escaping when I initialise the colour variables:  precodePS1_FG="\[$(tput setaf 223)\]"  # Prompt foreground colour (223 = pale orange/brown) /code/pre  For what it's worth, I can highly recommend using codetput/code when you're dealing with control codes. It makes your scripts more portable, and (IMHO) is easier to read.  <comment250389> Where do you call `next_hue` from? <comment262348> I don't think it is related to your prompt.  More likely there is something weird in your ~/.inputrc messing with the command history.