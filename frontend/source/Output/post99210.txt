Mac OS X: How to merge pdf files in a directory according to their file names <body> I want to merge several hundred pdf files in a directory emautomatically/em according to their file names.  E.g.  The files  em1000.1.pdf 1000.2.pdf 1000.3.pdf 1000.x.pdf/em should be merged into em1000.pdf/em  and  em2000.abc.pdf 2000.def.pdf 2000.ghi.pdf 2000.jkl.pdf 2000.5.pdf/em into em2000.pdf/em.  I don’t want to use solutions based on Preview/Automator (if available) because compared to third party software like Adobe Acrobat or PDFpen merging pdf files often (depending on the source documents) results in a significant increase in file size (see e.g. What causes PDF file size to increase when saving in Preview?)   Do you have any recommendations? Thank you!  <answer99218> There’s a Python script hidden in strongAutomator.app/strong that joins .PDF-files  precode/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py --help Usage: join [--output &lt;file&gt;] [--shuffle] [--verbose] /code/pre  Example usage:  precode/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py --output all.pdf *.pdf /code/pre  <answer99232> Try pdftk.  It is command-line software that can join PDF files (and do lots of other stuff, too, but that isn't relevant here).  You can download it from the official pdftk web page.  Sample syntax:  precodepdftk old1.pdf old2.pdf old3.pdf cat output new.pdf /code/pre  will create the file codenew.pdf/code that contains the concatenation of the files codeold1.pdf/code, codeold2.pdf/code, codeold3.pdf/code.  To solve your problem, with your example filenames:  precodepdftk 1000.*.pdf cat 1000.pdf pdftk 2000.*.pdf cat 2000.pdf /code/pre  and so on.  You can use shell scripting to make this completely automatic if desired (but you'll have to spend a little time on your own learning how to write shell scripts).  hr  Assuming all files are named 1000.x, 2000.x etc. a shell script could look somehow like this  precode#!/bin/bash  for n in {1..9}; do     if [[ -r ${n}000.1.pdf ]]; then         rm -f ${n}000.pdf         pdftk ${n}000.*.pdf cat ${n}000.pdf &amp;&amp; mv ${n}000.*.pdf ~/.Trash/     fi done /code/pre  <answer252556> strongpdftk doesn't work anymore on El Capitan! (OS X 10.10)/strong  An alternative is pagemaster from PDFTron. The syntax would be:  precodepagemaster -m *.pdf -o output.pdf /code/pre  It doesn't have the file size increase problem of the Automator solution above, since it uses a custom PDF library.  Note: this is not a free tool. The demo version adds a thin watermark on each page.  <answer252858> You can use codepdfunite/code distributed with codepoppler/code. You can install codepoppler/code with Homebrew:  precodebrew install poppler /code/pre  And now use it:  precodepdfunite input1.pdf input2.pdf input3.pdf output.pdf /code/pre  codepoppler/code also comes with these other commands: codepdfdetach/code, codepdffonts/code, codepdfimages/code, codepdfinfo/code, codepdfseparate/code, codepdftocairo/code, codepdftohtml/code, codepdftoppm/code, codepdftops/code, codepdftotext/code, in addition to codepdfunite/code.  <comment116658> Thank you for your answer. I can’t comment on the technical background (there might be a difference in merging in Automator and Preview). Depending on the source files there can be a significant increase in file size as well. I just tested it again and four files with a size of 12 mb in total where joined to a 32 mb document. This is unacceptable. <comment116676> Thank you for your comment, but I don't see where is is a workflow for my needs (hundreds of files with similar names, merged according to these names). <comment116677> @lejonet8, that's exactly where command-line tools shine!  I've edited my answer to give you an example of how to do that.  Working out further details is probably beyond the scope of this question, and relates more to how to write shell scripts. <comment116693> Thank you for your answer. Unfortunately running it on my files it resulted in this error message: *Error: Unexpected text in page range end, here: 1000.pdf* <comment116709> Combining PDFs will always increase file size, what exactly is your issue with that? <comment116727> @patrix I am speaking of hundreds of files to be merged. As linked above there can be a *significant* increase in file size with different tools included in Mac OS X. Why should I want a merged text file with an increase in size of sometimes *several hundred percent*? <comment116729> If you merge 10 files with 1 MB each, I'm not too surprised if the resulting file is 10 MB. What else should happen here? <comment116730> @patrix , lejone8 wants to have a automatic merge of PDF files but at 1+1=2 ratio, not with 1+1=5? or more in file size. Furthermore lejonet8 clearly points out that the use of Apple products is not acceptable due to they poor performances as compared to third party products! I do not know why you delete my comments, but so be it. <comment116732> @Buscar웃 That's what I'm trying to find out. The linked article is related to 10.5, it might help if the asker could cite specific sizing examples for his scenario. <comment116733> @lejonet8 Maybe you could elaborate on your automation requirements a bit more *in the question*. Are you looking for things like "Folder Actions" or such? What would trigger the concatenation process in the first place? <comment116736> I do not understand the Automation request. It is very simple and fast to organize (sort) files by name, then select all in the wanted category, and do the merge in once click in any of the available programs like answered here, or others. The resulting file size will depend on type and content of the PDF files, so the 1+1=2 is not possible. The lejonet8 seems to be hang up on the argument why Apple programs create bigger pdf files then others. Good luck in answering that. <comment116743> @patrix Thank you for your comment. When I merge 10 files with 1 MB each I don't get a 10 MB document, but sometimes a 30 or 40 MB document, depending on the source files (I said this several times before). You can easily try this out, merge some files with Preview or Automator and you'll often get bloated results while merging in third party software has no comparable side effects. All I want to do is automate merging according to file names using suitable third-party software. <comment116744> @Buscar웃 There is not much automation in your solution ("very simple"). I don’t want to pick files manually, I did this before with PDFpen Pro and Adobe Acrobat (with a reasonable resulting file size), but it takes ages. <comment116745> @patrix Thank you for your comment. It doesn’t matter if I select all files and a script merges them according to file names, or I run a script on a directory or some GUI application does that after adding *all* files or choosing the directory. <comment116748> Can you please *edit the question* to describe in more details what "automated" means for you (it seems to mean different things for the people who took the time to propose solutions for your problem)? What should trigger the merging of the documents? Which patterns should be used to find matching files? Especially D.W.'s answer seems to be highly automated at first glance but maybe there is more behind your question than we know right now. <comment116801> @D.W. Thank you. <comment116820> @lejonet8, You might have to experiment a bit to see how to make pdftk work for you. One error message, with no context, is unfortunately not enough for me to diagnose the problem. Try concatenating some pairs of files. Experiment. See if you can diagnose when pdftk does/doesn't work and the cause. Read the tutorial. Then, post a question about making pdftk work on a suitable Stack Exchange site or other question-and-answer site. FWIW, pdftk has been very reliable for me, working with a broad variety of pdf files generated by many different programs. Of course your experience may vary. <comment116923> Sorry, can’t help with that. <comment244865> I added this command as an alias in my `~/.bash_profile` file like this: `alias catpdf="/System/Library/Automator/Combine\ PDF\ Pages.action/Contents/Resources/join.py --output all.pdf *.pdf"` so I can just `cd` into a directory containing PDFs and run `catpdf`. <comment265787> Upvoting for ingenious use of Python script hidden in an APP! I decided to use pdftk though for more robust solution. <comment269090> Unfortunately, `pdftk` does not build anymore on 10.10 "El Capitan".  See https://trac.macports.org/ticket/48528 <comment269092> @lejonet The technical background is that both use the same frameworks (Quartz.CoreGraphics on 10.11), as you guessed.  This can be seen from the first lines of the `join.py' script (import statements).