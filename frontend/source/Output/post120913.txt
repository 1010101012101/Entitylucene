Unmap key combinations in KeyRemap4Macbook <body> This is a follow up to How can I map the Windows key to option in Microsoft Remote Desktop version 8?. The answers to that question are a huge timesavers for OSX RDC users; however, there are some key combinations I don't want remapped. For example, Command+Q and Command+W would ideally still function the same as they do before remapping.   I tried adding this definition:  precode&lt;autogen&gt;     __KeyToKey__      KeyCode::Q, ModifierFlag::COMMAND_L,      KeyCode::Q, ModifierFlag::COMMAND_L &lt;/autogen&gt; /code/pre  But to no effect.  strongUpdate:/strong here is the full codeprivate.xml/code:  precode&lt;root&gt;     &lt;appdef&gt;         &lt;appname&gt;Microsoft Remote Desktop&lt;/appname&gt;         &lt;equal&gt;com.microsoft.rdc.mac&lt;/equal&gt;      &lt;/appdef&gt;     &lt;item&gt;         &lt;name&gt;Swap command and option in Remote Desktop&lt;/name&gt;         &lt;identifier&gt;private.remotedesktopswapcommandandcontrol&lt;/identifier&gt;         &lt;only&gt;Microsoft Remote Desktop&lt;/only&gt;         &lt;autogen&gt;             __KeyToKey__              KeyCode::Q, ModifierFlag::COMMAND_L,              KeyCode::Q, ModifierFlag::COMMAND_L         &lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_R&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R&lt;/autogen&gt;     &lt;/item&gt; &lt;/root&gt; /code/pre  <answer120914> Make sure you add that autogen before the others:     h3Order of &lt;autogen/h3      strongBasic case/strongbr   KeyRemap4MacBook applies only the first matched code&lt;autogen&gt;/code.   supSource: https://pqrs.org/macosx/keyremap4macbook/xml.html.en/sup  hr  Try…  precode&lt;autogen&gt;   __KeyToKey__   KeyCode::Q, VK_COMMAND | ModifierFlag::NONE,   KeyCode::Q, ModifierFlag::COMMAND_L &lt;/autogen&gt; /code/pre  <answer120930> The documentation suggests that these shouldn't conflict:  precode&lt;autogen&gt;    __KeyToKey__    KeyCode::Q, ModifierFlag::COMMAND_L | ModifierFlag::NONE,    KeyCode::Q, ModifierFlag::COMMAND_L | ModifierFlag::NONE, &lt;/autogen&gt; &lt;autogen&gt;__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L&lt;/autogen&gt; /code/pre  However, the second code&lt;autogen&gt;/code will override the codeCOMMAND_L/code of the first. The solution is counterintuitive:  precode&lt;root&gt;     &lt;appdef&gt;         &lt;appname&gt;Microsoft Remote Desktop&lt;/appname&gt;         &lt;equal&gt;com.microsoft.rdc.mac&lt;/equal&gt;      &lt;/appdef&gt;     &lt;item&gt;         &lt;name&gt;Swap command and option in Remote Desktop&lt;/name&gt;         &lt;identifier&gt;private.remotedesktopswapcommandandcontrol&lt;/identifier&gt;         &lt;only&gt;Microsoft Remote Desktop&lt;/only&gt;                     &lt;autogen&gt;__KeyToKey__ KeyCode::TAB, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_OPTION, KeyCode::TAB, ModifierFlag::COMMAND_L&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::OPTION_L, KeyCode::COMMAND_L&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::OPTION_R, KeyCode::COMMAND_R&lt;/autogen&gt;         &lt;autogen&gt;__KeyToKey__ KeyCode::COMMAND_R, KeyCode::OPTION_R&lt;/autogen&gt;         &lt;autogen&gt;             __KeyToKey__             KeyCode::Q, VK_OPTION | ModifierFlag::NONE,             KeyCode::Q, VK_COMMAND | ModifierFlag::NONE,         &lt;/autogen&gt;     &lt;/item&gt; &lt;/root&gt; /code/pre  In this case codeCmd+Q/code is remapped to codeOpt+Q/code but then codeOpt+Q/code is remapped back to `Cmd+Q'.  <comment140946> I tried that after reading the docs, but it doesn't seem to work. I updated the question to include the full XML I'm using. <comment140949> See edit (@wst) <comment140960> It seems (contrary to what the docs suggest) that `__KeyToKey__ KeyCode::COMMAND_L, KeyCode::OPTION_L` will always override `KeyCode::Q, VK_COMMAND | ModifierFlag::NONE`. I was actually able to get it working with the counterintuitive `__KeyToKey__                 KeyCode::Q, VK_OPTION | ModifierFlag::NONE,                 KeyCode::Q, VK_COMMAND | ModifierFlag::NONE,` **at the END**. If you have a better solution, let me know. Or just update your answer with that, and I'll accept for the assist. <comment140961> @wst Interesting! That does seem strange, or I'm overlooking something… Feel free to self-answer — I don't think I could explain it as well as you and I wouldn't want to take credit.