Setting a firmware password <body> Currently trying to use a script (preferably shell) to setup the firmware password on a fresh OSX install. I obviously found this:  http://osxdaily.com/2014/01/06/set-firmware-password-mac/  which would work during a manual install, but we would like to automate this as much as possible. I can't seem to find any documentation on writing a script to setup a (dynamic) firmware password.  My question is:  Is it possible to use a script or program to setup a dynamic firmware password on OSX 10.8/10.9? If so, do you know how? Do you know of any documentation?  <answer117084> If you mount the hidden "Recovery HD" partition in Terminal:  precodesudo diskutil mount Recovery\ HD /code/pre  and then again mount the "BaseSystem.dmg" by double clicking it:  img src="https://i.stack.imgur.com/eZfWM.png" alt="enter image description here"  then you should be able to use the codesetregproptool/code, located inside "Firmware Password Utility.app":  img src="https://i.stack.imgur.com/jLntY.png" alt="enter image description here"  To get to the folder containing codesetregproptool/code right-click (or Control click) "Firmware Password Utility.app", select "Show Package Contents" and navigate to Contents/Resources.  Alternatively to the description in this link:  Set a firmware password from the command line - em(see post from "Sep 13, '11 05:04:00AM ")/em  you can copy the "Firmware Password Utility.app" to a more acceptable location (for example on your local drive) and then use it from there.  These are the options of codesetregproptool/code:  precode$ sudo Firmware\ Password\ Utility.app/Contents/Resources/setregproptool -h Password: setregproptool v 2.0 (9) Aug 24 2013 Copyright (C) 2001-2010 Apple Inc. All Rights Reserved.  Usage: setregproptool [-c] [-d [-o &lt;old password&gt;]] [[-m &lt;mode&gt; -p &lt;password&gt;] -o &lt;old password&gt;]  -c              Check whether password is enabled.                         Sets return status of 0 if set, 1 otherwise. -d              Delete current password/mode.                         Requires current password on some machines. -p              Set password.                         Requires current password on some machines. -m              Set security mode.                         Requires current password on some machines.                         Mode can be either "full" or "command".                         Full mode requires entry of the password on                         every boot, command mode only requires entry                         of the password if the boot picker is invoked                         to select a different boot device.                  When enabling the Firmware Password for the first                 time, both the password and mode must be provided.                 Once the firmware password has been enabled, providing                 the mode or password alone will change that parameter                 only.  -o              Old password.                         Only required on certain machines to disable                         or change password or mode. Optional, if not                         provided the tool will prompt for the password. /code/pre  <answer224265> I made an shell script that does the trick  precode#!/bin/sh     diskutil mount Recovery\ HD &amp; wait hdiutil attach -quiet -nobrowse /Volumes/Recovery\ HD/com.apple.recovery.boot/BaseSystem.dmg &amp; wait echo "What is the current Firmware password?" read -s OLDPASSWORD echo "What is the NEW Firmware password?" read -s NEWPASSWORD echo "Confirm the NEW Firmware password?" read -s CONFIRMPASSWORD while [ "$NEWPASSWORD" != "$CONFIRMPASSWORD" ];      do         read -s -p $'\x0aPasswords don\'t match. What is the NEW Firmware password?' NEWPASSWORD         read -s -p $'\x0aConfirme the NEW Firmware password?' CONFIRMPASSWORD     done  echo $'\x0aEnter the computer\'s admin password' sudo /Volumes/OS\ X\ Base\ System/Applications/Utilities/Firmware\ Password\ Utility.app/Contents/Resources/setregproptool -m command -p $CONFIRMPASSWORD -o $OLDPASSWORD diskutil unmount force Recovery\ HD &amp; wait echo "New Password is Set" /code/pre  The only issue I found with it is that it is writing back the password to the console log in plain text.   Any one know how to prevent logging it in the console logs?  <comment136854> If you're considering a firmware password, I recommend you also read this and its answers. http://apple.stackexchange.com/questions/22275/is-is-possible-to-prevent-os-x-firmware-password-removal?rq=1 <comment136855> Great answer! I added more information on how to mount the recovery HD and where `BaseSystem.dmg` and `setregproptool` are located. <comment136882> If using the mode "full", which isn't possible with the GUI, the firmware password will be requested on each boot, and not only when a different boot device should be used *(the mode "command" used with the GUI)*. <comment271995> Is the password appearing in the console log as part of the sudo command?  If you sudo the entire shell script, you can remove the sudo from the setregproptool command.  Another option would be to store $CONFIRMPASSWORD in a temp file, then cat it in place of $CONFIRMPASSWORD <comment272155> how would I run the run the entire shell in sudo? Never do that before. <comment272158> Assuming your script is "SetFirmware.sh", then `sudo SetFirmware.sh` will first ask for the root password, and then run the entire script as root.  Then, all that shows in the console log will be the SetFirmware.sh filename. <comment272159> That worked! Is there a way on add the into the file so it can remain a clickable executable and have not have to sudo path/to/file from another terminal window? <comment272160> This might help: http://stackoverflow.com/questions/5125907/how-to-run-a-shell-script-in-os-x-by-double-clicking  ... actually, no, it won't help.  Because it can't do the sudo.