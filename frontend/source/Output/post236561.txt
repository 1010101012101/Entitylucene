How to select the Bluetooth device using command line? <body> I have two Bluetooth trackpads, one at work and one at home. Is there a way to select one or the other from the command line. My current workflow is going up to the bluetooth menu, hovering over to home or office and clicking on emConnect/em, but I wish I could do this from the terminal.  <answer237059> AFIK, there is no built in command line utility to manage individual Bluetooth connections.  In fact, the man page  codeman blued/code(OS X Bluetooth daemon) specifically states:     The Bluetooth daemon handles SDP transactions, link key management,   and incoming connection acceptance. strongIt cannot be used directly by the   user./strong (Emphasis mine)   So, it seems that you are limited to loading/unloading the BT daemon from the command line.  That may be helpful, however.  If your device is active, OS X will connect to the device automatically upon start up.  emIn other words, it will automatically connect to any device in range when the daemon starts./em  strongGet the Daemon Status/strong If we issue the command codedefaults read /Library/Preferences/com.apple.Bluetooth.plist ControllerPowerState/code  It responds back with a code1/code or code0/code depending whether BT daemon is running or not; 1 being up, 0 being down.  br strongUnload the Daemon/strong  Issuing the command codesudo killall blued/code should kill the BT daemon.  strongThe downside here is that if you have a BT keyboard, it will stop working./strong  br strong(Re)Starting the Daemon/strong  If we issue the command:  codelaunchctl start com.apple.blued/code it will tell the daemon to (re)start.  After doing so, it should detect the device within range.  strongPutting it all Together/strong Putting it together as one line, we can issue the command   codesudo killall blued &amp;&amp; sleep 3 &amp;&amp; launchctl start com.apple.blued/code  What this does is....  ol liKill the daemon/li liWaits for 3 seconds to ensure it has been killed (you can change this if you like)/li liStarts the daemon./li /ol  strongNow to Make it Easier/strong  To make this easier we give it an emalias/em.  You can call the alias whatever you like; I just used "btrestart" because it makes sense in this context.    codealias btrestart=sudo killall blued &amp;&amp; sleep 3 &amp;&amp; launchctl start com.apple.blued/code  Now, anywhere in your terminal shell, if you type codebtrestart/code it will issue the command.  Once you have it working, you can add it to your code.bash_profile/code so that the alias is persistent across reboots:  precodeecho alias btrestart=sudo killall blued &amp;&amp; sleep 3 &amp;&amp; launchctl start com.apple.blued &gt;&gt; ~/.bash_profile /code/pre  br strongA Couple Caveats/strong  ol liYou will have to enter your password every time.  Launchctl is a system command and requires elevated privileges./li listrongAll/strong of your BT devices will get disconnected and reconnected.  If you only have one or two BT devices, this may not be much of an issue/li /ol  I hope this gets you going in the right direction....  <answer237121> I ended up going with this modified version from this answer and creating two files, one with "Home Trackpad" and another with "Office Trackpad". It works, but it takes a few seconds to complete  precodetell application "System Events" to tell process "SystemUIServer"   set bt to (first menu bar item whose description is "bluetooth") of menu bar 1   click bt   tell (first menu item whose title is "Home Trackpad") of menu of bt     click     tell menu 1       if exists menu item "Connect"         click menu item "Connect"         return "Connecting..."       else         click bt  -- close main dropdown to clean up after ourselves         return "No connect button; is it already connected?"       end if     end tell   end tell end tell /code/pre  <answer237123> precodeblued listall /code/pre  This Terminal command will tell you all currently 'known' devices. You're going to have to figure out (by reading between the lines) which one is which (assuming you've named your trackpads something "nice", like "home" or "work", etc.)  I did this, and got:  precode2016-05-03 20:14:58.392 blued[3852:507] hostControllerOnline - Number of Paired devices = 3, List of Paired devices = (     "d8-96-95-e0-3e-f8",     "c4-2c-03-b7-87-57",     "90-84-0d-e4-7b-41" ) link key found for device: c4-2c-03-b7-87-57 2016-05-03 20:15:04.637 blued[3852:507] link key found for device: c4-2c-03-b7-87-57 2016-05-03 20:15:04.639 blued[3852:507] [setSystemPreference] syncs returns false 2016-05-03 20:15:04.639 blued[3852:507] Save link key for device: c4-2c-03-b7-87-57 link key found for device: 90-84-0d-e4-7b-41 2016-05-03 20:15:04.640 blued[3852:507] link key found for device: 90-84-0d-e4-7b-41 2016-05-03 20:15:04.640 blued[3852:507] Save link key for device: 90-84-0d-e4-7b-41 link key found for device: d8-96-95-e0-3e-f8 2016-05-03 20:15:04.640 blued[3852:507] link key found for device: d8-96-95-e0-3e-f8 2016-05-03 20:15:04.641 blued[3852:507] Save link key for device: d8-96-95-e0-3e-f8  Create connection failed (0x4) for device: D8-96-95-E0-3E-F8 /code/pre  strong(then i pressed "ctrl-c" to cancel)/strong  Let's assume that I knew that "c4-2c-03-b7-87-57" is 'home'....  next:     precodeblued join c4-2c-03-b7-87-57 /code/pre  This works on my (10.9.5) system. YMMV.  You may also have to add a kill function, as it appears that codeblued/code doesn't 'talk' well with Terminal.   So perhaps a possible shell command would be:   precodeblued join c4-2c-03-b7-87-57 killall terminal /code/pre  <comment289956> [Here's an answer using Applescipt than calling it from the command line](http://stackoverflow.com/questions/17519804/connect-to-bluetooth-device-iphone-via-command-line-on-macosx)â€“is that good enough? <comment289988> Can you clarify your answer so that we know what you've already tried re the command line? Otherwise you may get a lot of wasted suggestions/answers. Also, if it's relevant, you may want to expand on why you want to connect via the terminal - I ask because if it's to get around see sort of problem then there may be other better options to get around it rather than using the terminal. <comment290462> Thanks! This is exactly what I needed. Much faster than doing it with applescript and there's no need to enter a sudo password. Instead of `killall` I just hit ctrl+c again <comment290548> I think I spoke too soon. Your command makes it possible to connect and disconnect the last enabled bluetooth command, but changing from one to the other fails with this error: `Create connection failed (0x4) for device: 7C-C3-A1-4D-CF-99`