How Do I Create a Named Fork and Store Data In It? <body> It says here...  https://en.wikipedia.org/wiki/Fork_(file_system)#Apple  ...that the HFS+ file system in OSX supports "multiple named forks". How do I create a named fork at command line, and then how do I store data in it? Also, what are the maximum number of bytes I can place in my named fork?  <answer228445> I don't know about named forks except the resource fork. I can create it like so in Terminal (Bash shell):  pre class="lang-bash prettyprint-override"codeecho "data fork area" &gt; /tmp/test.txt echo "resource fork area" &gt; /tmp/test.txt/..namedfork/rsrc cat /tmp/test.txt cat /tmp/test.txt/..namedfork/rsrc /code/pre  I don't know about size limitations.  You can also copy a binary executable into the resource fork, and extract the bytes back out into a file, and execute that file:  pre class="lang-bash prettyprint-override"codecp /usr/bin/whoami &gt; /tmp/test.txt/..namedfork/rsrc # get ready for some bells to sound in your terminal cat /tmp/test.txt/..namedfork/rsrc &gt; /tmp/test.bin chmod u+x /tmp/test.bin /tmp/test.bin /code/pre  Note that the codewhoami/code command is kind of weird when you do this because it's really the codeid/code command, and so when you restore it, it reverts to the codeid/code command and you can do codeman id/code to learn more about that.  <answer228446> Extended attributes is what you're looking for.  xattr will allow you to view and modify extended attributes at the command line.  Look at the man page for more details, but in brief you can write one with the following command  xattr -w com.foo.myattribute "A bunch of data" /path/to/file  <comment278532> This method creates an extended attribute with the name com.apple.ResourceFork.  You can view it with the xattr command. <comment297675> @iWill: Yes the newer extended attribute feature seems to provide an additional interface to the very old resource fork feature.