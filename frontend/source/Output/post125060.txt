Terminal not displaying colors for directory listings <body> I don't know why my bash session doesn't show colors. I have tried Terminal as well as iTerm.  I have tried:  ol licodels -G/code/li liSetting codeexport CLICOLOR=1/code and codeexport LSCOLORS=GxFxCxDxBxegedabagaced/code/li liUsing different themes such as solarized and something else/li /ol  The versions of my software are:  ol libash: GNU bash, version 3.2.51(1)-release (x86_64-apple-darwin13)/li liosx: 10.9.2/li /ol  I have Homebrew installed  I don't know what other information might be helpful. I spend a lot of time on the shell, this problem is becoming very annoying :)  edit: in terminal preferences, I have 'Declare terminal as: xterm-256color' and 'Display ANSI colors' along with 'Use bright colors for bold text'  <answer125076> In Temrinal's Terminal  Preferences select the profile for the session type you're using and check under the Advanced tab what terminal declaration you're using. Most likely the one selected doesn't support ANSI coloring. xterm-256color should support what you're expecting.   <answer152791> I would suggest installing the GNU Core Utilities via Homebrew, which will give you the "Linux" version of codels/code (instead of the FreeBSD version that ships with OS X), as well as other powerful tools  pre class="lang-bsh prettyprint-override"codebrew update brew install coreutils /code/pre  You should then be able to show colors with:  precodegls --color /code/pre  Additionally, read the caveats to configure your PATH so you can use commands like codegls/code with their normal names, i.e. codels/code:   precode$ brew info coreutils coreutils: stable 8.23 (bottled) https://www.gnu.org/software/coreutils Conflicts with: ganglia, idutils /usr/local/Cellar/coreutils/8.23 (214 files, 10M)   Poured from bottle /usr/local/Cellar/coreutils/8.23_1 (214 files, 10M) *   Poured from bottle From: https://github.com/Homebrew/homebrew/blob/master/Library/Formula/coreutils.rb ==&gt; Dependencies Build: xz âœ” ==&gt; Caveats All commands have been installed with the prefix 'g'.  If you really need to use these commands with their normal names, you can add a "gnubin" directory to your PATH from your bashrc like:      PATH="/usr/local/opt/coreutils/libexec/gnubin:$PATH"  Additionally, you can access their man pages with normal names if you add the "gnuman" directory to your MANPATH from your bashrc as well:      MANPATH="/usr/local/opt/coreutils/libexec/gnuman:$MANPATH" /code/pre  <comment146379> I just checked, terminal is already set to xterm-256color (updated question to reflect this and other info) <comment147065> Try running `printf '\e[32mtest\n'`, if that works then it's a problem with `ls`. <comment171515> I'm also having this problem. To extend what you've tried, the problem persists with coreutils' gls command. The comment above successfully changes the prompt color. My problem appears to be with the SolarizedDark theme, as changing the color in Terminal.app preferences in other themes works. <comment258035> It's worth noting that gls (GNU ls) does not enable color by simply defining the CLICOLOR environment variable as the default BSD ls command from OS X does. Also, the -G switch to enable color in BSD ls doesn't work for GNU ls nor does --color work for BSD ls. You HAVE to define an alias for ls to add the --color switch if you want all your ls commands colorized. For reference from "man ls" (BSD flavor): "-G Enable colorized output.  This option is equivalent to defining CLICOLOR in the environment." <comment302901> Using gls --color after installing coreutils I got default coloring, not the colors from my LSCOLORS var. Since I'd munged my path to default to the gnu tools by their usual names I just did rm `which ls` to go back to /bin/ls which worked fine. Surprisingly this pissed off the current shell, which couldn't find ls anymore, but new shells worked fine. bash doesn't have a rehash, so I don't understand why it got hung up on /usr/local/opt/coreutils/libexec/gnubin/ls