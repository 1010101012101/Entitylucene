ICMP packet with a negative round trip time? <body> I often keep a ping running in my Terminal so that I can pop it up to keep an eye on any network issues in our office. Recently, I ended a long-running ping session and noticed in the summary statistics that the minimum round trip time was -520ms.  img src="https://i.stack.imgur.com/Yb1nW.png" alt="ping summary stats"  Does anyone have any explanations for this bug?  <answer243582> There are several possible explanations for negative ping times:  ol liYou are running OS X on a PC with a AMD Athlonâ„¢ 64 X2 Dual Core Processor which has a bug in the power management which may not only effect Windows but also OS X installations./li liGoogle is tired of getting pinged 38325 times and is sending erroneous timestamps in the ICMP echo replies - simulating a relativistic twin paradox. The -520.236 ms echo reply packet pretends to come from the fast moving  "younger" twin server and the 7219027.621 ms echo reply is the silver-haired "grandpa" twin server standing still - both behind a misconfigured Einstein-Rosen voodoo load balancer!/li liemntpd/em did its work and adjusted the time while a ping was sent. This explains the negative time as well as the two-hour-ping: 7219027.621 ms are two hours and 19 seconds - the most prolonged ping I have ever seen!  You can reproduce it yourself by adjusting the time manually like in this ping listing:  precode64 bytes from 185.62.237.118: icmp_seq=17 ttl=55 time=290.491 ms 64 bytes from 185.62.237.118: icmp_seq=18 ttl=55 time=310.241 ms 64 bytes from 185.62.237.118: icmp_seq=19 ttl=55 time=-11797.674 ms 64 bytes from 185.62.237.118: icmp_seq=20 ttl=55 time=303.643 ms 64 bytes from 185.62.237.118: icmp_seq=21 ttl=55 time=326.527 ms /code/pre  I turned the time back for several seconds while ping 19 was sent./li /ol  <comment299972> pure guess, something over-ran 'integer' & went bust.... round the clock, unsigned number... <comment299986> @Tetsujin unless Apple's [online opensource code](http://opensource.apple.com/source/network_cmds/network_cmds-481.20.1/ping.tproj/ping.c) doesn't match the actual compiled version, those statistics are stored as doubles and you'd need some ridiculous number to overflow.