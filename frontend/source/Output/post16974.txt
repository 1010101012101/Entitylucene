How can I make Mac OS X run a program before shutting down? <body> I am trying to get Mac OS X to save all my VirtualBox VMs when it reboots. I already have a script that does this, but I need OS X to run this script automatically before a reboot.  When Mac OS X reboots, does it run /sbin/reboot?  Or how else could this be achieved?  <answer17522> Launchd sends an early warning of shutdowns to all scripts/daemons that have a StopService() subroutine. This gives your process the most time to clean up.  Just use launchd to start the script and have it run in the background until it's time to exit.  After the services that got the early warning are closing down, All processes get a codeSIGTERM/code signal a few seconds before the codeSIGKILL/code nukes them.   You could make a script that sleeps and traps SIGTERM to run your command when that time comes. You will have to see if that allows enough time in practice for the commands to execute. This avoids a little bit of coding, but not much - it's generally better to just make a daemon out of a shell script.  hr  From a historical perspective - code/sbin/reboot/code and runlevels never existed on Darwin / OS X and coderc.shutdown/code is deprecated along with the rest of coderc/code now that codelaunchd/code is the boss. You might be able to use rc.shutdown on tiger or earlier (I don't have one of those images handy to check presently) Lion certainly has removed all vestiges of rc.d and init.d.  You might want to see if sleepwatcher would help in your case. I haven't used it in quite a while - but it certainly aims to solve your dilemma.  <answer113279> Although Apple recommends to use "stronglaunchd/strong" the easiest is to create a shell script using for example Terminal's pico :  precodepico /Users/Shared/logoutHook.sh /code/pre  The file can contain something like :  precode#!/bin/bash say 'Hasta la vista baby!' /code/pre  Then give exuction rights :  precodesudo chmod +x /Users/Shared/logoutHook.sh /code/pre  Finally hook the script to the logout procedure :  precodesudo defaults write com.apple.loginwindow LogoutHook /Users/Shared/logoutHook.sh /code/pre  hr  If you start an other application, as I haven't tested this I think it might be useful to warn myself and you that :  ul liWe might need to kill the shutdown signal to execute what we want ;/li liThen send a new one (beware not to kill the signal send by our ownbr script)â€¦/li /ul  hr  If you want to remove the hook :  precodesudo defaults delete com.apple.loginwindow LogoutHook /code/pre  hr  If using "stronglaunchd/strong" the idea would be to capture the SIGTERM signal have a look at : strong/System/Library/LaunchDaemons/com.apple.shutdown_monitor.plist/strong  <comment18507> Duplicate question here: http://apple.stackexchange.com/questions/16825/make-a-script-app-run-on-logout <comment18510> That's not a duplicate. I don't want to know how to run a script or program when logging out. I want to know how to run a script or program when shutting down. <comment18513> You're right. Not an exact duplicate. The answer in the linked question advises the user to place their script in `/etc/rc.shutdown.local` to run it when shutting down. It sounds like that's what you're looking for. <comment18515> This site seems to make that claim: http://hints.macworld.com/article.php?story=20051013141919568 <comment20608> The rc.shutdown.local method doesn't work. <comment20609> Turns out "deprecated" means "doesn't work". :-( <comment20611> Yup - the warnings started on Tiger and i'd guess it went away with Leopard - it's hard to recall with all the Lion changes running around my brain. <comment20727> This really complicates matters and makes Mac OS X a very bad server platform. <comment20754> launchd is fully capable to run scripts at shutdown. Perhaps I should edit out the history and leave that fact more clear. In what way does launchd fail your need to run a script at shutdown? <comment20762> I don't know how to make launchd run scripts at shutdown. I use launchd to start things at boot. <comment20763> create a startup item that idles nicely and has a StopService() <comment20772> And then I'll make that service do all my tasks at StopService(). I'll try that, thanks. <comment20776> Wrapping my brain around what launchd can do, rather than how it changes what I know was a six month process. You get good results with some small investment, but changing the way you think takes far longer ;-)