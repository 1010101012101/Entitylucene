Mount Linux NFS share on Mountain Lion 10.8.5 <body> I am new to using Apple as main OS. I am used to fstab in Linux to keep the mounts for nfs. When I use codeGo to/code in Finder to mount codenfs://serveripaddress/home/shared/code I get a permissions error.  The below command works from Terminal though:  precode    mount -t nfs -o resvport,nolocks,locallocks,intr,soft,wsize=32768,rsize=3276 \         serveripaddress:/home/shared /private/shared /code/pre  How can I get this to be mounted each time I log in and vpn to the network where this share resides?  <answer103832> I have spent quite a bit of time figuring out automounts of NFS shares in OS X...  Somewhere along the line, Apple decided allowing mounts directly into /Volumes should not be possible:  /etc/auto_master strong(see last line)/strong:  precode# # Automounter master map # +auto_master        # Use directory service /net            -hosts      -nobrowse,hidefromfinder,nosuid /home           auto_home   -nobrowse,hidefromfinder /Network/Servers    -fstab /-          -static /-          auto_nfs    -nobrowse,nosuid /code/pre  /etc/auto_nfs strong(this is all one line)/strong:     precode/Volumes/my_mount    -fstype=nfs,noowners,nolockd,noresvport,hard,bg,intr,rw,tcp,nfc nfs://192.168.1.1:/exports/my_share /code/pre  This will not work (anymore!) though it "should".  precode$ sudo automount -cv ... automount: /Volumes/my_mount: mountpoint unavailable /code/pre  h2What's the solution?/h2  It's so easy my jaw dropped when I figured it out. Basically, we trick OS X into thinking we're mounting * somewhere else. *  When you're talking about paths in just about any environment, the root folder is the highest path you can reach, whether it's codeC:\/code (windows) or code//code (*nix)  When you're at this path, attempting to reach the parent path, via code../code will keep you at the root path.  For example: code/../../../..//code is still just code//code  By now, a few of you have already figured it out.  h2TL;DR / Solution:/h2  Change your code/etc/auto_nfs/code config from strong(this is all one line)/strong:  precode/Volumes/my_mount    -fstype=nfs,noowners,nolockd,noresvport,hard,bg,intr,rw,tcp,nfc nfs://192.168.1.1:/exports/my_share /code/pre  To strong(this is all one line)/strong:  precode/../Volumes/my_mount    -fstype=nfs,noowners,nolockd,noresvport,hard,bg,intr,rw,tcp,nfc nfs://192.168.1.1:/exports/my_share /code/pre  And re-run the automounter:  precode$ sudo automount -cv ... automount: /Volumes/my_mount: mounted /code/pre  ..... there you go! Technically code/../Volumes/code is still code/Volumes/code, but the automounter does not see things that way ;)  This configuration persists the mount across restarts, and creates the mountpoint automatically.  h1I KNOW, RIGHT?/h1  <answer104623> I am also new to OSX. This is how I mounted my Linux share. I used codesudo vifs/code which is apparently the OSX preferred way to edit code/etc/fstab/code. I then entered a mount stanza like the below:  precodemyserver:/path/to/files /Users/me/files nfs resvport,bg,async,nfc 0 0 /code/pre  This works and the mount happens automatically. However I am suffering from the famous show-performance-in-finder issue (copying to server fast on command line but excruciatingly slow in finder).   The mount options I used are:  ul licoderesvport/code - needed to use a low port as expected by Linux server/li licodebg/code - the mount will be silently retried in the background if unsuccessful/li licodeasync/code - my attempt to increase performace. codeman mount_nfs/code and read the risks./li licodenfc/code - makes UTF-8 characters work properly (codeman mount_nfs/code)/li /ul  For completeness, here is the server-side configuration  in code/etc/exports/code:  precode/home/me/files 10.20.30.40(rw,sync,all_squash,anonuid=1000,anongid=100) /code/pre  Here, 10.20.30.40 should be the IP of the OSX client (assuming you want to restrict the export to that client). My Linux uid/gid are 1000/100. I've used codeall-squash/code to convert uid/gid to those I have on Linux because of the OSX differences. This isn't a perfect way to do this but it meets my immediate needs.  <comment122169> Currently I have resorted to a shell script in my documents folder that when run will mount the desired drives. <comment123091> I am also grappling with NFS - see my answer to your question below. Could you please explain the mount options in your example and why you're using them?