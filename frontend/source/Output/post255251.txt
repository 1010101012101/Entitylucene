Run shell script on specified external HDD mount <body> I keep some files on an external HDD and I've wanted to know what is currently on it without connecting it.  I've modified this command to get a .txt file with tree-like structure of my folders on that HDD uploaded to my iCloud Drive when I connect it to my MBP.  This is my edited command which I have saved as .sh, now saving the file to desktop:  precodels -R /Volumes/2TB/ sed -e '/^[^:]*$/d' -e 's/://' -e 's/[^-][^\/]*\//--/g' -e 's/^/ /' -e 's/-/|/' &gt; /Volumes/SSD/Users/V/Desktop/File.txt /code/pre  So far I've made a shortcut in BTT which runs the script but I would like it to run when I connect that HDD.  Someone suggested that I can could create a launchd with the StartOnMount key. The problem is, as far as I understand from this thread, it's not possible to set up with specified volume.  Any ideas?  <answer255297> In this example the output of codedf/code is piped to codegrep/code which is looking to match the hard disk mount point- code/Volumes/2TB/code. The exit status of codegrep/code determines the outcome of the condition and the code!/code reverses the logic.  precodeif ! df | grep -q '\/Volumes\/2TB$' then      exit 0 fi /code/pre  In a sentence this says, if codegrep/code does not match code/Volumes/2TB/code then exit the script.  I would write the script like this to put it all together.  precode#!/bin/sh # # if ! df | grep -q '\/Volumes\/2TB$' then      exit 0 fi  ls -R /Volumes/2TB/ |     sed -e '/^[^:]*$/d' \         -e 's/://' \         -e 's/[^-][^\/]*\//--/g' \         -e 's/^/ /' \         -e 's/-/|/' &gt;/Volumes/SSD/Users/V/Desktop/File.txt  /code/pre  <comment317868> But what's the problem in running this script every time disk is mounted? You can make a script which checks if your specific disk is mounted, if not - exit. <comment317870> How would you do that, then? I'm not an expert when it comes to terminal commands etc. <comment317872> Please edit your post and show us your script. <comment317906> Updated my question with command <comment317915> So wrap this line with: `if [ -d "/Volumes/2TB" ]; then (...) fi`. This ensures the code will be executed only if the `2TB` volume is mounted. <comment317945> Thanks @MateuszSzlosek, it works but I'll use the solution provided below instead. <comment317960> Thank you, it works as described :) I'm running it via launchd agent with key 'StartOnMount'.