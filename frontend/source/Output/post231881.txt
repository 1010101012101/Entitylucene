From a technical standpoint, why can't Night Shift be supported on 32 bit hardware? <body> As referenced in this comment, Apple doesn't remove features without a significant reason, but other 3rd party apps like f.lux and GammaTool can do colour changes on 32-bit devices just fine. What are possible reasons Apple might not have been able to do this?  <answer231940> The simplest explanation could be one of two things:  ol liSimple limited resources - finite time to QA and test. This is always something to consider - for each device that runs code, you need to provide devices to the coders, test during development, test during QA, support over the 2-3 year period that OS will be under mainstream support, etc... Basically, technically feasible features lie strewn across the cutting room floor all the time due to the fact that resources are not infinite, timelines exist, and budgets exist./li liThe framework Apple uses to implement this simply doesn't support or hasn't been written for the older hardware. Yes - you can write code in the basic 1+1=2 for just about any chipset or framework. My educated guess is night shift is written in metal or a lower level API. Apple's documentation explains the hardware needed to support metal and OpenGLES v 3.0:  ul lihttps://developer.apple.com/library/ios/documentation/DeviceInformation/Reference/iOSDeviceCompatibility/OpenGLESPlatforms/OpenGLESPlatforms.html/li /ul/li /ol  If you look at all the OpenGL2.0 and non-metal devices that now don't support night-shift it might be a compelling technical reason to not ship that feature without the metal/3.0 capabilities of the graphics API and hardware support to back up what the code describes.  My hunch is solidly in Hardware + API limitation camp, but it's worth stating that there is a large cost to every change and every decision in the iOS ecosystem at this point with most of the 1 billion active users of Apple products being iOS users.  <comment283251> A theory (in my head) might be due to color change of the screen and ui update(s) it might be a problem and slow down the os. It could also be that Apple has almost all 64-but devices as their current line-up and just don't want that extra configuration to deal with <comment283321> Would it feel a bit too crystal-ball to also imagine the same device break-point may be used at iOS10 ? <comment283352> From the Help Center: "Specific questions about what Apple [did|does|thinks|might do] are not helpful in a Q&A setting since they lack a practical problem to be solved" <comment283417> @Tetsujin Apple normally make sure any device they sell can upgrade to the newest version for at least two years after purchase, and the 32-bit iPhone 5c was only discontinued in September 2015. So I'd expect iOS 10, and maybe 11, to still support the 32-bit architecture.