Check if a process is running, if not execute it again in Terminal <body> Is there a way to periodically check if a process is running with (probably with Apple script, or some other shell script) and if not then to execute it in Terminal?  I have a PHP script that is needs to run, but after some time it breaks, so I need to start it again.  Thanks.  <answer10429> In OSX use launchd to to this. launchd will start a command at login or boot and if the process dies it will restart it.  The process is controlled by a .plist file formatted as defined in Apple docs the example in that manual page is for the case you ask for.  precode  &lt;?xml version="1.0" encoding="UTF-8"?&gt;    &lt;!DOCTYPE plist PUBLIC -//Apple Computer//DTD PLIST 1.0//EN    http://www.apple.com/DTDs/PropertyList-1.0.dtd &gt;    &lt;plist version="1.0"&gt;    &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;com.example.exampled&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;              &lt;string&gt;exampled&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;KeepAlive&lt;/key&gt;         &lt;true/&gt;    &lt;/dict&gt;    &lt;/plist&gt; /code/pre  If you want to to start when a user logs in the this file goes in ~/Library/LaunchAgents. If when the machine boots then /Library/LaunchDaemons (which can't have access to the GUI)  but this will run as root unless you add a UserName key. (Thanks to @Gordon Davisson for the correction and a reread of Apple definitions)  For ease of setting the .plist up you can use Lingon.app available from the Mac AppStore  <answer10430> If you wanted to do this via a shell script I'd do something like this:  precode#!/bin/sh PROCESS=`ps A | grep PROCESS_NAME | grep -v grep` if [ "$?" -ne "0" ]; then         echo "not running"         ### COMMAND TO EXECUTE HERE ###         exit 1 fi /code/pre  You could call that via cron every minute or so.  <answer11009> Why you need to actively poll for the script? Why not just put it in a shell script loop and restart it when it fails.   precode#!/bin/sh  let c=1 while ! php -f myscript.php; do     echo "The script has crashed $c times so far..."     let "c=c+1" done /code/pre  In the case it doesn't fail gracefully, polling for a running process won't save you either. It may as well keep running while not doing its job.  <comment10961> Correction: to run it at boot, put the file in /Library/LaunchDaemons. <comment10973> possible duplicate of [How to run something automatically when the system boots or a use logs on?](http://apple.stackexchange.com/questions/3030/how-to-run-something-automatically-when-the-system-boots-or-a-use-logs-on) <comment10974> possible duplicate of: http://apple.stackexchange.com/questions/837/automatically-relaunch-a-closed-application <comment209809> @jherran see [meta](http://meta.apple.stackexchange.com/questions/2361/why-was-my-edit-removing-code-formatting-reverted) and many in meta stack overflow - don't use code formatting in plain text just for code