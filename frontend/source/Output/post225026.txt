Backward compatibility of shell scripts <body> I use a .command file to start a basic shell script in the form:  precode#!/bin/bash -- this simply starts Something at /usr/local/bin/Something myLittleOneLineScript /code/pre  To make it work I changed its permissions and made it executable.  The question is: I run the latest Mac OS X version and this script perfectly works. But: will it work in any previous OS X version?  <answer225028> "Will it work" has two aspects here:  ul liwill executing the binary work?/li liis codebash/code capable of running the script as such./li /ul  The example looks fairly basic as far as shell scripting is concerned. So yes, it should work with previous OSX versions of bash. It would (as long as codeSomething/code is installed in code/usr/local/bin/code) even work in quite old versions of the Bourne Shell (code/bin/sh/code) on various Unix systems.  <answer225030> In most (if not all) default OS X installations the script won't work (OK the script itself works but the command emSomething/em doesn't). The folder /usr/local/bin simply doesn't exist.  The folder /usr/local and all subsequent folders are reserved or designated for/to third-party commands.  Here are just a few examples of command line tools installed there by third-party app providers:  ul liMySQL Community Edition (Oracle)/li liVirtualBox (Oracle)/li liTextWrangler/BBEdit (links to a subsequent app folder)/li liNMap/li lihomebrew/li li..../li /ul  To get the script running you have to install the command line executable em.../Something/em residing in a subfolder of /usr/local first. The installed executable has to be compatible with the older system and all arguments/options in the script itself have to be compatible with the lower versioned (old) executable.  <comment273046> What makes you worry that it doesn't? <comment273057> @patrix: the simple fact that I don't know if it does   ;-) <comment273058> the question is not about the executable. That is: I'm sure the executable is where it must be when the shell executes it <comment273059> @IanBell The backward compatibility of the shell script may depend on the **content** of the script and the features of the lower versioned executable. <comment273060> Ok, perfect, but that is not a problem because the users download a dedicated version of the executable, so if they use 10.8, they install the executable required for 10.8, etc.