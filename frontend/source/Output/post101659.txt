How to Sync MacOS Applications + Preferences across multiple Macs without OS X Server? <body> Will the following work?  If not, can someone propose better alternaives to solve this problem?  strongSummary problem/strong:  I want to sync multiple MacBook Air's, Pro's and possibly Mini's with the same user-account info, for only one account--call it codemyuser/code.  All systems will have the same MacOS major rev.  eg: they're all 10.7 or 10.8 or higher.  I do NOT want to employ OS X Server for the synchronizing.  strongSummary, proposed solution/strong:  git-sync the Preferences and code/User/myuser/code directory, rsync the Application directories, and use known-working mechanisms (Dropbox, IMAP) to sync everything else.  strongDetails/strong.  Migration Assistant is unreliable for complete copy/sync per this and this and my personal experience.  ChronoSync, per this discussion looks interesting, but I don't know exactly what it's doing for Preferences... and I want to exactly what's going on.  I've also restored TimeMachine backups and found they do not replicate the environment I backed up (huge disappointment).  I'm an experienced system admin on non-MacOS sytems, so consider me a control freak.  I've used git to sync Terminal.app/shell settings in code/User/myuser/code and Thunderbird profile(s) across multiple Macs (git branching for diff Thunderbird profiles on different Macs if/as need be provides useful flexibility).  Despite the lack of depth of git's file-metada management, this has worked well.  I'd like to git-sync (to a "central-repository" server/service like Bitbucket) the following directories across my Macs, employing branches as needed/wanted for unique customizations:  ul licode/Library/Preferences/code/li licode/Library/PreferencePanes/code/li licode~/Library/Preferences/code/li licode~/Library/PreferencePanes/code/li /ul  (Everything else in code~/Library/code and code/Library/code appears to be uninmportant or automatically regenerated.)  Then I plan to rsync the following together (git is less useful here due to ease of recreating installed applications plus less practical due to size of code/Applications/code):  ul licode/Applications/code/li licode~/Applications/code/li /ul  I realize I may need to close all pertinent applications+processes in order to properly sync the Preferences and Applications spaces and avoid running-process locks and related problems.  I'm not as familiar with any Preference-management-magic that might be in auto-deployment systems like Absolute Manage, Casper, Munki, Sikuli, Salt and similar tools.  Would love to know if there's Preference-management capability/knowledge/know-how in these tools, and if so, how to reuse said knowledge.  Each of the said tools seem to address a broader scope of requirements and present a higher barrier to entry/employment.  I'd rather just start with my emvery easy to setup/em git-based method on code~/Library/Preferences/code (and the like) going.  All of the other directories on these systems--particularly in code/User/myuser/code--are being synchronized via other means, like Dropbox, IMAP email, and similar, already-proven methods like rsync.  I'm less certain rsync will work for copying code/Applications/code, hence the specific call-out above.  <answer101711> Seems like ChronoSync could help in a limited way. The support pages have warnings on syncing code~/Library/code. See ChronoSync - Syncing your Home folder.  You could try Unison for everything instead of multiple tools and approaches (one caveat is that Unison was last updated in 2009; it's source is available under GPL though).  References:br Unison Frequently Asked Questions (FAQ)br Using Unison on Specific Operating Systems  <comment119772> One thing you'll find difficult is the `~/Library/Preferences/ByHost/` files, because they are all named as com.apple.blah.UUID.plist, where UUID is the hardware UUID of each machine.  You can get the UUID for a machine via `system_profiler SPHardwareDataType | grep UUID` <comment119795> @Kent -  understood.  I'm expecting the git repo/master would contain files for all the Macs/machines all saved in `~/Library/Preferences/ByHost/`.  And since each `ByHost` file has a unique name, and presuming (?) that a MacOS machine with UUID = X would ignore files with UUID = Y, I don't see a problem with this.  Do you? <comment119815> Thanks, helpful.  From [Chrono's 'Syncing your Library folder'](http://www.econtechnologies.com/pages/cs/chrono_tips26.html) I see:  "Preferences: [...] Depending on what you are synchronizing between Macs you may need to synchronize some Preferences files. First, you need to set up a separate Synchronizer document synchronizing the two Preferences folders located under the Library folder. [...] Click here to download a Synchronizer document that helps with this setup. All the rules are already complete so you only need to set the Targets." <comment119849> Yeah .. the other files are ignored.  But, if you wanted those preferences to be synced between your machines, you'd have to become creative and copy the "X" file to "Y" before syncing it so that machine Y would have the updated prefs when it read from its file.  If you have different types of hardware, that might have some unexpected consequences. <comment119876> @Kent - right, good point.  A quick look at `ByHost` filenames suggest that the responsible apps/etc are less impactful for my workspace/environment than the non-`ByHost` preferences.  (Or at least, that's my current, wishful thinking.)  As such, I'd plan to have to manually manage/copy the `ByHost`-based preferences, and maybe make a script(s) to copy the more-impactful ones. <comment132673> Johnny I'm attempting to do something similar using BTSync.