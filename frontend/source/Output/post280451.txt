Erased /usr/local/bin directory by mistake <body> I am a somewhat newbie to Unix.  I recently started a bash tutorial where I created a hello world bash script like this:  precode#!/bin/bash echo 'Hello World!' /code/pre  then, I moved it into /usr/local/bin using this command:  precodesudo mv hello.sh /usr/local/bin /code/pre  now /bin under /usr/local is no longer a directory, but a file, and when using ls -l on it, I get this output:  precodeMacBook-Pro-de-Omar:local omarnavarro$ ls bin MacBook-Pro-de-Omar:local omarnavarro$ ls -l total 8 -rwxr-xr-x  1 omarnavarro  staff  32 Apr 11 19:27 bin MacBook-Pro-de-Omar:local omarnavarro$ cat bin #!/bin/bash echo 'Hello world!' /code/pre  I understand that /usr/local/bin is part of the $PATH, and so I believe there must have been lots of commands in there.  Will this affect me much?  how can I restore the commands that previously lived in /usr/local/bin when it was a directory.  I can't believe I screwed up so badly!  <answer280452> The canonical answer, of course, is to restore /usr/local/bin from your latest backup...  The good news is that if that codemv/code command succeeded and created a file called codebin/code, then code/usr/local/bin/code didn't already exist as a directory on your system, and you've lost nothing. Otherwise, codehello.sh/code would have been moved eminto/em the code/usr/local/bin/code directory (which was presumably the intention of the tutorial), it wouldn't have replaced it.   This is not unexpected, as code/usr/local/bin/code doesn't generally exist on Macs until you or a 3rd party app creates it. But now you have learned the awesome power of the command line, you know why it's important to keep good backups ;)  Had you mangled code/usr/bin/code you'd need to reinstall the system:  ul liDeleted /usr/local/bin and /usr/bin on OS X/li /ul  The good news is system integrity protection (SIP) is making it harder to mangle system files with codesudo/code  PS: An easy way to prevent the issue from happening is to always add a trailing code//code if moving files to another directory (or rely on tab completion wich does the same thing): codesudo mv hello.sh /usr/local/bin//code. This way you'll get an error message if the target directory doesn't exist.  <comment352797> you're awesome.  Thanks for the prompt answer.  I was expecting something to fail somewhere down the line but since all the 'whereis' commands directed me to 'usr/bin', I thought I'd be fine. <comment352869> @fd0 Thanks for the clarification. I didn't recall /usr/local being there when I did a clean Sierra install a few months ago, and it [didn't exist on earlier versions of OS X](http://apple.stackexchange.com/a/157981/2841). But it appears you're right wrt Sierra... will update answer to clarify.