How to get Safari to accept Untrusted Certs on iOS8? (like Chrome) <body> It looks like Chrome on iOS8 has the ability to 'user accept' untrusted SSL Certs but Safari simply blocks them with an error.   The scenario here is that the phone (and iPad) are viewing an internal corporate staging environment, piggy-backing off a mac plugged into the internal network. The actual mac can view the site without an error.   img src="https://i.stack.imgur.com/5svYM.jpg" alt="enter image description here"  My question is: strongHow to get Safari to accept Untrusted Certs on iOS8? (like Chrome)/strong  <answer199279> This looks more like a SSL negotiation error; I suspect this is a settings issue, not so much a certificate issue;  ul lian incorrectly configured proxy (possibly on the shared connection or even on the phone) /li lia mismatched SSL/TLS setting (e.g. SSL version) /li lithe server failing the negotiation give a possible NAT or IP range issue with the phone (shared link with the Mac)/li /ul  A Wireshark trace could help diagnose the differences between the Chrome and Safari connections.   First attempt to rule out the shared link and get the phone on to the same corporate network as the host. Failing that, reset the Safari settings on the phone.   <comment238820> Re the proxy, Chrome can view the site but Safari can't. Is that really a possible issue? Could you please expand on the second two? <comment238827> Could you expand on how to check the SSL/TLS settings? <comment238892> Possibly, I'm not that familiar with the OSX shared network. In the other 2, if the server only accepts connections from a specific range the NAT could cause an error, and the Safari may no longer support the SSL v3 and the server is rejecting that. A Wireshark gave cold help diagnose the differences between the chrome and safari connections. <comment240013> But doesn't Safari and Chrome have the same implementation (on iOS) under the hood? Why would that make a difference for the NAT? <comment240015> They have the same rendering engine under the hood. I think a Wireshark trace will highlight the differences in the ssl negotiation.