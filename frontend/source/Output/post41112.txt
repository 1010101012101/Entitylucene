Hosting a remote Aperture image library on a Mac mini server <body> We take ema lot/em of pictures, and it would be very convenient for us if we were able to organize all of our pictures into one massive, remote "Aperture image repository." So, I got this idea to get a Mac mini server which could host all of our pictures, and possibly set it up to "replicate" (in whole or in parts) to several Macs via our local area network.  The basic goal would be to set this up so that several Macs can "connect to" and work with one remote image repository, without needing to have the files locally on their local harddrives. And possibly download selected images when needed.  I am familiar with programming and scripting for Mac OS X, so it is okay if the solution involves some light programming. I just wanted to check first if anyone here knows if this is something Mac OS X Server and Aperture can do "out-of-the-box?" Have any of you set up something like this, and if so, how is it working? Do you have any better suggestions on how to do this?  One other thing that I thought about was to set up a Git or Mercurial repository on the Mac mini server, and check all the pictures into that, and basically check stuff out on the separate machines locally when needed. This could work as well, but I'm afraid this solution might be a little bit "overkill" and add too much "headachey."  I don't own a Mac mini yet, so I can't play around with it to figure it out. The answers to this question will help me decide if we should buy a server or not. Oh, and I am aware of this question, which is similar, but I would like to know how well this would work with Aperture.  Thanks in advance!  strongUpdate:/strong  I found this post on StackOverflow, talking about using Git as an image repo. Adding it here, for future reference.  <answer41115> The approach we have used is a simple shared folder containing an Aperture library. I can report that this solution is ok but fragile -- permissions on the shared folder need to be fixed every so often.   Dropbox would certainly work in your case, but I suspect that you'll need substantial storage space, which would be rather expensive. If cost weren't critical, though, Dropbox offers a very reliable way of replicating an Aperture library file locally while keeping the copies synced smoothly. Your solution of a GIT repository may be a labor-intensive way of re-creating what Dropbox is already offering.  <answer41116> Hello have you looked at:  cocoaslideshow or gofoto  You should be able to do that, alternatively there are other ways to host your iamges in your own Mac Mini Server or any other server using a blog or a CMS such as WordPress or Joomla with a photo/image gallery module that can just point to your photo directory and load the directory straight into the browser.   Using such tools you can make certain folders public or private. Also you can just setup an FTP to load files directly to the site including direct from your phone or camera using eyefi card.   If you find this too general and would like a detailed solutions as to how you can implement this please feel free to email me the contact form on our website Hosting Mac Mini    Happy to help  Regards H.A  <answer41136> This really depends on what your usage scenario is:  ol liIf you want cost-effective and reliable storage shared across your LAN then the best option is to use a NAS with RAID. The users can either work remotely or locally and sync their work.  A good NAS will also give you plenty of storage or expansion options and an HTTP/(s)FTP interface which you can map to your external IP to securely acces your content from remote locations./li liIf you also need an extra computer to work with the pictures or display/showcase them on a TV/monitor, a Mac mini might be a good investment. Again, you can share its storage in with other computers on your LAN and use tools such as codersync/code to keep specific folders synchronized./li liIf you want to keep track of changes to the images, it's a good ideea to use a repository of some kind. Bear in mind though that most tools have been optimised for text files versioning and will probably not be efficient to store changes to binaries (will keep full copies of each version) or inspect differences (see this)./li /ol  <comment46556> Thanks for the information, Ash! We use Dropbox a lot, but it would simply be too much data (too expensive). One picture averages 20 MB and there are thousands of them. <comment46557> Thanks for the tips! I hadn't considered a web service, which could definitely do the job. Although I don't think I'd be able to connect to it via Aperture in that case, which is desirable. Also, it might be a problem with a web service that all our images are in .RAW format. <comment46558> When you take RAW iamges do you have raw and jpg? becuse you can do somthing interesting if you did, although you would need a lot more storage for each photo.  setup the site to call an image, use the image name in its description/caption ensure all your files are named following the same file nameing convention i.e image-01.jpg and image-01.raw in this case you can map the Mac Minis HDD to each client machine via FTP and point to the files. <comment46925> Thanks, Vlad! I think I'll probably go for something like what you're mentioning in option #2, and sharing the storage of the server and shoving all images in there (possibly expanding with more external storage later).