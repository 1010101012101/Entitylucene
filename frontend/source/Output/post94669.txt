Backing up Time Machine sparsebundles to another server <body> So, a while ago I backed up a couple of different Macs to my Linux-based fileserver. As a network Time Machine, each Mac has a separate codesparsebundle/code file containing all of its information. I've since changed Macs and formatted various drives since then, so the original installations for the backups are no longer available.  I want to back up these sparsebundles to a ReadyNAS, and I'm trying to figure out the best way to go about it. There's rsync on the main server, but I've heard that rsync can cause all sorts of permissions issues and it doesn't play nicely with hard links.  Another option is using one of the Macs to transfer the sparsebundle files to the server via AFP (either with the Finder or with an application like SuperDuper or Chronosync). How efficient would this be? Does AFP behave like some other sharing protocols and copy the data via the mediator (in this case, Fileserver - Mac - ReadyNAS), or does it copy directly from source to final target? What would be the best tool for this?  If all else fails, I read somewhere else that a last ditch attempt would be to simply grab the contents of the codeLatest/code folder out of each sparsebundle, but I'd rather avoid this if at all possible.  <answer94678> I would say, rsync away once you are sure the sparsebundles are not being actively mounted or written to by other Mac OS clients.  The beauty of an Apple disk image is that all the Mac unique things are stored internally since they are a filesystem unto themselves and don't rely on your actual storage filesystem in any way. As long as you get the file names over and the OS has permissions to re-share the files - you can't break things as you move the actual files that make up the sparse bundle directory scheme to another Linux or OS X or Windows OS.  In a nutshell, the files stored as bands in the sparse bundle format are strongvery portable/strong which makes the HFS internals immune to corruption when the raw data is copied faithfully to a new location or a new server with a different filesystem structure.   In fact, having a Mac mount the filesystem encapsulated within the sparsebundle container would be a less optimal solution since it could take far longer to traverse the hard linked directory structure rather than let linux copy the file data efficiently. You would lose all the benefits of a sparse storage scheme to have OS X mount the files and copy them directly. 