dns lookup specified in /etc/hosts and then dscacheutil != differ from dig, host, chrome <body> Via a long chain up of OS upgrades I'm running macOS Sierra 10.12.5.  Setting entries in my /etc/hosts file is working only occasionally, mostly not.  For example on a freshly rebooted machine.  With the only networking set to Wifi.  Everything is unmodified and fine:  precodebash-3.2$ grep facebook.com /etc/hosts # 127.0.0.1 facebook.com bash-3.2$ sudo killall -HUP mDNSResponder bash-3.2$ dscacheutil -q host -a name facebook.com name: facebook.com ipv6_address: 2a03:2880:f127:283:face:b00c::25de  name: facebook.com ip_address: 157.240.18.35  bash-3.2$ host facebook.com facebook.com has address 157.240.18.35 facebook.com has IPv6 address 2a03:2880:f127:283:face:b00c::25de facebook.com mail is handled by 10 msgin.vvv.facebook.com. /code/pre  But then I uncomment that line for facebook, and I get this:  precodebash-3.2$ grep facebook /etc/hosts 127.0.0.1   facebook.com bash-3.2$ sudo killall -HUP mDNSResponder bash-3.2$ dscacheutil -q host -a name facebook.com name: facebook.com ipv6_address: 2a03:2880:f127:283:face:b00c::25de  name: facebook.com ip_address: 127.0.0.1  bash-3.2$ host facebook.com facebook.com has address 157.240.18.35 facebook.com has IPv6 address 2a03:2880:f127:283:face:b00c::25de facebook.com mail is handled by 10 msgin.vvv.facebook.com. /code/pre  I don't observe anything suspicious in the output of codescutil --dns/code.  The codedig/code command and codechrome/code both seem immune to the /etc/hosts change.  help?  <answer286840> This command will tell you which process is making the changes to your hosts file:  precodesudo dtrace -qn 'syscall::open*:entry /arg1&amp;3/ { printf("%d %s %s\n", pid, execname, copyinstr(arg0)); }' | grep hosts /code/pre  <comment362048> Very cool trick.  But, I have no reason to suspect anybody is modifying my /etc/host files, except me.  The problem is that my edits are not propagating to all the actors who query dns. <comment362053> host, dig and Google Chrome don't proceed along the common macOS DNS resolution path - so there is nothing wrong with your result...