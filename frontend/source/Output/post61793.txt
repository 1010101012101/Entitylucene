Mountain Lion sleep and caffeinate command <body> I am having an issue where my retina MacBook Pro (10.8.1) will sleep when uTorrent is actively uploading or downloading. I have tried my old go to programs like "Caffeine" and "InsomniaX" to no avail. I was about to try Jiggler, but when I am finished working at the machine for the night, I like to sleep the display (using a hot corner) and I want my display to remain off/asleep. Jiggler would wake the display every 5 minutes with the password prompt, then the display would sleep and this would repeat till the morning.    I have read this question and the best answer was helpful but left me wanting to know more.  I am wondering if someone can give me a little more info on how the caffeinate command works?  For example, if I were to run the command codecaffeinate -i open -W -a uTorrent.app/code (which I assume is working because it will open uTorrent) does the caffeinate command remain active until:  ol liThe terminal window is closed,/li liBreak (control+c) is entered,/li liuTorrent is closed,/li liUntil restart or log out, or/li liUntil a 'decaffeinate' or (complimenting command) is entered in the Terminal./li /ol  Basically if I wished to run the codecaffeinate/code command, would I have to run it every time I launched uTorrent?    <answer61799> The assertions are removed when the caffeinate process exits.     caffeinate creates assertions to alter system sleep behavior.  If no assertion flags   are specified, caffeinate creates an assertion to prevent idle sleep.  If a utility   is specified, caffeinate creates the assertions on the utility's behalf, and those   assertions will persist for the duration of the utility's execution. Otherwise,   caffeinate creates the assertions directly, and those assertions will persist until   caffeinate exits.   codecaffeinate/code (or codecaffeinate -i/code) prevents idle sleep until the process is terminated by for example pressing control-C or closing a shell window. codecaffeinate open -Wa uTorrent/code would also remove the assertion when codeopen/code exits.  You can get a list of power assertions with codepmset -g assertions/code. codecaffeinate/code or codecaffeinate -i/code should set codePreventUserIdleSystemSleep/code to 1.  hr  To always prevent sleep when uTorrent is open, you could add a line like this to a crontab:  precode* * * * * pgrep -x uTorrent &amp;&amp; caffeinate -t 60 /code/pre  (Use codeEDITOR=nano crontab -e/code if you haven't changed $EDITOR and don't know how to use vi.)  <comment71366> Strange that you'd need that. Transmission for example seems to keep my iMac awake for as long as there are active transfers. <comment71401> when I run `caffeinate -i & open -W -a uTorrent.app` I see this in terminal:  `James-RMBP:~ james$ caffeinate -i & open -W -a uTorrent.app [1] 1938`    -- sorry I don't really understand formatting in this comment section.  But basically it appears that its not really running in the background because the cursor doesn't return and if I close the shell, caffeinate is terminated when I run `pmset -g assertions`   did you mean to just run `caffeinate -i &`? as a total system don't sleep?  in that case it would be easier to set sleep to never.  I was looking for a one time white list so to speak <comment71408> Add the ampersand to the end: `caffeinate open -W -a uTorrent &`. <comment71723> the `caffeinate open -W -a uTorrent &` seems to work.  My issue now is that I have to remember to leave the terminal window up... I wish the program Caffeine with its easy interface would be updated to work with 10.8 or uTorrent would make its power assertions compatible with mountain lion.  Thanks for the help! <comment71724> If you open caffeinate on the background, you can close the shell window. Just terminate caffeinate processes with `killall caffeinate` later. <comment71733> I must be doing something wrong because when I run `caffeinate open -W -a uTorrent &` it will show `PreventUserIdleSystemSleep 1` but when I go to close the shell window I am asked "Do you want to close the window...closing the window will terminate the running processes: caffeinate, open." If I hit close, then reopen a new shell window and run `pmset -g assertions` it shows `PreventUserIdleSystemSleep 0`  What am I missing? <comment71734> Actually you're right. I've always thought that processes run on the background would stay open even after the shell window is closed. <comment71806> If you want to keep the background process running when closing the Terminal window (shell, actually), you must run `disown` on the shell used to launch it.