Low/no-cost, cross-platform alternatives to iSCSI and Fibre Channel <body> (My use case is using my RAID storage on a Linux workstation to store Time Machine backups and other data)  I have investigated options for iSCSI, they are GlobalSAN and XtendSAN. Both are prohibitively expensive, at A$119.51 and A$261.85 respectively, at time of writing.  Since there are no free or reasonably priced iSCSI initiators for OS X (there is an FOSS iSCSI initiator for OS X, but it is not currently developed enough for real use), I am seeking a viable alternative.  Please don't suggest file sharing protocols such as SMB, AFP and NFS. I've tried them, and they don't work since file permissions need to be directly managed by the OS of the machine running the Time Machine service.  <answer196221> There is known workaround which uses an older version of Droboshare Dashboard software which includes an CLI Xtend SAN iSCSI Initiator written in Java:  Download and install Droboshare Dashboard 2.6.2 which is the last version containing the Atto iSCSI Initiator. Download and install Java.  Remove/rename the file /usr/sbin/xtendsan/.iqn.filter or replace the content/add a line with the beginning of your target name:  The content of the original file looks like this:  precodeiqn.2005-06.com.datarobotics iqn.2005-06.com.drobo /code/pre  The main app to use is "xtendsancli" as superuser. Enter codesudo xtendsancli/code to get a list of possible commands.  And here is a basic script to connect to your iSCSI-targets:  precode#!/bin/bash  serverAddress="${1:-127.0.0.1}"  if [ -x /usr/sbin/xtendsancli ] ; then   for target in $(/usr/sbin/xtendsancli discoverTargets -address $serverAddress -verbose | grep ^iqn); do     /usr/sbin/xtendsancli logoutTargets -verbose -address $serverAddress "$target"     /usr/sbin/xtendsancli removeTargets -verbose -address $serverAddress "$target"     /usr/sbin/xtendsancli addTargets -address $serverAddress "$target" -autoLogin Yes     # works even if no security is set on server     /usr/sbin/xtendsancli loginTargets -address $serverAddress "$target" -autoLogin Yes -security CHAP,TargetUserName=username,TargetSecret=password   done else   echo "no file" fi /code/pre  Replace the x.x.x.x by the real IP-address of your server. Make the script executable with codesudo chmod +x scriptname.sh/code and run it with codesudo scriptname.sh/code.br If you have CHAP enabled replace "-security NONE" with "-security CHAP,TargetUserName=username,TargetSecret=password".  emTested with 10.9.5 Mavericks/Java SE Runtime Environment 1.7.0_71/Java for OS X 2014-001./em  hr  strongAddendum for OS X 10.11 El Capitan/strong  To install  Droboshare Dashboard 2.6.2 and use the Atto iSCSI Initiator you have to download and install Java for OS X 2015-001 Beta.    Then you have to disable rootless mode to be able to modify /usr/sbin/ with the following command:  precodesudo nvram boot-args="rootless=0";sudo reboot /code/pre  After the reboot install Droboshare Dashboard 2.6.2 and reboot again.  Atfer modifying  /usr/sbin/xtendsan/.iqn.filter as described above you should be able to use the iSCSI Initiator like in  Mavericks or Yosemite.  emTested with 10.11 El Capitan Public Beta/Java for OS X 2015-001 beta./em  <answer208465> SNS GlobalSAN iSCSI initiator for El Capitan is only $89 USD. Student and bulk purchase discounts are also available.   <answer208987> Drobo Dashboard stopped detecting my Drobo FS800 iSCSI after upgrading to OS X El Capitan. To fix it I had to disable System Integrity Protection (SIP) and then reinstall the JAVA OS X &amp; Drobo Dashboard 2.6.2.  These are the steps you need to get it going again...  ol liRestart OS X and go into Recovery mode by pressing Cmd + R./li liLaunch Terminal and type: codecsrutil disable/code [To make 100% sure that its disabled, execute codecsrutil status/code and make sure it reads disabled.]/li liReboot into normal OS X./li liInstall JAVA for OS X (here)./li liInstall Drobo Dashboard 2.6.2 (here)./li liUpdate Drobo Dashboard, if you want./li liEnable codecsrutil/code again./li /ol  <comment234675> While this does look like the working solution, I can't give it the "works on my machine" certification due to the machine I plan to use the initiator running 10.11, which does not yet support the legacy Java 6 runtime (which appears to be required for the /usr/sbin/xtendsan/iscsid daemon to run). I'll accept this answer, since it was tested with a non-pre-release version of OS X. <comment234678> @andonuts I've found a second free (pre-alpha)-app: [iSCSI initiator](https://github.com/iscsi-osx/iSCSIInitiator) which might be based on a FreeBSD iSCSI Initiator. But after compiling I didn't get it to run properly. <comment234683> I've tried it, and I get a kernel panic when I try to log in to the iSCSI target. <comment234737> @andonuts added description how to get the Atto iSCSI Initiator working in El Capitan. <comment282702> THANK YOU! After following the 7-step procedure noted above our Drobo Pro Volume is mounting again under 10.11 (even after upgrading Drobo Dashboard to 2.7.1). Your excellent tip SAVED us $89 hard cash!