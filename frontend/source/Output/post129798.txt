Unable to use SSL or TLS to access OpenDirectory ldap server <body> I am unable to connect with my openserver system using SSL/TLS connection.  There are no issues communicating without SSL on port 389 and can connect and retrieve directory information without issue.  However, when using port 636 and expecting secure communications the connection fails to connect.  The below openssl connection attempt details the trace which would indicate that no ssl connection is being established.  img src="https://i.stack.imgur.com/xLAQP.png" alt="Example output from openssl attempting to connect"  The following image is from ServerAdmin indicating that SSL is enabled and a certificate has been provided for the server connection.  img src="https://i.stack.imgur.com/0v2JN.png" alt="ServerAdmin Configuration"  The port 636 is open on the ldap server, and no firewall is between the two hosts.  precodesauce:Java frank$ netstat -an | grep 636 tcp6       0      0  *.636                  *.*                    LISTEN tcp4       0      0  *.636                  *.*                    LISTEN /code/pre  A telnet connection to port 636 on the server succeeds indicating that there are no firewall issues in play.  Can anybody provide any additional items to check to identify and correct the cause of this issue?  <answer130825> The following were the steps I took to resolve this issue:  Reboot the server in safe mode (hold down shift key whilst restarting)  Let it idle for a while (apparently it is cleaning out caches in this mode)  Stop the existing slapd server  precode sudo launchctl unload /System/Library/LaunchDaemons/org.openldap.slapd.plist /code/pre  Set the correct certificate GUID in the file em/etc/openldap/slapd_macosxserver.conf/em.  This can be ascertained from the contents of the strong/etc/certificates/strong directory  precodesudo sed -e 's/oldguid/newguid/' /etc/openldap/slapd_macosxserver.conf &gt;/tmp/conffile sudo mv /tmp/conffile /etc/openldap/slapd_macosxserver.conf /code/pre  Remove the configured TLS certificate values from the file strong/etc/openldap/slapd.d/cn=config.ldif/strong  precodesudo vi /etc/openldap/slapd.d/cn=config.ldif remove any lines beginning with olcTLSCertificate /code/pre  Start the slapd server again  precode sudo launchctl load /System/Library/LaunchDaemons/org.openldap.slapd.plist /code/pre  Reboot the server again into standard mode.  Then from a client computer with linux or mac osx check that you can connect via SSL and that the certificates are correct using the command  precodeopenssl s_client -connect ldap.yourdomain:636 -showcerts /code/pre  If successful you will get a dump of your server certificates as well as a connection detail description:  precodeNo client certificate CA names sent --- SSL handshake has read 5209 bytes and written 807 bytes --- New, TLSv1/SSLv3, Cipher is AES256-SHA Server public key is 4096 bit Secure Renegotiation IS supported Compression: NONE Expansion: NONE SSL-Session:     Protocol  : TLSv1     Cipher    : AES256-SHA     Session-ID: C8E0F4A4ED24021DB4D98ACF5A9ACDC2293BC3961BF2AE90026115D899369E73     Session-ID-ctx:      Master-Key:      Key-Arg   : None     PSK identity: None     PSK identity hint: None     SRP username: None     TLS session ticket:     ...     Start Time: 1400140597     Timeout   : 7200 (sec)     Verify return code: 0 (ok) /code/pre  Some other notes:  ol liApple suggests that you can use self-signed and own certificate chains (http://support.apple.com/kb/ht3745).  I use a self signed chain and it is successful./li liPort 636 is the standard ldaps port and is the port used by OpenDirectory (slapd)/li liTLS1 is supported as can be seen from the openssl connection test/li liDiffering DNS names and host names do not matter (I tried both ways with a reboot between)/li liDiffering reverse DNS does not matter (I tried both ways with a reboot between)/li /ol  <comment151953> What is the Server OS and what is the client's OS you are using? <comment152098> Server OS is snow-leopard, client os for test purposes is linux <comment152131> `SSL handshake has read 0 bytes and written 319 bytes` : this seems like it might be a firewall issue. Check that the port is open, and try disabling the firewall. You can also check which ports are open by using `netstat -na`. <comment152132> Another thought: [Apple's well known TCP and UDP ports](http://support.apple.com/kb/HT6175) lists TCP port 625 as "Open Directory Proxy (ODProxy)", which "[maintains incoming proxy connections to the local opendirectoryd(8) daemon](https://developer.apple.com/library/mac/documentation/Darwin/Reference/Manpages/man8/odproxyd.8.html)", whatever that means. Maybe try port 625 instead?