Using The Terminal Command to Shutdown, Restart and Sleep My Mac? <body> I'm getting more interested in using Terminal as an alternative way to address solutions on my Mac. I have seen this question entitled "Is there a better way to shutdown/restart OSX?".  I would therefore like to know:  How to shut down, restart and sleep my Mac using the Terminal command exclusively ?  <answer103572> The command you are after is shutdown. This  informs all users that the machine is going to be shutdown and tells all apps to close files etc.  The command takes a parameter -h, -r or -s to shut down, restart or sleep the Mac.  The command has to be run as root so you need to use sudo.  e.g. to reboot the machine immediately  precodesudo shutdown -r now /code/pre  e.g. to shutdown the machine in 60 minutes  precodesudo shutdown -h +60 /code/pre  <answer103633> Shut down without showing a confirmation dialog:  precodeosascript -e 'tell app "System Events" to shut down' /code/pre  Shut down after showing a confirmation dialog:  precodeosascript -e 'tell app "loginwindow" to «event aevtrsdn»' /code/pre  Restart without showing a confirmation dialog:  precodeosascript -e 'tell app "System Events" to restart' /code/pre  Restart after showing a confirmation dialog:  precodeosascript -e 'tell app "loginwindow" to «event aevtrrst»' /code/pre  Log out without showing a confirmation dialog:  precodeosascript -e 'tell app "System Events" to  «event aevtrlgo»' /code/pre  Log out after showing a confirmation dialog:  precodeosascript -e 'tell app "System Events" to log out' /code/pre  Go to sleep (codepmset/code):  precodepmset sleepnow /code/pre  Go to sleep (AppleScript):  precodeosascript -e 'tell app "System Events" to sleep' /code/pre  Put displays to sleep (10.9 and later):  precodepmset displaysleepnow /code/pre  The four letter codes for the Apple events are listed in codeAERegistry.h/code.  All System Events commands above send Apple events to the codeloginwindow/code process. codeloginwindow/code is sent the same Apple events as above when you log out, restart, shut down, or put the the Mac to sleep normally. See Technical Q&amp;A QA1134: Programmatically causing restart, shutdown and/or logout.  According to codeman shutdown/code, codeshutdown -h now/code and codeshutdown -r now/code send processes a codeTERM/code signal followed by a codeKILL/code signal.  According to the Daemons and Services Programming Guide, when you tell codeloginwindow/code to log out, processes that support sudden termination are sent a codeKILL/code signal, and processes that don't support sudden termination are terminated in different ways: Cocoa applications receive the codeapplicationShouldTerminate:/code delegate method, foreground applications receive the codekAEQuitApplication/code Apple event, background applications receive the codekAEQuitApplication/code Apple event followed by a codeKILL/code signal, and daemons receive a codeTERM/code signal followed by a codeKILL/code signal after a few seconds.  <answer222797> also useful, to logout from the terminal command line prompt, type 'exit':  precode[host:~user]$ exit /code/pre  <comment200704> Comprehensive answer +1 <comment205220> It's noted in the QA1134 link, but good to note here that the unattended shutdown and restart commands will fail if any running app fails to respond or cancels the action. For example, if I need to shutdown from the command line, OSX will tell each app one-at-a-time to quit. If that app pops up an "Are you sure?" dialog and there's no response within some amount of time, the system will cancel the shutdown. Also, it won't bother trying to tell any of the remaining apps to quit. <comment235555> also, I need the `-h` and the `-r` options of the terminal `shutdown` command: setting the time of shutdown, and the later time of reboot, all without having to enter a sudo password. Any idea? <comment270015> If an application is blocking your shut down, consider using [a third party app like Power Manager](https://www.dssw.co.uk/blog/2012-04-16-shutting-down-your-mac-safely/). I work on this application and it goes to *great* lengths to remain Mac friendly. <comment270888> Maybe slightly unrelated to the question and this answer, but for what it's worth this also comes in handy for me to lock my Mac from the Terminal, kind of like hitting Winkey+L in Windows: `/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend`.  I have it aliased in a file that is sourced in my .bash_profile as follows: `alias lock='/System/Library/CoreServices/Menu\ Extras/User.menu/Contents/Resources/CGSession -suspend'` <comment275136> reboot for restart also works. <comment285579> In what way does this shut down, restart or sleep the Mac?