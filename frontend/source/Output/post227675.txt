iRat Client in El Capitan Logs? <body> MacBook Air - Early 2014, OS 10.11.3  Hello, found this in my CoreTelephonyTraceScratch logs and found it concerning, based on some limited google results. I do not have an iOS device that I connect to this machine. I am not a programmer, can anyone set my mind at ease? Thanks.  hr  precode     0.052 [I] evt: Firing event 'recalculateConnectionAvailability': with params= 0, Wifi Changed     0.052 [I] DATA:TechDriver:handleWifiAvailable_sync: fWifiInterfaceName changes from en0 to      0.052 [I] DATA:TechDriver:TechDataDriver: &lt;0x7fa3baf2a450 created     0.052 [I] DATA:ServiceController:DataServiceController: &lt;0x7fa3bae150b0 created     0.052 [I] DATA:ServiceController:recalculateConnectionAvailability: fRadioModuleCreated is false, bailing for now (Wifi Changed)     0.052 [I|17+] ent.ctr: Initializing Carrier Entitlements Controller     0.052 [I] NOBB:NoBBRegistration_NOSUPPORT:NoBBRegistrationController: Object constructed &lt;----------     0.053 [I|17] ent.ctr: ================================================================================================     0.053 [I|17] ent.ctr: Reset called upon with update: false and reason CheckEntitlementsReason::kSelfInitiated     0.053 [I|17] ent.ctr: ================================================================================================     0.053 [I|17] ent.ctr: Potentially instantiating Entitlements Command Driver     0.053 [I|18+] ent.psh: Reset Push Listener     0.053 [I|15+] csi.session: handleLoginSessionStateChange_sync(): Session is logged in     0.053 [I|15] evt: Firing event 'loginSessionStateChange': with params= 1     0.053 [I|15] csi.session: initialize(): loginSessionActive: true     0.053 [I] evt: Firing event 'recalculateConnectionAvailability': with params= 1, Login session state changed to true     0.053 [I] evt: Firing event 'recalculateConnectionAvailability': with params= 1, Login session state changed to true     0.053 [I] DATA:iRatController:handleLoginSessionStateChanged_sync: Session is logged in. Start iRatClient     0.053 [I] DATA:ServiceController:recalculateConnectionAvailability: fRadioModuleCreated is false, bailing for now (Login session state changed to true)     0.053 [I] DATA:ServiceController:recalculateConnectionAvailability: fRadioModuleCreated is false, bailing for now (Login session state changed to true)     0.053 [I] DATA:iRatClient:start_sync: Starting iRat Client     0.053 [I] DATA:iRatClient:register_sync: register with server: {     "kMessageId": 1u,     "kMessageArgs": {         "kWCMRegisterProcess_ProcessId": 7u     } }     0.054 [I] 5wi: Constructor: fCountrySetFlag set to false     0.055 [I|24+] sysobs: Polling for the states of screen, lock, reachability status, and battery saver mode     0.055 [I|22+] 5wi: No retrieved value for SystemDeterminationManager::ConnectivityHelperType     0.056 [I|22] 5wi: No retrieved value for kEnableIMSUserPreference, using default false     0.056 [I|17] ent.ctr: No Entitlements Driver     0.056 [I|17] ent.ctr: Adding FaceTimeOverCellular to not supported     0.056 [I|25+] max: Switch support retrieved -----  3G switch support: DataRateSwitchSupport::kUnknown, LTE switch support: DataRateSwitchSupport::kUnknown     0.056 [I|25] max: User preference for Enable 3G: DataRateUserPreference::kUnknown with  3G switch support: DataRateSwitchSupport::kUnknown     0.056 [I|25] max: User preference for Enable LTE: DataRateUserPreference::kUnknown with LTE switch support: DataRateSwitchSupport::kUnknown     0.056 [I|17] ent.ctr: Adding Tethering to not supported     0.056 [I|17] ent.ctr: Adding Agent to not supported     0.056 [I|17] ent.ctr: Adding VoWiFi to not supported     0.056 [I|17] ent.ctr: Adding Thumper to not supported     0.056 [I|17] ent.ctr:      0.056 [I|17] ent.ctr: Generating entitlement changed events     0.056 [I|17] ent.ctr:      0.056 [I|17] evt: Firing event 'entitlement_changed': with params= 0000000000, 0000000000, 0111001100, EntitlementResults(Phone Number:Unknown, SubscriptionAndUsageStatus:Unknown, FaceTimeOverCellular:Unknown, Tethering:Unknown, Update Push Token:Unknown, Perform Auth-Only:Unknown, Agent:Unknown, VoWiFi:Unknown, Thumper:Unknown, VVM:Unknown, )     0.056 [I|25] max: User Preference evaluated -----  3G switch user preference: DataRateUserPreference::kUnknown, LTE switch user preference: DataRateUserPreference::kUnknown     0.057 [I|17] ent.ctr: Invalidating Entitlements State with reason CheckEntitlementsReason::kSelfInitiated     0.057 [I|24] DisplayStateModel:changeFlag: DisplayIsOn, from true to true     0.057 [I|24] evt: Firing event 'statusBarVisible': with params= 1  /pre/code  <answer227972> Looks like a remote control client is installed (see https://github.com/tnextday/iRaT) - yes, I'd be concerned.  <answer243789> No, you don't have to be concerned. Open up Activity Monitor, select All Processes from the menu at the top and look for something like "WirelessRadioManagerd". If you see that, there's the source of the logs.  Regarding the log's contents: they are debug (trace level, as the log suggest) logs for some of the Handoff functionality.  The WirelessRadioManagerd program is made by Apple, you can find it in the hidden system directory /usr/sbin. If you are running El Capitan, this file will definitely be genuine as long als you did't disable System Integrity Protection or SIP (or rootless mode as you could find it referred to). If you never touched terminal or used any shady apps, it's most likely not disabled.  If you want to be sure your WirelessRadioManagerd thingy is genuine, you can upload it to VirusTotal and see for yourself :) (tip: copy it to your desktop for easy selecting it when you upload it)  <comment278261> Thank for looking, dr nixon. Did you see code in that github repo that looked related to my log activity? <comment300313> This is wrong. iRAT is used with an Apple component called "WirelessRadioManagerd" which lives in /usr/sbin/WirelessRadioManagerd and is code-signed by Apple itself. <comment300314> I couldn't edit my previous commend, so continuing in a new one: While iRAT is indeed also the name for malware (a RAT, as the name suggests, which is a Remote Access Tool), at least one system function is also called iRAT, and WirelessRadioManagerd definitely uses that name internally. <comment300647> thx, and I confirmed that System Integrity Protection is still enabled on my system.