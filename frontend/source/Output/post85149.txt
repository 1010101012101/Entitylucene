To let a Mac automatically use Wifi and Ethernet to double the connection speed? <body> I am staying at a hotel, and for some reason, I think they limit each Wifi connection to 95 kbyte / s.  So that is roughly 1.2 Mbps... and since I have 18 Mbps at home, I am using a speed that is less than 1/10 of the speed at home.  So I asked at the front desk to see if they have a room with a wired connection, and the answer is yes, and I switched to this room, and even bought a Thunderbolt to Ethernet adapter for the Macbook Air to be able to use the Ethernet wired connection.  But to my surprise, the speed of that connection is just the same: 95 kbyte / s.  Is there an easy way to tell OS X to automatically use both connections so that the speed can be doubled?  For example, if one tab in Chrome uses one connection and the downloading file in Chrome uses another connection.  Or if Chrome uses one connection and Firefox uses another one, that might work too.  Or can the OS be smart and just "merge" the 2 connections transparently?  (or if the OS "randomly" uses one or the other connection each time a connection is made, then the effect is roughly achieved too).  <answer85159> From Super User: If I have two internet connections on osx, how can I use both to increase my bandwidth?:     Short answer: no. With 2 links, you have 2 IP addresses. It can be done with some specific higher end NICs (e.g. Intel quad cards), but they will appear to the rest of the network as a single IP address in that mode. If the assumption is that you have 2 distinct IP addresses, it cannot be done   <answer85162> If you are using VMWare or Parallels you can connect a virtual machine directly to one specific network interface (WiFi in the example)  img src="https://i.stack.imgur.com/6fya6.jpg" alt="enter image description here"  and use the other interface as the default for OS X:  img src="https://i.stack.imgur.com/nNHZK.jpg" alt="enter image description here"  In the specific situation described in the question it may be too much of a hassle though.  <answer85179> Having two or more functional network devices in a computer each with its own IP address is perfectly acceptable, and is how many servers work. The issue for a desktop or laptop is telling software to use one and not the other emwhen the app isn't designed to do so/em. You can't combine two IP addresses together to make one without special driver software â€” some modems used to be able to "shotgun" two devices together to overcome V.90 speeds, but this wasn't widespread.   A theoretical solution would be to setup an SSH server using one of the connections (I suspect SSH will be fine with letting you define it should use eth0, for example). You could then connect to this server from your "main" Wi-Fi connection and ask it for port forward, so that one particular port (or a range of them) are channelled through the SSH server on the Ethernet connection.  You could port forward BitTorrent traffic, for example, and use your "main" connection for everything else.   Unfortunately I don't know enough about SSH to find out how this might be done and haven't the time to research, but a quick browse of the man pages might help you out.   <answer85211> You can not use only a Mac, you need an additional special router to access more than one Internet connection.   For example this machine can bound any type Internet connection and route it to you. A detailed image how this works, can be found on the "Features" tab on the product page.  <answer85215> ssh tunnels are truly the swiss army knife of networking.  If you can set up an ssh tunnel back to your home network, you can enable compression on the tunnel. That means that all the data over the tunnel will be compressed at one end and decompressed at the other end. Your apparent network bandwidth will be somewhat larger, though the CPU load on both your laptop and the machine in your home network will be larger too.  You'll use a command line like this...  precodessh -p 45678 -D 3333 -C userid@host /code/pre  Your home gateway needs to accept connections on some 45678 or some other port. Don't use the standard port of 22, since there are machines out on the internet that scan blocks of ip addresses attempting to connect to port 22 and trying large numbers of dictionary passwords. SSH should be secure, but why risk it by advertising yourself.  Configure your home gateway to forward connections on the ssh port # - say 45678 - to your host machine inside your home network at port 22. You also need to know your home ip address, or register with a service like dynamic dns.  Your ssh server is then running on the host machine within your home network.  The option -D 3333 tells ssh to run a SOCKS proxy for you at localhost:3333. For Safari go into your network settings-advanced-proxies and enable the SOCKS proxy for localhost 3333. For Firefox or Chrome you can do this in the browser's settings. The SOCKS proxy will automatically forward everything to your host back home, then out to the internet from there.  Now, everything you do in your browser will first be compressed, sent over the slow internet back to your home, then decompressed and sent out to the internet as appropriate using your fast home connection. All the traffic back will come to your home via fast internet, get compressed, forwarded to you over the slow connection, decompressed, and sent to your web browser.  As an added bonus, Netflix and other services will think you are in your house and you'll get all the services you would get at home.  <comment98156> There is a major caveat here. Inbound traffic will arrive at the correct interface but outbound traffic typically uses just one. Look for the default route using 'netstat -rn'; that's going to be your primary outbound interface.  Now, you could add static routes to control what packets go where, but the tedium and complexity is not worth the trade off.  So, for typical web browsing, email, etc. you will only ever really use one interface in a dual NIC setup. <comment98308> It may be worth noting Connectify Dispatch.  A mac version is (kinda) in the works. www.connectify.me/kickstarter-dispatch-mac-kinda/ <comment98390> actually, that's a pretty good idea if the VM can be used just to look up info, so no matter what traffic the Macbook has, the VM has a clean, dedicated channel to get info, such as looking up Google Maps, or searching for info on Google. <comment98414> This is quite a creative solution! <comment98515> It won't help on browsers, since most webservers now download as gzip'ed streams.