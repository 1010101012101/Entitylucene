How do I print my logical volume group UUID to file? <body> I'm in the process of trying to automate getting the LVGUUID and printing it as a string to a text file, or better piping it in terminal to other commands. All I can do right now is codediskutil coreStorage list/code and then copy/paste the UUID as needed. Is there a faster way to do this?  <answer294447> strongNote:/strong This answer is just example emcode/em as I only have one Core Storage Volume to test against, however, if there's more then one, the codeawk/code command could be modified to accommodate accordingly. Although without the output of multiple Core Storage Volumes, I cannot give an example.  If it's the codeLogical Volume Group UUID/code, you can user the following example:  precode$ lvguuid="$(diskutil coreStorage list | awk '/Logical Volume Group/{print $5}')" $ echo "$lvguuid" 696AD841-1F53-4D33-9496-3E36D33AB270 $  /code/pre  In the codeawk/code emcommand/em, you can substitute codeLogical Volume Group/code with codePhysical Volume/code, codeLogical Volume Family/code and  change code$5/code as appropriate. Based on the order of the search string shown in this line, it will be code$5/code, code$4/code, code$5/code.  For codeLogical Volume/code, you'll need to use a coderegex/code, as in the following example:  precodelvuuid="$(diskutil coreStorage list | awk '/Logical Volume [A-F0-9]{8}-/{print $4}')" /code/pre  Understanding the coderegex/code:  ul licodeLogical Volume [A-F0-9]{8}-/code  ul licodeLogical Volume/code matches the characters codeLogical Volume/code literally (case sensitive)./li /ul/li licode[A-F0-9]{8}/code - Match a single character present in the list below.  ul licode{8}/code Quantifier â€” Matches exactly 8 times./li licodeA-F/code a single character in the range between codeA/code (index 65) and codeF/code (index 70) (case sensitive)./li licode0-9/code a single character in the range between code0/code (index 48) and code9/code (index 57) (case sensitive)./li licode-/code matches the character code-/code literally (case sensitive)./li /ul/li /ul  So, in my example codeawk/code matches codeLogical Volume 38712F52-/code and returns:  precode38712F52-5967-4A49-87D6-C66D4B199F28 /code/pre  hr  The above examples set a emvariable/em that can be called from the emcommand line/em or emscript/em, however, if you what the output to a emfile/em, then use the following example:  precodediskutil coreStorage list | awk '/Logical Volume Group/{print $5}' &gt; /path/to/filename /code/pre  hr  On my system here's the output of the codediskutil coreStorage list/code emcommand/em on an encrypted USB Flash Drive:  precode$ diskutil coreStorage list CoreStorage logical volume groups (1 found) | +-- Logical Volume Group 696AD841-1F53-4D33-9496-3E36D33AB270     =========================================================     Name:         Encrypted     Status:       Online     Size:         15661490176 B (15.7 GB)     Free Space:   16777216 B (16.8 MB)     |     +-&lt; Physical Volume E0E76F6B-A4E2-466D-B8E5-D5977ECD0522     |   ----------------------------------------------------     |   Index:    0     |   Disk:     disk3s2     |   Status:   Online     |   Size:     15661490176 B (15.7 GB)     |     +-&gt; Logical Volume Family EAF4984B-94C8-49B6-BCC6-76A8724E04D2         ----------------------------------------------------------         Encryption Status:       Unlocked         Encryption Type:         AES-XTS         Conversion Status:       Complete         Conversion Direction:    -none-         Has Encrypted Extents:   Yes         Fully Secure:            Yes         Passphrase Required:     Yes         |         +-&gt; Logical Volume 38712F52-5967-4A49-87D6-C66D4B199F28             ---------------------------------------------------             Disk:               disk4             Status:             Online             Size (Total):       15325941760 B (15.3 GB)             Size (Converted):   -none-             Revertible:         Yes (unlock and decryption required)             LV Name:            Encrypted             Volume Name:        Encrypted             Content Hint:       Apple_HFS $  /code/pre  <comment371657> *Logical Volume* won't work properly because it has several occurrences.... with $4 *Group* and *Family* will be listed also <comment371660> Thank's @klanomath, I've updated my answer. <comment371667> What's the real issue here? The `df .` command will get you the raw filesystem device for the current directory. (disk1s1 for me at present) and `diskutil info disk1s1` gets you the details about that filesystem. `system_profiler SPStorageDataType | grep "LVG UUID"` also works to dump just the existing UUID the system knows about right now.  It's not clear why you'll want to know the enclosing group - but perhaps the existing answer is exactly what you want? <comment371669> Also - APFS containers likely won't follow along the core storage path with LVG UUID - so I'm asking the OP to clarify what they actually want to do. This is likely an X Y problem - a useful and interesting one, but still XY. <comment371678> What I'm trying to do is break Core Storage, as the Macs in question are being imaged for public use. Therefore I'm running a script from a removable hard drive and it just saves me a couple steps if I can auto-populate the command rather than copying and pasting. <comment371705> Excellent use case @christian - imaging is hard work. Check this guy for scripts, workflows, and more - https://derflounder.wordpress.com/ <comment371796> @user3439894 UUIDs only contain hex numbers (0-9A-F). <comment371798> Thank's @klanomath, I've updated my answer, again. :)