How to use nohup/send process to background on os/x <body> The command  precodenohup &lt;command&gt; &amp; /code/pre  does not actually work properly on mac it seems:  the process is suspended. Issuing  precodefg /code/pre  appears to be required to reactivate the command.  Here is an illustration:  precode$nohup jekyll serve --watch &amp; [1] 47426 $appending output to nohup.out   [1]+  Stopped                 nohup jekyll serve --watch /code/pre  Now, on Linux  the process would not have been "stopped" by issuing that command..  In the above case: if we issue  precodefg /code/pre  Then the jekyll server proceeds to launch properly: we can access it on port 4000. But I do not want to occupy a terminal session with that process: it should have been background-ed.  So .. what is the way to achieve this on mac?  <comment201210> `nohup` is certainly well-supported on OS X. You likely have a problem with your command. For example, `rvm` + `nohup` isn't a great idea, but that's `rvm`'s fault, not OS X's fault. What's in `nohup.out`? And what shell are you using? <comment287048> There's definitely [something different](http://apple.stackexchange.com/questions/66568/nohup-or-persistent-process-on-mac-os-x-ssh) going on with osx <comment362263> I'm seeing this exact behavior on MacOS Sierra (10.12.5), where it places the backgrounded spawned process in Stopped state as @javadba described, while the exact same thing on Linux doesn't put it in Stopped state.. it stays running in the background. <comment364649> I get the behavior I expect with `nohup sleep 3600 &` so I imagine the problem is that Jekyll does something to indicate it wants to foreground.  Can you trace it to see what it does?