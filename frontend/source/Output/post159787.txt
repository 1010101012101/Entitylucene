Applescript to replace string using sed <body> I need and Applescript to replace some text as follow:  Original text:  precode string  string  string  $  text1  string  string  string  $  text2  text3  string  string  string  $  text4 /code/pre  The required output is:  precode$ text1 $ text2 text3 $ text4 /code/pre  I can do it in the terminal with this command:  precode$ echo "string  string  string  $  text1 string  string  string  $  text2 text3 string  string  string  $  text4" | sed -r 's/^(.*)\$ ?(.) (.*)$/$ \3/g' $ text1 $ text2 text3 $ text4 /code/pre  By the way, i'm using bash version 4.3.30 and sed 4.2.2, both from homebrew.  The issue here is that I need to do it from an applescript. This is my approach:  precodeset commandString to "echo \"string  string  string  $  text\" | sed -r 's|^(.*)\\$ ?(.) (.*)$|$ \\3|g'" as string set formattedCode to do shell script commandString /code/pre  And I get the following error:  precodeerror "sed: illegal option -- r usage: sed script [-Ealn] [-i extension] [file ...]        sed [-Ealn] [-i extension] [-e script] ... [-f script_file] ... [file ...]" number 1 /code/pre  If I remove the code-r/code option, I get a different error:  precodesed: 1: "s|^(.*)\$ ?(.) (.*)$|$  ...": \3 not defined in the RE /code/pre  If I remove the code\3/code, the output must be code$/code instead of code$ text/code, but codesed/code command do nothing and it outputs:  precodestring  string  string  $  text /code/pre  I supposed that this might be a problem with codesed/code version. So, If I replace codesed/code with code/usr/local/bin/sed/code it does nothing again after line codeset formattedCode to do shell script commandString/code.  Someone know where the problem is?  <answer159800> h2Solution 1: sed/h2  Option -r of GNU sed is -E on the OS X/BSD sed (the one that comes with the OS, code/usr/bin/sed/code). And to get rid of the encoding problem with 's, add codeexport LC_ALL=en_US.UTF-8; export LANG=en_US.UTF-8;/code to the beginning of the do shell script command (see the strongquestion/strong here):  precodeset original_text to "string  string  string  $  text1 string  string  string  $  text2 text3 string  string  string  $  text4"  set commandString to "export LC_ALL=en_US.UTF-8; export LANG=en_US.UTF-8; " &amp; ¬     "echo " &amp; quoted form of original_text &amp; " | sed -E 's|^(.*)\\$ ?(.) (.*)$|$ \\3|g'" as string set formattedCode to do shell script commandString /code/pre  Returns:  precode$ text1 $ text2 text3 $ text4 /code/pre  img src="https://i.stack.imgur.com/hfoQq.png" alt="screenshot of solution 1"  h2Solution 2: AppleScript's text item delimiters/h2  precodeset original_text to "string  string  string  $  text1 string  string  string  $  text2 text3 string  string  string  $  text4"  set output to {} set od to AppleScript's text item delimiters set AppleScript's text item delimiters to {" "} set all_lines to every text item of original_text repeat with the_line in all_lines     if "$" is not in the_line then         set output to output &amp; the_line     else         set AppleScript's text item delimiters to {"$"}         set latter_part to last text item of the_line         set AppleScript's text item delimiters to {" "}         set last_word to last text item of latter_part         set output to output &amp; ("$ " &amp; last_word as string)     end if end repeat set AppleScript's text item delimiters to {" "} set output to output as string set AppleScript's text item delimiters to od return output /code/pre  Returns:  precode$ text1 $ text2 text3 $ text4 /code/pre  img src="https://i.stack.imgur.com/XJ4Mu.png" alt="screenshot solution 2"  <comment187796> The command in the applescript does not recognise the  . Also you use the -E option for extended RegEx. If you actually remove the last one you get the result. But I suspect you have them there for a reason. <comment187804> Is not that simple. As input I receive several lines, ones can be preceded by the example ("string  string  string  $  text") but ones can't. Because of that I need the sed command working. If I change the sed option to `-E` works on the terminal, but not on the applescript. <comment187812> @jherran, I updated my answer with what seems to be a working sed solution at least on my end. If that works for you too, I can clean up the answer removing the AppleScript attempts. <comment187816> Very close @Ilari Scheinin, but unfortunatelly it only works for the last line. Check my question, I updated it a bit. <comment187818> @jherran, I'm not sure what doesn't work: I get the exact same output running the command from the shell as I get running it from AppleScript (what you have listed under "Required output" except that there is an extra space before text3). So, I don't know if it's the regexp that needs tweaking, or something about the connection between AppleScript and the shell. (I'm on Yosemite 10.10.1 in case that could make a difference.) <comment187832> For me on terminal works as described. From the applescript just display the last line. And, yes, I'm on yosemite. <comment187919> Strange. @jherran, I updated my answer cleaning it up and now both approaches (sed and AppleScript's text item delimiters) work for me. Can you check again. <comment187921> Works now, thanks a lot.