What does the undocumented switch, `-t`, do for the `mdutil` utility? <body> In the process of troubleshooting why my Time Machine setup was not completing any backup operations and hadn't finished backing my machine up since 4PM today&thinsp;—&thinsp;it's now 11:49PM&thinsp;—, I saw two suspicious console log entries as follows (btw: after a re-boot, Time Machine completed, but I'd still like to clean up my console log messages and/or spotlight, as the case may be):  precode*9/24/13 11:36:57.053 PM sandboxd[485]: ([484]) mdworker32(484) deny mach-lookup com.apple.PowerManagement.control (import fstype:hfs fsflag:480D000 flags:200000056 diag:0 uti:org.openxmlformats.spreadsheetml.sheet plugin:/Library/Spotlight/Microsoft Office.mdimporter - find suspect file using: sudo mdutil -t 9288141)* /code/pre  and  precode*9/24/13 11:37:57.524 PM sandboxd[499]: ([498]) mdworker32(498) deny mach-lookup com.apple.PowerManagement.control (import fstype:hfs fsflag:480D000 flags:200000056 diag:0 uti:com.microsoft.excel.openxmlformats.spreadsheetml.sheet plugin:/Library/Spotlight/Microsoft Office.mdimporter - find suspect file using: sudo mdutil -t 2795200)* /code/pre  I did as suggested, and rather than bore you all with that content (and have to figure out how to make it not auto-wrap in this field), here's the question:   strongWhat does the undocumented switch, -t, do for the mdutil utility?/strong  I've looked in the codema/coden page and several codema/coden pages online, and none document this switch.  Well, maybe I can format one of them:  precodewhmcclos@mbp ~ $ sudo mdutil -t 9288141 dyld: DYLD_ environment variables being ignored because main executable (/usr/bin/sudo) is setuid or setgid Password: /Users/whmcclos/Documents/Medical Expenses.xlsx /Volumes/Time Machine/Backups.backupdb/William’s MacBook Pro/2013-09-24-160438/Macintosh HD/Applications/Adobe Fireworks CS6/Adobe Fireworks CS6.app/Contents/Frameworks/ICUData.framework/Versions/4.0 /code/pre  OK - that wasn't hard - here's the other (I'm gettin' tired!):  precodewhmcclos@mbp ~ $ sudo mdutil -t 2795200 dyld: DYLD_ environment variables being ignored because main executable (/usr/bin/sudo) is setuid or setgid /Users/whmcclos/Library/Preferences/Microsoft/Office 2008/Excel Toolbars (12) /code/pre  <answer103171> My educated guess is that codemdutil -t /path/to/code returns the TRUE absolute path of a file or folder. For example:  precode$ diskutil -t /this/is/a/real/path /this/is/a/real/path /code/pre  When creating a symlink  precode$ cd /this/is/a $ ln -s /this/is/a/real/path /this/is/a/symlink $ mdutil -t /this/is/a/symlink /this/is/a/real/path /code/pre  And when using a relative path  precode$ cd /this/is/a $ mdutil -t real/path /this/is/a/real/path /code/pre  This behavior is almost identical without using the code-t/code flag, except for the trailing code:/code after the pathname.  precode$ mdutil /this/is/a/real/path /this/is/a/real/path: /code/pre  But when using a non existing path with code-t/code, it gives a message and not an error.  precode$ mdutil -t /this/is/a/nonexisting/path Unable to resolve path  $ mdutil /this/is/a/nonexisting/path Error: invalid path `/this/is/a/nonexisting/path'. /code/pre  <answer244238> mdutil -t can be used to display the real path from an inode number. For example you can do the following:  precode&gt; touch /tmp/aFile &gt; ls -i /tmp/aFile 31405051 /tmp/aFile &gt; mdutil -t 31405051 /private/tmp/aFile /code/pre  <comment126319> can you vote if the answer is satisfactory?