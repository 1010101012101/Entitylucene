How to list all files with Finder Comment using unix? <body> How i can get path of all files, folders which has Finder comment and also the comment.  Like this: /path/here/file.txt TAB finder comment is here /path4/here2/folder TAB finder comment is here  I could first use this to find all items with comment:  precodemdfind kMDItemFinderComment == '*' /code/pre  And then find the comments:  precodemdls -name kMDItemFinderComment pathhere /code/pre  But is there a way to get all in single command?  <answer216533> No - you'll need to script the two commands together and loop over the list of files. It's a bit of a chore since you'll need to handle spaces in file names and unicode characters as well as potentially finding 100,000 files that match and avoid rolling your variable over the max length.  For small searches, you could probably stuff all the results in one variable and pipe things together, but that's liable to break under foreseeable real world uses.  <answer216561> This will do the trick:  precode find . -xattrname com.apple.metadata:kMDItemFinderComment \         -exec printf %s\\t {} \; \         -exec mdls -name kMDItemFinderComment -raw {} \; \         -exec echo \; /code/pre  Breaking this down a little:  ul licodefind/code looks through the current directory (code./code) (and everything "below") for files with an extended attribute (code-xattrname/code) called codecom.apple.metadata:kMDItemFinderComment/code./li liAs it finds each file:  ul lithe first code-exec/code argument uses codeprintf/code to print out the file path and a tab (code\t/code) character./li liThe second code-exec/code runs codemdls/code to read the actual comment./li liThe third code-exec/code just prints out a newline (code\n/code) character./li /ul/li /ul  Note that the codefind/code command is recursive, so this solution will look through subdirectories as well.  If you require absolute paths then use codefind `pwd`/code instead of codefind ./code  <comment261696> Create a permanent alias for the combined commands, without including the path course.