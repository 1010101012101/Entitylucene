how can I configure a mac to modify parent directory timestamps when programs touch files <body> I would prefer to have all parent directories timestamps modified when a file is modified by any program.  Is this possible on a mac?  Basically, for huge build systems with 100 directories, we would only have to scan 100 directories and dig down recursively into a very small subset of changes to create a very fast efficient build.  This could bring build times from 10 minutes down to 2 minutes.  Is something like this even possible?  thanks, Dean  <answer148282> You should be able to use git-hooks with a post-commit trigger to read the push logs and then execute a shell script to touch your parent directory (or directories, if you wish to work up the tree). The push logs should contain all the modified files, so you can parse that information and touch the dirs accordingly.  This article may shed further light:  https://superuser.com/questions/740026/how-to-run-a-shell-script-on-git-commit  I hope it helps you to arrive at an efficient solution.  <comment174561> I can't see how what you want is possible. That said, `find` is very powerful in being able to locate files based on modified time. You should easily be able to find all modified source files in a build tree and plan your build targets accordingly. If you have scheduled builds, it should be relatively simple to determine which files have been altered since the previous build. <comment174613> that ends up being way to slow for gigantic projects.  The first level of directories alone is 354 directories and it just gets worse from there. <comment174617> Fair enough. Surely, though, your source control system can report what has been changed. If it can't, well, you know. <comment174629> @TraneFrancks yes, and that is a noticeable 2-3 seconds with git status....ick.  I really wish I had a way to timestamp the directories and that 2-3 seconds becomes more 200ms or so for the build tool at least. <comment174713> I don't think so, directories are discrete objects in OS X.