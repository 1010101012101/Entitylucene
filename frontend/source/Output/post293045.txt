Apple store Rejected app submit - Guideline 4.2.2 - Design - Minimum Functionality <body> Look at : https://forums.developer.apple.com/thread/76742   also others link have same problem no concrete answer.   What is a minimum native functionality ?   Many app's already have very similar view and functionality with own web app.   I prepare to implement push notification , something around camera (new feature) and different UI style .  If this is not enough  i don't know what to do.  <answer293049> If you are new to the App Store, I’d review the summary guidelines. If you’re using a third party tool (react or phone gap or similar) the native requirement likely weeds out thousands of sample project submissions. The 4.2.2 rejections is in the top 10 list for the past week so your app may look too much like a web app and not a native app.   ul lihttps://developer.apple.com/app-store/review/rejections//li /ul  It’s hard to know since the only people that know your specific app are you and the review team. I would pick one native only feature you can get done in two weeks and submit that new build - pointing out the native feature top billing in the app description.  You didn’t mention, but next time I would also submit only for test flight beta and not for final review when you have a new build of your app.   <comment369721> You might need to post a portion of your rejection. The forum link you posted requires registration to view. I’ll get a shell of an answer up which points to the friendly manual. <comment369728> If you vote to close - keep in mind - this is on topic. iTunes connect is a service Apple provides and developers can ask about that service here. The only prohibition on developer questions here is asking about code level issues. Feel free to ask on [meta] if anyone wants clarification or to change the policy here. <comment369731> Also - test flight review isn't any easier than normal - however it indicates you are all in on the Apple ecosystem - getting apps submitted, testing them more broadly than within your team, regular submissions, regular incremental updates. That will help you be set apart from people tossing 1.0 at the store and seeing which stick.