How can I automate pasting of password into SecurityAgent? <body> On OS X 10.8.x I had an Automator service set up to paste a password from clipboard into the password window that pops up for mounting an encrypted disk.  I don't wish to store the password in my keychain, and it is long and tedious to type out.  I never got the applescript within the Automator service quite right. It would generate an error, but it still got the job done (i.e. the password was pasted). Since upgrading to Yosemite it seems the script in the Automator service doesn't work at all. The error generated indicates "window 1" doesn't exist.  Here is what I had:  precodetell application "System Events" to tell process "SecurityAgent" set value of text field 1 of window 1 to (the clipboard) if exists (text field 2 of window 1) then     set value of text field 2 of window 1 to (the clipboard) end if click button 1 of group 1 of window 1 end tell /code/pre  I don't recall where I got this from, but some of it may have come from here   I know very little about AppleScript, and would appreciate some help fine tuning (or completely rewriting) this script so that it does the following:  ol liChecks there is data in the clipboard/li liChecks the SecurityAgent window is active (or in some way ensures it can be interacted with, to avoid generating an error)/li liPastes the content of clipboard/li liClicks the 'Unlock' button/li /ol  I don't know if it is possible, but it would be handy if it also brought 1Password to the foreground and activated "Copy password" (which is a menu option in the "Items" menu). I can, however, have Automator actions perform that task. But it would be nice to see (for learning) how to achieve that with AppleScript.  <answer175705> I don't have anything to test it on, so this is a pure guess.  Maybe the app isn't frontmost at that point, so this might help  precodetell process "SecurityAgent" to activate (*this will bring it to the front if it's already running*)     --tell application "System Events" (*try with &amp; without this - you'll need to balance up the end tells at the end*)     set value of text field 1 of window 1 to (the clipboard)     if exists (text field 2 of window 1) then         set value of text field 2 of window 1 to (the clipboard)     end if     click button 1 of group 1 of window 1     -- end tell (* uncomment to balance tell blocks if using the above System Events*) /code/pre  I'm not certain whether you need System Events to do that task, or whether you could simply direct the output at SecurityAgent itself.  BTW, there is pretty much emalways/em data in the clipboard, so testing for that would not really help - without noting the actual password in the script [insecure, of course] there is no way I can see to test if it matches the correct data.  <answer175709> To stop the error you are getting you need to take out the 'of group' part of the click command.  (Tested by creating a encrypted dmg)   You do not need it and that is why you get the error.  The Buttons are 1 and 2.  1 will be strongcancel/strong. 2 will be strongok/strong  So you will need to change the button you are calling also.  precode    set theData to (the clipboard)  set appName to "SecurityAgent"  tell application "System Events"     if exists window 1 of process appName then (* only continue if process is running. If it is not it will not have a window *)         tell process appName              set value of text field 1 of window 1 to theData             if exists (text field 2 of window 1) then                 set value of text field 2 of window 1 to theData             end if             click button 2 of window 1      end tell     end if end tell /code/pre  hr  Update:  In answer to the OP's questions in comments and use their code snippet this edit shows how to activate  1passowrd and use strongif not  then/strong with a strongreturn/strong to cancel the script on conditions that a window does not exist.  precode    set appName to "SecurityAgent" set passApp to "1Password 5" (* set this to the name of your password manager *) tell application "System Events"     if not (exists window 1 of process appName) then (* only continue if process is running. If it is not it will not have a window *)          return (* The return ends the script run here*)      end if  end tell activate application passApp tell application "System Events"     set position of window 1 of process appName to {10, 10}      tell application "SystemUIServer"         set answer to display dialog "Make sure correct 1Password item is actively selected (i.e. click it again if it was previously selected), then click “Continue” to proceed." buttons {"Continue"}     end tell      tell application "System Events"         tell process passApp             (* If you are not using 1Password, you may need to change the menu item clicks, below, to whatever is correct in your particular password manager *)             click menu item "copy password" of menu "item" of menu bar 1             delay 1             set appData to the clipboard         end tell         tell process appName             set value of text field 1 of window 1 to appData             if exists (text field 2 of window 1) then                 set value of text field 2 of window 1 to appData             end if             click button 2 of window 1         end tell     end tell  end tell /code/pre  <answer175777> With thanks to input from markhunte and tetsujin, I came up with the following solution. With all things considered, the exact requirements evolved to the following:  ol liEnsure a SecurityAgent dialog is actually present so that script doesn't run otherwise./li liReposition the SecurityAgent dialog because it can readily get in the way in its default position./li liDisplay a message which will stay on top of 1Password, but is not generated through 1password, instructing the user to select the correct item in 1Password/li liAutomatically copy the password for current 1Password item/li liDelay the script long enough for the password to actually end up in the clipboard, before the script attempts pasting it./li liPaste the clipboard into the SecurityAgent, and submit it./li /ol  I came up with the following solution:  precodeset appName to "SecurityAgent" set passApp to "1Password 5" (* set this to the name of your password manager *)  tell application "System Events"      if not (exists window 1 of process appName) then -- test if SecurityAgent window exists          return -- abort if SecurityAgent window does not exist      end if  end tell  tell application "System Events"     set position of window 1 of process appName to {10, 10} -- move SecurityAgent window out of the way   end tell  tell application passApp       activate -- bring 1Password to the forefront, run it if not running  end tell  tell application "System Events"     tell application "SystemUIServer"       set answer to display dialog "Make sure correct 1Password item is actively selected (i.e. click it again if it was previously selected), then click “Continue” to proceed." buttons {"Continue"}     end tell     tell process passApp     (* If you are not using 1Password, you may need to change the menu item clicks, below, to whatever is correct in your particular password manager *)         click menu item "copy password" of menu "item" of menu bar 1         delay 1         set appData to the clipboard     end tell     tell application "System Events"         tell process appName             set value of text field 1 of window 1 to appData             if exists (text field 2 of window 1) then                 set value of text field 2 of window 1 to appData                 click button 1 of window 1             else                 click button 2 of window 1             end if          end tell      end tell end tell /code/pre  I made the whole script conditional on the presence of SecurityAgent, because this script will be assigned to a keyboard shortcut, and if that key combination is inadvertently selected by the user, I'd rather they not be bothered with an unexpected script process.  If there are ways in which I could refine or improve this solution, please advise. I am very happy to be learning more about AppleScript.   strongFINAL UPDATES:/strong Had to make one final change. It turned out the button numbers for CANCEL and OK change around from the SecurityAgent instance for creating an encrypted disk/disk-image, and for when opening an encrypted disk/disk-image. So I had to modify the IF THEN statement right near the end to handle each scenario.  <comment207305> You do not need to activate the window as you are telling the process to do stuff other then keystrokes. You will also need "System Events" to tell the process.. <comment207376> Thanks for this. I have a slight hurdle. I get the error, - Expected end of line but found “"”. - A number of times I got the same error when I was playing around with the script I was already working on. But I had no idea why this error comes up, as the syntax looked identical to other scripts I have on hand. Any ideas? In this instance, the error is referring to the first instance of " just before SecurityAgent. <comment207397> Thanks. Works great. I tried adding in script to first obtain the password, using       `tell application "System Events"` `tell process "1Password 5"`       `click menu item "copy password" of menu "item" of menu bar 1`      `end tell`    `end tell`  but somehow the resulting clipboard data does not get assigned to theData. Rather any previous clipboard data is assigned to theData. Which means that if I run the script a second time, then the correct data will end up in theData, but only because it was copied into clipboard the first time around. Any suggestions why that might be? <comment207399> Looks like the above mentioned issue with the password being picked up is because the script was moving to fast. I added a 1 second delay, and the problem is solved. Will post the resulting script as a new Answer. <comment207426> ahh… tell application, not process <comment207434> the reason you are getting issue with 1Password not activating is because you are telling it inside of a system events tell block. Take it out of that and put it above the start of the system events tell block. <comment207539> I think I ended up doing it that way because I was having trouble making the whole script conditional with the IF THEN statement I've used. From what I recall, testing IF the SecurityAgent process window exists only worked if it occurred within a `tell application "system events"` section. Is there another way I would go about making the entire script conditional on that, without having to wrap everything within the `tell application "system events"` section? For instance, is there such as a thing as IF THEN ABORT ? <comment207543> Then at the beginning of the script I could simply test if the SecurityAgent window exists, and if not, then terminate the script. <comment207549> see my update to my answer. I just remembered that you can use 'activate application app name' in the system events block and it will behave as expected. Also shown if not then return. <comment207551> Figured it out. I can use a RETURN statement to abort the script. I have adjusted my answer above accordingly. <comment207552> (NB. our comments crossed over. I wrote my last comment before seeing yours) <comment207553> Lol. no prob. And well done :-) <comment207554> Same issue is occurring. I want to use the variable passApp for all instances of "1Password 5". But `activate application  passApp` does not work when within the `tell application "system events"` block. No idea why not. The solution I updated in my Answer below seems to do the trick. <comment207556> Which is what I normally would do and suggested before. But silly me forgot that 1password was already running and that why  'activate application app name'  worked. doh. will edit again. <comment207557> Made one more change to the last IF THEN statement. Discovered the buttons change number assignment, as per note at end of my answer.