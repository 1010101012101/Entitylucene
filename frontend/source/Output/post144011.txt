How to check the exit status of an application after using 'open' in shell <body> I've looked all over for this and I'm not entirely sure how to do this.  I want to use a bash script to open an application using 'open' and then check the exit status of the application after it has finished.  As far as I am aware, open -W will exit with status 0 so long as the application did open, I'm not interested in this exit, I'm interested in the apps exit.  Currently I have the following script:  precodetrap "echo manual abort; exit 1"  1 2 3 15;  while open -W /path/to/MyApp.app     echo "all is well" done  exit 0  /code/pre  Which opens the app and then waits, if the exit status is 0 it will re-open the app again after closing. This is intended however, what I want is to be able to stop this script if the app itself didn't exit 0 rather than the command 'open' successfully exiting.  So in short:  Open MyApp.app  if MyApp.app (not open) crashes, stop the script, otherwise, re-open MyApp.app  <answer144032> The trap signal isn't necessary. You can use conditional statements:  precode#! /bin/bash  APP="/Path/to/application.app"      #Set variable APP to the application path  open "$APP"                      #Open App. Don't set the -W parameter.  #If successful: if [ "$?" = "0" ]; then              #If the last command executes cleanly, then      echo "All is Well"              #All is Well.      exit 0                          #Default exit is 0 #If unsuccessful:    else                                #it's received an error signal, which prints.      echo "Manual Abort" 1&gt;&amp;2        #Prints Manual Abort as error     exit 1                          #Explicit unclean exit fi                           /code/pre  <answer144033> My answer is: you can't with codeopen/code even with the code-W/code flag. Rather use a shell script coderepeat_run/code which might be built as follows:  precodecat &gt;repeat_run.sh &lt;&lt;'__eof__' #!/bin/sh app_name=$1 bin_name=`defaults read /Applications/${app_name}.app/Contents/Info.plist CFBundleExecutable 2&gt;/dev/null` if [ "${bin_name}" = "" ] ; then     echo "${app_name} not found" &gt;&amp;2     exit 2 fi bin_path=/Applications/${app_name}.app/Contents/MacOS/${bin_name} trap "echo manual abort ; exit 1"  1 2 3 15 while : ; do     ${bin_path}     rc=$?     case $rc in         0)      echo "$1 terminated correctly" ;;         *)      exit ${rc} ;;     esac done __eof__ make repeat_run ./repeat_run Pages /code/pre  <comment169719> This just tells you if open worked - so just that the app launched OK not if the app ended with an error <comment169782> Executable name not always is the same as bundle name. It's better to read it from **Info.plist**. Something like that: `APP_PATH="/Applications/Mail.app"`   `echo "$APP_PATH"/Contents/MacOS/$(defaults read "$APP_PATH/Contents/Info.plist" CFBundleExecutable)` <comment169864> Right. I fixed this and a problem with variables evaluation.