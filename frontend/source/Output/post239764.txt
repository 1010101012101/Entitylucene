How can I run a shell script that prompts for user input from within Applescript <body> I have two pieces of code. One is Applescript and the other a Bash shell script. The shell script needs to run concurrently with the applescript, return some values and then exit. The problem is the shell script's coderead -p/code prompt does not pause for user input when called from within applescript using codedo shell script "/path/to/script.sh"/code.  I thought maybe   precodedisplay dialog "Query?" default answer "" set T to text returned of result /code/pre  could replace the coderead -p/code prompt but I can't figure out how to make either way work. How cam use either of these methods to properly ask and wait for user entry?  I realize I could cut the applescript in two sections placing one at the beginning of the shell script and one after the last shell command.   precode#!/bin/bash  osascript ~/Start_Script.scpt  echo 'enter some Text' read -p "" T  ## for things in stuff do more  ## stuff while doing other things ## done   osascript ~/End_Script.scpt /code/pre  This is what I've been doing and it does work. But it requires using the terminal which is fine for me. But if I wanted to show someone like my Mom.. well she's just not going to open the Terminal app. So it would be nice to find a way to emulate the coderead -p/code command within Applescript itself and be able to pass a variable along to the embedded shell script.   <answer239781> I think what you need is:  precodeset T to text returned of (display dialog "Query?" buttons {"Cancel", "OK"} default button "OK" default answer "") /code/pre  If you want to do this from a bash script, you need to do:  precodeosascript -e 'set T to text returned of (display dialog "Query?" buttons {"Cancel", "OK"} default button "OK" default answer "")' /code/pre  I can explain it in more detail if you need me to, but I think it's pretty self-explanatory.  strongEDIT:/strong If you want the result as a shell variable, do:  precodeSHELL_VAR=`osascript -e 'set T to text returned of (display dialog "Query?" buttons {"Cancel", "OK"} default button "OK" default answer "")'` /code/pre  Everything you type between the backticks (` `) is evaluated (executed) by the shell before the main command. See this answer for more information.  I agree that this is a little "hacky", and I'm sure there are better ways to do this, but this works.  <answer240238> AppleScript embedded in a shell script is often messy, hard to read, and hard to quote properly.  I get around that by using this sort of construct.  precode#!/usr/bin/env bash  read -r -d '' applescriptCode &lt;&lt;'EOF'    set dialogText to text returned of (display dialog "Query?" default answer "")    return dialogText EOF  dialogText=$(osascript -e "$applescriptCode");  echo $dialogText; /code/pre  -ccs  <comment294428> Yes you can @user3439894. Just try copy pasting that thing as is into the Terminal. <comment294429> It returns: `27:113: execution error: No user interaction allowed. (-1713)` <comment294431> Works fine on my machine: OSX 10.11.5. See  [screenshot 1](https://drive.google.com/open?id=0ByP4jQwyfv8rM2tWcDh1ODRZMmc)  and  [screenshot 2](https://drive.google.com/open?id=0ByP4jQwyfv8rdXRTdzczVEgzWjA) <comment294439> osascript works in terminal and yes the dialog box does display. But it's not passing the value the along to the shell as a variable. <comment294441> @user556068 My bad. Edited the answer.