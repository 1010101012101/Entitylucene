OS X Terminal "must have" utilities <body> I've just read with pleasure, and learned a lot from these questions :  ul liOS X Terminal Tips and Tricks/li liOS X Hidden features and nice tips &amp; tricks/li liOS X Applications you can't live without/li /ul  But I didn't find in these some of my favorites tools, which I use on a emdaily basis/em, and I think that's because these are strongOSX/Terminal intended tools/strong, not fitting well in above questions.  My favorites are, by order of preference: oh-my-zsh, homebrew (but also macports), janus...  These tools having in common :  ul listrongTerminal/strong: install and use/li listrongOSX Intended/strong: codebrew/code is, codegit/code is not!/li listrongEasy Install/strong: one liner, ie. codegit clone/code; codewget .../code etc./li listrongExtensible/strong: possibly has extensions or simple API (eg. oh-my-zsh with plugins, brew with formulas, janus with bundled vim plugins...)/li liOften open source, free, hosted on github, scripted, mostly (but not only!) with ruby.../li /ul  Do you know any other similar emmust-have/em tools? I would love to discover new ones!  Please only include one utility per answer. Also, please don't add duplicates. Check first before posting. If you see a duplicate, kindly downvote the answer and inform the author by leaving a comment.  <answer13619> h2Solarized (Free)/h2  Color scheme for Terminal.  Lion supports ANSI colors so hack-y things like SIMBL are no longer required.  For Snow Leopard and earlier, you'll need SIMBL installed to make the most of it since color support in Terminal.app is limited.  <answer13624> h2Ack (Free)/h2  Great for searching text files, you'll never have to use a find/grep combination again.  hr  strongAck/strong has two nice integration plugins for major OSX text editors:  ul listrongMacVim/strong : ack.vim/li listrongTextMate/strong : AckMate/li /ul  <answer13627> h1Visor/h1  is an interesting utility. It describes itself as:     a system-wide terminal on a hot-key   Quite cool. It drops down a terminal on the press of a key-combination.  strongEDIT/strong:      Visor has been renamed to TotalTerminal... (see other answer, this could/should be deleted)   <answer23556> h1DTerm (Free) by Decimus Software/h1  Similar to Visor, but with some extra friendly features (also appears to be in active development)  <answer23557> h2iTerm2 (Free)/h2  Mentioned in comments, but it's emessential/em, so for emphasis...  <answer23568> h1lolcat (Free)/h1  img src="https://i.stack.imgur.com/L0AmG.png" alt="lolcat"  <answer23576> h1oh-my-zsh (Free)/h1     A handful of functions, auto-complete helpers, and stuff that makes you shout…           “OH MY ZSHELL!”      Made me love shell when I was just using it emwhen I had to/em... Zsh is "bash on steroids", with oh-my-zsh and all its plugins, many specifics to OSX, shell is a lot more user friendly and powerful... Oh also themes are pretty cool.  hr  Also worth giving a look, some alternatives / complements zsh based stuff :  ul liprezto Is a complete rewrite of oh-my-zsh, clean and a lot more active, now using it :)/li lizsh-users (Free) Some very nice zsh stuff (love the syntax highlighting)/li lizcm (Free) zsh configuration manager em(inspired from oh-my-zsh)/em/li /ul  <answer23578> h1Homebrew/h1     The missing package manager for OS X.   It is an amazing package manager, very light and easy to use. KIS Principle, that makes me think of archlinux. Its community is big and very active.  em(see also macports which brew doesn't replace completely, I prefer installing packages with brew, but some complex ones are only on macports)/em  See also codebrew tap/code command which provides some missing formulas that can be useful like when you need latest php version  codebrew tap josegonzalez/php/code.  em(Homebrew has a policy of not replacing system components, but hey, sometimes you have to)/em  <answer23579> h1Janus + macvim/h1     Janus is a basic distribution of vim plugins and tools intended to be run on top of the latest MacVIM snapshot   install macvim with homebrew codebrew install macvim/code and follow the (easy) janus instructions, and you are set with a powerfull text editor that has been pre-configured for you by brilliants minds. The learning curve of vim is scary at first sight, but once you are confortable with it, you'll never go back (or maybe to emacs...) em(fyi, TextMate has been abandoned to its profit by many coders)/em  That might sounds strange, but I prefer using vim in iTerm2 than macvim... (vim is bundled in macvim, just use codebrew install macvim --override-system-vim/code)  <answer23580> h1MacPorts/h1     The MacPorts Project is an open-source community initiative to design an easy-to-use system for compiling, installing, and upgrading either command-line, X11 or Aqua based open-source software on the Mac OS X operating system.   Many people will tell you don't use macport, use homebrew instead. That is mostly true, emhomebrew is lighter and easier to use/em. But macports offers way more packages, and some of them will never come to homebrew, because of their different philosophy. (I use both, for different needs)  For example, I recommend GTK in its quartz (native OSX) variant :  precodesudo port install gtk2 +no_x11+quartz /code/pre  Then when you install a package that can benefit from it, like wireshark... You will get a native OSX UI, faster and looking much better than X11...  <answer23581> h1Lunchy (Free)/h1     A friendly wrapper for launchctl. Start your agents and go to lunch!   A convenient tool to manage (start/stop/restart) OSX services/daemons...  That's a ruby gem: codegem install lunchy/code  <answer23582> h1strongProfontX/strong (Free)/h1  My favorite programming and terminal font on MacOS. (ProfontX is a corrected version of Profont which had issues with some characters)  <answer23587> h2Inconsolata-dz (Free)/h2  This is a slight modification of the original Inconsolata. It is a fantastic monospaced font for use with Terminal.app, TextMate, MacVim and anywhere else you need one. A must have for any coder. img src="https://i.stack.imgur.com/T7tyx.png" alt="enter image description here"  <answer23626> h2MTR (Free) by BitWizard - combines codeping/code and codetraceroute/code/h2  strongInstallation:/strong codebrew install mtr --no-gtk/code  precode                                            Packets               Pings  Host                                     Loss%   Snt   Last   Avg  Best  Wrst StDev  1. 217.70.191.253                         0.0%    32    0.5   1.7   0.3  17.6   3.8  2. p252-core4-d.paris.gandi.net           0.0%    32    0.5   1.1   0.3  17.8   3.1  3. xe2-1-24-vcore1-dc1.balt.gandi.net     0.0%    32   97.4 105.7  96.9 187.7  22.0  4. eqixva-google-gige.google.com         80.0%    31  100.8 100.2  99.6 100.8   0.4  5. 209.85.252.80                          0.0%    31  100.3 108.0 100.0 210.4  24.3  6. 209.85.243.114                         0.0%    31  111.9 112.6 111.7 118.6   1.2  7. 64.233.174.87                          0.0%    31  119.8 112.7 111.6 119.8   1.9     64.233.174.117  8. 209.85.242.181                        16.1%    31  112.0 117.0 111.8 125.2   5.1     209.85.253.185     209.85.242.177     209.85.253.181  9. vx-in-f105.1e100.net                   0.0%    31  112.0 112.3 111.6 116.4   0.8 /code/pre  hr  h2whatmask (Free) by Laffey Computer Imaging - IPv4 subnet calculator/h2  strongDownload/strong OS X binary. Also online.  precode$ whatmask 192.168.5.6/22  ------------------------------------------------            TCP/IP NETWORK INFORMATION ------------------------------------------------ IP Entered = ..................: 192.168.5.6 CIDR = ........................: /22 Netmask = .....................: 255.255.252.0 Netmask (hex) = ...............: 0xfffffc00 Wildcard Bits = ...............: 0.0.3.255 ------------------------------------------------ Network Address = .............: 192.168.4.0 Broadcast Address = ...........: 192.168.7.255 Usable IP Addresses = .........: 1,022 First Usable IP Address = .....: 192.168.4.1 Last Usable IP Address = ......: 192.168.7.254 /code/pre  <answer23673> h2TotalTerminal (Free)/h2  Tabs, visor, hotkeys, very simple and reliable. Well maintained with frequent updates.  img src="https://i.stack.imgur.com/1MHQ1.jpg" alt="TotalTerminal"  <answer34146> h1Autojump (free)/h1  Great command line utility that stores codecd/code commands and automatically creates an autocomplete shortcut to your most accessed directories.  Even better, if several directories have a similar name (starting with the same characters), Autojump will simply pick the one you most commonly go to. You won't have to type the whole name.  Example:  codecd project1/code  codej p/code will now take you straight to the full strongproject1/strong path.  Now what if you create a similar folder called strongproject2/strong which you also access often (but less than strongproject1/strong), Autojump will assign a lesser weight to strongproject2/strong and take you straight to strongproject1/strong.  If you hit codeTAB/code after typing code"pro"/code for instance, your shell will display codeproject__/code, hinting at the fact that there are more than 1 matching directory. Another codeTAB/code hit will display the list of matching directories and allow you to select the one you mean.  Note: I've recently installed ZSH and noted some interference due to the autocomplete features. Autojump works perfectly on a vanilla Terminal.  <answer34219> h2Bwana (Free)/h2  Not technically a terminal command but very handy for quick manpage lookups by allowing url of: "man:ls" to show html page of the manpage in your browser.  <answer79712> h2Go2Shell (Free)/h2  Not a terminal utility, but a utility for using Terminal. It puts a button in the Finder toolbar and when pressed it creates a new Terminal window cd'ed to that directory.  strongedit:/strong The developers are saying that the version of the app available directly from them has more features than the version on the App Store. I've updated the link to go to their page, but the App Store version is still available here.  <answer83645> h2bash-it (Free)/h2  An alternative to oh-my-zsh (see above). A really useful collection of scripts, aliases and functions for codebash/code. Also provides a nice plugin system for adding your own additions.  <answer96810> h1Shell functions/h1  I can't live without this.  ul lih3One command to update them all./h3  precodeupdate() {     local brew="brew update; brew upgrade;"     local gisty="gisty pull_all; gisty sync_delete"     local gem="gem update;"     local pip="pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U -q"     sh -c $brew$gisty; sudo sh -c $gem$pip } /code/pre  Obviously you can add more commands according to the package managers you use. This is made by me./li lih3Change directory to the current Finder directory/h3  precodecdf() {     target=`osascript -e 'tell application "Finder" to if (count of Finder windows) &gt; 0 then get POSIX path of (target of front Finder window as text)'`     if [ "$target" != "" ]; then         cd "$target"; pwd     else         echo 'No Finder window found' &gt;&amp;2     fi } /code/pre  codecdf/code to open the Finder directory in the terminal and codeopen ./code to open in Finder the directory terminal directory.  Source/li lih3Get colors in manual pages/h3  precodeman() {     env \     LESS_TERMCAP_mb=$(printf "\e[1;31m") \     LESS_TERMCAP_md=$(printf "\e[1;31m") \     LESS_TERMCAP_me=$(printf "\e[0m") \     LESS_TERMCAP_se=$(printf "\e[0m") \     LESS_TERMCAP_so=$(printf "\e[1;44;33m") \     LESS_TERMCAP_ue=$(printf "\e[0m") \     LESS_TERMCAP_us=$(printf "\e[1;32m") \     man "$@" } /code/pre  Source/li lih3Use a RSA private key in git/h3  precodegit(){     trap 'rm -f /tmp/.git_ssh.$$' 0     SSH_KEY="~/.ssh/id_rsa"     echo "ssh -i $SSH_KEY \$@" &gt; /tmp/.git_ssh.$$     chmod +x /tmp/.git_ssh.$$     export GIT_SSH=/tmp/.git_ssh.$$     [ "$1" = "git" ] &amp;&amp; shift     git "$@" } /code/pre  I noticed that putting this into your .rc will slow down git.  If you want to avoid this you should unpack the function and save it as a shell script in your code$PATH/code  Source (I modified it a bit. The original asks every time for the key path.)/li lih3Syntax highlighting in cat/h3  precodecat() {     local out colored     out=$(/bin/cat $@)     colored=$(echo $out | pygmentize -f console -g 2&gt;/dev/null)     [[ -n $colored ]] &amp;&amp; echo "$colored" || echo "$out" } /code/pre  This can be quite slow since it needs to parse the entire file before printing  it. Never use this on a binary file!  codepip install Pygments/code to install pygments./li /ul  <answer114167> Boxen - Automated Mac OS configuration and build, install/update software. It helps saving a lot of time when you want exactly the same setup, (software, version) in the development team and also allow each individual to install other tools to increase productivity.  <answer119635> h1The Silver Searcher (Free)/h1  A code-searching tool similar to ack, but faster.  Install it with embrew/em  precodebrew install the_silver_searcher /code/pre  <answer155461> h2Bropages:/h2  bro pages are a highly readable supplement to man pages. Bro pages show concise, common-case examples for Unix commands.  h3Example:/h3  precode$ bro find 14 entries for find -- submit your own example with "bro add find"  # Executes a command on the files and folders matching a given pattern, in this case, output the last lines of each .foo file in the current folder and subfolders. find . -name "*.foo" -exec tail {} \;          bro thanks      to upvote (24)         bro ...no       to downvote (0)  .......................................................................................................................................  # Outputs all the file names/paths that start with the name "Casey".  Searches recursively starting from my current directory (.) # Throws out any error output by sending it to /dev/null find . -name "Casey*" 2&gt;/dev/null          bro thanks 2    to upvote (16)         bro ...no 2     to downvote (0)  .......................................................................................................................................  # Finds all files in and under the current directory that contain 'foo' in their name find . -iname '*foo*'          bro thanks 3    to upvote (13)         bro ...no 3     to downvote (1) /code/pre  <answer168645> I like strongColor Maven/strong  precodealias maven="command mvn" color_maven() {   maven $* | sed -e "s/\(\[INFO\]\ \-.*\)/[36;01m\1[m/g" \                -e "s/\(\[INFO\]\ &gt;&gt;&gt; .*\)/[32;01m\1[m/g" \                -e "s/\(\[INFO\]\ &lt;&lt;&lt; .*\)/[32;01m\1[m/g" \                -e "s/\(\[INFO\]\ Building .*\)/[36;01m\1[m/g" \                -e "s/\(\[INFO\]\ \[.*\)/01m\1[m/g" \                -e "s/\(\[INFO\]\ BUILD SUCCESS\)/[01;32m\1[m/g" \                -e "s/\(\[INFO\]\ BUILD FAILURE\)/[01;31m\1[m/g" \                -e "s/\(\[WARNING\].*\)/[01;33m\1[m/g" \                -e "s/\(WARN.*\)/[01;33m\1[m/g" \                -e "s/\(DEBUG.*\)/[01;33m\1[m/g" \                -e "s/\(\[ERROR\].*\)/[01;31m\1[m/g" \                -e "s/Tests run: \([^,]*\), Failures: \([^,]*\), Errors: \([^,]*\), Skipped: \([^,]*\)/[32mTests run: \1[m, Failures: [01;31m\2[m, Errors: [01;31m\3[m, Skipped: [01;33m\4[m/g" } alias mvn=color_maven /code/pre  strongColor LS/strong  precodealias ls='ls -FG' export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx -or- echo export CLICOLOR &gt;&gt; ~/.bashrc echo export CLICOLOR &gt;&gt; ~/.bash_profile /code/pre  <answer206734> Jodies.de codeipcalc/code  precode   /usr/local/Cellar/ipcalc/0.41: 4 files, 40K, built in 2 seconds  bash-3.2$ ipcalc 10.20.30.40/8  Address:   10.20.30.40          00001010. 00010100.00011110.00101000  Netmask:   255.0.0.0 = 8        11111111. 00000000.00000000.00000000  Wildcard:  0.255.255.255        00000000. 11111111.11111111.11111111  =&gt;  Network:   10.0.0.0/8           00001010. 00000000.00000000.00000000  HostMin:   10.0.0.1             00001010. 00000000.00000000.00000001  HostMax:   10.255.255.254       00001010. 11111111.11111111.11111110  Broadcast: 10.255.255.255       00001010. 11111111.11111111.11111111  Hosts/Net: 16777214              Class A, Private Internet /code/pre  It is also available in HomeBrew:  precode bash-3.2$ brew install ipcalc  ==&gt; Downloading http://jodies.de/ipcalc-archive/ipcalc-0.41.tar.gz /code/pre  <comment12703> homebrew and macports together could have issues as macports will read files installed by homebrew and they will not necessarily be the correct version <comment12704> true, but 95% of time there is no major issue, and for remaining 5% cases, just changing temporarily the $PATH is often the solution... I prefer brew for ease and lightweight, but macports has *many* more packages we will probably never see in homebrew... <comment14508> fyi, its vim version comes with janus ;) <comment14509> fyi, I switched from Terminal to iTerm2, which has a native visor like feature, and much much more like splitpanes! :) <comment26181> Solarized for Lion Terminal doesn't look quite right for me -- the colors are off compared to Vim and iTerm. Anyone encountered this? <comment26312> @Vincent - the whole point of homebrew is that you can fairly easily build your own formula's so the "never see in homebrew" seems to miss the point of it entirely. MacPorts is convenient, since you don't really have to do much, effectively giving you a BSD `port` or Debian `apt-get` style installer. <comment26321> It's OK to answer your own question - why not split off the "answers" and just leave the question. <comment26331> Surely the most useful terminal tool, evah! *(After cowsay and figlet that is.)* <comment26350> Seriously, forget OSX Terminal + Visor, iTerm2 is so much better, I'm splitting panes all day in full screen with a hotkey à la visor... There are also many other wonderful features... <comment26351> @yjsoon forget Lion Terminal, use iTerm2... <comment26353> @slojomo, look at some very complex macports "ports" with tons of dependencies like deluge, you will understand...  plus the fact that homebrew has a policy of no formula overriding system components... (like mysql...) <comment26355> @bmike: followed your suggestion and edited question / added answers. <comment26360> Nice font, thanks, didn't knew that one, will give it a try, even if I guess I'll finally fallback to that good old Monaco (which renders great in iTerm2) <comment26366> +1 I like this one better than ProfontX <comment26445> +1 Ack is such an awesome grep replacement, if it wasn't for the fact that `grep` is in my muscle memory, I'd never use it at all. <comment26446> `zsh` with `oh-my-zsh` really is awesome, it will even do path completion over an `scp`/`ssh` command if you've enabled public key authentication to the server you're looking at, it rocks. (awesomely-powerful completion... `/v/m/s/` TAB' expands to `/Volumes/MyDrive/Src`) <comment26977> Clearly the reason 256-color support was addd to Lion Terminal. <comment27092> @Vincent I liked iTerm2... until Lion Terminal came out, and could open new tabs in the same directory as the current tab, and greyed out history. Waiting for iTerm to get those. <comment27195> @yjsoon I would not be surprise that you can get this behavior with some oh-my-zsh plugins... or with a bit of scripting ;) omz ftw! <comment27197> nice, but a bit off-topic, not really OSX related :) <comment27200> nice one *(lol)* but a bit off-topic, not really OSX related <comment27202> Ack is a must have tool, makes grep developer friendly, but this one is a bit off-topic since it is not related to OSX, editing this answer to add Vim/AckMate information. <comment27205> Unfortunately, it doesn't look very good to me on your screenshot. <comment27206> Monaco won, better readability for my eyes :), would love to switch to modern `Menlo`, but its special UTF-8 characters like ✭ are too small for shell pleasure. <comment27209> definitely a matter of taste ;), there's something about monaco i just can't stand, it's just too crispy to my taste I guess <comment27233> oh yeah, definitely a personal choice. Dunno if there is not already one, but a community wiki exclusively about fixed-size dev fonts for OSX would be nice... ;) <comment53236> wow, that thing is amazing. thx for sharing <comment79238> Strangely, it hasn't had an update of the stable release since July 2011, and a beta came out in July 2012 which never got promoted. Is this project dead? <comment80902> `grin` is also a good alternative. <comment83072> grin is wonderful, here's the link: http://pypi.python.org/pypi/grin/ <comment85730> @Yar it's still being developed. The author maintains the official repo here: https://github.com/gnachman/iTerm2 <comment96917> Seems it suffered some compression artifacts - replaced it with a (hopefully) better one! <comment99924> +1 for prezto. I love the approach of using git submodules. <comment104957> Your FormulaAlt link is down. (404) <comment105182> edited to mention `brew tap` which is now the built in solution to handle external *"formulas"*. <comment113605> Thank you. This is now my default font in almost every text writing application. <comment125427> These days, it’s all about [The Silver Searcher](https://github.com/ggreer/the_silver_searcher). <comment135243> Also check out https://github.com/zsh-users/antigen <comment135244> Note you can also specify an "external" formula directly via URL to it's formula.rb <comment135245> While using zsh just try `cd -`[TAB] see how you get on. <comment136198> Who cares ? =) It is a nice tool ! <comment141304> `cdf` is invaluable. thanks! <comment149535> grin still needs to be updated to updated to Python 3 unfortunately. <comment157950> using RSA private key in git better with configuring SSH via ~/.ssh/config. <comment171477> Prezto is much faster than oh-my-zsh. You should try it. <comment182869> Nowadays does not work on Yosemite. <comment187307> @jherran I haven't tried it myself, but the developers claim it works on Yosemite. If it doesn't for you try contacting them. <comment187308> I did. And said the same to me, they are working on it, but from now, does not work on Yosemite. <comment199349> They released version 2.2 on their website that they claim is Yosemite compatible. <comment200312> UPDATE: Homebrew is now willing to replace system components, e.g. make, curl, bash, zsh... You just need an extra step: `brew link --force package` to overwrite the system copy. Also, some non-essential duplicate packages are stored in the `homebrew-dupes` repo instead of the canonical one. <comment219863> @Slomojo That's different; jumping goes into hierarchies with *out* intermediate steps. Unless there's a zsh feature I'm missing that does this (very possible I'm missing something). <comment249194> Most useful install ever. <comment261522> How do you run mtr? No matter what i run even if I want to find out help or version I get unable to get raw sockets <comment262744> You can run it with `sudo mtr example.com` or setuid the binary with `chown root:admin /usr/local/sbin/mtr && chmod +s /usr/local/sbin/mtr`.