lsof does not show all files opened in Preview app <body> I have about 43 files opened in the preview, however, when I run codelsof -c Preview/code, I only get a fraction of those (i.e. 8 files) which are currently opened.  This is the same output I get when using the Activity Monitor, but I would like to save the complete list of opened files so that I could reopen this list of files later on.  I have found some tips on how to retrieve the list of current files opened in this link.  Does anyone have a hint of what may be happening? Another solution that would be useful is to retrieve the list of files which were opened in the last Preview section.  h2EDIT:/h2  As commented by D. A. Vincent, it is possible that the files are closed after loaded to memory. If it is possible to make a watcher of the files opened by preview, and log them to a file, this would be an appropriate solution as well. Especially if this watcher thread could be launched when user login or OS starts.  <answer283631> Here's an applescript solution. This should give you a complete list of open files (including the full path) in the preview app.   Also, if any AppleScript gurus come across this answer, I'd be grateful for any constructive criticism you have to offer. :)  precodeset text item delimiters to "\n" set myList to {} tell application "Preview"     set theDocs to get documents     repeat with eachDoc in theDocs         set thePath to path of eachDoc         copy thePath to end of myList     end repeat end tell set the_list to myList as text tell application "Finder"     set myFile to "/Users/YourName/YourFolder/FileName.txt"     do shell script "date &gt;&gt; " &amp; myFile     do shell script "echo " &amp; quoted form of the_list &amp; " &gt;&gt; " &amp; myFile end tell /code/pre  This will print the current date followed by a list of every document open in Preview. If you'd rather omit the date just remove the line:  precodedo shell script "date &gt;&gt; " &amp; myFile /code/pre  Be sure to fill in the correct information on the line:  precodeset myFile to "/Users/YourName/YourFolder/FileName.txt" /code/pre  If you want to add a date stamp to your filenames, just put the following lines under the codetell application "Finder"/code block  precodeset time_stamp to (do shell script "date \"+%m-%d-%y\"") set myFile to "/Users/YourName/YourFolder/PreviewProfile_" &amp; time_stamp &amp; ".txt" /code/pre  The terminal codedate/code command has many different formats available. To read about the different options available, open your terminal and type codeman strftime/code.  After playing around a little more I realize this script can simplified even further. This is a more streamlined version that avoids some unnecessary steps from the original. But the result is the same either way.   precodeset text item delimiters to "\n" tell application "Preview"     set theDocs to get path of every document as text     tell application "Finder"         set time_stamp to (do shell script "date \"+%m-%d-%y\"")         set myFile to "/Users/YourName/YourFolder/PreviewProfile_" &amp; time_stamp &amp; ".txt"         do shell script "echo " &amp; quoted form of theDocs &amp; " &gt;&gt; " &amp; myFile     end tell end tell /code/pre  For ease of use, you can save this script as an Automator service to use while working in any application. To do that just open strongAutomator/strong - then from the strongFile/strong menu select strongNew/strong or strongâŒ˜N/strong from the keyboard. Then select strongService/strong from the choices shown. When the document opens, select strongUtilities/strong in the far left column. Then Select strongRun AppleScript/strong in the column to the right of that. Paste this script into the box that appears. In the drop down choices near the top of the page, select emService receives no input/em and emin any application/em. Then just pick and name, save the file and you should have a service available to use anytime in the services menu.   h2Update/h2  Here is a way to read and open the list of files we just created. This will allow you to pick and choose which files you want to open without having to open every file in the list if you don't want to.   precodetell application "Finder"     set file_list to {}     set my_files to paragraphs of (read "/Users/YourName/path/to/YourFile")     repeat with nextLine in my_files         if length of nextLine is greater than 0 then             copy nextLine to the end of file_list         end if     end repeat     choose from list file_list with multiple selections allowed     set chosen_Files to the result     repeat with next_file in chosen_Files         do shell script "open " &amp; next_file     end repeat end tell /code/pre  Hope it helps. Let me know if you have any problems.   <comment357463> Do we expect every single window open in Preview to have exactly one open file as seen by lsof?  While I'm not an experienced Mac developer, it would seem a natural thing for Preview.app to be able to read an entire image file from disk into memory and then issue the close system call.  Especially if Preview were showing dozens of files. <comment357465> What is Application Monitor?  Did you mean Activity Monitor? <comment357603> @DAVincent I have one window open for every file, though it only shows some of them. You mean that the Preview is closing the files and keeping the image on memory? So, another approach would be to make a watcher of the files opened by Preview app and write it to some log. <comment357604> @DAVincent, yes, I meant the Activity Monitor. <comment357628> Thanks a lot, it worked! Would it be possible to save this file as `PreviewProfile-%date.txt`? <comment357629> Sure you can. Check the updated answer. <comment357642> Yes @Werner, you understood what I was getting at.  We could create a script to watch Preview.app.  It might be tricky to avoid a race condition where Preview ran too quickly for the watcher to notice.  But extrapolating from my past experience wiht othe4r computers, maybe we could have the script use system debug functionality to capture every system call that Preview made. <comment357643> (SHAMELESS REPUTATION CHASE:  if you find my comments helpful, please vote on them.) <comment357644> I voted for this answer.  It looks better than trying to create something using lsof or process level debug facilities. <comment357791> Maybe it would be useful to add to your answer how to open the files with Preview later on: `cat ~/PreviewEnvironments/PreviewProfile_05-15-17.txt | while read; do echo "$REPLY"; open $REPLY; done`. This way it preserves the spaces and other special characters. Another edit that I would make is to change "/Users/YourName" by "~", which would make it easier for newbies to use the script. <comment357825> If you substitute `/Users/YourName` with `~` outside of the shell, you're going to have a file named `~`. It is possible within Applescript as shown by [this answer](http://stackoverflow.com/a/30811305/5904552). But it's also just as easy, if not easier in this case, to define the path name explicitly. I think most new users, especially those without any experience using a shell, will recognize `/Users/YourName` easier than they will recognize `~`. <comment357828> Also you have a useless `cat` and `echo` in your terminal command. Instead try `while read; do open $REPLY; done  file.txt`. But that will of course open **every** file you have in your list. <comment357829> @Werner See my update for opening files in the list <comment358105> Your solution works fine, thanks, though the text file is easy to edit to select a minor list of files to open (though, in the end, what I need right now is to open the complete list). Either way, it is nice to notice that your solution also works for other programs, e.g. Skim.