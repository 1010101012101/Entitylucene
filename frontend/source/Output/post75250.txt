Is there a way to dedicate the discrete graphic card to CUDA on a MacBook Pro? <body> When a display is attached to a CUDA capable graphic card, a run time limit is enforced on CUDA kernels run on the card.  Is it possible to use the integrated graphic card to power the display and, at the same time, exploit the discrete one to run long running CUDA kernels?  I tried gfxCardStatus, but if I force the use of the integrated card, the discrete one is disabled completely and isn't recognized anymore by the CUDA driver.  <answer82021> A user at StackOverflow was having a similar issue: https://stackoverflow.com/questions/6655033/use-nvida-card-for-cuda-motherboard-for-video  Unfortunately, since the Mac does not have a whole lot of bios options available to the end-user, it would seem that the best option may be to switch over to Linux.  <answer89959> The solution for that kind of problem is to shut down the graphical windows management and to use Mac OS from a TTY. This is cumbersome, but not as much as to dual-boot your machine and to switch from one OS to the other.  The way to do that is to go into Settings-Users and to set the login options to "username and passwords" (default is user list).  Then log out all users and go to log screen  In the login testbox, fill in code&gt;console/code and type your password in the password box (you must have admin rights, but I assume this is already the case)  Here you go, you're in text mode and the GPU is fully available for CUDA. You gotta know the basics of the shell though... 