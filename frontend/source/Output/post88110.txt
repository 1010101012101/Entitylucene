Make Minecraft (or Java Preferences.app) run on Java 7 <body> Minecraft (and probably some other applications) won't run on a System with the preinstalled Java removed and the current JDK 7 installed. I already symlinked the Java 6 directory to the current one. Other applications like Adobe Illustrator that need Java work with this fix. The error message states codeno compatible version of java 1.5+ is available/code.   img src="https://i.stack.imgur.com/GQlXI.jpg" alt="Screenshot of the error message"  What is a reasonable explanation why that application runs on Java 7 on Linux and Windows but not on Mac, and what can be done for it to do so?  Output of code/usr/libexec/java_home -V/code:  precodeMatching Java Virtual Machines (4):     1.7.0_17, x86_64:   "Java SE 7" /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home     1.7.0_17, x86_64:   "Java SE 7" /Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home     1.7.0_17, x86_64:   "Java SE 7" /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home     1.7.0_17, x86_64:   "Java SE 7" /System/Library/Java/JavaVirtualMachines/jdk1.7.0_17.jdk/Contents/Home /code/pre  emcode/System/Library/Java/JavaVirtualMachines/code is a Symlink to the code/Library//code one, and code1.6.0.jdk/code is a symlink to codejdk1.7.0_17.jdk/code, terefore only one JDK is being installed./em  <answer88328> What is the terminal output stating the error?  Looking at this discussion:  http://www.linuxquestions.org/questions/linux-games-33/minecraft-not-running-on-java-7-a-929983/  The error output indicates that the Minecraft Java binaries are linked against 32bit versions. Looks like you have 64bit installed. Does your Java7 installation support 32bit?  Also, are you running the latest Minecraft code/mod updates/etc?  Edit:  Given the error message in the answer, it lead me to this:  precode2 things are needed to be changed to make it run on OSX x64 and this is what i done..   1) add in x86_64 to the Info.plist as follows:  JVMArchs   i386  x86_64  ppc   2) Set the execute flag on the JavaApplicationStub file  chmod +x /Applications/Minecraft.app/Contents/MacOS/JavaApplicationStub   now it works :) /code/pre  That was found at:  https://getsatisfaction.com/mojang/topics/osx_x86_64_minecraft_execution_fixed  Via:  http://www.minecraftforum.net/topic/487766-fixed-lsopenurlswithrole-failed-with-error-10810/  Regarding checking java version:  precode$ java -version java version "1.6.0_43" Java(TM) SE Runtime Environment (build 1.6.0_43-b01-447-11M4203) Java HotSpot(TM) 64-Bit Server VM (build 20.14-b01-447, mixed mode) /code/pre  Indicates 64bit server VM in mixed mode. When testing with '-d32' and 'd64', the java runtime should report back with a help screen vs erroring out, though this doesn't rule out 32bit/64bit libraries in the paths that are missing.  precodejava -d32  java -d64 /code/pre  But the chmod above might help more.   Note, I don't use Minecraft.app to start up MineCraft when I run it on a Mac. I do the following:  My wrapper script:  precode#!/usr/bin/env bash java -Xmx3048M -Xms2024M -cp "$1" net.minecraft.LauncherFrame  /code/pre  And I run it by:  precode./run-minecraft minecraft.jar /code/pre  I have the parameter because sometimes, I like running 3rd party wrappers around the MineCraft application itself.  AddOn:  Btw, this is the alternate method I use to fire up MineCraft, since MineCraft.app on the Mac has never worked reliably for me.  ul lihttp://minecraft.net/download/li liDownload the JAR file for "Minecraft for Linux / Other"/li liTest firing up with:   java -Xmx1024M -Xms512M -cp minecraft.jar net.minecraft.LauncherFrame/li /ul  <answer200477> Minecraft for the Mac and other Java applications are routinely packed with Apple's JavaApplicationStub. JavaApplicationStub is a small program that decodes the Info.plist inside the application, detects Apple Java (6), shows the "To open this application you need to install the legacy Java SE 6 runtime" error message (if Apple Java isn't installed) and finally invokes Apple Java with the correct arguments to make the app go. The trouble is that JavaApplicationStub is hardwired with Apple Java detection and loading. JavaApplicationStub will almost never invoke Oracle Java, no matter what arguments you feed it or how you try to trick it into invoking Oracle Java.  The first step is to modify the Info.plist file in Minecraft to take JavaApplicationStub out of the loop and replace it with something that is Oracle Java friendly. universalJavaApplicationStub is a bash script that auto detects Oracle Java or Apple Java and invokes the app. I've described the process in a blog post to make Minecraft for Mac work no matter what Java is installed:  http://svexpertise.blogspot.com/2015/08/make-mac-minecraft-work-on-oracle-java.html  Pretty much all solutions cope with JavaApplicationStub. Some involve satisfying it (by installing Apple Java), some involve avoiding it (by invoking the .jar directly) and some involve replacing it (by installing a custom bash script or universalJavaApplicationStub).  <comment103145> Have you seen http://apple.stackexchange.com/questions/60629/cant-open-java-preferences-with-oracle-java-7-installed and http://apple.stackexchange.com/questions/58203/mountain-lion-with-java-7-only ? <comment103146> Yes, I have seen this topics. The second one does adress another issue, which I have adressed before (_"I already symlinked the Java 6 directory to the current one"_). The first one basically only says to reinstall Java 6. <comment103374> What is your current JRE version? <comment103375> @JamesGraham `java -version` `java version "1.7.0_17" Java(TM) SE Runtime Environment (build 1.7.0_17-b02) Java HotSpot(TM) 64-Bit Server VM (build 23.7-b01, mixed mode)` <comment103379> The terminal output is `LSOpenURLsWithRole() failed with error -10810 for the file /Applications/Minecraft.app.`. Minecraft.app is the latest from the website. How do I find out if my Java installation supports 32 bit? <comment103381> Updated my answer with a more detailed response regarding that error you just posted and regarding 32/64bit checking. <comment103382> Thank you a lot so far! How exactly should these variables be set in the info.plist? I find his description a bit vague. <comment103384> The info.plist file is an XML text file. You should be able to edit it with 'vi' or your editor of choice. There is also a Mac plist editor that comes with Xcode.  Interestingly enough, I don't start MineCraft with the .app, but by using a CLI statement:   java -Xmx3048M -Xms2024M -cp minecraft.jar net.minecraft.LauncherFrame <comment103550> This is the Info.plist of the .app: http://pastebin.com/baea0VKX . How resp. where can I add `x86_64` there? On another note: I could start the game with Minecraft.app/Contents/Resources/java/MinecraftLauncher.jar perfectly, so it definitely has something to do with the .app. <comment103605> I added the config block to your pastbin Info.plist file and re-pasted here:   http://pastebin.com/EVRAvZtv    Hope that works. <comment103626> Unfortunately it didn't work. I played around with the settings and also other things mentioned here (http://developer.apple.com/library/mac/#documentation/Java/Reference/Java_InfoplistRef/Articles/JavaDictionaryInfo.plistKeys.html) but it didn't help either. When I tried to remove JVMVersions, it opened, but crashed immediately with the following error message: http://pastebin.com/CnFHxsBg <comment103634> Still taking a look at it, but have you tried changing the 1.5+ to 1.6+ in the info.plist for the heck of it? I need to download the latest MineCraft.app and OpenJDK 7 as well, to simulate the problem better.   I seem to remember the reason I went with the tarball format to kick it off was because the Minecraft.app kept crashing on me.  If you're cool with going with an alternate route, I can do an added writeup. :| <comment103635> Actually, can you try the minecraft.jar method and see if it starts up using that method?  Basically, let's take the Apple Application wrappers out of the equation and see if the straight up jar works. <comment103646> Like I said, the .jar inside the .app works, and so does the .jar from the website. I was eager to get behind the reason that the .app does not work because the issue is not limited to the Minecraft.app but also Java Preferences.app (I assume to all .app wrapped .jar files.) But it seems that this is something that is not solvable so easily... I'll reward you with the bounty for your effort nevertheless and try to look into this again when I have more time. Thank you so far! <comment103669> Thanks. I took another look at the java error output log you put in pastebin, and took another approach to finding a solution to the problem and came across this discussion about getting Java 7 to work on Mac OS X 10.8. Apparently, it's been causing no end of problems in Mac OS X land and affects the Java Preferences.app, causing it to crash.  Workaround/fix:   http://communities.vmware.com/docs/DOC-22830  Discussions that led me to that document:  http://communities.vmware.com/thread/422493  Please let me know if that addresses the issue. <comment103901> From comments I see you also want to get the app to work to do that we need to se Info.plist <comment103943> @Mark As linked in a comment on the answer below: http://pastebin.com/baea0VKX <comment103945> @AdamS the issue is that Java 7 uses a different Info.plist to Java 6 and so needs to be edited - report as a bug to Minecraft - for details see these answers on [SO](http://stackoverflow.com/a/15271448/151019) and [AskDifferent](http://apple.stackexchange.com/a/84227/237) -for an app to produce the correct bundle - and there is another great answer on AskDifferent I can't find now