Automating iOS Build <body> (Sort of a long post, I'm trying to be thorough with what I did and why I am confused)  I am tasked with automating our builds for our iOS app.  The process that is actually involved is taking a .app file (generated by Cordova) and converting it to a .ipa file.  I think the first thing that I'd like to understand is how Certificates and Mobile provisions work. When I sign into the Apple Developer Center for my team, I see two certificates that I can download. I am aware that I need to sign the .app file before I convert it to a .ipa, so I attempted to download one, but found that I am unable to sign code with it. My understanding is that a Signing Identity == a cert + a public/private key set that works with the developer center(?). I never found a way to use a pre-made certification on my machine. The only way that I found to do it was to use the XCode UI (Something I really don't want to do, cuz automation) to create a whole new cert file and generate the public/private keyset for the Identity.  If I can, I'd really like to avoid creating new Identities and Certificates.  The next step that I took was using the PackageApplication command in xcrun (in the command line). Once I created a new Certificate and Identity, I was able to sign .app files (or so I thought). My first attempt was a one line command, including --sign with the identity and --embed with the mobileprovision file that I'd downloaded from the Developer Center. After a few hours of playing with this setup, I found it was better to use codesign -s "my signing identity" "the .app file" to get anything to happen. I thought this was the right move (later I found out it probably isn't).  After that I found that people had posted saying the --embed function of xcrun doesn't actually embed the file, and "embedding" the file simply means to put it in the .app directory with the name "embedded.mobileprovision." Getting tired of xcrun not working, I simply moved the mobileprovision file I had downloaded from the Developer Center to its proper location and renamed it.  After this I signed the .app file, and then ran the PackageApplication command without the --sign or --embed params. This successfully generated a .ipa file, but I kept getting "The code signature is not valid" errors in Apple Configurator.   After this, I did some reading and found that the .ipa is just an archive of the .app file inside of a folder called Payload. So, as a last attempt, I just moved the signed .app file into a folder called Payload and compressed to a .zip file, which I then renamed to a .ipa. I am getting the same result of "The code signature is not valid."  I'm sort of out of ideas. I think I might be misunderstanding Certificates and MobileProvisions though, so clearing that up might help.  Please help. 