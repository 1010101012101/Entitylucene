Some .apps only open via sudo /Applications/*.app/Content/MacOS/* <body> I have a few that after install will refuse to open - no error. The first time they may appear in the Dock for a second or two; then disappear.  delIt may or may not be a coincidence - but both have 'storage management' in common: SeafileClient and PydioSync. Perhaps more likely to be relevant - both are also using Qt./del (It is a coincidence).  If I run in terminal from code/Applications/[name].app/Contents/MacOS/[script name]/code then in some cases I see the process exit with an uncaught exception: codeNSException/code.  I can find no similar complaint for either, and have tried a couple of versions. In other words, I'm fairly sure it's something weird with my system.  I've recently reinstalled OS X, and am on 10.11.3. The issue persists after reboot.  After a bit more digging, I've found - bizarrely - that if I launch with codesudo/code, they work fine. Completely fine. But after closing either via the app or the attached terminal, they still won't open normally.  I didn't do anything odd to install these - two were downloaded .dmgs, and one was an Homebrew Cask. Other apps function fine.  Any idea what may have caused this, or how to fix it?  Permissions set to code755/code (anyone can execute) in all cases.  <answer225553> App bundles have very specific permissions requirements in order to function correctly, it's not just a matter of setting execute bits. (in fact, I believe certain files emmust not/em have the execute bit set).   If they are in /Applications, I believe using Disk Utility's permission Verify/Repair will fix this for you.   <answer225562> Did you perchance move your user directory? If so, I suspect what's happened is that the owner/group of those applications is not the same as "you", and that's why they work under sudo and not normally.  I had this happen to me when I got my new computer. For some reason the machine refused to use the user/group ID from the old machine, and thus I wasn't part of the user/group who had access to things. I was able to fix most of this by selecting my user folder, Get(ting) Info, and then using the gizmo at the bottom to take ownership of everything inside the folder.  I also recall that there were lingering effects elsewhere, but I don't specifically recall apps being a problem. Nevertheless, I think you want to check to see if you have write access to the various /library folders, both in your own user folder and the system folders. Just try saving a text file into the one in your user folder and see what happens.  <comment273326> NSException usually means that the app wasn't coded properly. I'd contact the the developer and tell him and maybe he can help. <comment273328> @RedEagle2000 That's why I mentioned that I've tried multiple versions, and that nobody else seems to be reporting this issue. It's also two different applications. It seems it must be a very localised issue. <comment273658> It is still the developers responsibility to write code that catches exceptions - in cases like yours that code would help in identifying the problem <comment273659> In your title you mention sudo but not in the text - note sudo ...  will have a different effect than just running the app <comment273660> @Mark I agree generally, but to actually solve my problem contacting the developer is unlikely to help. It's affecting several applications; is clearly an issue on my end. <comment273661> @Mark I do mention sudo in the text, as of the same edit that put it in the title. <comment273667> Please can you append the full output you are seeing in **Console.app**. `NSException` should display more information than just the class name. <comment273669> What do you see if you run `codesign -d -vvvv path-to-app`? Is the application code-signed and verifying correctly? <comment273672> @GrahamMiln One's array out of bounds (NSRangeException), another's a different NSException. As I've said the other (Google Drive) doesn't throw at all. I think this is the wrong focus. All are signed. <comment273678> Please can you post the full exception details as an edit to your question. Please can you also share a few of the crash reports – the first 100 lines are extremely helpful for debugging. <comment273679> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/35033/discussion-between-ollie-ford-and-graham-miln). <comment273759> Ah - no, not quite, but I do have user apps directory symlinked to system, so you might be on to it there. Needless to say, this hasn't been a problem before now so I assumed it was 'safe enough'.. That said, one of them is owned by me:admin.. So surely that should work even if the root:admin ones didn't? <comment273783> Disk Utility's Repair Permissions only works on Apple apps in /Applications and the feature was removed in El Capitan. <comment273788> Wow…must hve forgotten the first part and the second part is surprising news to me. Thanks for the clarification.