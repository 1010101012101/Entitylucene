Display dialog from command line (like xmessage does) <body> h1Background/h1  I'd like to be able to display a notification window in OS X from within a script. The script will be running in background, so the notification should not go to the terminal but instead be displayed in a dialog window.  h1What I found so far/h1  h2xmessage/h2  On Linux I'd probably use codexmessage/code or one of its variants for this. But on OS X, starting the bulky X server just for this task seems both overkill and too slow for my taste.  h2Finder dialog/h2  I've found a similar question in this forum thread, where the “accepted” reply suggested this command:  precodeosascript -e 'tell app "Finder" to display dialog "Hey!"' /code/pre  But on my OS X 10.7, the resulting dialog isn't displayed immediately. Instead, the Finder icon starts to bounce, and the dialog becomes visible only after I click on the icon. Too many mouse clicks, too disruptive.  h2Notifier/h2  There is an answer on Super User which suggests a tool called terminal-notifier. Unfortunately that appears to only work for OS X 10.8, so it won't help in my case.  h1Question/h1  So is there some tool, either included in OS X 10.7 or freely available, which allows displaying a small dialog to the user without too much overhead?  <answer73300> One option is to tell a background process like SystemUIServer to display the dialog:  precodeosascript -e 'tell application "SystemUIServer" display dialog "message" end activate application (path to frontmost application as text)' /code/pre  You can also tell the frontmost application to display a dialog, but it's not shown immediately if the application is not responding. If MPlayer OS X is frontmost, text dialogs don't accept any keyboard input.  precodeosascript -e 'tell application (path to frontmost application as text) display dialog "message" end' /code/pre  <answer83359> Try   codetell application "System Events" to display dialog "Plug the Digispark into the USB port." buttons {"OK"} with icon caution/code  Tested on OS X 10.8.2  <comment85144> The first approach has the drawback that it will raise *all* windows of the given application, which I find slightly annoying. But the second approach is the best I've seen so far. Apps not responding should be rare enough that I won't worry about these. <comment304621> Sounds like I need to learn osascript <comment304623> Question: Adding the clause `buttons {"OK"}` causes the dialog to not get focus when it pops up. Leaving it out gives you a Cancel button, which we don't want, but at least the dialog gets focus. Is there a way to get focus, even when using that clause?