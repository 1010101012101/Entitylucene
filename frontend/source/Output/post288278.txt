Run an App with different folder as "~/Library" <body> I'm trying to set up the emMinecraft/em game so that I can launch it from and run it onto a USB flash drive (portable game and savefiles without additional config to play on each Mac). This is normal behaviour of game startup:  ol liAn Application (.app) is launched. This app is a custom Java wrapper, the game internally uses Java, though not the system-wide installed copy. Instead, it uses a dedicated and customised copy of JRE which - AFAIK - is located in the .app file/folder./li liThis app starts as a normal OSX application and is - in fact - a native game launcher./li liThe launcher loads the game settings and license credentials from code~/Library/Application Support/minecraft//code . This folder gets created if nonexistent./li liThe user is then prompted to click a green button to start the videogame./li liOnce the game is started, the launcher executes Java code and loads assets which are also located in folder code~/Library/Application Support/minecraft//code./li liOnce this has been done, the launcher app passes the game folder location used to load the game to the actual game, which is a Java app./li /ol  The game's setup is pretty unusual, so a launcher is mandatory, but it seems that the game respects whatever folder was defined by the launcher. The windows version of this game (which has same launcher and same Java binaries, only compiled for another platform) runs from code%AppData%/.minecraft/code and if you start the game EXE with a Batch script and you define a custom AppData folder, the game adapts accordingly.  In the past, when this game used to rely on the locally installed Java, I remember I could edit the app's .plist file in Xcode or TextEdit to define a custom emLibrary/em folder on OSX, and it ran perfectly. So, using either a .app modification, a Bash script or an AppleScript, without making a Symlink and without requiring Sudo password of a machine, nor having to configure this for every Mac I will use this app onto, how do I start an Application with a different code~/Library/code (or code~/Library/Application Support/code) folder?  <comment364054> https://stackoverflow.com/questions/14531917/launch-minecraft-from-command-line-username-and-password-as-prefix any help? <comment364059> @Tetsujin Thanks for the link, this command line way to start Minecraft is interesting, though unfortunately it does not solve the issue as I'd "only" like to start the actual .app Application normally, except for changed library directory <comment364061> idk minecraft at all - but I do use s similar method for another online 'game' using an Applescript app which fires the required command line switches & launches the app, using shellscript. The app then stays open until the game quits, then quits itself. <comment364063> @Tetsujin apparently Minecraft launcher features a commandline API, but on OSX and Linux it only works with the .jar iteration of the launcher, which requires Java to be installed on the machine and defeats the purpose of this setup. <comment364085> Can you create a symbolic link in target machine's home folder? If yes, you can do something like this `ln -s "/your_USB_flash/your_minecraft_resources/Library/Application Support/minecraft" "~/Library/Application Support/"` <comment364088> Also, you can try to override `$HOME` environment variable, but minecraft may skip this and get App Support folder path in other way. <comment364101> @toma I see what you mean. There are two main flaws to this though. 1st: the machine may have Minecraft installed, so there is already a minecraft folder; 2nd: once I create the symlink, if a poor soul wants to install Minecraft on said Mac after I do my trick, they'll have some issues as the game installer will try to save to a folder that actually points to nowhere <comment364112> you can replace original saves folder on your application start, and put all things back on application close. This will conflict only in case if you will try to run two instances of minecraft simultaneously. Cleaner task may also be installed on a mac, so it will fix saves folder even if you suddenly eject usb flash.