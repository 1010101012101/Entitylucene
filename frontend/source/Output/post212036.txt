Terminal: Remove specific extension recursively <body> I have a folder, containing many other folders.  Some of the folders contained therein (at arbitrary depths) have a specific extension, let's say, code.ext/code:  precodeTopFolder + Folder1 | + Folder11.ext |   +Folder111 + Folder2.ext /code/pre  I want to use Terminal to remove that extension from all folders in any subfolder so that it looks like this:  precodeTopFolder + Folder1 | + Folder11 |   +Folder111 + Folder2 /code/pre  I've played around with find and xargs, but I couldn't get it to work.  <answer212038> Try this:  precode$ find TopFolder -print Topfolder Topfolder/Folder1 Topfolder/Folder1/Folder11.ext Topfolder/Folder1/Folder11.ext/Folder111 Topfolder/Folder2.ext $ find TopFolder -name '*.ext' -print | while read i; do mv -v "$i" "${i%.ext}";done $ find TopFolder TopFolder TopFolder/Folder1 TopFolder/Folder1/Folder11 TopFolder/Folder1/Folder11/Folder111 TopFolder/Folder2 /code/pre  The first and last find are just to show the before and after hierarchy. Here's how the middle find, the one that does the actual work, works:  precode$ find TopFolder -name '*.ext' -print /code/pre  This finds everything in TopFolder matching the pattern code'*.ext'/code, that is all files and directories ending in .ext, and prints the path to each. If you want to limit it to just directories, add code-type d/code.  precodewhile read i; do /code/pre  coderead i/code reads from standard input into the shell variable codei/code. codewhile/code loops until coderead i/code returns false, which it does on end-of-file. Being codefind/code's output is being piped to the while, coderead/code's standard input is the output of the codefind/code, so coderead/code will read a line at a time from the codefind/code output until there's none left.  precodemv -v "$i" "${i%.ext}" /code/pre  This does the actual rename. The code-v/code is in there just so you can see what's happening, you can leave it out if you want. code"$i"/code is the source, quoted in case any element of the path in code$i/code contains spaces. code"${i%.ext}"/code is the destination, which is code$i/code, with any trailing code.ext/code removed.  precodedone /code/pre  This just terminates the while loop.  Note that this is in bash, it should be doable in other fairly modern shells, but the syntax may be a bit different.  <answer212039> You can use a find inline script and parameter expansion.  precodefind . -type d -name '*.ext' -exec ksh -c 'for dir     do mv "$dir" "${dir%.*}"     done' _ {} + /code/pre  <comment256058> Wonderful answer and great explanation; thank you very much! <comment256059> This did not work for me. <comment256060> @fzwo You're welcome!