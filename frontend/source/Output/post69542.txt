How does Application Level Firewall work? <body> I'm a bit confused about OS X Mountain Lion's Application Level Firewall.  I have enabled ALF (Application Level Firewall) in Settings - Secuity &amp; Privacy - Firewall and have some rules for some applications in it and those rules are stored by ALF in code/usr/libexec/ApplicationFirewall/com.apple.alf.plist/code  But it seems that codeipfw/code is disabled (no /etc/ipfilter) and codesudo ipfw list/code is code65535 allow ip from any to any/code. codepf/code is also disabled.  So I do not understand how ALF works. If ALF does not use the known legacy firewall applications, how does it do what it does? What does it use for a backend or is it a totally separate application that does not deal with codeipfw/code or codepf/code?  <answer69556> See OS X Server: About the Firewall service.  Although the topic is about OS X Server, the last paragraph says:     strongAdditional Information/strongbr       The codeipfw/code command is deprecated in Mountain Lion. If you want to manually configure Firewall rules, use the codepfctl/code binary for forward compatibility. For instructions, see codeman pfctl/code.   <answer79806> ALF uses a process called Firewall. The rules list you are looking for exists under: code/usr/libexec/ApplicationFirewall/com.apple.alf.plist/code  Additionally, any changes made on a per user basis, is made to code~/Library/Preferences/com.apple.alf.plist/code.  If you navigate to code/usr/libexec/ApplicationFirewall//code, you will also see the Firewall and socketfilterfw processes, which supply the backend and configuration manager (respectively) for ALF.  You can read more about Apple's in-house firewall here: http://krypted.com/tag/socketfilterfw/  <comment80813> Thanks, I've already read this article. I know that ipfw is deprecated, but there is no evidence that ipfw or pfctl is used by Application Firewall. So I want to know how actually ALF is working.