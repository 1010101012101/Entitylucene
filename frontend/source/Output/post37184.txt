ssh -A doesn't properly enable forwarding of authentication agent connection <body> I love codessh -A/code, which allows me to use my local ssh key when establishing a connection from a remote server. For example, I codessh -A host1.example.com/code and then from there I can codessh host2.example.com/code (or use git) and it uses my ssh key from the original machine, which in this case emshould/em be my mac. Although this has always worked for me on Debian/Ubuntu, it doesn't work on my new mac (Lion).   What am I missing here? How do I configure ssh to work correctly with -A? Do I need an ssh that is not the standard MacOS one?  <answer37354> The concept behind codessh -A/code are ssh agents. They run in the background and through the use of environment variables the agent can be located and automatically used for authentication when logging in to other machines using ssh. Have a look at the manpage of ssh-agent for more details.  With Mac OS X, the ssh-agent should be started on demand.  For more information see:  ul liUsing SSH Agent With Mac OS X Leopard/li /ul  <answer37371> Actually, the very simple answer is that you have to run  precodessh-add /code/pre  and then it all works.   <answer79246> As of OS X 10.8 you need to do this once:  precodesudo touch /var/db/useLS /code/pre  And add this as part of your code~/.bash_profile/code:  precodeif [ -f ~/.ssh/id_rsa ]; then     ssh-add -K ~/.ssh/id_rsa 2&gt;/dev/null fi /code/pre  Note: this recipe is parto of my bedouin scripts.  <comment91656> Hm, just tried this out; the agent does then start, but you still have to ssh-add to get anything to work. So ssh-add alone is still the answer, as far as I understand. I guess I should add it to my .bash_profile. <comment256325> lol, what if my private key needs a passphrase? <comment341745> That solved my latest ssh forwarding problem after the upgrade to macOS (after 5 years, still a useful answer, thanks @rfay)