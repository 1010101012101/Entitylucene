sourcing bash profile for root users <body> Apologies in advance if this question is going to annoy the hell out of everyone as I appreciate, it's been asked in various ways many times before.  Please be assured, I have read the archives and have tried at least some of the suggestions but still cannot resolve the (simple) issue. Hopefully someone can provide an answer and I can feel appropriately humbled.  FYI, for the avoidance of any ambiguity, I'm going to use absolute rather than relative paths.  When I log in, I do so as user codeadam/code.  The aliases in code/Users/adam/.bash_profile/code are loaded and I can use them immediately upon pulling up a terminal.  I don't use a code.bashrc/code file and that's fine.  Every now and then, I switch to root by typing codesu/code into the terminal and then entering my password.  The prompt changes and I am now root user.  My question is this: immediately upon becoming root, can my root bash profile be loaded without me having to manually source the profile file?  The reason I know it doesn't happen automatically is because I have the same aliases in my root profile file and my code/Users/adam/.bash_profile/code.  After becoming root user, unless I type in codesource [root_profile_file]/code, they don't work.  I have tried setting up the following permutations and then switching to root via the terminal but none of them automatically source the profile/aliases (note, I don't have any of the options below set up concurrently so I don't think I'm confusing the system):  strongOption 1:/strong put my aliases in code/etc/profile/code  strongOption 2:/strong  ul liin code/etc/profile/code, insert code[ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc/code/li liput my aliases in code/etc/bashrc/code/li /ul  strongOption 3:/strong    ul liin code/etc/bash_profile/code, insert code[ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc/code/li liput my aliases in code/etc/bashrc/code/li /ul  strongOption 4:/strong  put my aliases in code/var/root/.profile/code  strongOption 5:/strong    ul liin code/var/root/.profile/code, insert code[ -r /var/root/.bashrc ] &amp;&amp; . /var/root/.bashrc/code/li liput my aliases in code/var/root/.bashrc/code/li /ul  strongOption 6:/strong    ul liin code/var/root/.bash_profile/code, insert code[ -r /var/root/.bashrc ] &amp;&amp; . /var/root/.bashrc/code /li liput my aliases in code/var/root/.bashrc/code/li /ul  Please note, with any of the above, if I switch to root and then type codesource root_profile_file/code the aliases are loaded but only if I do indeed source the file manually.  Perhaps I've totally misunderstood how bash works and it's not possible to source a profile file automatically after switching to root but I'm hoping there is a simple solution.  Thanks in advance to anyone who's taken the time to read this message.  <answer43691> In general, I advice against codesu/code as it is dangerous, just search for it and you know why. On to your question, the root account works the same way your account does: it source ~/.bash_profile and/or ~/.bashrc. I don't know which one, but my intuition leans toward em~/.bashrc/em, so you might want to try to put your aliases there. Here is a suggestion:  precodesu           # type password to get into root account vi ~/.bashrc # put your aliases there exit         # exit your root session su           # try again to see if your aliases works /code/pre  <answer43693> The problem you are encountering is that when you run codesu/code by itself, you are not entering a 'login' shell. This means that your environment, working directory, and everything except uid/gid remain the same of the original user.  Login triggers do not execute, and you experience the issues you describe.  A simple solution to a simple problem:  codesu -/code  From the codesu(1)/code man page:     The strongsu/strong command is used to become another user during a login session. Invoked without a username, su defaults to becoming the superuser. The optional argument strong-/strong may be used to provide an environment similar to what the user would expect had the user logged in directly.   Also:   precode   -, -l, --login        Provide an environment similar to what the user would expect had the user logged in directly. /code/pre   If you codesu/code into a login shell, bash will behave as you expect, and automatically source the appropriate files on "login", without the need for overly hacky workarounds.  <answer45999> When I absolutely must, I codesudo bash/code which makes me root but with JRobert's environment.  My .bashrc contains:  precode# Prompt: 'jrobert@JRiMac ~' in green (red, if I'm root), '$' in white if [[ $UID == 0 ]]; then    export PS1="\[\e[1;31;40m\]\u@\h \W\[\e[0m\]\$ " else    export PS1="\[\e[32;40m\]\u@\h \W\[\e[0m\]\$ " fi /code/pre  , to make the root-prompt glare back at me in RED to emphasize that I'm now (more) vulnerable to my own [pick one:  brashness, dumbness, fat-finger tendencies, unwillingness to take good advice, up s.creek - don't drop the paddle].  <answer105744> I am using codesudo -i/code to switch to to root user. In this case, shell configuration is read from code/var/root/.profile/code.  <answer136506> Actually root uses code/bin/sh/code (old bourne shell), code.bash_profile/code and code.bashrc/code are read by bash.  It becomes tricky as those files may use functionality not available in codesh/code. Even if you codesource .bashrc/code or codesource .bash_profile/code, you will still have some issue with complex functions for instance.  One way to solve this is to run  precodesudo dscl . -change /Users/root UserShell /bin/sh /bin/bash /code/pre  to switch coderoot/code's shell to codebash/code.  <answer146110> if you have only one 'default' user and the root user you can put codealias su="su -"/code on .bash_profile of the 'default' user and you get the effect you want. Works and with no hacky things.  <answer196634> One way to solve this is to run the following to switch root's shell to bash:  precodesudo dscl . -change /Users/root UserShell /bin/sh /bin/bash /code/pre  This solution has fixed my issue as well.  <answer233525> codesudo dscl . -change /Users/root UserShell /bin/sh /bin/bash/code Only this does work! I tried to put my codeexport PS1=.../code to any of all these files above. /etc/profile, /etc/bashrc /var/root/.bashrc /var/root/.profile /var/root/.bash_profile.  From all these files code/bin/sh/code shell, doesn't read information! (only bash) (Mac OS El Capitan). And I had to change shell to bash.  Also code"su -"/code works too. (with this shell is reading code/var/root/.profile/code file)  <comment49652> I will however second Hai Vu's notes: You really, really, really should never `su` nor work as `root`.  There is `sudo` for that purpose, or you can work in such a way that you don't require root privileges at all. <comment49654> Thank you to both you and @Hai Vu.  "su -" does the trick and yes, completely understood, root should generally be avoided. <comment173184> I already knew to add the '-' after the su command, but still was not getting my .bash_profile for the root user sourced.  Florian Bidabe's and patrix's answer below about changing the root shell from sh to bash fixed the problem for me. <comment285384> There is no need to reconfirm existing answers...