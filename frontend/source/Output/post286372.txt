Blockcopy restore disk partition map <body> I have an old drive full of archived data that I want to refresh by reading all the blocks and writing them back on my Mac running El Capitan (remapping bad blocks along the way). I wasn't able to find a simple utility to do that (well, I did find codebadblocks/codeas part of the codee2fsprogs/code of MacPorts, but I didn't want to install MacPorts and didn't particularly trust codebadblocks/code), so I thought I'd make a blockcopy disk image of the drive and then write it back to the drive. That restored the data, but not the partition map. My drive now looks like this:  precodeprompt$ diskutil list /dev/disk5 /dev/disk5 (internal, physical):    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:                            Archive drive          *500.1 GB   disk5 /code/pre  Notice the absence of a partition map!   precodeprompt$ sudo pdisk /dev/disk5 -dump pdisk: No valid block 1 on '/dev/disk5' /code/pre  I'm surprised it will even mount, but it does, but I'm afraid to leave it like this. For reference, the disk image looks like this:  precodeprompt$ diskutil list /dev/disk9 /dev/disk9 (disk image):    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:     Apple_partition_scheme                        +500.1 GB   disk9    1:        Apple_partition_map                         32.3 KB    disk9s1    2:                  Apple_HFS Archive drive           500.0 GB   disk9s3  prompt$ sudo pdisk /dev/disk9 -dump  Partition map (with 512 byte blocks) on '/dev/disk9'  #:                type name                    length   base      ( size )  1: Apple_partition_map Apple                       63 @ 1          2:          Apple_Free                         262144 @ 64        (128.0M)  3:           Apple_HFS Apple_HFS_Untitled_2 976510944 @ 262208    (465.6G)  4:          Apple_Free                             16 @ 976773152 /code/pre  One other strange thing: while the diskimage HFS volume as the same UUID as the original, the restored volume has a different UUID.  h2Question 1: How do (should?) I fix the restored hard drive?/h2  My best guess is that the restore operation block copied partition 3 from the image to the hard drive starting at hard drive block 0. I'm guessing if I can recover at all it will be with something like  precodedd if=/dev/rdisk9 of=/dev/rdisk5  /code/pre  but since this is an old disk with a few remapped blocks, I wanted the extra file verification that comes with using a checksummed diskimage.   I feel like I should restore the partition map and UUID, but that will involve another complete rewrite of the drive. Since this is just an archive drive, maybe I should just leave it as is?   Alternately, I could use codedd/code to clone the partition map:  precodedd if=/dev/rdisk9 of=/dev/rdisk5 bs=512 count=64 /code/pre  and then use codeasr/code to restore the volume.  Or is there a better way?  h2Question 2: Next time, with NTFS/h2  I have to do this all over again, but this time with a Windows NTFS drive, still under El Capitan. The reason I don't want to just use codedd/code is I want robust error detection and recovery if there are read or write errors, which is a reasonable possibility given the age of the drive. I think using Apple's diskimages is still probably best for the bulk of the data, but how do I ensure the drive remains completely unchanged while rewriting every block? 