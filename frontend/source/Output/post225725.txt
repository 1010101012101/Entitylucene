How can I make a script that opens terminal and runs my executable? <body> My students and I are using gcc to compile programs which ask a series of questions then display a result.  Right now if we are running a program called "main" for example, we have to open a terminal window then type: ./Programs/main  We would like to be able to distribute these to other students who don't know how to use the terminal, so that they can just double-click on a file.  I have tried to create a .command or .sh file that does this, but they will do "exit;" before the program can get input.  I also tried to use Automator, but this also exits before the program can get input.  <answer225727> Add a "sleep" command to pause the script's execution.   precodeSleep 5 /code/pre  Will pause for 5 seconds.  <answer226106> When you double-click a code.command/code file, Terminal.app will open, and execute code/path/to/file.command ; exit;/code which means it will execute the content of the codefile.command/code script, and THEN exit.  If your Terminal is exiting before your executable can receive input, that seems to indicate that either your code.command/code is not calling your executable correctly, or your executable somehow doesn't wait to receive input before exiting.  To be able to help you further, you'd need to provide an example .c/.cpp file to compile, and the content of your code.command/code file.  I myself tried with a code.command/code file that contains only:  precode$HOME/Downloads/go.sh /code/pre  And I was able to ask for input in codego.sh/code (using coderead -p/code) before the Terminal exited.  <comment273990> Does the superuser answer work for you? http://superuser.com/questions/261194/how-can-i-execute-a-shell-script-without-exit-mac-os-x