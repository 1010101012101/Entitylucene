Why doesn't the red dot shut down the program? <body> If I use the red dot in the upper left of the last window of a program, why doesn't it shut the program down?  Except for rare programs that run without windows, what's the point of keeping programs running after all their windows are shut?  <answer21258> Great question. This was one of my first confusions about the Finder when switching to Mac. Here's what I think:   On other operating systems, the program menu is contained in the active application window. As such, each window is in essence a full instance of the program. (There's not as much integration with Windows Explorer, as there is with Finder on Mac OS. It' a tiny difference, but it really alters user experience.(My proof is the fact that you're asking this question.)  By contrast, on Mac OS X, the menu bar in the Finder is where all Apps' menus go. All running programs are tied to the Finder in a different way than on other operating systems. On Mac, a program may have auxiliary windows and such. In other operating systems, you generally have similar "panels" in their own window.  Also, remember that the yellow and green buttons only effect the window that they're in, so it seems odd to group a control that effects the entire app with two that only effect one window. Therefore, the "red dot" only affects the active window.   One notable exception is the Mac App Store. In that case, you are one hundred percent correct. Clicking the red dot closes the entire app. Notice how the App Store has no auxiliary menus or panes? Closing that Window does indeed mean you're exiting the app.  <answer21262> Actually it is an optional method in Cocoa that a programmer has the choice of implementing or not, a method aptly named applicationWillTerminateAfterLastWindowIsClosed:. Therefore it does not depend on the OS (things are different in Lion though, not sure by how much). And it could be a required thing by Apple for apps sold through the AppStore, although I didn't have the chance to experience it myself.  Sadly it is not something that can be added afterward, and I agree for the sake of the user it would make sense to have this behavior standard across all apps except the one that are documents-based...  <answer21286> The above says it all, but in shorter form document based applications (pages, textedit, etc) may have multiple windows for 1 application, 1 for each document you have open.  When you close a window, you close the document, not the app.  If it's the last window, it can occasionally close the app also, but this isn't common.  Also, if it's not a document based app, like the App Store etc, then the window effectively IS the app, hence closing it shuts it down.  <answer22242> Rule of thumb: If I can do something in an app without a window, it keeps running. So, I can make a new document in Word, I can open a new link in Safari etc., I can play music in iTunes... If I can't: it quits. So, iPhoto, SystemPreferences, iMovie all quit when you close the last window.  Characterized another way: why would you assume that just because I've finished this letter to GrandMa, and I close that window, that I am also finished with all my correspondence?  <comment23275> In Lion, programs without Windows will actually auto-shutdown if inactive and if memory is low. <comment23287> The BIG problem here, IMHO, is not that programs keep running even with no windows, it is that **only some** programs keep running with no windows, even if you only consider *just Apple applications*. <comment23291> +1 for the method call. I did not know that. <comment23312> In Lion, programs must implement the autosave feature, and can be terminated at any time. Like in iOS, users don't need to know if the program is running or not, it is the OS decision based on the resources available (of course, a program shouldn't be closed if it is doing something or you are working on it). <comment23313> This is described in Apple's Human Interface Guidelines: "If an application continues to perform some function when the main window is closed, however, it may be appropriate to leave it running when the main window is closed. For example, iTunes continues to play when the user closes the main window." <comment23314> And this is the reason why I stopped using Songbird (it actually closes when clicking the red button) <comment23327> @Fake its been like that even from the classic days. Basically control-panel like apps 'quit', but others usually stay running. On modern Macs, its mostly System Preferences that works that way.  And Dan - the application must support Automatic Termination too. <comment23328> Autosave is different than Automatic Termination. But the app must explicitly say it supports automatic termination. <comment24548> You're right about the single menu bar, but the Finder doesn't "own" the menu bar any more than any other app does. <comment24638> Some apps have a preference choice of whether to quit when the last window is closed. <comment25434> Many good answers also at [What scenarios benefit from Mac OS X allowing apps to run when no document windows remain?](http://apple.stackexchange.com/questions/19580/what-scenarios-benefit-from-mac-os-x-allowing-apps-to-run-when-no-document-window) <comment26152> "On other operating systems, the program menu is contained in the active application window." This is not the case with Ubuntu - the application's menu is in the top panel and not the window - and yet clicking 'x' closes the application (well, pretty much all apps behave that way - there's the odd one that jumps to the notification area when the 'x' is clicked).