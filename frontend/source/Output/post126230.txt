make it easier to call often used terminal commands <body> I have a java tool that I use quite often from the command line but to use it I have to type codejava -jar dsim.jar/code. I want to make it so that I can call it just by typing codedsim/code regardless of what directory I am in, but I can't quite work out how to accomplish this.  I have created a file at code~/.bash_profile/code and put into it:  precodealias dsim='java -jar dsim.jar' /code/pre  And I have placed the dsim.jar file into code/usr/local/bin/code as I read this is where user created command line tools should be kept. This location is in my $PATH.  I think the alias works well but location of the file doesn't seem to be accessible from anywhere. If I call codedsim/code from within code/usr/local/bin/code it works fine but if I am in any other directory I get:  precodeError: Unable to access jar file dsim.jar /code/pre  How can I get this to work from any directory?  <answer126232> Use absolute paths for the jar file:  precodealias dsim='java -jar /path/to/dsim.jar' /code/pre  <answer126268> This is not a direct answer, but you can consider the following solution as an useful one for often repeated commands:     Create ~/.inputrc and fill it with this:  precode"\e[A": history-search-backward "\e[B": history-search-forward set show-all-if-ambiguous on set completion-ignore-case on /code/pre      This allows you to search through your history using the up and down arrows â€¦ i.e. type "cd /" and press the up arrow and you'll search through everything in your history that starts with "cd /".   (via https://coderwall.com/p/oqtj8w)  <comment147931> That will probably work but isn't the idea of putting something into a directory in your PATH that you don't have to address it like that? I thought that having it in the PATH meant that you could call just the filename from any directory and it would be found? <comment148092> @Sam Not for files like this. `java` is located using the PATH, but files are not, otherwise if you had a file called java in a folder then running a command such as `cp java java2` would copy the file from your PATH rather than the file in the current folder.