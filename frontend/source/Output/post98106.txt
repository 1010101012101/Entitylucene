How to produce constant output in a Terminal window? <body> Like when you do codebrew install wget/code or codemysqld restart/code I want some lines of information constantly run through my terminal window. Is there maybe something I can monitor or any stream of information I can jump in? Is it maybe possible to watch the activity monitor processes in the terminal?  Why would I want to have that? Because it looks super cool when you have that Matrix-like code running over your monitor. And I could need that for some home movie scenes.  <answer98108> If you have some files that are growing you can use codetail -f/code. For example  precode $ tail -f /var/log/system.log /code/pre  There are several terminal tools similar to activity monitor, for example top (delivered with OS X) and htop (you will have to install it with MacPorts or Homebrew).  You could also download the sources of a large software package (e.g., gcc, OpenOffice) and then compile it. This will usually generate a lot of output on the console.  You could also generate huge directory listings  precode$ ls -lRt /code/pre  or codefind/code (the second one will delay each line by one second)  precode$ find . $ find . -print -exec sleep 1 \; /code/pre  <answer98114> Something like  precodewhile sleep 1; do     t=$(( RANDOM % 80 ))     for ((i=0; i &lt; $t; i++)); do         echo -n '*'         sleep 1     done     echo done /code/pre  might do the trick. Change the length of the sleeps for different speeds and replace the code*/code with whatever you want (even code$(( RANDOM % 10 ))/code for varying numbers).  <answer98117> You can try codetcpdump/code in Terminal. It lists the connections your computer makes through the active network interfaces. When you're having any network activity it will show running data on the screen.  <answer98118> The codematrix command/code:  precodeod -c /dev/random /code/pre  Read carefully, at a given time you will see the secret key.  <answer98119> Pulling ideas from this unix.stackexchange.com Q&amp;A about generating "hollywood" style terminal output.  h2The Slow Type/h2  This script produces that delayed typing like effect you see in movies. Where the computer prints things in the terminal at some really awful and slow rate.  Save the following to a file named codehollywood/code:  precode#!/bin/bash  while IFS= read -r line; do     length="${#line}"     bol=1     for (( offset = 0 ; offset &lt; length ; offset++ )); do         char="${line:offset:1}"         printf '%s' "$char"         if (( bol )) &amp;&amp; [[ "$char" == " " ]]; then             continue         fi         bol=0         sleep 0.05     done      if (( length == 0 )); then         sleep 0.$(( RANDOM % 3 + 2 ))     else         sleep 0.$(( RANDOM % 7 + 3 ))     fi      printf '\n' done /code/pre  Set execute permissions on the file codehollywood/code:  precodechmod +x hollywood /code/pre  And then pipe it the output from codedmesg/code to give it a large chunk of snazzy looking text to slowly print on the screen:  precodedmesg | hollywood /code/pre  h2The Hex Dump/h2  This dumps hex data to the screen. Looks impressive but is largely unintelligible to the masses.  precodehexdump -C /dev/urandom | GREP_COLOR='1;32' grep --color=auto 'ca fe' /code/pre  h2The Matrix/h2  Numbers. Numbers everywhere.  precodetr -c "[:digit:]" " " &lt; /dev/urandom | dd cbs=$COLUMNS conv=unblock | GREP_COLOR="1;32" grep --color "[^ ]" /code/pre  Unfortunately, with that one there isn't a good way to control the speed.  There's a better version of this available view Homebrew called cmatrix. You can install and run it with:  precodebrew install cmatrix cmatrix /code/pre  <comment115147> Matrix-like (aka top down) or similar to brew (horizontally) are two different things, what exactly are you looking for? And did you already ask the mighty Google for an answer? <comment115152> Quite different, you are right! Now that I looked at it again, Matrix-like does much more look like a toy or a screensaver than a productive tool running. Homebrew-like would be much better. I found some kid's tutorials on youtube about how to let random numbers run thorugh the terminal but that doesn't look very professional. <comment115153> `top` is quite nice, some characters are constantly changing. But has no lines runnning over the screen. Downloading sources, I find it's too much data for only fun. <comment115157> Download source code of a major program and compile it in your terminal, that would "look" *professional*, anything else is pretty much just noise unless it's useful output like watching some logs (as @Matteo suggests).  Of course, compiling also takes major resources. <comment115161> See: http://unix.stackexchange.com/questions/21347/output-hollywood-hacker-scene-from-a-shell <comment115210> Combine a `cat /var/log/system.log` with a pipe to the slow type script below and you'd have a nice, continuous flow of Terminal output. <comment115211> Also related, [here's an interesting page from one of the guys who worked on Tron where he talks about how they made the computer looking stuff for the movie](http://jtnimoy.net/workviewer.php?q=178). <comment373573> Great solution. The Hex Dump line should end on ' though. I tried editing it but Stackexchange expects at least 6 characters to be changed. Why?  â€”Unfortunately "tr -c "[:digit:]" " "  /dev/urandom" produces a "tr: Illegal byte sequence" error for me on OS X 10.11.6. <comment373629> @AlexIxeras good catch. fixed.