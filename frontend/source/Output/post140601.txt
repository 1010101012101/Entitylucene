Run action when device is detached <body> I'm using a codelaunchd/code agent to run a shell script whenever I connect my thunderbolt dock. I've been able to use codeIOKit/code notifications to detect when the dock is being attached, but I also want to run a shell script whenever the dock is being detached.  To detect the attachment of the dock I use codecom.apple.iokit.matching/code's codedevice-attach/code event:  precode &lt;key&gt;LaunchEvents&lt;/key&gt;  &lt;dict&gt;      &lt;key&gt;com.apple.iokit.matching&lt;/key&gt;      &lt;dict&gt;          &lt;key&gt;com.apple.device-attach&lt;/key&gt;          &lt;dict&gt;              &lt;key&gt;IOProviderClass&lt;/key&gt;              &lt;string&gt;IOPCIDevice&lt;/string&gt;              &lt;key&gt;idVendor&lt;/key&gt;              &lt;integer&gt;21&lt;/integer&gt;              &lt;key&gt;idProduct&lt;/key&gt;              &lt;integer&gt;4&lt;/integer&gt;              &lt;key&gt;IOMatchStream&lt;/key&gt;              &lt;true/&gt;              &lt;key&gt;IOMatchLaunchStream&lt;/key&gt;              &lt;true/&gt;          &lt;/dict&gt;     &lt;/dict&gt; &lt;/dict&gt; /code/pre  There should be an event that is fired on detach too, although I haven't fond it yet. The apple documentation on this subject is deplorable.  I really want to avoid using a polling method that keeps checking if the device is still attached. Some better solutions must   Also growl, ControlPlane and other similar apps are out of the question.  h3Edit:/h3  To be clear. I want to run a shell script every time emthis specific dock/em is connected or disconnected, not whenever any device is attached/detached.  <answer140856> //////////////////////////////////////////////////////////////////////////////  strongemEDIT: Upon rereading the question, I see that my answer was actually off topic./em/strong  //////////////////////////////////////////////////////////////////////////////  I have a solution for what you would like to do. It's actually really simple, but it would be to difficult for me to explain it in writing so I recorded a videos for you.  Trigger a USB event using Apple's Automator app  :)  PS. In the video I talk about UBS devices because I didn't realize you wanted this to work for Thunderbolt. But I'm pretty sure the solution will still work just as well for Thunderbolt. :)  <answer140864> When I was searching for a similar thing myself before, I heard about a bit of a messy solution that will run your code anytime a device is "Ejected."  What they did was find the OSX program that normally performs an USB Eject operation, and renamed it to something like Eject_old. Then they wrote their own program, which first runs the code they want and then calls the Eject_old program.  They named this new program whatever the other one was called, so now every time they eject a device it runs their program first. Of course this probably won't help if your dock is disconnected without being ejected first.  If you think this might be able to help with what you'd like to do, let me know and I can look into it some more.  :)  PS. There are third party apps that do some similar things. Maybe you can contact them directly and ask how their programs work.  <comment165994> OK I just updated the comment with a link to the video. <comment165997> I really appreciate the effort you put into making this video for me. This solution, however, does not go into a mechanic for detecting a *disconnecting* device. Also, there has to be a storage device attached to the dock for this solution to work - and events will also trigger if storage devices other than those on the dock are connected. I'm giving you a +1 for the effort but this is not the answer I'm looking for. <comment165999> Actually, my solution doesn't need a device to be attached to the dock. (You are talking about the OSX "Dock" at the bottom of the screen, right?) <comment166001> And I see what you mean about the detaching thing, I misread your question, sorry. <comment166002> Yes, I see now that my reply was completely off topic. Sorry about ;) <comment166005> You can then have you code check which device is being ejected to determine if you need to do something special for it.