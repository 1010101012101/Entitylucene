Search for page number with PDF Expert and Applescript <body> I'm trying to write an Applescript script that will open a pdf codeagile.pdf/code with codePDF Expert/code and search for a page number.  I'm getting close with the following script:  precodedo shell script "open agile.pdf" delay 1.0  tell application "System Events"    tell application process "PDF Expert"     click menu item "Go to Page..."  of menu 1 of menu bar item "Go"  of menu bar 1     keystroke "42"     key code 76   end tell end tell /code/pre  The problem is my script as it is will only work if I've already "clicked into" a codePDF Expert/code window.  Is it possible for me to tell Applescript to "click into the PDF Expert window after it opens?  Also, it is possible for me to tell Applescript to "wait until the window exists?  I was reading another answer that makes it look like the following will work but it doesn't:  precoderepeat until window "agile" of process "PDF Expert" exists end repeat /code/pre  I've done some poking around with UIElementInspector as recommended in another answer. This is the output of the codePDF Expert/code window:  precode&lt;AXApplication: “PDF Expert”&gt;  &lt;AXWindow: “agile”&gt;   &lt;AXSplitGroup&gt;    &lt;AXScrollArea&gt;  Attributes:    AXHorizontalScrollBar:  “&lt;AXScrollBar&gt;”    AXParent:  “&lt;AXSplitGroup&gt;”    AXChildren:  “&lt;array of size 5&gt;”    AXFocused (W):  “1”    AXSize:  “w=892 h=649”    AXRole:  “AXScrollArea”    AXTopLevelUIElement:  “&lt;AXWindow: “agile”&gt;”    AXHelp:  “(null)”    AXChildrenInNavigationOrder:  “&lt;array of size 5&gt;”    AXPosition:  “x=292 y=-803”    AXWindow:  “&lt;AXWindow: “agile”&gt;”    AXRoleDescription:  “scroll area”    AXVerticalScrollBar:  “&lt;AXScrollBar&gt;”    AXContents:  “&lt;array of size 3&gt;”    AXFrame:  “x=292 y=-803 w=892 h=649”  Actions:    AXScrollLeftByPage - scroll left by a page    AXScrollRightByPage - scroll right by a page    AXScrollUpByPage - scroll up by a page    AXScrollDownByPage - scroll down by a page /code/pre  <answer273682> This should work for you  precodedo shell script "open agile.pdf" delay 1.0 activate application "PDF Expert" delay 1 -- you may need to adjust this tell application "System Events"     tell process "PDF Expert"         click menu item "Go to Page..." of menu 1 of menu bar item "Go" of menu bar 1     end tell end tell /code/pre  <answer273684> codePDF Exper/code and codekeystroke "42"/code doesn't work for me.  However, using codeSkim/code and codekey code/code works:  precodedo shell script "open -a Skim agile.pdf" delay 0.1  tell application "System Events"    tell application process "Skim"     tell application "System Events" to tell process "Skim" to click menu item "Go to Page…" of menu "Go" of menu bar 1     delay 0.1     key code {21, 19, 36}   end tell end tell /code/pre  <comment344055> I don't have the app to test with, but `tell application process "PDF Expert" to activate` will make sure it comes to the front, & also will incidentally drop the other commands back to System Events. <comment344056> Thank you for the response, can you please provide an example. I don't know where to put your line in my code. <comment344057> I need to somehow tell Applescript to "click on the PDF Expert window" otherwise PDF Expert won't respond to the rest of the commands. So far `activate application "PDF Expert"` doesn't work. <comment344058> Doesn't work, for some reason `PDF Expert` doesn't recognize Applescript commands unless it's been "clicked" on. I'm experimenting with `Skim` seems to be working better. <comment344059> That is quite odd because I just downloaded PDF expert and ran the script myself and it works..  You might want to try adjusting the delay times.  I ran the script without your "do shell script command"  I had a PDF expert already opened with a document opened.  Then I ran the script. <comment344060> So strange...definitely only works for me if I first click into the window and then run the script. I'm also not able to `keystroke "123"`, I have to `key code {18,19,20}` <comment344154> Why using a shell script to open the file; doesn't PDFExpert support the open command? You might check that in the dictionary of PDFExpert. It also should fully support the activate command.