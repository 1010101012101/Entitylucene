How can I process/read checkmarks on a paper form? <body> I would like to process a large number of scanned paper forms (GUI or command line). I am only interested in reading (custom) checkboxes. The form looks like this:  ul lievery line has 6 circle-shaped boxes (one is marked)/li liform has has 45+ lines/li /ul  After processing, I would like to have the checked value (1 â€¦ 6) of every line. I assume as there is no Optical strongCharacter/strong Recognition involved (but OMR), this should be somewhat easier.  strongIs there a way to do this from the GUI or the command line? What would be the best approach?/strong   strongUPDATED/strong: scans come in PDF or JPEG (my choice). Sample scan (380kb JPEG).  Here is an anonymized version of the form:  img src="https://i.stack.imgur.com/HASBU.png" alt="paper form to be processed"  <answer104847> If you want to avoid OCR, you can use ImageMagick (a CLI image-manipulation super toolset). But you need to be shure all pages are aligned exactly the same. I hacked together this workflow, you need to alter it for your needs and create some loops, but it can help you in the right direction.  strongMake shure the position of each round is the same on each sheet/strong  strongExtract each round and save it with the row_circle-nr/strong (like 04_1.png, 04_2.png, etc)  precodex=$position_of_circle_on_x y=$position_of_circle_on_y w=$width_of_circle_area h=$hight_of_circle_area input=$input_image output=$output_row_cirleNr convert +repage $input -crop $wx$h+$x+$y $output /code/pre  strongCalculate the area of red using histograms/strong (emI prefer red, but you can also do this for blacks/em)  precodeRGBO=$( convert $FILE -colorspace HSL -verbose info: | grep mean | awk '{print $2}' ) REDVALUE=$( echo $RGBO | awk '{print $1}'  | cut -d. -f1 ) /code/pre  strongThe largest codeREDVALUE/code wins for each row/strong  Well, this is about it.  strongHow to install imagemagick?/strong  The use and installation of ImageMagick can intimidating, but this image manipulation package is the most powerfull I have encountered so far. As the installation from source can be a hassle for native OS X users I advise you to use Homebrew.  To install ImageMagick using Homebrew run this oneliner in your terminal:  precoderuby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)" /code/pre  Homebrew is now installed, it is wise to follow the installer's suggestions after installation. Now we install ImageMagick using codebrew/code.  precodebrew install imagemagick /code/pre  Now we can use imagemagick and its codeconvert/code tool as in the examples above.  <answer105285> I am an open source enthusiast so had a look at ImageMagic to see if it is open source, it is, however the project is based in the US.  I want to see if I can help you with a German university open source project base called SDAPS.  SDAPS is specifically an OMR program.  http://sdaps.org/SDAPS  I've downloaded your test page and will try to use it to provide an answer to your question using SDAPS.  <comment122807> Do you have any solution at all for this problem currently (besides checking visually)? <comment122808> No, I don't have a solution right now. <comment122813> So maybe restricting it to the command line might prevent solutions which have a GUI and can still be automated from within the application. Do you want to broaden the scope a bit to look for any application solving the problem? <comment122847> @patrix Done!!! <comment123148> What format are the scanned documents? <comment123152> Can you also provide a sample (anonymized) document? It may be easier to try certain things with available software. <comment123719> Can you provide a filled document instead of an empty one? (...and if you can choose the format, use a lossless format like png and not something like jpg) <comment123812> This project looks promising, I am looking forward to your answer... <comment123823> Don't think I will finish my answer before the bounty expires but there you go, work comes first. <comment123825> Yeah, that's a bummer. But this piece of software might do a better job than my hack. <comment123843> I seriously suggest looking at http://sdaps.org/SDAPS as suggested by @Deesbek <comment124062> Useful! Thank you.