Create Automatic Calendar events from email data <body> I'd like to have my booking information automatically pulled from my emails and turned into a callendar event.    So if I'm booked November 2-6, have a calander event show up for each day showing the Location and Rate on each day.   Among other information in the email, below is what I want pulled and how it is typed in the message. "Location" will generall always be the same but "Rate" will change. I'll be creating a rule with this script in my mail app to activate it.  Location: CVT 1500 Port RD, City, State Zipbr Date: November 2-6br Rate: $300/day plus agency fee  I found this applescript script, and after trying to tweak it for my needs and failing, I decided to ask for help. It's different criteria but does exactly what I need essentially. Below is the original script.   precode-- Triggered by Mail rule. using terms from application "Mail" on perform mail action with messages msgs for rule theRule     tell application "Mail"         repeat with msg in msgs             try                 set msgcontent to content of msg                 set msgid to message id of msg                 set {movie, runtime, cert, bref, starttime, addr, screen} to my parseMsg(msgcontent)                 my createEvent(movie, runtime, cert, bref, starttime, addr, screen, msgid)             end try         end repeat     end tell end perform mail action with messages end using terms from  -- Parse the email content to extract movie details. on parseMsg(msgcontent) set movie to extractBetween(msgcontent, "You are going to see: ", "Cert: ") set cert to extractBetween(msgcontent, "Cert: ", "Running Time: ") set runtime to extractBetween(msgcontent, "Running Time: ", " minutes") set bref to extractBetween(msgcontent, "Booking Reference: ", "Date: ") set datestring to extractBetween(msgcontent, "Date: ", "Cinema: ") set addr to extractBetween(msgcontent, "Cinema: ", "Screen: ") set screen to extractBetween(msgcontent, "Screen: ", "Number of people going: ") set starttime to parseDateString(datestring) return {movie, runtime, cert, bref, starttime, addr, screen} end parseMsg  -- Create a calendar event for the specified movie. on createEvent(movie, mins, cert, bref, starttime, addr, screen, msgid) set endtime to starttime + mins * minutes tell application "Calendar" to tell calendar "Home"     set theEvent to make new event with properties {start date:starttime, end date:endtime, summary:"Cinema: " &amp; movie}     set location of theEvent to screen &amp; ", Cineword " &amp; addr     set description of theEvent to "Booking Reference: " &amp; bref &amp; return &amp; "Run Time: " &amp; mins &amp; " minutes" &amp; return &amp; "Certificate: " &amp; cert     set url of theEvent to "message://" &amp; "%3c" &amp; msgid &amp; "%3e" end tell end createEvent  -- Extract the substring from between two strings to extractBetween(theString, startText, endText) set tid to AppleScript's text item delimiters set AppleScript's text item delimiters to startText set startComps to text items of theString set AppleScript's text item delimiters to endText set endComps to text items of second item of startComps set AppleScript's text item delimiters to tid return trim(first item of endComps) end extractBetween  -- Trim all whitespace from start and end of a string on trim(theString) set theChars to {" ", tab, character id 10, return, character id 0, character id 8232} repeat until first character of theString is not in theChars     set theString to text 2 thru -1 of theString end repeat repeat until last character of theString is not in theChars     set theString to text 1 thru -2 of theString end repeat return theString end trim  -- Parse date and time from the string given in the email. on parseDateString(datestring) set theDate to current date set dateWords to words of datestring set day of theDate to text 1 thru -3 of item 2 of dateWords set time of theDate to (item 5 of dateWords) * hours + (item 6 of dateWords) * minutes set monthList to {January, February, March, April, May, June, July, August, September, October, November, December} repeat with i from 1 to 12     if item 3 of dateWords = ((item i of monthList) as string) then         set monthNumber to (text -2 thru -1 of ("0" &amp; i))         exit repeat     end if end repeat set month of theDate to monthNumber return theDate end parseDateString /code/pre 