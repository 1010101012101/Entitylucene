Mapping ⌘→ to ^Q→ in iTerm2 doesn't work <body> I'm trying to make iTerm2 and tmux play nicer with eachother (without using the builtin tmux functions; I'd like my windows and panes managed by myself).  Therefore, I want to map kbd⌘/kbd+kbd→/kbd to a key sequence starting with kbd^Q/kbd (my tmux prefix), followed by kbd→/kbd.  kbd^Q/kbd is code0x11/code, and kbd→/kbd is code^[[C/code, i.e. code0x1b 0x5b 0x43/code. However, if I try to make this mapping in the iTerm Preferences (Keys→Key Mappings, with the "Send Hex Codes" setting), it doesn't work, i.e. it doesn't switch my panes as I would expect.  img src="https://i.stack.imgur.com/OWuxl.png" alt="Key mapping that doesn&#39;t work"  If, shortly after pressing kbd⌘/kbd+kbd→/kbd I press kbd→/kbd again, the active pane to the right is selected, so the ^Q must be coming through. If I just map it to code0x1b 0x5b 0x43/code (kbd→/kbd), it works, too.  Is this a limitation of iTerm2 itself; can I not send longer key sequences? Is it sending the keys too fast for tmux?  I also tried using the "Send with vim special keys" setting, but it doesn't seem to work at all; if I enter "&lt;C-Q&gt;&lt;Right&gt;" it sends that text literally.  emiTerm2 Build 3.0.8 on macOS Sierra./em  <answer254859> I found this on iTerm2's FAQ page. I'm not sure if it answers your question. Let us know.  img src="https://i.stack.imgur.com/py67N.png" alt="enter image description here"  <comment317335> Sadly it doesn't. `$TERM`, and the terminal type setting are both `xterm-256color`. My arrow keys are working fine, as I wrote I can even map a key combination to send an arrow key escape sequence, just not Control-Q _and_ and arrow key escape sequence. I have cursor application mode turned off.