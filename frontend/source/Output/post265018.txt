How to open SSH socks proxy at startup? <body> I use remote socks proxies for occasions when I need an IP from various locations.  There is one that I use far more than any others, to the point that I would like a connection to be opened by default when my client machine boots.  Currently I have to open terminal, execute an codeSSH -D/code command, type in a password, and then the proxy is live.  I would really like to automate this at startup somehow, but I can't seem to figure out how to do it.  I'm intermediate with CLI stuff but a novice with shell scripting and so forth, so I really don't even know where to begin.  Is there an easy way to have this SSH connection start automatically at client startup?  So far in my searching for a solution, I have found this and am running as an automator workflow using the Run Shell Script module:  precodeip=aa.bb.cc.dd   #replace with your unix server's ip username=yyyyyyyyyy #your ssh username password=xxxxxxxxxxxxxxxxx #your ssh password command=ssh -D 2002     #what do you want to do with remote server arguments=-Cq     #arguments for your command expect -c 'spawn ssh $username@$ip ; expect password ; send "$password\n" ; interact' /code/pre  It seems to work, in that Automator gives no errors and reports Workflow completed.  However the proxy is not accessible from a browser, so clearly something is wrong.  I'm using Mavericks, latest updates.  <answer265021> You need to pass the arguments to the codessh/code command you are running, not to some variables:  precodeip=aa.bb.cc.dd   #replace with your unix server's ip username=yyyyyyyyyy #your ssh username password=xxxxxxxxxxxxxxxxx #your ssh password command="ssh -D 2002"     #what do you want to do with remote server arguments=-Cq     #arguments for your command expect -c 'spawn $command $arguments $username@$ip ; expect password ; send "$password\n" ; interact' /code/pre  <comment332242> Aha... so can I not just include $command in the final line?  Doing so isn't working for me... wondering why not?  `expect -c 'spawn $command $username@$ip ; expect password ; send "$password\n" ; interact'` <comment332243> Sure, if it looks better to you <comment332244> but Automator doesn't seem to like that... `(   "-: line 3: -D: command not found",   "can't read "command": no such variable",   "    while executing",   ""spawn $command $username@$ip " " )` <comment332245> Maybe putting it into the `"` quotes? <comment332246> Yep just had that exact same thought.  Automator no longer complains, however my proxy still does not function.  So close and yet... <comment332248> so try to remove the `-q` if you will get some output. <comment332249> No change... Automator output is empty `( "" )` <comment332256> Additional clarification - the proxy does not work even if the command is direct without the variable - `expect -c 'spawn ssh -D 2003 $username@$ip ; expect password ; send "$password\n" ; interact'`