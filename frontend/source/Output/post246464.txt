Detect battery percentage applescript <body> How would I detect what my computer's battery percentage is using applescript? All answers to similar questions say to install additional software, but I would like to do this with purely applescript. Is this possible? I've also tried searching through the  applescript library with no success.  <answer246480> Here is an example of setting the percent charged of the internal battery to a emvariable/em using AppleScript.  In the sample emcode/em below the codebatteryPercent/code emvariable/em holds the numeric percentage of battery charge and is shown in a message.  precodeset batteryPercent to do shell script "pmset -g batt | awk '/InternalBattery/ { sub(/;/, \"\"); print $2 }'"  display dialog "Battery is " &amp; batteryPercent &amp; " charged." buttons {"OK"} default button "OK" /code/pre  img src="https://i.stack.imgur.com/796Y0.png" alt="enter image description here"  <comment303911> How do You want to use the info? Because You can get the percentage using bash script like this: `pmset -g batt | egrep "([0-9]+\%).*" -o --colour=auto | cut -f1 -d';'` <comment303917> I know that, but I want to set it to a variable in applescript. @MateuszSzlosek <comment303944> This is interesting! I never knew you could run shell commands in applescript. <comment303946> @ALX, Yes, this is what the `do shell script` _command_ in AppleScript is for. However depending on how complex the _command line_ portion is, it can be tricky.  As an example in the `awk` _substitute command_ `sub()` in AppleScript it's necessary to escape the double-quotes with a backslash, e.g. `sub(/;/, \"\")`.  If you did that on the `bash` _command line_ it would error with `awk: illegal statement at source line 1` and show where the error is. From the `bash` _command line_ it would it would be e.g. `sub(/;/, "")`. Continued in next comment... <comment303947> Continued from previous comment... So you may run into similar situations where the _code_ run from the `bash` _command line_ will need to be escaped in places with a backslash to get it to work in the `do shell script` _command_ in AppleScript.