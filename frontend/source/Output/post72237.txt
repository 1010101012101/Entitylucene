Why can't I open DMG files which reside on a read-only NFS filesystem? <body> I've discovered a strange problem... if I have disk image files (DMGs) which reside on a read-only NFS share, I cannot open these in Mac OS X 10.7.5. The same files open fine when accessed over AFP. However, trying to open them using codehdiutil attach/code when they're on the NFS share results in "attach failed - Read-only file system":  precodebash-3.2# /usr/bin/hdiutil attach /Volumes/nfs_share/Some.dmg hdiutil: attach failed - Read-only file system /code/pre  strongEven if the AFP share is read-only, I can attach those same images./strong But for some reason, a read-only emNFS/em share doesn't work.  Ultimately what I emwant/em to do is attach the images emwith a shadow file/em, to mount the read-only images as read-write. But this also fails the same way:  precodebash-3.2# /usr/bin/hdiutil attach /Volumes/nfs_share/Some.dmg -mountpoint /Somewhere -shadow /path/to/Some-Shadow hdiutil: attach failed - Read-only file system /code/pre  Again, this works perfectly if the image is served via AFP. It also works fine if the NFS share is read-write, but for security reasons I cannot do that.  strongHow can I mount DMG files which reside on a read-only NFS share?/strong  hr  strongAdditional information:/strong  The relevant line from code/etc/exports/code on the FreeNAS (FreeBSD 8.2-RELEASE-p7) server:  precode/mnt/raid/netboot -alldirs -ro -mapall=netboot:netboot -network 10.100.0.0/16 /code/pre  The output of code/usr/bin/hdiutil attach -verbose /Volumes/netboot/Lion.nbi/Library.dmg -notremovable -shadow /private/var/netboot/Library-Shadow -owners on -noverify -noautofsck -nobrowse/code:  precodeInitializing… DIBackingStoreInstantiatorProbe: interface  0, score      100, CBSDBackingStore DIBackingStoreInstantiatorProbe: interface  1, score    -1000, CBundleBackingStore DIBackingStoreInstantiatorProbe: interface  2, score    -1000, CRAMBackingStore DIBackingStoreInstantiatorProbe: interface  3, score      100, CCarbonBackingStore DIBackingStoreInstantiatorProbe: interface  4, score    -1000, CDevBackingStore DIBackingStoreInstantiatorProbe: interface  5, score    -1000, CCURLBackingStore DIBackingStoreInstantiatorProbe: interface  6, score    -1000, CVectoredBackingStore CBSDBackingStore::newProbe stat() failed.  No such file or directory. DIBackingStoreInstantiatorProbe: interface  0, score        1, CBSDBackingStore DIBackingStoreInstantiatorProbe: interface  1, score    -1000, CBundleBackingStore DIBackingStoreInstantiatorProbe: interface  2, score    -1000, CRAMBackingStore DIBackingStoreInstantiatorProbe: interface  3, score    -1000, CCarbonBackingStore DIBackingStoreInstantiatorProbe: interface  4, score    -1000, CDevBackingStore DIBackingStoreInstantiatorProbe: interface  5, score    -1000, CCURLBackingStore DIBackingStoreInstantiatorProbe: interface  6, score    -1000, CVectoredBackingStore DIBackingStoreInstantiatorProbe: interface  0, score      100, CBSDBackingStore DIBackingStoreInstantiatorProbe: interface  1, score    -1000, CBundleBackingStore DIBackingStoreInstantiatorProbe: interface  2, score    -1000, CRAMBackingStore DIBackingStoreInstantiatorProbe: interface  3, score      100, CCarbonBackingStore DIBackingStoreInstantiatorProbe: interface  4, score    -1000, CDevBackingStore DIBackingStoreInstantiatorProbe: interface  5, score    -1000, CCURLBackingStore DIBackingStoreInstantiatorProbe: interface  6, score    -1000, CVectoredBackingStore Attaching… Error 30 (Read-only file system). Finishing… DIHLDiskImageAttach() returned 30 hdiutil: attach failed - Read-only file system /code/pre  Output of coderpcinfo -p/code on the NFS Server:  precode   program vers proto   port  service     100000    4   tcp    111  rpcbind     100000    3   tcp    111  rpcbind     100000    2   tcp    111  rpcbind     100000    4   udp    111  rpcbind     100000    3   udp    111  rpcbind     100000    2   udp    111  rpcbind     100000    4 local    111  rpcbind     100000    3 local    111  rpcbind     100000    2 local    111  rpcbind     100005    1   udp    967  mountd     100005    3   udp    967  mountd     100005    1   tcp    967  mountd     100005    3   tcp    967  mountd     100003    2   udp   2049  nfs     100003    3   udp   2049  nfs     100003    2   tcp   2049  nfs     100003    3   tcp   2049  nfs     100024    1   udp    689  status     100024    1   tcp    689  status     100021    0   udp    616  nlockmgr     100021    0   tcp    927  nlockmgr     100021    1   udp    616  nlockmgr     100021    1   tcp    927  nlockmgr     100021    3   udp    616  nlockmgr     100021    3   tcp    927  nlockmgr     100021    4   udp    616  nlockmgr     100021    4   tcp    927  nlockmgr /code/pre  Output of codemount/code on the Mac OS X 10.7.5 client:  precode/dev/disk1s2 on / (hfs, local) devfs on /dev (devfs, local, nobrowse) afp_0egBhf12TAP01SptRt47XSdj-3.2c000002 on /private/var/netboot (afpfs, nobrowse) afp_0egBhf12TAP01SptRt47XSdj-4.2c000004 on /Network/Applications (afpfs, read-only) map -hosts on /net (autofs, nosuid, automounted, nobrowse) map auto_home on /home (autofs, automounted, nobrowse) afp_0egBhf12TAP01SptRt47XSdj-4.2c000008 on /Network/Servers/chef.farcry.sitepalette.com/Users (afpfs, nodev, nosuid, automounted, nobrowse, mounted by jnet) afp_0egBhf12TAP01SptRt47XSdj-4.2c000009 on /Volumes/Users (afpfs, nodev, nosuid, mounted by jnet) 10.100.1.2:/mnt/raid/netboot on /Volumes/netboot (nfs) /code/pre  And finally, the output of code/usr/bin/hdiutil attach -debug /Volumes/netboot/Lion.nbi/Library.dmg -notremovable -shadow /private/var/netboot/Library-Shadow -owners on -noverify -noautofsck -nobrowse/code:  precodecalling DIHLDiskImageAttach with  skip-verify: true auto-fsck: false drive-options: quiet: false shadow-url: file://localhost/private/var/netboot/Library-Shadow mount-nobrowse: true enable-owners: true verbose: false debug: true agent: hdiutil fixed-disk: true image-options: main-url: file://localhost/Volumes/netboot/Lion.nbi/Library.dmg 2012-11-27 12:02:23.053 hdiutil[23401:707] DIHLDiskImageAttach: input dictionary {     agent = hdiutil;     "auto-fsck" = 0;     debug = 1;     "drive-options" =     {     };     "enable-owners" = 1;     "fixed-disk" = 1;     "image-options" =     {     };     "main-url" = "file://localhost/Volumes/netboot/Lion.nbi/Library.dmg";     "mount-nobrowse" = 1;     quiet = 0;     "shadow-url" = "file://localhost/private/var/netboot/Library-Shadow";     "skip-verify" = 1;     verbose = 0; } 2012-11-27 12:02:23.054 hdiutil[23401:707] DIHLDiskImageAttach: disabling legacy image format attach 2012-11-27 12:02:23.055 hdiutil[23401:707] DIHLDiskImageAttach: newImagekeys = {     "legacy-disabled" = 1; } 2012-11-27 12:02:23.055 hdiutil[23401:707] DIHLDiskImageAttach: creating DIHelperProxy 2012-11-27 12:02:23.056 hdiutil[23401:707] with dictionary: {     agent = hdiutil;     "auto-fsck" = 0;     debug = 1;     "drive-options" = &lt;62706c69 73743030 d0080000 00000000 01010000 00000000 00010000 00000000 00000000 00000000 0009&gt;;     "enable-owners" = 1;     "fixed-disk" = 1;     "image-options" = &lt;62706c69 73743030 d101025f 100f6c65 67616379 2d646973 61626c65 6409080b 1d000000 00000001 01000000 00000000 03000000 00000000 00000000 00000000 1e&gt;;     "main-url" = "file://localhost/Volumes/netboot/Lion.nbi/Library.dmg";     "mount-nobrowse" = 1;     operation = DIHelperAttach;     quiet = 0;     "shadow-url" = "file://localhost/private/var/netboot/Library-Shadow";     "skip-verify" = 1;     verbose = 0; } 2012-11-27 12:02:23.056 hdiutil[23401:707] [DIHelperProxy alloc] 2012-11-27 12:02:23.056 hdiutil[23401:707] [DIHelperProxy alloc] returning self 0x7fa39b00d690, retainCount 1 2012-11-27 12:02:23.057 hdiutil[23401:707] DIHLDiskImageAttach: running DIHelperProxy 2012-11-27 12:02:23.057 hdiutil[23401:707] [DIHelperProxy performOperationReturning] entry 2012-11-27 12:02:23.057 hdiutil[23401:707] [DIHelperProxy performOperationReturning] detaching thread 2012-11-27 12:02:23.058 hdiutil[23401:2803] [DIHelperProxy workerThread] entry 2012-11-27 12:02:23.058 hdiutil[23401:2803] [DIHelperProxy workerThread] setting up server 2012-11-27 12:02:23.059 hdiutil[23401:2803] [DIHelperProxy threadSetupServer] entry 2012-11-27 12:02:23.059 hdiutil[23401:2803] [DIHelperProxy threadSetupServer] setting up _headerConnection 2012-11-27 12:02:23.060 hdiutil[23401:2803] [DIHelperProxy threadSetupServer] setting up _headerConnection rootObject 2012-11-27 12:02:23.060 hdiutil[23401:2803] [DIHelperProxy threadSetupServer] adding NSConnectionDidInitializeNotification notification 2012-11-27 12:02:23.061 hdiutil[23401:2803] [DIHelperProxy threadSetupServer] exiting 2012-11-27 12:02:23.061 hdiutil[23401:2803] [DIHelperProxy workerThread] launching 2012-11-27 12:02:23.061 hdiutil[23401:2803] [DIHelperProxy threadLaunchToolAuthenticated] entry 2012-11-27 12:02:23.063 hdiutil[23401:2803] launching helper tool at "/System/Library/PrivateFrameworks/DiskImages.framework/Resources/diskimages-helper". 2012-11-27 12:02:23.063 hdiutil[23401:2803] [DIHelperProxy threadLaunchToolAuthenticated] adding NSTaskDidTerminateNotification notification 2012-11-27 12:02:23.063 hdiutil[23401:2803] [DIHelperProxy thread LaunchToolAuthenticated] launching 2012-11-27 12:02:23.065 hdiutil[23401:2803] [DIHelperProxy threadLaunchToolAuthenticated] exiting 2012-11-27 12:02:23.065 hdiutil[23401:2803] [DIHelperProxy workerThread] running runloop 2012-11-27 12:02:23.081 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] entry 2012-11-27 12:02:23.081 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] adding new NSConnectionDidDieNotification notification 2012-11-27 12:02:23.081 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] removing old NSConnectionDidDieNotification notification 2012-11-27 12:02:23.082 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] removing old connection rootObject 2012-11-27 12:02:23.082 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] invalidating old connection 2012-11-27 12:02:23.083 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] releasing old connection 2012-11-27 12:02:23.083 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] and replacing with new connection 2012-11-27 12:02:23.083 hdiutil[23401:2803] [DIHelperProxy helperConnectionInitialized] exit 2012-11-27 12:02:23.085 hdiutil[23401:2803] [DIHelperProxy connectToFramework] entry, helper 0x7fa39b016940 2012-11-27 12:02:23.085 hdiutil[23401:2803] [DIHelperProxy connectToFramework] exit 2012-11-27 12:02:23.186 hdiutil[23401:2803] [DIHelperProxy sendOperationToHelper] entry 2012-11-27 12:02:23.187 hdiutil[23401:2803] [DIHelperProxy sendOperationToHelper] starting operation with helper 2012-11-27 12:02:23.190 hdiutil[23401:2803] [DIHelperProxy sendOperationToHelper] exit 2012-11-27 12:02:23.194 hdiutil[23401:2803] [DIHelperProxy frameworkCallbackWithDictionary] entry status proc called: initialize Initializing… myStatusProc: returning 0  2012-11-27 12:02:23.199 hdiutil[23401:2803] [DIHelperProxy frameworkCallbackWithDictionary] exit 2012-11-27 12:02:23.201 diskimages-helper[23407:2503] updateImageAndDriveDictionaries: before update _imageOptions: {     "enable-keychain" = 1;     writeable = 0; } 2012-11-27 12:02:23.201 diskimages-helper[23407:2503] updateImageAndDriveDictionaries: _imageOptions: {     "enable-keychain" = 1;     "legacy-disabled" = 1;     writeable = 0; } 2012-11-27 12:02:23.202 diskimages-helper[23407:2503] _driveOptions: {     "auto-fsck" = 0;     autodiskmount = 1;     removable = 0;     "unmount-timeout" = 0; } 2012-11-27 12:02:23.202 diskimages-helper[23407:2503] DIHelperAttach: performOperation: initializing framework 2012-11-27 12:02:23.202 diskimages-helper[23407:2503] {     agent = hdiutil;     "auto-fsck" = 0;     "auto-fsck-failure-override-type" = callback;     "auto-open-ro-root" = 0;     "auto-open-rw-root" = 0;     "auto-stretch" = 0;     "bundlebs-checkpointing" = 0;     "bundlebs-localcloseonflush" = 0;     "bundlebs-localcloseonidle" = 0;     "bundlebs-localcloseonsleep" = 0;     "bundlebs-localfdcount" = 6;     "bundlebs-remotecloseonflush" = 0;     "bundlebs-remotecloseonidle" = 0;     "bundlebs-remotecloseonsleep" = 0;     "bundlebs-remotefdcount" = 3;     "burn-apple-supported-devices-only" = 0;     "burn-no-underrun-protection" = 0;     "burn-synthesize-content" = 1;     "bzip2-level" = 0;     "callback-with-sla" = 1;     debug = 1;     "disable-encrypted-images" = 0;     "disable-kernel-mounting" = 1;     "disable-owners" = 0;     "drive-options" = &lt;62706c69 73743030 d0080000 00000000 01010000 00000000 00010000 00000000 00000000 00000000 0009&gt;;     "enable-owners" = 1;     "filevault-default-case-sensitive-file-system" = "Case-sensitive Journaled HFS+";     "filevault-default-encryption-type" = "AES-128";     "filevault-default-file-system" = "Journaled HFS+";     "filevault-default-image-type" = SPARSEBUNDLE;     "filevault-default-partition-type" = SPUD;     "filevault-default-volume-name" = FileVault;     "fixed-disk" = 1;     "force-idme" = 0;     "hfsplus-stretch-parameters" =     {         "hfsplus-stretch-allocation-block-size" = 4096;         "hfsplus-stretch-allocation-file-size" = 8388608;         "hfsplus-stretch-threshold" = 524288;     };     "idle-timeout" = 15;     "ifd-format" = UDZO;     "ifd-ignore-io-errors" = 1;     "ifd-segment-size" = 0;     "iff-format" = UDZO;     "iff-fs" = "HFS+";     "iff-layout" = SPUD;     "iff-source-owners" = auto;     "iff-spotlight-indexing" = 0;     "iff-temp-sparse-band-size" = 20480;     "iff-temp-use-rw-if-possible" = 1;     "iff-usehelper" = 1;     "ignore-bad-checksums" = 0;     "image-options" = &lt;62706c69 73743030 d101025f 100f6c65 67616379 2d646973 61626c65 6409080b 1d000000 00000001 01000000 00000000 03000000 00000000 00000000 00000000 1e&gt;;     "main-url" = "file://localhost/Volumes/netboot/Lion.nbi/Library.dmg";     "mount-attempted" = 1;     "mount-nobrowse" = 1;     "mount-point" = "/Volumes/";     "mount-private" = 0;     "mount-required" = 1;     "mount-type" = in;     "nbi-spotlight-indexing" = 0;     operation = DIHelperAttach;     "progress-delay" = 5;     "pthread-reader-cap" = 4;     quiet = 0;     "reauthenticate-upon-wake" = 1;     "shadow-url" = "file://localhost/private/var/netboot/Library-Shadow";     "skip-auto-fsck-for-system-images" = 1;     "skip-idme" = 1;     "skip-idme-reveal" = 0;     "skip-idme-trash" = 0;     "skip-previously-verified" = 1;     "skip-sla" = 0;     "skip-verify" = 1;     "skip-verify-locked" = 0;     "skip-verify-remote" = 1;     "sparsebundle-compactonidle" = 0;     "suppress-uiagent" = 1;     "unmount-timeout" = 0;     "use-compressed-xml" = 0;     "use-keychain" = 1;     verbose = 0;     "zlib-level" = 1; } DILoadDriver: checking for disk image driver DILoadDriver: DI_kextExists() returned 0x00000000 (0) DIIsInitialized: returning NO 2012-11-27 12:02:23.206 diskimages-helper[23407:2503] -checkForPreviouslyAttachedImage: entry 2012-11-27 12:02:23.206 diskimages-helper[23407:2503] imageURL file://localhost/Volumes/netboot/Lion.nbi/Library.dmg 2012-11-27 12:02:23.206 diskimages-helper[23407:2503] shadowURL file://localhost/private/var/netboot/Library-Shadow 2012-11-27 12:02:23.207 diskimages-helper[23407:2503] sectionStart (null) sectionLength (null) 2012-11-27 12:02:23.207 diskimages-helper[23407:2503] checkForPreviouslyAttachedImage: setting legacy-disabled to 1 DIIsInitialized: returning YES DIBackingStoreNewWithCFURL: entry with file://localhost/Volumes/netboot/Lion.nbi/Library.dmg skip-permissions-check: true legacy-disabled: true DIBackingStoreInstantiatorProbe: entry file://localhost/Volumes/netboot/Lion.nbi/Library.dmg skip-permissions-check: true legacy-disabled: true DIBackingStoreInstantiatorProbe: probing interface 0 CBSDBackingStore CBSDBackingStore::newProbe score 100 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 1 CBundleBackingStore CBundleBackingStore::newProbe score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 2 CRAMBackingStore CRAMBackingStore::probe: scheme "file": not ram: or ramdisk: scheme. CRAMBackingStore::probe: score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 3 CCarbonBackingStore CCarbonBackingStore::newProbe: setting initial rval to +100 CCarbonBackingStore::newProbe score 100 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 4 CDevBackingStore CDevBackingStore::newProbe: not /dev/disk or /dev/rdisk (/Volumes/netboot/Lion.nbi/Library.dmg).CDevBackingStore::newProbe score -1000 for  DIBackingStoreInstantiatorProbe: probing interface 5 CCURLBackingStore CCURLBackingStore::probe: scheme is: file CCURLBackingStore::probe: not recognized URL scheme. CCURLBackingStore::probe: score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 6 CVectoredBackingStore CVectoredBackingStore::newProbe not "vectored" scheme. CVectoredBackingStore::newProbe score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: selecting CBSDBackingStore DIBackingStoreNewWithCFURL: CBSDBackingStore CBSDBackingStore::setNoFollow: setting _noFollow to 0 DIBackingStoreNewWithCFURL: instantiator returned 0 DIBackingStoreNewWithCFURL: returning 0 2012-11-27 12:02:23.208 diskimages-helper[23407:2503] -checkForPreviouslyAttachedImage: resolving file://localhost/Volumes/netboot/Lion.nbi/Library.dmg returned 0 DIIsInitialized: returning YES DIBackingStoreNewWithCFURL: entry with file://localhost/private/var/netboot/Library-Shadow skip-permissions-check: true DIBackingStoreInstantiatorProbe: entry file://localhost/private/var/netboot/Library-Shadow skip-permissions-check: true DIBackingStoreInstantiatorProbe: probing interface 0 CBSDBackingStore CBSDBackingStore::newProbe score 1 for file://localhost/private/var/netboot/Library-Shadow DIBackingStoreInstantiatorProbe: probing interface 1 CBundleBackingStore CBundleBackingStore::newProbe score -1000 for file://localhost/private/var/netboot/Library-Shadow DIBackingStoreInstantiatorProbe: probing interface 2 CRAMBackingStore CRAMBackingStore::probe: scheme "file": not ram: or ramdisk: scheme. CRAMBackingStore::probe: score -1000 for file://localhost/private/var/netboot/Library-Shadow DIBackingStoreInstantiatorProbe: probing interface 3 CCarbonBackingStore CCarbonBackingStore::newProbe stat() failed.  No such file or directory. CCarbonBackingStore::newProbe score -1000 for file://localhost/private/var/netboot/Library-Shadow DIBackingStoreInstantiatorProbe: probing interface 4 CDevBackingStore CDevBackingStore::newProbe: not /dev/disk or /dev/rdisk (/private/var/netboot/Library-Shadow).CDevBackingStore::newProbe score -1000 for  DIBackingStoreInstantiatorProbe: probing interface 5 CCURLBackingStore CCURLBackingStore::probe: scheme is: file CCURLBackingStore::probe: not recognized URL scheme. CCURLBackingStore::probe: score -1000 for file://localhost/private/var/netboot/Library-Shadow DIBackingStoreInstantiatorProbe: probing interface 6 CVectoredBackingStore CVectoredBackingStore::newProbe not "vectored" scheme. CVectoredBackingStore::newProbe score -1000 for file://localhost/private/var/netboot/Library-Shadow DIBackingStoreInstantiatorProbe: selecting CBSDBackingStore DIBackingStoreNewWithCFURL: CBSDBackingStore DIBackingStoreNewWithCFURL: instantiator returned 2 DIBackingStoreNewWithCFURL: returning 2 DIResolveURLToBackingStore: unable to resolve to any backing store class. 2.  2012-11-27 12:02:23.208 diskimages-helper[23407:2503] -checkForPreviouslyAttachedImage: resolving shadow file://localhost/private/var/netboot/Library-Shadow returned 2 2012-11-27 12:02:23.208 diskimages-helper[23407:2503] DIHelperAttach: performOperation: resolving disk image DIIsInitialized: returning YES DIIsInitialized: returning YES DIBackingStoreNewWithCFURL: entry with file://localhost/Volumes/netboot/Lion.nbi/Library.dmg legacy-disabled: true writeable: false enable-keychain: true image-path: /Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: entry file://localhost/Volumes/netboot/Lion.nbi/Library.dmg legacy-disabled: true writeable: false enable-keychain: true image-path: /Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 0 CBSDBackingStore CBSDBackingStore::newProbe score 100 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 1 CBundleBackingStore CBundleBackingStore::newProbe score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 2 CRAMBackingStore CRAMBackingStore::probe: scheme "file": not ram: or ramdisk: scheme. CRAMBackingStore::probe: score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 3 CCarbonBackingStore CCarbonBackingStore::newProbe: setting initial rval to +100 CCarbonBackingStore::newProbe score 100 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 4 CDevBackingStore CDevBackingStore::newProbe: not /dev/disk or /dev/rdisk (/Volumes/netboot/Lion.nbi/Library.dmg).CDevBackingStore::newProbe score -1000 for  DIBackingStoreInstantiatorProbe: probing interface 5 CCURLBackingStore CCURLBackingStore::probe: scheme is: file CCURLBackingStore::probe: not recognized URL scheme. CCURLBackingStore::probe: score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: probing interface 6 CVectoredBackingStore CVectoredBackingStore::newProbe not "vectored" scheme. CVectoredBackingStore::newProbe score -1000 for file://localhost/Volumes/netboot/Lion.nbi/Library.dmg DIBackingStoreInstantiatorProbe: selecting CBSDBackingStore DIBackingStoreNewWithCFURL: CBSDBackingStore CBSDBackingStore::setPermission: opening /Volumes/netboot/Lion.nbi/Library.dmg CBSDBackingStore::OpenLockFriendly: mapping flags 0x00000000 -&gt; 0x00000014 (locks are MANDATORY) CBSDBackingStore:OpenLockFriendly: could not open with lock 30 DIBackingStoreNewWithCFURL: instantiator returned 30 DIBackingStoreNewWithCFURL: returning 30 DIResolveURLToBackingStore: unable to resolve to any backing store class. 30.  DIResolveURLToDiskImage: resolving backing store/file encoding failed. 30.  2012-11-27 12:02:23.211 hdiutil[23401:2803] [DIHelperProxy frameworkCallbackWithDictionary] entry status proc called: attach Attaching… Error 30 (Read-only file system). myStatusProc: returning 0  2012-11-27 12:02:23.227 hdiutil[23401:2803] [DIHelperProxy frameworkCallbackWithDictionary] exit 2012-11-27 12:02:23.228 hdiutil[23401:2803] [DIHelperProxy frameworkCallbackWithDictionary] entry status proc called: cleanup Finishing… myStatusProc: returning 0  2012-11-27 12:02:23.228 hdiutil[23401:2803] [DIHelperProxy frameworkCallbackWithDictionary] exit 2012-11-27 12:02:23.229 diskimages-helper[23407:2503] DIHelperAttach performOperation: returning 30 2012-11-27 12:02:23.229 diskimages-helper[23407:2503] -decrementBackgroundThreadCount: _backgroundThreadCount is now 0. 2012-11-27 12:02:23.229 diskimages-helper[23407:303] DIHelper _report_results: reporting {     payload =     {     };     "result-code" = 30; } 2012-11-27 12:02:23.230 hdiutil[23401:2803] reportResultsToFramework: proxy has finished operation 2012-11-27 12:02:23.230 hdiutil[23401:2803] reportResultsToFramework: results are: {     payload =     {     };     "result-code" = 30; } 2012-11-27 12:02:23.230 hdiutil[23401:2803] reportResultsToFramework: _threadResultsError is 30 2012-11-27 12:02:23.231 hdiutil[23401:2803] reportResultsToFramework: disconnecting from helper. 2012-11-27 12:02:23.231 diskimages-helper[23407:303] -setCanTerminate: main thread can exit 2012-11-27 12:02:23.332 hdiutil[23401:2803] [DIHelperProxy disconnectFromHelper] entry 2012-11-27 12:02:23.333 hdiutil[23401:2803] disconnectFromHelper: removing observers 2012-11-27 12:02:23.333 hdiutil[23401:2803] disconnectFromHelper: terminating proxy 2012-11-27 12:02:23.334 diskimages-helper[23407:303] DIHelper: terminateHelper: entry. 2012-11-27 12:02:23.334 hdiutil[23401:2803] disconnectFromHelper: terminated proxy 2012-11-27 12:02:23.335 hdiutil[23401:2803] [DIHelperProxy disconnectFromHelper] releasing helper 2012-11-27 12:02:23.335 hdiutil[23401:2803] [DIHelperProxy disconnectFromHelper] exit 2012-11-27 12:02:23.435 diskimages-helper[23407:303] [DIHelper frameworkConnectionDied] entry 2012-11-27 12:02:23.435 diskimages-helper[23407:303] [DIHelper frameworkConnectionDied] releasing connection 2012-11-27 12:02:23.435 diskimages-helper[23407:303] [DIHelper frameworkConnectionDied] releasing frameworkProxy 2012-11-27 12:02:23.435 diskimages-helper[23407:303] -DIHelperAgentMaster terminateUIAgentConnection. 2012-11-27 12:02:23.435 diskimages-helper[23407:303] [DIHelper frameworkConnectionDied] marking _frameworkDisconnected 2012-11-27 12:02:23.435 diskimages-helper[23407:303] [DIHelper frameworkConnectionDied] exiting 2012-11-27 12:02:24.232 hdiutil[23401:2803] [DIHelperProxy workerThread] removing NSConnectionDidDieNotification observers 2012-11-27 12:02:24.233 hdiutil[23401:2803] [DIHelperProxy workerThread] removing NSConnectionDidInitializeNotification observers 2012-11-27 12:02:24.234 hdiutil[23401:2803] [DIHelperProxy workerThread] removing NSTaskDidTerminateNotification observers 2012-11-27 12:02:24.234 hdiutil[23401:2803] [DIHelperProxy threadRunRunLoop] invalidating connection 2012-11-27 12:02:24.235 diskimages-helper[23407:303] DIHelper dealloc. 2012-11-27 12:02:24.234 hdiutil[23401:2803] [DIHelperProxy threadRunRunLoop] releasing connection 2012-11-27 12:02:24.235 diskimages-helper[23407:303] -DIHelperAgentMaster terminateUIAgentConnection. 2012-11-27 12:02:24.235 hdiutil[23401:2803] [DIHelperProxy workerThread] after running runloop 2012-11-27 12:02:24.235 diskimages-helper[23407:303] helper: child_after_exec returning 0 2012-11-27 12:02:24.235 hdiutil[23401:2803] [DIHelperProxy workerThread] waiting for task to terminate to avoid zombies 2012-11-27 12:02:24.236 hdiutil[23401:2803] [DIHelperProxy workerThread] releasing task 2012-11-27 12:02:24.236 hdiutil[23401:2803] [DIHelperProxy workerThread] exiting 2012-11-27 12:02:24.236 hdiutil[23401:707] [DIHelperProxy performOperationReturning] returning 30 2012-11-27 12:02:24.237 hdiutil[23401:707] DIHLDiskImageAttach: DIHelperProxy returned 30 2012-11-27 12:02:24.237 hdiutil[23401:707] [DIHelperProxy dealloc] DIHLDiskImageAttach() returned 30 hdiutil: attach failed - Read-only file system kyle:~ root#  /code/pre  <answer85579> I've been interested in this question since Nov 2012 and even set up a FreeNAS VM to reproduce the issue.  I eventually gave up but since the question has been resuscitated strongI will share what I found out back then and in the last hours (luckily I didn't delete the VM) and what I think the cause for this issue is. I have also found a workaround./strong  h2My setup/h2  First of all, this is my test setup:  ul liOS X 10.8.2 (sorry, no 10.7.5 around)./li liFreeNAS (FreeBSD 8.2-RELEASE-p1)   img src="https://i.stack.imgur.com/caj7F.png" alt="enter image description here"  (The OP's version is FreeBSD 8.2-RELEASE-p7 - I couldn't find the same version.)/li liA NAS filesystem in code/mnt/raid/code:  img src="https://i.stack.imgur.com/4byaP.png" alt="enter image description here"/li liA user named codenetboot/code:  img src="https://i.stack.imgur.com/HJqVj.png" alt="enter image description here"/li liAn AFP filesystem (code/mnt/raid/netboot/code) exported as codenetboot/code:  img src="https://i.stack.imgur.com/RyXh8.png" alt="enter image description here"  (Note that it is configured read-only). /li liAn NFS filesystem (same path as AFP filesystem, to match the OP's configuration: code/mnt/raid/netboot/code):  img src="https://i.stack.imgur.com/l8alH.png" alt="enter image description here"/li /ul  h2AFP works, NFS doesn't/h2  I mounted the AFP read-only filesystem as user codenetboot/code using the Finder with kbd⌘/kbdkbdK/kbd:  img src="https://i.stack.imgur.com/WANNd.png" alt="enter image description here"  and mounted a DMG image file without any problems:  precode$ sudo rm /private/var/netboot/Library-Shadow $ sudo /usr/bin/hdiutil attach /Volumes/netboot/p7zip-9.04-0.i386.dmg -notremovable -shadow /private/var/netboot/Library-Shadow -owners on -noverify -noautofsck -nobrowse Password: /dev/disk3              Apple_partition_scheme           /dev/disk3s1            Apple_partition_map              /dev/disk3s2            Apple_HFS                       /Volumes/p7zip.pkg /code/pre  Then I unmounted it and mounted the read-only NFS filesystem (I also used kbd⌘/kbdkbdK/kbd) and couldn't mount the DMG image file.  I think the problem is logged here:  precodeCBSDBackingStore::setPermission: opening /Volumes/netboot/Lion.nbi/Library.dmg CBSDBackingStore::OpenLockFriendly: mapping flags 0x00000000 -&gt; 0x00000014 (locks are MANDATORY) CBSDBackingStore:OpenLockFriendly: could not open with lock 30 /code/pre  Error 30 means (see codeman 2 intro/code):     30 EROFS Read-only file system.  An attempt was made to modify a file   or directory was made on a file system that was read-only at the time.   No surprise here, it is indeed a read-only filesystem, but... when mounted over AFP it works, why?  Because Apple's NFS implementation has some problems with locking. As stated in this post at gluster.org:     OS X does a phenominal amount of file locking (some would say,   needlessly so) and has always been really sensitive to the   configuration of locking on the NFS servers. So much so that if you   randomly pick an NFS server in a large enterprise, true success is   pretty unlikely.   In my setup, the NFS server (that is, the FreeNAS VM) was suddenly irresponsive (from my Mac's code/var/log/system.log/code):  precodeMar 15 15:35:04 avallone.local rpc.lockd[8119]: Lockd got unexpected signal 20 Mar 15 15:35:04 avallone com.apple.launchd[1] (com.apple.lockd[8119]): Exited with code: 1 Mar 15 15:35:04 avallone com.apple.launchd[1] (com.apple.lockd): Throttling respawn: Will start in 10 seconds (...) Mar 15 15:35:07 avallone com.apple.launchd[1] (com.apple.statd[8121]): Exited with code: 1 Mar 15 15:35:07 avallone com.apple.launchd[1] (com.apple.statd): Throttling respawn: Will start in 10 seconds Mar 15 15:35:13 avallone kernel[0]: nfs server 172.16.54.186:/mnt/raid/netboot: lockd not responding Mar 15 15:35:13 avallone.local KernelEventAgent[72]: tid 00000000 received event(s) VQ_NOTRESP (1) Mar 15 15:35:13 avallone.local KernelEventAgent[72]: tid 00000000 type 'nfs', mounted on '/Volumes/netboot', from '172.16.54.186:/mnt/raid/netboot', not responding (...) Mar 15 15:35:34 avallone.local KernelEventAgent[72]: tid 00000000 unmounting 1 filesystems /code/pre  The output of codesudo /usr/bin/hdiutil attach -debug /Volumes/netboot/p7zip-9.04-0.i386.dmg -notremovable -shadow /private/var/netboot/Library-Shadow -owners on -noverify -noautofsck -nobrowse/code was:  precodeCBSDBackingStore::setPermission: opening /Volumes/netboot/p7zip-9.04-0.i386.dmg CBSDBackingStore::OpenLockFriendly: mapping flags 0x00000000 -&gt; 0x00000014 (locks are MANDATORY) CBSDBackingStore:OpenLockFriendly: could not open with lock 5 /code/pre  Error 5 means (again from codeman 2 intro/code):     5 EIO Input/output error.  Some physical input or output error   occurred.  This error will not be reported until a subsequent   operation on the same file descriptor and may be lost (over written)   by any subsequent errors.   which isn't suprising at all, the NFS filesystem was gone.  h2Workaround/h2  A workaround (tested on OS X 10.8) is to mount NFS with options codenolocks,locallocks/code. As explained in the post at gluster.org already mentioned:     Fortunately, there is a fix: just turn off network locking. You can do   it by adding the "nolocks,locallocks" options in the advanced options   field of the Disk Utility NFS mounting UI, but this is painful if you   do a lot of them, and doesn't help at all with /net. You can edit   /etc/auto_master to add these options to the /net entry, but it   doesn't affect other mounts - however I do recommend deleting the   hidefromfinder option in auto_master. If you want to fix every   automount, edit /etc/autofs.conf and search for the line that starts   with AUTOMOUNTD_MNTOPTS=. These options get applied on every mount.   Add nolocks,locallocks and your world will be faster and happier after   you reboot.   I manually mounted code172.16.54.186:/mnt/raid/netboot/code and it worked flawlessly:  precode$ sudo rm /private/var/netboot/Library-Shadow $ sudo mount -o nolocks,locallocks,ro 172.16.54.186:/mnt/raid/netboot /tmp/mnt $ sudo /usr/bin/hdiutil attach /tmp/mnt/p7zip-9.04-0.i386.dmg -notremovable -shadow /private/var/netboot/Library-Shadow -owners on -noverify -noautofsck -nobrowse /dev/disk6              Apple_partition_scheme           /dev/disk6s1            Apple_partition_map              /dev/disk6s2            Apple_HFS                       /Volumes/p7zip.pkg /code/pre  I also edited code/etc/auto_master/code like this:  precode+auto_master # Use directory service #/net             -hosts    -nobrowse,hidefromfinder,nosuid /net              -hosts    -nosuid,nolocks,locallocks /home             auto_home -nobrowse,hidefromfinder /Network/Servers  -fstab /-                -static /code/pre  stopped and started codeautomountd/code and codeautofsd/code:  precode$ sudo launchctl unload /System/Library/LaunchDaemons/com.apple.automountd.plist  $ sudo launchctl unload /System/Library/LaunchDaemons/com.apple.autofsd.plist  $ sudo launchctl load /System/Library/LaunchDaemons/com.apple.autofsd.plist  $ sudo launchctl load /System/Library/LaunchDaemons/com.apple.automountd.plist  /code/pre  and worked like a charm:  precode$ cd /net/172.16.54.186/mnt/raid/netboot $ ls  Network Trash Folder  Temporary Items  p7zip-9.04-0.i386.dmg $ sudo rm /private/var/netboot/Library-Shadow $ sudo /usr/bin/hdiutil attach p7zip-9.04-0.i386.dmg -notremovable -shadow /private/var/netboot/Library-Shadow -owners on -noverify -noautofsck -nobrowse /dev/disk7              Apple_partition_scheme           /dev/disk7s1            Apple_partition_map              /dev/disk7s2            Apple_HFS                       /Volumes/p7zip.pkg /code/pre  <answer85791> h1hdiutil attach -readonly …/h1  For an image that's stored on a read-only file system, I reckon that code-readonly/code should be used at time of attachment.   (The AFP case may be exceptional.)  hr  Considering the down vote and the comment from @Josh: I misunderstood the code-shadow/code part of the man page for codehdiutil/code:      … allows read-only images to be attached read/write …   – I imagined that code-shadow/code could override code-readonly/code.  <comment83870> I don't have an NFS share to test with, but I would try to have a quiet system and run `fs_usage` to see if I can catch the filesystem making a write call - possibly filing a bug with Apple. It seems you should be able to read a read-only DMG - but perhaps there is some deeper technical reason why it's failing and the OS needs a better error message to inform us why... <comment83871> Good idea @bmike! Also, I ran `hdiutil` with the `-debug` switch, I can post those logs here <comment83874> Indeed - make an answer with whatever you find and we can team up - report a bug or edit the answer as we pick apart the "why". <comment83982> Which OS runs on the NFS server? What is the output of `rpcinfo -p` on the server? What is the output of `mount` on your Mac? Can you also add the relevant line of `/etc/exports` on the NFS server to the question? <comment84008> @jaume the NFS server is a FreeNAS (FreeBSD) server. I'll add those items to the question tomorrow. <comment84162> I've set up an NFS server (Ubuntu 12.04) with a read-only export that I mounted on my Mac (OS X 10.8.2) and I couldn't reproduce your problem (I tested all dmg formats: readonly, compressed, encrypted, etc)... Could you add the output of `hdiutil -debug` and the information I asked for to your question? <comment84658> @jaume Apologies for the delay. I have added all the information you requested. I don't have a 10.8 system to test on, I'm running 10.7. Maybe this is an issue which was fixed in 10.8... <comment84670> Thanks for all the information, I could reproduce the problem. I had exactly the same error message. I think the shadow file specified in `-shadow` can't be created, it is located in `/private/var/netboot/Library-Shadow` which is read-only (unless you changed permissions). Why don't you create a shadow folder: `mkdir ~/.shadowfolder/` and specify it with option `-shadow ~/.shadowfolder/image.dmg.shadow`? Can you try and report back? <comment84700> @jaume Hm. `/private/var/netboot` is a mounted AFP share, and root has access to it. I can `touch /private/var/netboot/Library-Shadow` perfectly fine... and if I try to place the shadow file anywhere else it still fails... <comment98620> Awesome, what a good read. <comment98621> Wow this is fantastic, Thanks! I will test this over the weekend, it might solve my issue! <comment98729> Thanks jaume, this worked like a charm! Unfortunately I have already found an alternative and no longer need to mount this same DMG with a shadow file, but `nolocks,locallocks` is helping NFS performance of other read-only NFS shares with DMG files, so thank you! <comment98902> No, you misunderstand. I wanted to attache a read-only image as a read-write volume with a shadow file. <comment98985> Thanks for your feedback, I'm happy the workaround worked in your environment. Although you don't need it anymore,   it's nice to know *why* something doesn't work, isn't it? <comment99020> Regarding your edit, no, using both `-readonly` and `-shadow` would read from a shadow file but mount the image read-only. So for example it would allow you to read changes made to a shadow file without updating that shadow file. The issue was NFS locks as jaume discovered. <comment99021> Absolutely, and now I know what I need to change should I need this again in the future! (The goal previously was to place the `/Library` of our NetBoot image n a RAID array. We no longer need this as we purchased a new Mac Pro server) <comment99127> A very neat explanation from @Josh – thanks! I'll leave this answer so that other readers don't make the same mistake as me.