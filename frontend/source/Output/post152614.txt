What actually happens during "Waiting for changes to be applied" and "Waiting for items to copy"? <body> There are literally hundreds of threads on dozens of different internet forums about iOS devices that get stuck on "Waiting for changes to be applied" and/or "Waiting for items to copy" while syncing.  I have had that problem intermittently for two years, on iOS 6, 7 and now 8, and frankly after trying all of the fixes I have read about, I have given up on trying to solve it.  emThat's not what this question is about./em  What I want to know is:     What's emsupposed to happen/em during those stages of the sync?   Do those two messages mean the same thing, or something different?  What is iTunes emtrying/em to do?  Is it reading from an internal database on the device and comparing it to the iTunes library on the computer?  Is it emwriting/em to a device library?  What's it writing?  What file is it working on?  Is there any way to watch the activity that's in progress, either in real time or after-the-fact?  <answer225131> I think in "Waiting for item to Copy" process iTunes scans the items that are to be copy , counts items and calculates the estimated time of the copy. As many as files to be copied , the waiting time is increased.  <answer231652> Although there is no official documentation by Apple, you can still get some information by watching iTunes and iOS doing their stuff. This can be done by monitoring log files of both, on the iPhone this can be done over an USB connection. Here's a couple of what I've already seen the iPhone doing in the "waiting for xy" sync stages:  ul liAfter copying new media to the iPhone, the media needs to be indexed, e.g. there's metadata to be processed, thumbnails need to be created etc. Until that is done, the media can't be displayed correctly in the corresponding iPhone apps, so iTunes waits for the iPhone Media Indexer service to complete it's work./li liWhen copying new apps to an iPhone, the packaged code.ipa/code-files need to unpack and install, e.g. register in the iPhone's homescreen, app lists, file extension databases etc, this is done during that stages of sync./li liThe spotlight search might need time to index new files, iTunes waits for this as well (not always, but sometimes!)/li liWhen iTunes transfers files to an iPhone, it always verifies the file's contents in several ways, being it archive integrity or hashes that are compared. These processes do need plenty of time, depending on the size of the transferred data, and iTunes waits for successful verification in order to complete the sync./li liWhen there are copy failures detected by any of the verification methods, iTunes will copy the files again. Often these processes are not displayed by iTunes, it is done during the "Waiting for items to copy"-processing./li liiTunes will also wait for copy processes to terminate successfully, there are streams and sockets to close when data is transferred between computers. Although this should happen instantly, sometimes there are failures and the iPhone needs some time./li liIn general, you can say that iTunes utilizes these stages for verification and error correction as well as doing "completional" work. They get extremely useful especially when using WiFi sync, which is much more error-prone than USB./li /ul  strongEdit/strong: To view the log files of an iPhone/iPad, no jailbreak is required. The best tool probably is codelibimobiledevice/code, a bundle of free open-source software licensed under LGPL 2.1. It is capable of handling an iOS device without the need of iTunes, so even on linux machines. Although being desinged for linux machines, it can be run on Mac as well, e.g. by compiling the source code, or, even easier, by installing through homebrew. Although I'm always using it on linux machines, this should work the same way on Mac OS X.  You probably need to pair your iPhone first, use the codeidevicepair/code-binary for this. It should find your USB-connected iPhone on it's own, if it doesn't, you can try passing the UUID of your device. After paring succeeded (it will display a success-message to your terminal interface), use the codeidevicesyslog/code-application to view the log files of your iPhone. It will connect to the codesyslog/code-socket of your device automatically, if it doesn't, you may pass the UUID again. Then all log messages will get posted to codestdout/code on your computer, e.g. to your terminal output.  There is proprietary software as well that allows you to read the logs on your iOS device, but codelibimobiledevice/code as a command line- and open source-tool should be preferred.  <comment184156> I would also love to know the answer, as I have this problem all the time.  Here are some console messages I get in case they help anyone: `11/15/14 11:30:11.314 AM iTunes[48673]: Failed to create replacement string 11/15/14 11:32:43.222 AM iTunes[48673]: AMDeviceSecureTransferPath (thread 0x115c2b000): disableDelta: FALSE 11/15/14 11:32:43.222 AM iTunes[48673]: AMDeviceSecureTransferPath (thread 0x115c2b000): Trying SZConduit for transfer 11/15/14 11:32:43.507 AM iTunes[48673]: nuke_path (thread 0x115c2b000): AFCRemovePath of 'PublicStaging/DoubleDown 3.5.1.ipa' returned 8` <comment184157> `11/15/14 11:40:50.527 AM iTunes[48673]: Entered:_AMMuxedDeviceDisconnected, mux-device:1815 11/15/14 11:40:50.527 AM iTunes[48673]: Entered:__thr_AMMuxedDeviceDisconnected, mux-device:1815 11/15/14 11:40:50.527 AM iTunes[48673]: tid:144f - Mux ID not found in mapping dictionary 11/15/14 11:40:50.527 AM iTunes[48673]: tid:144f - Can't handle disconnect with invalid ecid` <comment216568> Potentially-helpful 2014-12-29 article on this topic: http://www.macworld.com/article/2861406/itunes-syncing-is-broken-apple-please-fix-it.html  And oh yes, I've experience these same symptoms, going on years now. Sigh. <comment216665> @JohnnyUtahh I saw that article -- and I commented on it there, more than two months ago (scroll down in the comments). <comment217083> Thanks @mweiss, helpful. Separately: I propose that we collectively author a concise, "open" letter to Apple (with obvious intent to get iTunes+iOS sync fixed). Then we each try to find a significant Apple representative we know--the higher up in the Apple org chart the better--and personally deliver the exact same copy of the letter. Possibly submit via apple.com-"online feedback" systems as well. (continued...) <comment217084> With multiple "vectors" like this into the company, maybe this message might eventually reach someone at Cupertino with real power and convince them that change is needed, and/or we might learn that a fix is already in the works. Thoughts? <comment273300> I was under the impression that what you describe is what happens during the "Preparing to copy items" process. Do you have any evidence that this is what happens during "Waiting for items to copy"? <comment282900> Could you provide some more details on how to monitor the log files? <comment283069> @mweiss I've updated my post to include information on this ;)