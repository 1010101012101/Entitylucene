Running second Google Drive Crashes constantly on OSX Mavericks <body> I have been trying to get a second instance of Google Drive to run under another user on my MBP running Mavericks.   I have been following the instructions here http://truongtx.me/2013/06/30/macos-using-multiple-google-drive-accounts-at-the-same-time/ .   Each time I try to run the new instance using codesudo su user -c "/Applications/Google\ Drive.app/Contents/MacOS/Google\ Drive"/code I get the following erors:  precode/Applications/Google Drive.app/Contents/Resources/lib/python2.7/lib-dynload 2014-05-09 14:30:15.593 Google Drive[97308:c07] GsyncAppDeletegate.py : Finder debug level logs : False 2014-05-09 14:30:15.876 Google Drive[97308:c07] CoreText performance note: Client called CTFontCreateWithName() using name ".Lucida Grande UI" and got font with PostScript name ".LucidaGrandeUI". For best performance, only use PostScript names when calling this API. 2014-05-09 14:30:15.877 Google Drive[97308:c07] CoreText performance note: Set a breakpoint on CTFontLogSuboptimalRequest to debug. 2014-05-09 14:30:15.973 Google Drive[97308:c07] CoreText performance note: Client called CTFontCreateWithName() using name "Open Sans" and got font with PostScript name "OpenSans-Light". For best performance, only use PostScript names when calling this API. /code/pre  I run a MacPorts' based Python version:    precodewhich python /opt/local/bin/python /code/pre  and the version is   precodepython --version Python 2.7.6 /code/pre  Installing MacPorts Python 3.4 and selecting it using codesudo port select --set python python34/code has no effect as Google Drive seems to run its own Python package  Full crash report can be found here , but here is the header:  precode    Process:         Google Drive [30284]     Path:            /Applications/Google Drive.app/Contents/MacOS/Google Drive     Identifier:      Google Drive     Version:         1.15 (1.15.6556.8063)     Code Type:       X86 (Native)     Parent Process:  su [30283]     Responsible:     Terminal [63738]     User ID:         508      Date/Time:       2014-06-16 19:27:36.320 +0300     OS Version:      Mac OS X 10.9.3 (13D65)     Report Version:  11     Anonymous UUID:  5F4A3A72-1448-6EBD-1C39-DDA29A092B8B      Sleep/Wake UUID: 79EE99BE-CBF8-4D70-B4AC-9BB9E85E45F9      Crashed Thread:  0  Dispatch queue: com.apple.main-thread      Exception Type:  EXC_BAD_ACCESS (SIGSEGV) /code/pre  Indicates a memory issues. See Apple Dev Docs here.  precode    Exception Codes: KERN_INVALID_ADDRESS at 0x000000001c2ad000 /code/pre  emThis is caused by the thread accessing unmapped memory. It may be triggered by either a data access or an instruction fetch; the Thread State section describes how to tell the difference (see link to Apple Developer information earlier) ./em  precode        VM Regions Near 0x1c2ad000:             MALLOC_LARGE           0000000008c6f000-0000000008ce9000 [  488K] rw-/rwx SM=PRV           --&gt;              __TEXT                 000000008fe3b000-000000008fe6e000 [  204K] r-x/rwx SM=COW  /usr/lib/dyld  Thread 0 Crashed:: Dispatch queue: com.apple.main-thread 0   org.python.python               0x0044b5fa PyObject_Malloc + 90 1   org.python.python               0x0045690f PyString_FromString + 127 2   org.python.python               0x00445573 PyDict_GetItemString + 19      Thread 0 crashed with X86 Thread State (32-bit):       eax: 0x1c2ad000  ebx: 0x006c8724  ecx: 0x081c2000  edx: 0x00525240       edi: 0x00000018  esi: 0x0044b5ae  ebp: 0xbfffa778  esp: 0xbfffa750        ss: 0x00000023  efl: 0x00010207  eip: 0x0044b5fa   cs: 0x0000001b        ds: 0x00000023   es: 0x00000023   fs: 0x00000000   gs: 0x0000000f       cr2: 0x1c2ad000 /code/pre  emeip is the program counter at the time that the exception occurred. That is, it's the address of the instruction that caused the exception. For most non-memory access exceptions (for example, EXC_ARITHMETIC/EXC_I386_DIV caused by an integer division by zero), this is the key value./em  It seems to be related to one Python thread - eip code0x0044b5fa/code PyObject_Malloc-  and a similar Python bug was mentioned here. PyObject_Malloc is a Python object allocator.  precode    Logical CPU:     1     Error Code:      0x00000004     Trap Number:     14 /code/pre  Does anybody here know how I can get passed this crash and Python errors and make the second Google Drive start up? It tries but crashes all the time and I really would love to make two drives run on my Mac.  <answer135253> If your priority is to get second Google Drive working regardless of how:  I gave up on Installing Google Drive on my Mac.   Instead, I use its Web Interface works great and does not interfere with my Mavericks.  img src="https://i.stack.imgur.com/41Ins.jpg" alt="google drive"  For easy and fast access you can create a Dock Icon for it, that looks like a kbd@/kbd on a spring :)  img src="https://i.stack.imgur.com/Tlnp9.jpg" alt="google drive dock"  Pro and Cons I found:  a big Pro is no more problems with conflicting drivers and Mavericks issues.  a little Con is you have to Log-out/In when changing the Google ID.  <comment160414> Installing one Drive is no issue, a secondary is. Will see if anyone has managed to make it work on Mavericks and if not will go for your solution. It is just nice to synch two drives with two locations (directories) on my Mac..