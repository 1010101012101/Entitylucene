Serial-Ethernet or Serial-WiFi (or Serial-Bluetooth?) on OS X <body> I'm trying to connect a remote serial port to my MacBook Pro (and potentially other devices such as Windows or laptops, and Android tablets and smartphones) wirelessly.  I've come across Serial-WiFi and Serial-Ethernet adaptors (the latter could presumably be connected to a router and accessed via my existing wifi network), but I don't know how to access the serial port from my Mac. So far as I can tell tese devices rely on drivers which simulate a COM port on the computer, and so far as I can tell none of these adaptors come with drivers which work on OS X. I see that there are also Serial-Bluetooth adaptors, which I guess would also suffice for my purpose if they could be made to work, but I assume the same issue exists with these.  In case it helps; this is for connecting the NMEA 0183 outputs of various marine navigational instruments to my computer, for use by navigational sftware such as (primarily) OpenCPN. For those who aren't familiar with it, NMEA 0183 is a protocol enabling marine navigational instruments to share data with each other via ASCII data sentences broadcast over a serial interface. More details on Wikipedia.  If there's an alternative way to transmit this data to my computer over wifi, that would be equally acceptable.  <answer71442> Bluetooth may actually be the way to go. There's no standard for Serial-WiFi or Serial-Ethernet adapters (as far as I know), so you'd be at the mercy of the manufacturers who need to provide OS X drivers. On the other hand, most Bluetooth functions come from a set of standardized profiles that don't need specific device drivers. For example, a headset just needs to implement the correct audio profile to be able to work with anything that supports that profile. Bluetooth serial adapters implement the Serial Port Profile, and OS X supports it.  Once you have one of those devices and have it paired, it will show up as a standard serial port device like /dev/cu.bluetooth and /dev/tty.bluetooth, just like a Serial-USB adapter.  If the serial port doesn't get created automaticaly, it can be added manually in the Bluetooth advanced preferences. I also found an example of someone using SPP with a Mac here:  Using Bluetooth Serial Port on OS X Mountain Lion.  <comment82988> That's interesting; thanks. So if I understand correctly; an rs232-bluetooth adaptor would appear to software on the computer to be identical to a hardwired serial port? So I could simply connect my NMEA devices to it and it would be functionally identical to connecting them via a serial-USB adaptor, without having to install any drivers? If so then as you say, that certainly seems like the way to go. <comment82989> I know this is the wrong place to ask, but do you know if this is also the case if I connected it to an Android device?   The disadvantage here would presumably be that I could only connect it to one device at a time, whereas with ethernet/wifi I could connect it to multiple devices (if I could make it work at all). <comment83001> That's right, it would be identical to hardwired, as far as the software is concerned (in theory, ethernet/wifi would work the same, but they'd need drivers first). I'm not sure how or if Android handles SPP. Bluetooth would definitely be limited to one device at a time, but I'm not sure ethernet/wifi would allow more than one either, even though NMEA is unidirectional. <comment83003> Thanks @gabesubdo, that's great. Regarding ethernet/wifi only working for one device at a time, why would this be? I mean, normally any device on a LAN can talk to any other, so why would this be different? Thinking aloud, perhaps because a serial port is only designed to be connected to one device, it simply wouldn't work connecting multiple devices to a serial port, even in software? Anyway, thanks for your help. <comment83011> Yeah, I'm assuming that the networked adapters would only allow one connection at a time just because that's what serial devices expect. They could design something to get around that limitation, but that takes effort to get right and I always assume that hardware manufacturers will do the minimum possible.