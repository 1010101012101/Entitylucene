Why won't kern.maxfiles setting in /etc/sysctl.conf stick? <body> I've been getting various "too many files open in system"-type errors on Yosemite (10.10.1). Searching around suggests setting codekern.maxfiles/code and codekern.maxfilesperprocess/code in code/etc/sysctl.conf/code.  I've tried this, and codekern.maxfilesperprocess/code sticks after a reboot, but codekern.maxfiles/code doesn't.  precode% cat /etc/sysctl.conf  # NB DO NOT COPY AND PASTE THIS INTO YOUR CONFIG FILE - IT DOESN'T WORK kern.maxfiles=20480  kern.maxfilesperproc=18000 /code/pre  (reboot)  precode% sysctl kern.maxfiles kern.maxfiles: 12288 % sysctl kern.maxfilesperproc    kern.maxfilesperproc: 18000 /code/pre  If I set it manually at the command line, it works, so it doesn't seem I'm exceeding any upper limit:  precode% sudo sysctl -w kern.maxfiles=20480  kern.maxfiles: 12288 -&gt; 20480 % sysctl kern.maxfiles                kern.maxfiles: 20480 /code/pre  I have seen warnings about these values being overridden in code/etc/launchd.conf/code but I don't have this file:  precode% cat /etc/launchd.conf cat: /etc/launchd.conf: No such file or directory /code/pre  Spotlight search doesn't find any other mention of codekern.maxfiles/code, so I'm out of ideas. Any other suggestions?  <answer169606> Though not directly answering your question you will find two solutions at superuser:  ol liTo adjust open files limits on a system-wide basis in Mac OS X Yosemite, you must create two configuration files. The first is a property list (aka plist) file in '/Library/LaunchDaemons/limit.maxfiles.plist' that contains the following XML configuration:    precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;   &lt;plist version="1.0"&gt;     &lt;dict&gt;       &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;limit.maxfiles&lt;/string&gt;       &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;           &lt;string&gt;launchctl&lt;/string&gt;           &lt;string&gt;limit&lt;/string&gt;           &lt;string&gt;maxfiles&lt;/string&gt;           &lt;string&gt;65536&lt;/string&gt;           &lt;string&gt;65536&lt;/string&gt;         &lt;/array&gt;       &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;true/&gt;       &lt;key&gt;ServiceIPC&lt;/key&gt;         &lt;false/&gt;     &lt;/dict&gt;   &lt;/plist&gt; /code/pre  This will set the open files limit to 65536. The second plist configuration file should be stored in code/Library/LaunchDaemons/limit.maxproc.plist/code with the following contents:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple/DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt;   &lt;plist version="1.0"&gt;     &lt;dict&gt;       &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;limit.maxproc&lt;/string&gt;       &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;           &lt;string&gt;launchctl&lt;/string&gt;           &lt;string&gt;limit&lt;/string&gt;           &lt;string&gt;maxproc&lt;/string&gt;           &lt;string&gt;2048&lt;/string&gt;           &lt;string&gt;2048&lt;/string&gt;         &lt;/array&gt;       &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;true /&gt;       &lt;key&gt;ServiceIPC&lt;/key&gt;         &lt;false /&gt;     &lt;/dict&gt;   &lt;/plist&gt; /code/pre  Both plist files must be owned by 'root:wheel' and have permissions '-rw-r--r--'. This permissions should be in place by default, but you can ensure that they are in place by running codesudo chmod 644 &lt;filename&gt;/code. While the steps explained above will cause system-wide open file limits to be correctly set upon restart, you can apply them manually by running codelaunchctl limit/code.  In addition to setting these limits at the system level, we recommend setting the at the session level as well by appending the following lines to your 'bashrc', 'bashprofile', or analogous file:  precodeulimit -n 65536 ulimit -u 2048 /code/pre  Like the plist files, your bashrc or similar file should have code-rw-r--r--/code permissions. At this point, you can restart your computer and enter ulimit -n into your terminal. If your system is configured correctly, you should see that maxfiles has been set to 65536.  emAdjust the maxfiles &amp; maxproc limit as you need it/em  Sourced from: http://docs.basho.com/riak/latest/ops/tuning/open-files-limit//li liModifying the code/etc/launchd.conf/code per a lot of google queries and SO suggestions didn't seem to work for me in Yosemite (10.10).  What did end up working, after numerous change/reboot/test combinations, was modifying (or creating if it doesn't exist) the code/etc/sysctl.conf/code file.  This is what I had to put in to make it work  precodekern.maxfiles=65536 kern.maxfilesperproc=65536 /code/pre  I'm not sure if 'kern.maxfiles' needs to be in there, but when I had it in there by itself I still had the same issue, when I added the 'kern.maxfilesperproc' everything started working./li /ol  If one or both of those solutions work for you, please credit the original posters.  <answer169634> Through a combination of safe/verbose boot, console log and google, I found a similar issue which led me to discover a trailing space on the maxfiles line. Removing this space resolved the issue.     Please, double check that the lines in sysctl.conf do not have a trailing space. This seems to be causing a problem with Yosemite whereas it was properly working with previous versions.   Corrected settings (these ones can safely be copied):  precodekern.maxfiles=20480 kern.maxfilesperproc=18000 /code/pre  <answer273469> Removing trailing whitespace takes just one step:  precodesed -i '~' -e's/[[:space:]]*$//' /etc/sysctl.conf /code/pre  Command above also saves a backup at code/etc/sysctl.conf~/code.  <comment199295> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/20685/discussion-between-klanomath-and-cupawntae). <comment199409> Although this didn't resolve the issue, it does provide a workaround (the first plist file). Thanks also for the assistance in hunting down the actual cause. Bounty awarded. <comment216248> Do you perhaps know how to set the higher limit to "unlimited' like OS X does by default? I'm specifically looking to adapt this answer to raise the ulimit -n to 1000 and not change any other aspect to run some performance tests for one software package. <comment216249> @bmike hmm, which higher limit? -n = 1000 as soft limit and an unlimited hard limit. Which OS? 10.10 or 10.9 and lower? <comment216263> I figured out another way to do what I wanted putting the program under launchctl and using the limits there in a plist. I'll put up a new question once my code changes are [reviewed and merged](https://github.com/Homebrew/homebrew/pull/38871) elsewhere. <comment283395> @w00t I reverted the edit that removed the trailing spaces from the conf file - since these spaces were actually the problem in the first place, I believe it makes more sense to leave them in the question. <comment283602> fair enough, edited question instead to indicate this. <comment283609> @w00t your last proposed edit was rejected by a diamond mod (not by me) - possibly because I already edited a warning into the text itself after reverting your edit. I should have let you know when I did that - your point was a good one, so after reverting and commenting, I felt it needed *something* - hopefully my last edit covers it?