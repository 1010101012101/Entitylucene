Homebrew wants me to delete /usr/local/lib? <body> From the Homebrew installation page :     We recommend you delete /usr/local/include and /usr/local/lib   But my /usr/local/lib contains the following files:  precode$ ls /usr/local/lib charset.alias                   libgettextsrc.la gettext                         libgpg-error.0.dylib libasprintf.0.0.0.dylib         libgpg-error.dylib libasprintf.0.dylib             libgpg-error.la libasprintf.dylib               libiconv.2.dylib libasprintf.la                  libiconv.dylib libassuan.0.dylib               libiconv.la libassuan.dylib                 libintl.8.0.2.dylib libassuan.la                    libintl.8.dylib libcharset.1.dylib              libintl.dylib libcharset.dylib                libintl.la libcharset.la                   libksba.8.9.6.dylib libgcrypt.11.6.0.dylib          libksba.8.dylib libgcrypt.11.dylib              libksba.dylib libgcrypt.dylib                 libksba.la libgcrypt.la                    libpth.20.0.27.dylib libgettextlib-0.17.dylib        libpth.20.dylib libgettextlib.dylib             libpth.dylib libgettextlib.la                libpth.la libgettextpo.0.4.0.dylib        libusb-0.1.4.dylib libgettextpo.0.dylib            libusb-1.0.0.dylib libgettextpo.dylib              libusb-1.0.dylib libgettextpo.la                 libusb-1.0.la libgettextsrc-0.17.dylib        libusb.dylib libgettextsrc.dylib             libusb.la /code/pre  What are these files for? Is it safe to delete these files?  <answer9993> That's kinda the problem; Homebrew doesn't know what they are either, and randomly sourced libraries tend to break builds.  (MacPorts makes the same recommendation.  In fact, I was under the impression that was one of the things Homebrew emrelaxed/em.)  If you don't know what they are or if they're used, the simplest solution is  precode$ sudo mv /usr/local /usr/local.keep /code/pre  and watch to see what breaks.  Chances are they're used by whatever's in code/usr/local/bin/code, though, so look there first.  <answer10006> These look like most of the (recursive) dependencies of GnuPG 2.x (except those that are likely included with the OS or the development tools: zlib bzip2, perl, curl, openssl, autoconf, automake, libtool, etc.).  Here is a rough overview of the structure of those dependencies:  ul liemlibiconv/em: libcharset, libiconv/li liemgettext/em: gettext, libasprintf, libgettextlib, libgettextpo, libgettextsrc, libintl/li liemgpg-agent/em  ul liemlibassuan/em: libassuan  ul liempth/em: libpth/li liemlibgpg-error/em: libgpg-error/li /ul/li liemlibksba/em: libksba/li liemlibgcrypt/em: libgcrypt/li /ul/li liemlibusb-compat/em: libusb (0.1.4)  ul liemlibusb/em: libusb (1.0.0)/li /ul/li /ul  I wonder if maybe they are from installable packages of the macgpg2 project (it even includes a codecharset.alias/code its emiconv/em package).  Besides code/usr/local/code, these packages also write to these locations:  ul licode/Applications/start-gpg-agent.app//code/li licode/Library/LaunchAgents/com.sourceforge.macgpg2.gpg-agent.plist/code/li licode/private/etc/paths.d/MacGPG2/code  /li /ul  Note: I only scanned through the codeInfo.plist/code files and the BOMs from the packages, there may be other files elsewhere. Pacifist might be useful if you want to try to go through your code/Library/Receipts//code entries to try to find all the files it might have installed.  hr  If these all came from some installation of GnuPG, and you no longer need it (Homebrew only seems to have GnuPG 1.x, otherwise you could rebuild it yourself), then it is probably safe to delete the files. Though I would start code/usr/local//code from scratch instead of just clearing codelib/code and codeinclude/code (probably by codemv /usr/local /usr/local.old/code like geekosaur mentioned).  <comment10455> i have gnupg installed so it is most likely due to this... I will move to a temp folder as recommended.  Thanks