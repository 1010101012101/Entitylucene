Including Python Script Dependencies (virtualenv contents) in Platypus <body> I'm trying to turn a python script into a OS X App that you can run directly from Finder. I'm trying out Platypus, which seemed like the simplest option. The problem I'm running into is with the packages I'm including in the script. I installed them through pip into a virtualenv. Wondering what the best/most proper way to include those files in the Platypus bundle would be. I know I could just copy them over to the same directory and include them in the Platypus bundle, but would prefer to do something cleaner like including the virtualenv, although it seems like that would then have to be installed by the users of the app.  I also ran into py2app which seems to be able to achieve something similar to Platypus, but their documentation is somewhat obscure.  <answer171224> The way I've solved this is in the past is by bundling the contents of the codevirtualenv/code directory into Platypus and then activating the bundled Python interpreter with a script.  Here's a screencap of the Platypus interface to show you what I mean:  img src="https://i.stack.imgur.com/ej1Ua.png" alt="Platypus window setup"  You'll notice that I've bundled the entire codevenv/code directory (which was created with the codevirtualenv/code command), and my Python script, codemy_app.py/code.  The script that I'm actually telling Platypus to run, coderun.sh/code, is a shell script with the following contents:  precode#!/bin/sh  "$PWD/venv/bin/python" my_app.py "$@" /code/pre  All this script does is use the codepython/code binary in the codevenv/code directory to run the bundled Python script. The code"$@"/code is there to pass any arguments to coderun.sh/code directly into codemy_app.py/code without changing them. 