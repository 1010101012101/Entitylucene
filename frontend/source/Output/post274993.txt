How does this AWK script work? <body> I have 2 data files each containing one column. I want to make another data file by merging both the columns. I have the command line in shell but I don't know how it works.  Please explain elaborately the below command:  precodeawk 'NR==FNR {a[i++]=$0};              {b[x++]=$0;};{k=x-i};      END     {for(j=0;j&lt;i;) print a[j++],b[k++]}' \   file1.txt file2.txt /code/pre  Example:  input:  precodefile1.txt    11 23 19 31 67 file2.txt 13 19 25 67 93 /code/pre  I used the command above to write a shell script and got following output:  precode11 13 23 19 19 25 31 67 67 93 /code/pre  I want to know how this command line is working on this example to give the output?  <answer275035> Well, part of learning to use Unix is to figure out what existing scripts are doing. In this case you need to know a bit about how codeawk/code works to understand the code. I will focus on describing the codeawk/code part, this should get you started in figuring out the rest.  Basically codeawk/code is a pattern-driven scripting language, where commands consist of both a (search) pattern/condition and a corresponding code block. During execution, any input files are read line by line and if the pattern/condition is true for a line, the code block is executed. There are special patterns codeBEGIN/code and codeEND/code which are used to trigger code to get executed embefore/em the first line or emafter/em the last line is read.  In your example you have three pattern/code lines:  precodeNR==FNR {a[i++]=$0}; /code/pre  codeNR/code and codeFNR/code are two special variables set by codeawk/code. You can look up their meaning with codeman awk/code to see that  precodeNR     ordinal number of the current record FNR    ordinal number of the current record in the current file /code/pre  so basically this condition is true while lines from the first line are read (which means that codea[i++]=$0/code is executed once for each line from the first file) and false for all additional files. code$0/code is the current line of input.  precode        {b[x++]=$0;};{k=x-i}; /code/pre  This code block has no condition/pattern so it gets executed for every line read (from all files including the first one).  precodeEND     {for(j=0;j&lt;i;) print a[j++],b[k++]}'  /code/pre  This part runs after the last line of the last file has been read and processed.  With these basics you should be able to figure out the meaning of the different code blocks and variables yourself.  <comment345846> There are either too many possible answers, or good answers would be too long for this format. Please add details to narrow the answer set or to isolate an issue that can be answered in a few paragraphs. <comment345848> Are you looking for a solution to accomplish your task (merging two single column files into a file with two columns), are you looking for an explanation on what the awk script does, or something else? Please be specific, and also provide samples of both the input files and the expected output (and/or maybe where the awk script is coming from). <comment345858> sorry for the inconvenience.i am learning shell script. I am just asking how my written command works ?i need an explanation how this command line <comment345863> It's a rather "interesting" way to solve the problem. Did you get it from http://www.unix.com/shell-programming-and-scripting/161826-how-combine-2-files-into-1-file-2-columns.html? Using `paste file1.text file2.text` would seem to be easier to use and understand :-) <comment346033> can you please define a and b? <comment346037> `a` and `b` are user array variables (in `awk` variables don't need to be declared, they just get created by using them). If this is your first contact with `awk` I recommend reading one of the many introduction pages available. This will get you up to speed faster than anything I can explain here.