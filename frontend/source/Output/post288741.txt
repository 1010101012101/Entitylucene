Cannot fully use Apple Shake application in El Capitan <body> On July 2009, Apple discontinued Shake. No direct application's replacement was announced by Apple, but some features (stabilize and optical flow estimation, to name a few) are now available in Final Cut Pro X and Motion 5.   Apple Shake was built on 32-bit codeCarbon API/code. I surely understand it's not 64-bit codeCocoa API/code, these APIs are different. But codeCarbon.framework/code is still included in code/System/Library/Frameworks//code in El Capitan and great old apps (such as Shake, Color, Soundtrack Pro) can use it.  I'm still using Shake on OS X 10.11.6 via Terminal (typing strongshake/strong there and getting Shake's GUI):   img src="https://i.stack.imgur.com/66aHO.png" alt="enter image description here"  img src="https://i.stack.imgur.com/axgFC.png" alt="enter image description here"  But I can't (for obvious reason) launch Shake via clicking its icon in codeApplications/code folder:  img src="https://i.stack.imgur.com/3Bm8A.png" alt="enter image description here"   So I have two questions:  ol liWhat should I do to bypass this OS limitation and to make Shake run after clicking its icon in Applications folder or on Dock?/li liIf the first is impossible, how to get rid of codewhite crossed-out circle/code overlay on Shake's icon (regular icon replacement isn't working in this case)?/li /ol  strongP.S./strong  strongI FOUND POSSIBLE SOLUTION (thanks to Thomas Voßen):/strong Shake on Mac OS X 10.11.6  ol liMake a duplicate of Shake./li liSelect "Show Package Contents"/li liGo to the "Contents" folder and open codeInfo.plist/code. Xcode has a plist editor./li liEdit the entry codecom.apple.shake/code and change it to something like codecom.apple.shake4/code./li liSave the plist file./li /ol  Now it's possible to start Shake with a double click from the Finder.  strongBut there's no codeInfo.plist/code file in codeContents/code folder./strong  <answer288800> Your question answers itself.     Apple Shake was built on 32-bit Carbon API. I surely understand it's not 64-bit Cocoa API   Leaving aside the 32 bit versus 64 bit argument; Cocoa is entirely different than Carbon.  It's not going to run because the APIs that Shake is referring to (Carbon) are not compatible with what you are running now (Cocoa).  It's important to note that Carbon was deprecated in 2012 with the release of Mountain Lion (OS X 10.8.x).  Remember, why and when Apple adds/removes features is entirely their prerogative.     In 2012, with the release of OS X 10.8 Mountain Lion, most Carbon APIs were considered deprecated. The APIs are still accessible to developers and all Carbon applications will run, but the APIs will no longer be updated.   As for Shake running in Terminal, this is an entirely different scenario - Cocoa and Carbon do not come into play - it's strictly a text based interface.  strongUPDATE:/strong  After a bit of research, I discovered two things:  ul liShake has been relegated to "incompatible software" and Finder will not launch it.  Period./li liThere's a workaround (see below) to get it functional in El Capitan because the Carbon libraries are still included, though deprecated.  Note:  This has not been tested/confirmed in Sierra/High Sierra.  As this is deemed "Incompatible Software" by Apple, there's no guarantee that the workaround will emfully/em work or for how long.  YMMV./li /ul  strongWork Around/strong  ol liRight-click Shake.App /li liGo to emShow Package Contents/em. /li liGo to Contents -- MacOS -- shake (select codeshake/code not codetshake/code);/li liDouble-click codeshake/code. It should first open a Terminal Window and then Shake should be running./li liCreate an alias (a shortcut) of the file and place it whenever you want. strongLaunchpad will not be able to see it/strong, though you can have the shortcut/alias in your Applications folder./li /ol  <answer289086> This is me thinking out aloud, so to speak, but one thing also worth trying is to use either AppleScript or Automator to create an application to do what you're now doing manually via Terminal. Once you've done that, adding the application to your Applications folder will make it available to Launchpad, the Dock, etc.  I'm not sure how familiar you are with either AppleScript or Automator, but using Automator as an example the process would broadly be along these lines:  ol liLaunch Automator (usually found within your Applications folder)/li liGo to File  New/li liSelect Application and click Choose./li liAbove the second column (more on the lefthand side) you'll see a search field at the top of a long list/li liType "Run" in the field to filter the list/li liOne of the options will be strongRun Shell Script/strong/li liDouble-click on this option/li liThis will add the Run Shell Script window on the right./li liNow configure and enter the script you need to replicate what you're already doing/li liGo to File  Save (or use kbdcommand/kbdkbdS/kbd) to save this as an application/li /ol  Now you emshould/em be able to double-click on the application you've created to launch Shake. You can also change the application's icon to whatever you want, add it to the Dock, etc. This will also be available in Launchpad.  strongNOTE:/strong - I'm not sure if I've still got Shake installed on one of my Macs, so I haven't tested this to make sure it'll work with Shake specifically, but in theory it should be fine based on what you're already doing.  <answer289156> strongIt works!/strong I've manually made an codeInfo.plist/code file and added these lines, copied from codeColor.app/code:   precode&lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;CFBundleExecutable&lt;/key&gt;     &lt;string&gt;Shake&lt;/string&gt;     &lt;key&gt;CFBundleGetInfoString&lt;/key&gt;     &lt;string&gt;Shake version 4.1.1&lt;/string&gt;     &lt;key&gt;CFBundleIconFile&lt;/key&gt;     &lt;string&gt;Shake&lt;/string&gt;     &lt;key&gt;CFBundleIdentifier&lt;/key&gt;     &lt;string&gt;com.apple.shake4&lt;/string&gt;     &lt;key&gt;CFBundleName&lt;/key&gt;     &lt;string&gt;Shake&lt;/string&gt;     &lt;key&gt;CFBundlePackageType&lt;/key&gt;     &lt;string&gt;APPL&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Carbon API, as well as Cocoa API, is tightly integrated with low-level Core Foundation API (codeCF/code).  Here's useful information about codeBundles/code in macOS and iOS:  Bundle Programming Guide – About Bundles  Bundle Programming Guide – Bundle Structures  Now, clicking Shake's icon on Dock I can launch Apple Shake in GUI of El Capitan 10.11.6.  img src="https://i.stack.imgur.com/hVw5Q.png" alt="enter image description here"  I can run it not only from Launchpad but also via Terminal as well. It simultaneously allows me to run multiple instances of Shake.  img src="https://i.stack.imgur.com/5Kdaw.png" alt="enter image description here"  <comment364750> I agree with you but... If I install Shake on Mac OS X 10.9 and then perform installation of OS X 10.11 (not clean install), Shake works well via UI and via Terminal in El Capitan. And there's no crossed-out white circle on Shake's icon. It's quite strange. <comment364751> So, you are installing Shake on a system *with the requisite UI libraries* then upgrading but when you install on a a system *without said libraries* it doesn't work?  With 10.8.x, Carbon was considered deprecated - meaning it was included but not updated.  2 versions later Apple obviously stopped including the libraries. <comment364752> Again agree. Can I resurrect Shake in UI of El Capital? I mean to make it launch clicking its icon? <comment364843> Start with this: http://apple.co/2tHY9qp  Coco is literally the topmost layer in the framework where as CLI tools operate near the bottom at the Core OS layer. <comment364898> I've already read it. Seemingly we are talking about different things. The point is – if I type "shake" in Terminal, I'll get Apple Shake's GUI (not the hidden Apple Shake controlled by command line). I get Apple Shake built on Carbon API (not its engine with text based interface). <comment365117> "Create an alias (a shortcut) of the file and place it whenever you want. Launchpad will not be able to see it, though you can have the shortcut/alias in your Applications folder." I've tried it. I can't assign a new icon for that alias. https://discussions.apple.com/thread/6607341?start=0&tstart=0 <comment365129> Is an icon that important?  The bigger question is does this solution work? <comment365131> Yes, it works but I'm accustomed to launchpad. <comment365133> How did you create the alias?  I would use Terminal and use a [symbolic link](https://apple.stackexchange.com/a/240552/119271)  You should be able to change the icon of symlink.  I understand that you have a workflow, but considering it's been discontinued since 2009, you'll have to compromise some. <comment365277> I think Apple has some kind of old app blacklist built into the OS, which stops certain old apps from launching. No idea why. iMovie HD does the exact same thing—launches fine from terminal, but gives that message if you try to start it normally. <comment365278> Idea is simple: stop supporting old APIs )) <comment365279> But the APIs themselves are still in tact, as evidenced by the fact that you can start the binary directly via terminal. So they're just outright blocking an app that would otherwise work fine. <comment365350> That's great! I'm glad you found a solution that works for you. :) And thank you for coming back to share it with the community. I'm sure it'll help others along the way too! <comment365351> Thanks for your solution too)) <comment373614> Intact, but most likely officially deprecated.