gpg-agent stopped working <body> I have been successfully using the codegnupg21/code package from MacPorts for several months.  Within the past few days I updated my MacPorts installation (codesudo port -d selfupdate/code) and then made sure I was up to date (codesudo port upgrade outdated/code).  Since then codegpgv2/code no longer works:  precodetartarus:~ sbooth$ gpg2 -K gpg: can't connect to the agent: IPC connect call failed  tartarus:~ sbooth$ gpg-connect-agent gpg-connect-agent: no running gpg-agent - starting '/opt/local/bin/gpg-agent' gpg-connect-agent: waiting for the agent to come up ... (5s) gpg-connect-agent: waiting for the agent to come up ... (4s) gpg-connect-agent: waiting for the agent to come up ... (3s) gpg-connect-agent: waiting for the agent to come up ... (2s) gpg-connect-agent: waiting for the agent to come up ... (1s) gpg-connect-agent: can't connect to the agent: IPC connect call failed gpg-connect-agent: error sending standard options: No agent running  tartarus:~ sbooth$ gpg-agent --help Assertion failed: (res == 0), function enter_npth, file npth.c, line 123. Abort trap: 6 /code/pre  I have completely uninstalled my MacPorts installation (coderm -rf /opt/local/code) and reinstalled everything, to no avail.  Is there something else I can try?  I'm running macOS Sierra 10.12.1 (16B2657).  <answer261952> I'm seeing exactly the same problem and, according to a MacPorts bug report, it's coming from codelibgpg-error/code and not seen with GnuPG version 2.1.16.  So it seems we need to either wait for the codegnupg21/code port to move from 2.1.15 to 2.1.16 or locally modify and rebuild the codegnupg21/code port (and maybe some of its dependencies?) to upgrade ahead of the official update. I'm not sure I'd want to do the latter with something like GnuPG though, although that's just an instinctive reaction.  h3Workaround/h3  Rather than upgrading codegnupg21/code I've found that emdowngrading/em codelibgpg-error/code makes the problem go away (I tried this because of the comment in the GnuPG mailing list post linked from the bug report that it's the upgrade of codelibgpg-error/code from 1.24 to 1.25 that's caused the problem).  MacPorts provides guidance on downgrading a port and on one of my Macs I still happened to have 1.24 available (I installed MacPorts without root privileges hence the omission of codesudo/code here):  precode$ port installed inactive | grep libgpg   libgpg-error @1.24 $ port activate libgpg-error @1.24 ---&gt;  Computing dependencies for libgpg-error ---&gt;  Deactivating libgpg-error @1.25_0 ---&gt;  Cleaning libgpg-error ---&gt;  Activating libgpg-error @1.24_0 ---&gt;  Cleaning libgpg-error $ port installed inactive | grep libgpg   libgpg-error @1.25 $ gpg2 -K  No error, much joy :) /code/pre  It's not quite so straightforward if the older version has been removed but also works for me (and given the reference to linking errors it might be prudent to uninstall then reinstall codegnupg21/code after downgrading codelibgpg-error/code if using the method above) :  precode$ svn checkout -r 150579 https://svn.macports.org/repository/macports/trunk/dports/devel/libgpg-error Error validating server certificate for 'https://svn.macports.org:443':  - The certificate is not issued by a trusted authority. Use the    fingerprint to validate the certificate manually! Certificate information:  - Hostname: *.macports.org  - Valid: from Mar  2 07:47:38 2016 GMT until May  2 01:19:52 2017 GMT  - Issuer: GlobalSign Domain Validation CA - SHA256 - G2, GlobalSign nv-sa, BE  - Fingerprint: 3E:AF:D7:EA:81:A4:92:33:B6:BC:DA:38:76:C3:15:54:9A:09:50:E0 (R)eject, accept (t)emporarily or accept (p)ermanently? t A    libgpg-error/files A    libgpg-error/files/patch-configure.diff A    libgpg-error/Portfile Checked out revision 150579. $ cd libgpg-error/ $ port install ---&gt;  Computing dependencies for libgpg-error ---&gt;  Fetching distfiles for libgpg-error ---&gt;  Verifying checksums for libgpg-error ---&gt;  Extracting libgpg-error ---&gt;  Applying patches to libgpg-error ---&gt;  Configuring libgpg-error ---&gt;  Building libgpg-error ---&gt;  Staging libgpg-error into destroot ---&gt;  Installing libgpg-error @1.24_0 ---&gt;  Deactivating libgpg-error @1.25_0 ---&gt;  Cleaning libgpg-error ---&gt;  Activating libgpg-error @1.24_0 ---&gt;  Cleaning libgpg-error ---&gt;  Updating database of binaries ---&gt;  Scanning binaries for linking errors ---&gt;  Found 16 broken file(s), matching files to ports ---&gt;  Found 1 broken port(s), determining rebuild order ---&gt;  Rebuilding in order      gnupg21 @2.1.15 +pinentry_mac Portfile changed since last build; discarding previous state. ---&gt;  Computing dependencies for gnupg21 ---&gt;  Cleaning gnupg21 ---&gt;  Scanning binaries for linking errors ---&gt;  Found 16 broken file(s), matching files to ports ---&gt;  Found 1 broken port(s), determining rebuild order ---&gt;  Rebuilding in order      gnupg21 @2.1.15 +pinentry_mac ---&gt;  Computing dependencies for gnupg21 ---&gt;  Fetching distfiles for gnupg21 ---&gt;  Verifying checksums for gnupg21 ---&gt;  Extracting gnupg21 ---&gt;  Configuring gnupg21 ---&gt;  Building gnupg21 ---&gt;  Staging gnupg21 into destroot ---&gt;  Deactivating gnupg21 @2.1.15_0+pinentry_mac ---&gt;  Cleaning gnupg21 ---&gt;  Uninstalling gnupg21 @2.1.15_0+pinentry_mac ---&gt;  Cleaning gnupg21 ---&gt;  Computing dependencies for gnupg21 ---&gt;  Installing gnupg21 @2.1.15_0+pinentry_mac ---&gt;  Activating gnupg21 @2.1.15_0+pinentry_mac  GPG 2.1 uses a new format for its key files. Therefore you cannot use it together with any earlier version of GPG. Neither can you easily go back to an older version as the old version cannot read the new format.  ---&gt;  Cleaning gnupg21 ---&gt;  Updating database of binaries ---&gt;  Scanning binaries for linking errors ---&gt;  No broken files found. /code/pre  <comment328094> This is the first time I've had an issue with MacPorts, but sadly it's a big issue.  Hopefully they'll move quickly on this one. <comment328161> @sbooth - sorry for the multiple edits to my answer (and I'm wondering if it's bad form to edit an answer that's already been accepted (newb here...)). <comment328173> Downgrading `libgpg-error` did the trick.  Thanks for the suggestion! <comment328319> It's not bad form to edit the answer even after it's accepted if the edits clarify it and there is a viewable history if necessary. I too encountered this error (on OS X 10.9) and fortunately hadn't removed the deactivated previous libgpg-error, so just your original `port -f deactivate libgpg-error @1.24_0` followed by `port -f activate libgpg-error @1.24_0` saved me from a world of grief. The only thing we need to remember is to reactivate the new one when GPG 2.1.16 is available as a port. Good work, BTW. <comment328322> Thanks for the reassurance and reasoning behind it. <comment329840> Reactivating `libgpg-error` 1.25 and upgrading to GnuPG 2.1.16 (now that the port is updated to that version) gives me a working system.