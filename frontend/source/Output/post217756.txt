Full, encrypted, point-in-time Mac OS X (including data) backup and restore employing Drobo as backup-storage device? <body> strongSummary/strong  I want to restore any of the OS and data files my Mac OS X computers to any previous state I "save" (aka "backup"), so I can revert back to a known-working software state when a change causes a problem (like a problematic OS or application-software upgrade). I want to do this without Internet-bandwidth limitations (hence the Drobo is preferred, over a cloud-only-based backup).  strongImplementation Challenges/strong  What solutions can solve limitations #1 and #2 (listed below) for the following scenario, and still meet the requirements served by CCC + Drobo? I prefer to keep the Drobo, but I expect to replace and/or augment CCC with something else/additional. However, I'll evaluate any solution, no matter how big the change. (Within reason. I have to stick with Mac OS X, for now.)  strongMore Details/strong  I currently employ Carbon Copy Cloner (CCC) to copy my entire MacBook Air (it's primary 'Mac HD' drive) historically running 10.9.5 and 10.10.5 to a Drobo Mini. I can restore my entire 'Mac HD' drive, including the OS, to the state saved on my Drobo backup by booting off a USB flash thumbdrive, then running a CCC restore from the Drobo - Mac HD.  This is my emonly/em reliably means I know to reset my OS/apps/data/etc back to a known working state, especially after a 'Software Update' screws something up. This happens most often when I update to a new Mac OS X, decide its newly-introduced bugs are not worth it, and then I downgrade. (Happened with Mavericks and Yosemite. I suspect it will happen with El Capitan--when I first try it.) I then wait for the new Mac OS X to become mature enough for me to upgrade to it, or I'm simply forced to upgrade for whatever reason (like app support phases out for the older OS X version).  strongLimitations/strong. The above works well, but there's 2 limitations I'd like to overcome:  ol liOS X's FileVault can not encrypt my Drobo, given its thin provisioning. Thus my files on the Drobo are exposed "in the open" if some untrusted person/entity acquires/steals my Drobo./li liCarbon Copy Cloner (CCC) can not automatically or at least not easily restore (in the above scenario) to a backup state/time prior to the latest backup./li /ol  strongTime Machine/strong. It is emnot/em a viable solution. I've tested it numerous times in scenario similar to above, and it has failed (miserably and obviously) every time.  strongCrashPlan/strong. I've spoken with 3 different pre-sales tech representatives at CrashPlan/Code42. None of them claim to solve the above, even though I suspect they can do it as well as CCC does it today, with the aforementioned limitations, of course.  strongTrueCrypt/strong. Ultimately, I suspect I'll need an backup-application-level and/or TrueCrypt-based encryption to solve this. But I'm open to anything that meets all the requirements.  <answer217851> I run OS X server and use Time Machine to store things in an encrypted manner. I use a Promise R2 box for the actual storage instead of Drobo, and have not needed to use the AppleCare that I pay so that I get three years of Apple engineering support in case Time Machine acts up for me.  It just hasn't been an issue across the handful of clients that I've set up with similar setups. I used to lose a few backups a year when we were backing up to Time Capsule - but since using OS X server.app to handle the Time Machine - things are much better in a reliability standpoint.  Hopefully someone will have a good answer for Drobo since you have had bad experiences with Time Machine, but I wanted to chime in with what has worked well for the last 3 years. Of the 50 machines backing up over Time Machine, we're not seeing problems with Apple's encrypted backup solution.  <comment365043> I have similar issues and am looking for backup solutions. What's your current situation/solution? Have you tried SuperDuper? Does CCC preserve FileVault's encryption?