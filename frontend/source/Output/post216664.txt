Terminal - Crash at opening - pointer being freed was not allocated <body> I have an issue with my terminal since the installation of El Capitan. Every time i'm opening my terminal, this message appears and prevent me to using my terminal correctly :  precodelogin(9493,0x7fff72214000) malloc: *** error for object 0x7fab5a718cc0: pointer being freed was not allocated *** set a breakpoint in malloc_error_break to debug /code/pre  What i've tried :  ul lidelete com.apple.terminal.plist from the ~/Library/Preferences/li liRestore disk permission via Onyx and Clean My Mac 3 (Since OSX disk repair is not available anymore)/li /ul  So far no luck, also i have to mention that for a short time i've disabled SIP (but re-enabled since).  Anyone have this similar issue ?  Thanks for the help !   Edit :  My ~/.profile   precode# MacPorts Installer addition on 2012-01-29_at_15:38:51: adding an appropriate PATH variable for use with MacPorts. export PATH=/opt/local/bin:/opt/local/sbin:$PATH # Finished adapting your PATH environment variable for use with MacPorts.   # PEP 370 PATH added by PyPM on 2012-05-10 22:03:33.635293 export PATH=/Users/GeR/Library/Python/2.7/bin:$PATH  ## # Your previous /Users/GeR/.profile file was backed up as /Users/GeR/.profile.macports-saved_2012-08-21_at_22:10:48 ##  # MacPorts Installer addition on 2012-08-21_at_22:10:48: adding an appropriate PATH variable for use with MacPorts. export PATH=/opt/local/bin:/opt/local/sbin:$PATH # Finished adapting your PATH environment variable for use with MacPorts. /code/pre  My ~/.bash_profile   precodeexport CLICOLOR=1 export LSCOLORS="gxfxcxdxbxegedabagacad" # ~/.bashrc: executed by bash(1) for non-login shells. # see /usr/share/doc/bash/examples/startup-files (in the package bash-doc) # for examples  # If not running interactively, don't do anything [ -z "$PS1" ] &amp;&amp; return  # don't put duplicate lines in the history. See bash(1) for more options # ... or force ignoredups and ignorespace HISTCONTROL=ignoredups:ignorespace  # append to the history file, don't overwrite it shopt -s histappend  # for setting history length see HISTSIZE and HISTFILESIZE in bash(1) HISTSIZE=1000 HISTFILESIZE=2000  # check the window size after each command and, if necessary, # update the values of LINES and COLUMNS. shopt -s checkwinsize  # make less more friendly for non-text input files, see lesspipe(1) [ -x /usr/bin/lesspipe ] &amp;&amp; eval "$(SHELL=/bin/sh lesspipe)"  # set variable identifying the chroot you work in (used in the prompt below) if [ -z "$debian_chroot" ] &amp;&amp; [ -r /etc/debian_chroot ]; then     debian_chroot=$(cat /etc/debian_chroot) fi  # set a fancy prompt (non-color, unless we know we "want" color) case "$TERM" in     xterm-color) color_prompt=yes;; esac  # uncomment for a colored prompt, if the terminal has the capability; turned # off by default to not distract the user: the focus in a terminal window # should be on the output of commands, not on the prompt #force_color_prompt=yes  if [ -n "$force_color_prompt" ]; then     if [ -x /usr/bin/tput ] &amp;&amp; tput setaf 1 &gt;&amp;/dev/null; then     # We have color support; assume it's compliant with Ecma-48     # (ISO/IEC-6429). (Lack of such support is extremely rare, and such     # a case would tend to support setf rather than setaf.)     color_prompt=yes     else     color_prompt=     fi fi  if [ "$color_prompt" = yes ]; then     PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ ' else     PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ ' fi unset color_prompt force_color_prompt  # If this is an xterm set the title to user@host:dir case "$TERM" in xterm*|rxvt*)     PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"     ;; *)     ;; esac  # enable color support of ls and also add handy aliases if [ -x /usr/bin/dircolors ]; then     test -r ~/.dircolors &amp;&amp; eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"     alias ls='ls --color=auto -lah'     #alias dir='dir --color=auto'     #alias vdir='vdir --color=auto'      alias grep='grep --color=auto'     alias fgrep='fgrep --color=auto'     alias egrep='egrep --color=auto' fi  # some more ls aliases alias ll='ls -alF' alias la='ls -A' alias l='ls -CF'  # Alias definitions. # You may want to put all your additions into a separate file like # ~/.bash_aliases, instead of adding them here directly. # See /usr/share/doc/bash-doc/examples in the bash-doc package.  if [ -f ~/.bash_aliases ]; then     . ~/.bash_aliases fi  # enable programmable completion features (you don't need to enable # this, if it's already enabled in /etc/bash.bashrc and /etc/profile # sources /etc/bash.bashrc). #if [ -f /etc/bash_completion ] &amp;&amp; ! shopt -oq posix; then #    . /etc/bash_completion #fi   PS1='\ \[\033[00m\][\ \[\033[31m\]\u\ \[\033[00m\]@\ \[\033[35m\]\h\ \[\033[00m\]:\ \[\033[34m\]\w\ \[\033[00m\]]\ \[\033[00m\]\$\  '   ## # Your previous /Users/GeR/.bash_profile file was backed up as /Users/GeR/.bash_profile.macports-saved_2012-12-17_at_23:43:55 ##  # MacPorts Installer addition on 2012-12-17_at_23:43:55: adding an appropriate PATH variable for use with MacPorts. export PATH=/opt/local/bin:/opt/local/sbin:$PATH # Finished adapting your PATH environment variable for use with MacPorts. /code/pre  <answer228920> I ran into this the other day. I couldn't get Disk Utility either because it was also crashing.  I had to reboot into Recovery Mode for it to work. I know you are on a later version, but there's a possibility it's still in Recovery Mode or there might be an alternative for fixing drive permissions there.  For users who don't know how to get to Recovery Mode:    strongRestart while holding kbdCMD ⌘/kbd+kbdR/kbd during boot/strong  This is different than another question on SO because of your Mac version, but you might want to post your solution there if you find one. Also the version of ONYX they were using was Onyx 3.1.3 and it's supposed to work on 10.6 or later.  <comment261883> What is in your ~/.bash_profile and ~/.profile <comment261886> added in the post, thx ! <comment261887> and what happens if you delete them - they are rather long to debug here <comment261889> Same issue   `login(11885,0x7fff72214000) malloc: *** error for object 0x7fb349f1e330: pointer being freed was not allocated *** set a breakpoint in malloc_error_break to debug  [L’opération s’est terminée par le signal 6]` <comment261890> If it's any help, i haven't touch profile and bash_profile since the update to El Capitan, the only changes done, is the deactivation of SIP to be able to use total terminal, but i havent checked if it was working since the update, i've since deactivated SIP thinking i may have been the issue. <comment261891> Have you followed the migration for Macports i.e. remove them all then reinstall - best now create a new user and see if that works - the find all the differences <comment261894> I haven't done anything for Macports during the upgrade, i've just tried to install the newest version for El Capitan, still no luck, also tried to create a new user and got the same error message :( <comment262838> Does it crash if you *don't* use TotalTerminal? Are you using the latest version of TotalTerminal? It overrides code in Terminal, and if it hasn't been updated for El Capitan it may be incompatible with the latest Terminal code. <comment264507> I am having the exact same issue. Did you find a resolution to this? <comment271325> Sorry no luck for now... :( it still crashes even without Total Terminal.