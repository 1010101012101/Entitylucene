Configuring SSL with Apache under Lion <body> Following on from my previous question (which I answered myself),  Configuring OS X 10.7 Lion Server to serve Rails Apps via Apache  ...I'm now looking to set up SSL.  Again, I have the config working fine under Snow Leopard, but I want to set this up on a new i7 Mac Mini, so running Snow Leopard isn't an option.  I'm using the named virtual host kludge described in the link answer above, but I've been unable to get SSL working.  The Snow Leopard config I'm basing my Lion config is included below.  Tips on configuring the equivalent under Lion would be very much appreciated. Thanks.  precode&lt;VirtualHost 10.0.1.1:80&gt;   ServerName bonk.example.com    Redirect / https://bonk.example.com/  &lt;/VirtualHost&gt;  &lt;VirtualHost 10.0.1.1:443&gt;     ServerName bonk.example.com     DocumentRoot "/Rails/deployed/bonk/current/public"     RackEnv example_production     RailsEnv example_production     &lt;Directory "/Rails/deployed/bonk/current/public"&gt;       Order allow,deny       Allow from all       Options FollowSymLinks     &lt;/Directory&gt;    SSLEngine on   SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL   SSLOptions +FakeBasicAuth +ExportCertData +StdEnvVars +StrictRequire   SSLCertificateFile /private/etc/apache2/server.crt   SSLCertificateKeyFile /private/etc/apache2/server.key   SSLCertificateChainFile /private/etc/apache2/ca.crt   SetEnvIf User-Agent &amp;quot;.*MSIE.*&amp;quot; nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0    RequestHeader set X-Forwarded-Proto "https"  &lt;/VirtualHost&gt; /code/pre  <answer31768> h1Generate a host key/h1  First, make a home for the new SSL files. I use /etc/apache2/ssl.  Open up a terminal window, cd to the new directory and issue the following command to create a host key file.  precodesudo ssh-keygen -f host.key /code/pre  h1Generate a certificate request file/h1  This command create a certificate request file. A certificate request file contains information about your organization that will be used in the SSL certificate.  precodesudo openssl req -new -key host.key -out request.csr /code/pre  h1Create the SSL certificate/h1  Create a self signed SSL certificate using the request file.  precodesudo openssl x509 -req -days 365 -in request.csr -signkey host.key -out server.crt /code/pre  h1Configure Apache/h1  Create a backup of /etc/apache2/httpd.conf.   Append the contents of /etc/apache2/extra/httpd-ssl.conf to /etc/apache2/httpd.conf.  In /etc/apache2/httpd.conf, make sure the loading of SSL is enabled (remove the #)  precodeLoadModule ssl_module libexec/apache2/mod_ssl.so /code/pre  Also, edit SSL section to use the new certificate.  precodeSSLEngine on SSLCertificateFile /etc/apache2/ssl/server.crt SSLCertificateKeyFile /etc/apache2/ssl/host.key /code/pre  Check the config and restart Apache to try the new certificate.  precodesudo apachectl configtest sudo apachectl restart /code/pre  Thanks to the House of Ding and Matt Langtree for providing much of this solution.  <answer38612> The problem with above is that a password or pass phrase is required from apache which it cannot get. Therefore apache will not run or startup!   What's needed is to create a bi"no password"/i host key/b with this command:  precodeopenssl rsa -in host.key -out host.nopass.key /code/pre  ...and direct apache's ssl key to the bhost.nopass.key/b that it generates.  When I did this, my Lion Apache runs successfully.  <comment28789> Have you tried this guide from Apple? http://developer.apple.com/internet/serverside/modssl.html <comment28839> Thanks, but that guide is quite dated.  I have SSL working under Snow Leopard, but Lion changes things quite a bit.  There's workarounds for named virtual hosts, but I've not got SSL working under Lion with that set-up. <comment36449> Thanks for your reply, but this looks like the standard instructions for Snow Leopard (and prior).  Have you tried this on Lion? 'cos I don't think it works :-/ <comment36704> yup. ran it on lion and it works. the sharing preferences doesn't show the server is on, but it is. <comment43709> How do you do this as your own CA (certificate authority)? <comment43710> The process is exactly the same (once you've created your own certificate). <comment43711> obviously it is not exactly the same. i created my own CA using Apple's Keychain Access app, but that doesn't mean I can use it with the above code. Please post the proper syntax if you know how. <comment45395> Chase's amendment worked for me! Had to "sudo": sudo openssl rsa -in host.key -out host.nopass.key <comment126657> I used the archive.org to get that developer.apple.com modssl guide mentioned above if anyone is interested: http://f.cl.ly/items/270z1h3Q2C1z0Z2R1F3U/Using%20mod_ssl%20on%20Mac%20OS%20X%20(2013-11-02%2011-25-13%20PM).htm