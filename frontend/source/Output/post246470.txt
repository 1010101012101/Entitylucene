Accidently took ownership of filesystem root <body> So, in an attempt to take proper ownership of some files that somehow got set to read-only inside a subdirectory of my home directory, I ran the following command within that directory:  codesudo chown -R &lt;myusername&gt; //code  Now, what I meant to do is this:  codesudo chown -R &lt;myusername&gt; ./code  (and what I should have done is noticed that I already owned the files, and I just needed to codechmod/code the permissions, but I'm really tired today and I don't have a time machine to fix my dumb mistake)  I realized my mistake after it took more than a few seconds to complete (not a lot of files were in that directory, so it should've been nearly instant) and killed it with Ctrl-C, but I now see a number of files in my filesystem root that my user owns, which I don't think used to be that way.  How can I figure out which files I messed up, and restore them to their proper owner(s)?  Is there a list I can consult of what should be owned by who in that directory?  I'm running OS X Yosemite (10.10.5).  <comment304034> If you've done as suggested by Hexa, you've now trashed the ownership of all files not belonging to `root` and `$USER`, of which I list some in my comment to Hexa's post. You should have started to fix this using Repair Disk Permissions in Disk Utility, in versions of OS X where still applicable. <comment304089> @user3439894 Yes, I did indeed trash my OS.  However, I can tell you that Repair Disk Permissions did not fix it - I tried that before.  I wish you had shown up to tell me that yesterday.