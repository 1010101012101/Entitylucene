Compress a folder via a command line while persisting its icon <body> I have a folder with a custom icon (via codeNSWorkspace/code's codesetIcon:forFile:options/code).   I would like to zip the folder so the custom icon is preserved after unzipping.  Currently, I call  precodezip -r9 Folder.zip Folder /code/pre  When I uncompress it via Finder, the uncompressed folder does not have any custom icon and the folder contains an item named codeIcon?/code.  How to fix it / how to compress the folder properly?  <answer294437> The command-line codezip/code command doesn't seem to be able to hand certain aspects of macOS, including icons, but the more traditional unix codetar/code utility can. You can make use of this by replacing your command with the following (this will also compress the folder using gzip):  precodetar -czf Folder.tar.gz Folder /code/pre  <comment371630> is using the more traditional tar.gz format acceptable? It maintains icon informations, and macOS also knows how to open those with the standard decompressor. <comment371633> @William T Froggard, Since `zip` can't do it, you should write an answer using `tar` as it fulfills both the _command line_ and _keeping the icon_ aspects of the question. I'd up-vote it! :) <comment371634> @user3439894 Heck, why not. :) <comment371640> I need to check whether other parts of the workflow are tar.gz-compatible. I presume, zip would be more native/safe but I'll check whether I'll find libraries for tar.gz everywhere needed. <comment371643> @alik, If the compressed file is to be used on a Mac, then I see no reason why you can't replace `zip` with `tar`! That said, if keeping the icon is an absolute must, then `zip` isn't going to cut it and `tar` is a default binary on all modern versions of OS X/macOS, so there really shouldn't be a problem. <comment371644> @user3439894 For example, the archive is going to be modified dynamically by a server code currently running ASP.NET Core 2.0. <comment371648> Your last comment is not helpful at all. <comment371653> Tar without the “-“ behind the options is the BSD-style way of doing it, and also works with every version of ‘tar’ I’m aware of. <comment371654> Ah, ASP.NET. When one enters the Microsoft world, one must expect the common industry standards to suddenly become less common. Every modern operating system except Windows supports GZIP, so you may be out of luck there. <comment371656> I didn't know that and added the `-` as it showed in the man page, obviously feel free to edit back to the original. <comment371684> So tar.gz is ok, marking as an answer.