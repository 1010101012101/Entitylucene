MBP early '11 kernel_task over 300% when unplugged <body> Ok, after reading so many topics and not finding a solution maybe I should join the army of people posting topics about a codekernel_task/code problem with a MBP.  strongWhich MacBook do I own:/strong MacBook Pro 13", early '11 (default, no extras)  strongWhen did it happen:/strong  After some (maybe a bit more than some...) water was spilled over the keyboard/screen.  strongWhat was the direct notable effect (after 'drying'):/strong  A very slow machine when the battery is the power source.  strongWhat did I found out/strong The system proces codekernel_task/code is consuming around 280 - 330% CPU usage. Percentage rises up in about 5 seconds after unplugging the power supply and switching to battery power.  strongWhat have I tried/strong  ul liReboot, didn't work/li liRemoving applications I recently installed, didn't work/li liReinstalling Mountain Lion, didn't work/li liRun a diagnostic tool provided by Lauri Ranta (see post), gave me some insight but nothing special. Looked up the kext-items which didn't make sense to me. After all: didn't work/li liInstalled a trial version of iStat (version 4) and see which items would change when switching from socket power to battery. Didn't notice anything to be honest, even the fanspeed of my only fan (exhaust) kept running ~2000rpm/li liChecked Console to see if any messages would appear when switching, nothing/li liTried resetting SMC using these instructions, didn't work/li /ul  strongWhat makes me frown?/strong When switching to battery CPU rises up to 330% but the fan doesn't seem to bother.  As you can see I've tried as much as I could find around on the internet. I'm wondering if there's a tool which allows you to see which threads codekernel_task/code is managing (mostly around 83, 84 on my machine).  Any suggestions? Any help is greatly appreciated. I don't really mind to replace components if only I would know which one(s).  Best regards from Holland, Ben Fransen.  <answer91648> Something is telling the kernel to do work.  You might need to run codesysdiagnose/code and get expert assistance to interpret the results. Since you've done so much troubleshooting, it's going to be unlikely someone can drift in and point out an obvious flaw in your reasoning (but if they do - we might have a quick resolution.)  The real data missing is what you've done to isolate the issue. Can you summon this on demand? Does it happen immediately after a reboot?  You'll need to have some process to keep track of when the issue arises - once you have 5 to 10 events, then it's much easier to go over the system.log and codetop/code process listing to see if any patterns emerge.  A single sysdiagnose is very hard to pinpoint a problem by a non-expert. Ten events where sysdiagnose was run and there is data on what was connected, what you were doing, and ten sets of detailed logs is often very easy to narrow down your specific issue.  <comment107647> so what is it tasking ?? <comment107648> That's what I would like to know as well, so I can see which thread is consuming all that CPU. <comment107650> I mean go to the Console, scroll down to system log, enter kernel in the filter box and paste a screen shot in here.