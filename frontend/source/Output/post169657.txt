ssh -X does not work on Yosemite <body> Can no longer use X11 with ssh. Have XQuartz2.7.7 installed. Logging in with X11 via ssh gives the warnings     Warning: untrusted X11 forwarding setup failed: xauth key data not generated   Warning: No xauth data; using fake authentication data for X11 forwarding.   In my own system, codeecho $DISPLAY/code gives     /private/tmp/com.apple.launchd.GuewxwWwKS/org.macosforge.xquartz:0   However, when I try codexauth  generate $DISPLAY . trusted/code, I get the error     xauth: (argv):1:  bad display name "/private/tmp/com.apple.launchd.GuewxwWwKS/org.macosforge.xquartz:0" in "add" command   Any ideas in how to fix this?  <answer171654> strongUpdate/strong  Developer Jeremy Huddleston Sequoia announced yesterday that this problem is solved in XQuartz 2.7.8_beta2:     XQuartz 2.7.8_beta2 is available for download.      You can see http://xquartz.macosforge.org/trac/wiki/X112.7.8 for a   full set of changes, but most noteworth ones are:      1) xauth now correctly parses the Yosemite launchd $DISPLAY socket pathbr   2) libGL has been updated to Mesa 10.4.4br   3) Various exploits were fixed in xorg-server, freetype, and libpngbr   4) A bug preventing automatic updates in some cases has been fixed   The bug report is closed and marked as fixed:  img src="https://i.stack.imgur.com/GkOLy.png" alt="enter image description here"  If you can't (or don't want to) install the beta, you can still use the workaround I explain below.  hr  strongAnalysis/strong  em(scroll down for the workaround section)/em  My first thought was: "the codeDISPLAY/code variable is wrong".  But it's not. As it turns out, on OS X 10.10 Yosemite (and back to 10.8 Mountain Lion) the codeDISPLAY/code variable stores a codelaunchd/code socket path instead of the familiar display name:   precodehostname:displaynumber.screennumber /code/pre  (I've added some information about the codehostname:displaynumber.screennumber/code format at the end of this answer.)  This  requires that codexauth/code knows how to deal with a socket path value, and as of Mavericks, it did. Unfortunately, the socket used in Yosemite has a different path (more precisely: code/private/tmp/com.apple.launchd.XXXX/code instead of code/private/tmp/launch-XXXX/code), and codexauth/code breaks.  This bug was reported to the XQuartz team on Nov 18 2014 (3 months ago) (http://xquartz.macosforge.org/trac/ticket/2068):     The xauth program has code in both gethost.c and parsedpy.c to look   for $DISPLAY names that start with "/tmp/launch", and to treat that as   a local socket. However, the location seems to have changed, $DISPLAY   now starts with "/private/tmp/com.apple.launchd", so the code that is   looking for /tmp/launch doesn't catch it. (...)   According to the bug description it is to be solved in XQuartz 2.7.8, which is 4 months late (see the project roadmap page at http://xquartz.macosforge.org/trac/roadmap).  The patch that fixes the problem was committed on Dec 31 2014 to the freedesktop.org project (http://cgit.freedesktop.org/xorg/app/xauth/commit/parsedpy.c?id=f990dd936b5fd1a40290bb88cde517a0ac38f823):  precodediff --git a/parsedpy.c b/parsedpy.c index c591b77..7365224 100644 --- a/parsedpy.c +++ b/parsedpy.c @@ -42,6 +42,9 @@ in this Software without prior written authorization from The Open Group.  #include &lt;X11/Xauth.h&gt;         /* for FamilyLocal */  #include &lt;X11/Xmu/SysUtil.h&gt;  +#include &lt;sys/stat.h&gt; +#include &lt;sys/syslimits.h&gt; +  #if defined(UNIXCONN) || defined(LOCALCONN)  #define UNIX_CONNECTION "unix"  #define UNIX_CONNECTION_LENGTH 4 @@ -158,8 +161,32 @@ parse_displayname (const char *displayname,       if (!host) return False;  -    if(strncmp (host, "/tmp/launch", 11) == 0) { -        family = FamilyLocal; +    { +        /* +         * If using launchd socket, remove the screen number from the end +         * of $DISPLAY and check if it is a path to a socket. +         */ +        char path[PATH_MAX]; +        struct stat sbuf; (...) /code/pre  So it's just a question of time that this patch finds its way into XQuartz's next release.  strongWorkaround/strong  (tested on OS X 10.10.2 Yosemite.)  Add:  precodealias ssh="ln -fs $(echo $DISPLAY | sed 's:\(/private/tmp/com\.apple\.launchd\.[^/]*\)/.*:\1:') $(echo $DISPLAY | sed 's:/private/tmp/com\.apple\.launchd\.\([^/]*\)/.*:/private/tmp/launch-\1:'); ssh" /code/pre  to code~/.bashrc/code and either start a new Terminal window or source it (code. ~/.bashrc/code) in your current Terminal session.   This workaround symlinks the socket path to code/tmp/launch-XXX/code (for example codeln -fs /private/tmp/com.apple.launchd.GuewxwWwKS /private/tmp/launch-GuewxwWwKS/code) and starts codessh/code:  img src="https://i.stack.imgur.com/mjFBs.png" alt="enter image description here"  hr  From codeman X/code on Ubuntu: The X server's display name has this form:  precodehostname:displaynumber.screennumber /code/pre  where:  precode   hostname            The hostname specifies the name of the machine to which the display  is  physically            connected.   If  the hostname is not given, the most efficient way of communicating            to a server on the same machine will be used.     displaynumber            The phrase "display" is usually used to refer to  a  collection  of  monitors  that            share a common set of input devices (keyboard, mouse, tablet, etc.).  Most worksta‐            tions tend to only have one display.  Larger,  multi-user  systems,  however,  fre‐            quently  have  several  displays so that more than one person can be doing graphics            work at once.  To avoid confusion, each display on a machine is assigned a  display            number (beginning at 0) when the X server for that display is started.  The display            number must always be given in a display name.     screennumber            Some displays share their input devices among two or more monitors.  These  may  be            configured as a single logical screen, which allows windows to move across screens,            or as individual screens, each with their own set of windows.  If  configured  such            that each monitor has its own set of windows, each screen is assigned a screen num‐            ber (beginning at 0) when the X server for that display is started.  If the  screen            number is not given, screen 0 will be used. /code/pre  <comment201315> The display name as returned by `$DISPLAY` is wrong. It should be something like `:0.0`. Do you set `$DISPLAY` in `~/.bash_profile` or `~/.profile` yourself? <comment201641> Does it make a difference when you use the `-Y` option instead of `-X`? What operating system is your server using? And: having your `$DISPLAY` set to something in `/tmp/` is perfectly normal on a Mac. <comment201646> @jaume I do not set my own $DISPLAY variable. However, manually changing it seems to have fixed it. I'm still now sure how it ended up being what it was. <comment201647> Did you restart your Terminal in the meantime? This helped me with weird environment variable problems in the past… <comment201648> @Asmus I had previously restarted Terminal as well as rebooting the computer many times to no avail. I've been using OS X 10.10.2. All I did was do something like `DISPLAY=:0.0`, and it worked. I have added this into my .bash_profile <comment201649> No, please, do not set `$DISPLAY` manually. Look at what `man ssh` says about X11 forwarding: `The user should not manually set DISPLAY.` This is a potential security risk! <comment201651> Then what should I do? It also seems like setting `$DISPLAY` in the bash_profile do not work.The symptom is as follows: ssh with the original `$DISPLAY=/private/tmp/com.apple.launchd.GuewxwWwKS/org.macosforge.xquartz:0` starts X11, but it gives the error and X11 forwarding does not work. Quit ssh and reset `$DISPLAY` to `:0.0`, retry `ssh -X` and it works <comment201700> The warning Asmus mentions above (`The user should not manually set DISPLAY` in `man ssh`) applies to the *computer you connect to*. The reason is that `ssh` will set the DISPLAY variable on the remote computer for you so that X11 traffic goes through the encrypted `ssh` connection. And `man ssh` warns you: Don't modify it! But you must set DISPLAY on your Mac to make it work. Add this line to `~/.bash_profile`: `export DISPLAY=:0.0`, test it and report back. <comment201703> So adding that line to `~/.bash_profile` still gives the "setup failed" error. However, as I mentioned above, an interesting thing is that if I just left `DISPLAY` the same, ie. keep it as `/private/tmp/com.apple.launchd.crAjK9o5ak/org.macosforge.xquartz:0`, do `ssh -X`, quit ssh, then run `export DISPLAY=:0.0` or simply `DISPLAY=:0.0`, X11 works with ssh and I'm able to run GUI applications from the server <comment201779> After adding the `export DISPLAY=:0.0` line to `~/.bash_profile` you have to open a new Terminal window for changes to take effect. Alternatively, you need to run `. ~/.bash_profile` in your current shell to source it. Did you do that? If it still doesn't work you can add `alias ssh="DISPLAY=:0.0; ssh"` to `~/.bashrc`. <comment201799> That's exactly what I did, but the results are as described above. It seems like ssh needs the DISPLAY variable to be the original one first when connecting, then changed to the :0.0 value after... <comment201803> Have you tried the alias? Do you start XQuartz as a login item? <comment201825> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/21049/discussion-between-staksmashr-and-jaume). <comment201834> @stakSmashr OK... <comment201968> @stakSmashr I've added an answer with a description of the problem, some information on when this bug may be solved  and two workarounds, the one you tested and another one. <comment202211> @stakSmashr I finally found some time to install XQuartz and test the second workaround. It works, I added a screenshot. I removed the first workaround, too. You may want to give it a try. <comment202223> thanks, but it didn't seem to work for me, I still get the error "$ xterm /private/tmp/com.apple.launchd.crAjK9o5ak/org.macosforge.xquartz: unknown host. (nodename nor servname provided, or not known) xterm Xt error: Can't open display: localhost:10.0"