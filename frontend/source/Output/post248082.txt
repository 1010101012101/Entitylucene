Can't run Apache Maven via command line on El Capitan <body> I have installed Apache Maven 3.3.9 and tried to run it with command line using codemvn/code.  For this purpose, I added the following symlink but it doesn't work :  precodesudo ln -s /opt/local/share/java/maven3/bin/mvn /usr/local/bin /code/pre  I tried first :  precodesudo ln -s /opt/local/share/java/maven3 /usr/local/bin /code/pre  But codeMan mvn/code and codemvn -v/code don't return anything except errors. Any idea what I should do ?  I'm using last version of El Capitan.  Thanks.  EDIT :  precodels -l /usr/local/bin/mvn returns lrwxr-xr-x  1 root  admin  35  2 aoû 21:34 /usr/local/bin/mvn -&gt; opt/local/share/java/maven3/bin/mvn /code/pre  My PATH contains a bunch of stuff:  precode/Users/sbdy/anaconda3/bin:/opt/local/bin:/opt/local/sbin:/Library/Frameworks/Python.framework/Versions/3.5/bin:/Library/Frameworks/Python.framework/Versions/3.4/bin:/usr/local/bin:/usr/local/bin:/usr/bin/java:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/Library/TeX/texbin:/usr/X11/bin: No such file or directory /code/pre  <answer248234> I assume your JAVA_HOME is not configured properly. This will result in an info and error output entering codemvn -h/code or codemvn -v/code.  To install Java 8 and Maven properly do the following:  ul liDownload and install the latest JDK /li liOpen Terminal and enter code/usr/libexec/java_home/code. The result should be (as of August 2016):  precode/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home /code/pre/li liDownload and unzip Maven. Move the resulting folder to an appropriate folder (e.g. /opt/)/li liIn Terminal enter codenano .bash_profile/code. Add the lines  precodeexport JAVA_HOME=$(/usr/libexec/java_home) export PATH=/opt/apache-maven-3.3.9/bin:/...other_paths_already_in_your_profile..:$PATH /code/pre  save the file to disk and quit nano with kbdctrl/kbdkbdO/kbd and kbdctrl/kbdkbdX/kbd/li liSource your modified profile with codesource .bash_profile/code or better restart Terminal./li /ul  If you have installed emmaven/em and/or emjava/em with emMacPorts/em or emhomebrew/em, the approach is similar the paths to emJava/Maven/em may differ though.  <comment306176> Try adding a / to the front of opt. More importantly what errors? <comment306179> Thanks. But mvn -v still returns "-bash: mvn: command not found" and man mvn "No manual entry for mvn". <comment306391> What does ls -l /usr/local/bin/mvn show and what is your path <comment306410> Mark, I've edited my question <comment306425> You are still missing the / as the first character in front of opt/local/... <comment306428> I've corrected it but this is not the problem it seems... <comment306430> You need to use the absolute path beginning with / <comment306431> Where exactly? @Mark <comment306509> Hi, I followed what you said... Maven is installed under /opt/local/share/java/maven3. /usr/libexec/java_home returns /Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk/Contents/Home even if it's updated to 8.0_101.jdk version, so it might be the problem <comment306513> @loukios You may simply remove the folder /Library/Java/JavaVirtualMachines/jdk1.8.0_71.jdk if you don't need anymore (and the folder /Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk is present). <comment307558> In the ln command you edited here but from the result of ls you have not actually done it <comment307559> Thanks, i've just done it, but still does not work...I really don't get it! <comment307562> @Mark, exactly...so I corrected it and it yields what is expected. Now, I get the error "JAVA_HOME is not defined correctly. We cannot execute /usr/libexec/java_home/bin/java". I've done what suggest klanomath but stille the same story. I've made some improvement though lol <comment307563> Oh, mvn -h work but still no output for "man mvn" <comment307572> @loukios Please add to your question how you installed Maven (e.g. homebrew/macports/directly) and which mods you made to your ENV variables – that means e.g. posting the content of your .bash_profile (please redact it if it contains passwords or similar stuff)