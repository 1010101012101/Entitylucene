What non-Apple external monitors are currently recognized as 2 pixels per point? <body> I was thinking about getting a Dell 4k or perhaps a 2560x1440 display, but then I realized that not all non-Apple displays are recognized as 2 pixels per point even though the ppi is high enough.  Is there a list of non-Apple displays currently accepted by OS/X as 2 pixels per point?  <answer225668> Since Retina is an Apple trademark, the "official" answer is no third-party display gets that recognition.  According to wikipedia, all Mac that are marketed with Retina displays have a pixel density of 220 PPI or thereabouts, so you could make an argument that any external display that's IPS and at least 220 pixels per inch would be in the "Retina class".  The iMacs are slightly less than 220 PPI:  ul liRetina 4K iMac - 21.5-inch diagonal - 4096 × 2304 pixels/li liRetina 5K iMac - 27.0-inch diagonal - 5120 × 2880 pixels/li /ul  Apple markets color depth, lack of distortion, wide viewing angle in addition to pixel density sufficient for a normal viewing distance to make things non-pixelated to the average sighted person. You may or may not care about those other metrics when shopping, but pixels are easiest to count so I'd start there.  You can also read Apple's documentation on what is required to drive these high pixel count displays:  ul lihttps://support.apple.com/en-us/HT202856/li /ul  <comment273898> “Retina" is Apple's proprietary term for resolutions that meet a certain PPI density….UPDATE: just see @bmike answer ;) <comment273902> That doesn't really answer the question. You know what I mean by retina. 2 pixels per point. <comment273909> @hap No, Retina really is just a specific PPI, but in the case of certain products it's 2 pixels per point. <comment273969> @hap I hadn't even considered that interpretation. You can drive _any_ display in HiDPI mode if you so wish. https://developer.apple.com/library/mac/documentation/GraphicsAnimation/Conceptual/HighResolutionOSX/Introduction/Introduction.html That's more on scope for stack overflow than for here, though...