How to mount and name a volume if it's not already mounted with a startup script <body> I'm trying to do something I thought would be simple, but after researching it I feel like I'm half way towards shaving a yak, so I'm asking for advice. I want to create a script that lets me and my colleagues do normal spolight searches on a shared drive, which from research seems to not be easy and is best solved with a script that:  ul liRuns on startup (it sounds like the simplest way to do this is to make shell scripts launch on startup using Automator)/li listrongChecks if a volume of a certain name is mounted/strong (a directory on an smb shared drive on an active directory Windows-based shared company drive)/li listrongIf it's not, mounts it to that specific name/strong/li liThen, index it in spotlight, using its volume name. I think I've got this part covered: codemdutil /Volumes/name -i on/code, apparently/li /ul  The bolded parts are the parts I'm having trouble with.  hr  Particular problems I'm having:  ul liI've found an AppleScript way to mount a drive if it's not already mounted - check codename of every disk/code then codemount volume "path://to/volume"/code - but it doesn't allow me to specify the name, and I'm cautious about how consistent the Mac will auto-name a path on a non-Mac shared drive. I want to set the volume name so I can refer to it when telling Spotlight which volume to index, which seems to be impossible in AppleScript?/li liI've found a shell script way to mount a drive to a specific volume, but I read (can't find the source now, am looking for it) that the volume has to already exist, which confuses me (do I need to create an empty volume? I don't quite understand what an empty volume would be); and I can't see how to check that it hasn't already auto-mounted./li /ul  My level of knowledge of Mac volumes etc is quite low, so I'm aware I may have misunderstood any of the above.   <answer194729> OS X follows these steps when mounting a drive: It creates a raw device in /dev/ (for local disks only), it creates a folder in /Volumes/, then it mounts the drive to that folder it just created. That folder creation step is probably what you read. The shell script you linked is missing the following command:  precodemkdir /Volumes/somenetworkdir /code/pre  Then the command you linked will work, with the proper parameters  precodemount -t smbfs -o username=RemoteUser //REMOTEHOST/directory /Volumes/somenetworkdir /code/pre  <answer194801> precodeset mountedVolumes to do shell script "ls /Volumes/"  if (mountedVolumes contains "thisDriveName") is false then          mount volume "afp://thisUsername:thisPassword@thisIPorHostname/thisDriveName"  end if /code/pre  <comment232366> I'm now seeing some examples of AppleScript `mount` seeming to use `& nameVar` to set the name, but this seems to contradict what I've read elsewhere - e.g. http://hints.macworld.com/article.php?story=20120211184732735 <comment232369> So can I check if the volume already exists by checking if the directory already exists in Volumes? Trusting that when it is not mounted it'll be removed? Or is it not that simple? <comment232370> OS X will remove the directory when it unmounts the drive, yes. The only time where it may not is if the system shuts down improperly, preventing it from removing the directory as normal. <comment232371> you can try running "rmdir /Volumes/somenetworkdir" first if you want to be certain the directory isn't there when the script runs, although check first so it doesn't fail! Or just check for the existence of the directory before running mkdir. That's probably ideal.