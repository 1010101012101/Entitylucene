.plist returns: Invalid property list, plutil says ok! <body> I'm trying to create my first .plist. I want to mount a ssh drive on login so i don't have to enter the command each time I start my Mac!  The command is: codesshfs -o allow_other,defer_permissions user@xxx.xxx.xxx.xxx:/home/user/ /Users/user/Desktop/Website/ -o reconnect/code  The plist looks like this:  precode    &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple$ &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;name.plist&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;                 &lt;string&gt;/usr/local/bin/sshfs&lt;/string&gt;                 &lt;string&gt;-o allow_other,defer_permissions&lt;/string&gt;                 &lt;string&gt;user@xxx.xxx.xxx.xxx:/home/user&lt;/string&gt;                 &lt;string&gt;/mnt/User&lt;/string&gt;                 &lt;string&gt;-o reconnect,volname=User&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  I've followed a tutorial saying when done with the .plist I have to run these 2 commands:  precodelaunchctl load ~/path/name.plist launchctl start ~/path/.name.plist /code/pre  It then returns codeInvalid property list/code  I saw Launchctl says plist is invalid, plutil says it's OK, where it says i should replace the first few lines but no change?  emplutil/em return ok when run so I'm lost!  P.S.  I've used the template below posted by user3439894. This time it loads properly but when I start it nothing happens  When I look at the systemlog there is nothing posted about it....  About the path to sshfs i've tried 2 things:  ol liI've left it as it stood in the example given below. /li liI've done a suggested and added the path again /usr/local/bin/sshfs/li /ol  <answer245220> Because it would be more difficult to post this in a comment I'm posting it as an answer, although it may not be the right one.  I took your emcommand line/em while using Lingon X to create the em.plist/em file, here is how it parsed the emcommand line/em, which is different from yours.  hr  pre class="lang-none prettyprint-override"code&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;name&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;sshfs&lt;/string&gt;         &lt;string&gt;-o&lt;/string&gt;         &lt;string&gt;allow_other,defer_permissions&lt;/string&gt;         &lt;string&gt;user@xxx.xxx.xxx.xxx:/home/user/&lt;/string&gt;         &lt;string&gt;/Users/user/Desktop/Website/&lt;/string&gt;         &lt;string&gt;-o&lt;/string&gt;         &lt;string&gt;reconnect&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  hr  You'll note that while I used the emcommand line/em you have in your question it didn't include the path to codesshfs/code, you might have to add that back. The other thing it did different is each emstring/em in the emarray/em holds the information up to but not including the spaces between the arguments.  Maybe this makes a difference.  Can't say since I can't test your emcommand line/em however it's worth a try using the format Lingon X created.  <comment302258> You are concentrating on the file format not the process you are doing. You should look at documentation for LaunchAgents e.g. https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CreatingLaunchdJobs.html  Also does the tutorial say what path to use <comment302276> Ty for your answer user3439894 i've updated my question could you please take a look at it and tell if something comes to mind from that? <comment302314> @user297239, In Terminal, does the _command line_ execute without any user input? In other words, if you type or copy & paste the full _command line_, with the _real_ information, and press _enter_... does the _prompt_ return without anything other then pressing _enter_? If yes, then I'd try running this in _application script_ form as either an Automator, AppleScript or Platypus application as a Login Item from System Preferences  Users & Groups  Current User  Login Items, then see if using a different method of execution works over doing so as a Launch Agent/Daemon using a _.plist_ file.