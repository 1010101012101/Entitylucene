Shell variable PROMPT_COMMAND not working as intended? <body> I want my bash prompt to change depending on external conditions.  Here is excerpt from the bash manual:  precodePROMPT_COMMAND: If set, the value is executed as a command prior to issuing each primary prompt.  PS1: The value of this parameter is expanded (see PROMPTING below) and used as the primary prompt string. /code/pre  In my code.bash_profile/code I have following:  precodeexport PROMPT_COMMAND="echo -n ┏━━━[$(date +%H:%M)]" export PS1="━━[\t]━━━┓\n\$ " /code/pre  Here is what I see in terminal:  precode┏━━━[03:46]━━[03:46:52]━━━┓ $ cd .. ┏━━━[03:46]━━[03:51:37]━━━┓ $ /code/pre  As you can see, PROMPT_COMMAND doesn't get executed more than once, and remains static forever.   How can I have it executed "prior to issuing each prompt", as stated in the manual?  I'm running Mac OS X 10.9.3br codeecho $BASH_VERSION/codebr     code3.2.51(1)-release/code  <answer132097> The codePROMPT_COMMAND/code gets run every time, but the code$(...)/code snippet is only evaluated when your code.bash_profile/code is loaded. This is because the double quotes mean to still expand variables and commands.  If you use single quotes, the command is not substituted during the execution of code.bash_profile/code, it is evaluated when the codePROMPT_COMMAND/code is run.  <answer132099> Your codedate/code call got evaluated when you set codePROMPT_COMMAND/code so it is forever stuck at the  time that you ran:  precodeexport PROMPT_COMMAND="echo -n ┏━━━[$(date +%H:%M)]" /code/pre  Try defining a function instead and assigning that to PROMPT_COMMAND:  precodefunction prompt_command() {     PS1="┏━━━[$(date +%H:%M)]━━[\t]━━━┓\n\$ " } export PROMPT_COMMAND=prompt_command /code/pre  You can also use code\@/code for the current time in 12-hour AM/PM format in your prompt. So:  precodefunction prompt_command() {     PS1="┏━━━[\@]━━[\t]━━━┓\n\$ " } export PROMPT_COMMAND=prompt_command /code/pre  Would give you:  precode┏━━━[06:17 PM]━━[18:17:57]━━━┓ $ /code/pre  And while we're talking bash customizations let me put in a plug for the excellent bash-it project -- it's a bash equivalent to oh-my-zsh and it comes with a bunch of helper functions for theme creation. You might find it makes this sort of thing a little easier.  <comment155253> Thank you! You answer is very useful (the function is a great idea indeed!), but I accepted the first one, because it clearly explains what's going on from the technical standpoint. bash-it is a goldmine. <comment155254> Thank you. This works as expected: export PROMPT_COMMAND='echo -n "┏━━━[$(date +%H:%M)]"' <comment155361> @Sergei no worries. That's how it works around here. You should pick the answer you think best represents the solution to your posed question! <comment155404> I just discovered that it is possible to evaluate code in the PS1 as well `PS1="[\$(date +%H:%M)] \u@\w\ $ "`. It makes PROMPT_COMMAND superfluous. <comment155405> @Sergei That's awesome, I'm going to use that. But for what you're doing (since it's the line above) I'd recommend using `PROMPT_COMMAND`.