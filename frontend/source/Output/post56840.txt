How to get + metacharacter for sed in Terminal? <body> It looks like sed that comes with Mac OS 1.7.4 is the original one, without the code+/code metacharacter. Can I get the code+/code metacharacter functionality?  <answer56844> The code+/code is a GNU extension of codesed/code that matches one or more of the preceding expression but the version on OS X is BSD codesed/code.  A version of GNU codesed/code has been ported to OS X on MacPorts.  Otherwise you'll need to try a workaround.    For example, to match one or more digits, you could use code[0-9][0-9]*/code instead of code[0-9]+/code  <answer56853> OS X's implementation of codesed/code uses the "basic" regular expression format by default, which doesn't support code+/code.  From codeman re_format/code:  precodeObsolete (``basic'') regular expressions differ in several respects.  `|' is an ordinary character and there is no equivalent for its functional- ity.  `+' and `?' are ordinary characters, and their functionality can be expressed using bounds (`{1,}' or `{0,1}' respectively).  Also note that `x+' in modern REs is equivalent to `xx*'.  The delimiters for bounds are `\{' and `\}', with `{' and `}' by themselves ordinary characters.  The parentheses for nested subexpressions are `\(' and `\)', with `(' and `)' by themselves ordinary characters. [...] /code/pre  So, what can you do?  Well, one possibility is to tell codesed/code to use the modern format with the code-E/code switch.  This may, however, force you to rewrite other parts of your RE to conform (for example, swapping code\( ... \)/code with code( ... )/code).  Another option is to use one of the suggested alternate forms above.  Here are examples using the various approaches to match "A" followed by one or more "B" or "C", followed by "D":  precodesed -E 's/A[BC]+D/[match]/' sed 's/A[BC]\{1,\}D/[match]/' sed 's/A[BC][BC]*D/[match]/' /code/pre  <comment65353> You can also use curly brackets in basic regular expressions, but they have to be backslash-escaped: `echo $'aaa\na\nb' | sed -n '/a\{1,\}/p'`