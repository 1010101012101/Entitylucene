How to properly esca‌​pe spaces in the res‌​ults of mdfind to use them in a for loop <body> Trying to answer the question Are true dynamic folders (NOT a “Smart Folder” SavedSearch) possible? I stumbled about the problem to loop the results of an mdfind search as quoted or escaped paths.  Code snippet:  precodefor File in $(mdfind -onlyin $MusicSamples 'kMDItemAudioBitRate &gt;= "44000"  &amp;&amp; _kMDItemUserTags = "Sample"') do     ln -s $File $DrumFoldr done /code/pre  The strongemfor/em/strong loop should create soft links of all matching files in the folder $MusicSamples or its sub folders in the folder $DrumFoldr. The loop works for files with paths/file names without spaces.  ul liThe answer to a similar question simply suggests to quote $File (code... "$File" .../code). This doesn't work - it simply creates broken soft links with names of the contiguous strings in the original file name: a file named "1. Artist - Song - Mix.mp3" will create four or five soft links: "1.", "Artist", "Song", "Mix.mp3"  and "-"./li liEscaping the spaces by piping the mdfind results to a sed command replacing a space with an escaped space code\ /code will result in something like "\ 1.", "\ Artist" etc./li liCreating an array of the mdfind results with:  precoderesult=() mdfind ... | while IFS= read -r filename; do   result+=("$filename") done /code/pre  and using it in codefor File in "${result[@]}"; do ln -s "$File" $DrumFoldr; done/code doesn't work either./li /ul  How do I properly escape those spaces in the paths?  <comment353591> `mdfind` has a null option. You could then try piping the results through `xargs`. <comment353597> @fd0 I tried this also (haven't mentioned it in my question though) - without success. But I may have made a mistake in the command.