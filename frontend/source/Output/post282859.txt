Is it possible to trigger the built-in Trash sound effect via AppleScript? <body> If one moves any file to the Trash folder on a Mac, by default, a short sound effect plays through the Mac's audio output (assuming that the system audio has not been muted).  I have an .scpt file where nothing is truly being moved to the Trash folder, but I would still like to have the Trash sound effect play.  I understand that I can download the sound effect onto my computer as an audio file from the Internet, and write:  precodedo shell script "afplay /Users/Me/Desktop/TrashSoundEffect.aiff" /code/pre  However, I would prefer to reference the embuilt-in/em Trash sound effect. Is this possible?  I just don't like the idea of having to rely on an additional file to have my AppleScript function correctly. The built-in sound effect is more reliable, as it is guaranteed to remain on my computer indefinitely.  <answer282863> How about this one:  precodedo shell script "afplay '/System/Library/Components/CoreAudio.component/Contents/SharedSupport/SystemSounds/dock/drag to trash.aif'" /code/pre  hr  strongUpdate:/strong  To address your comment, this is covered in Technical Note TN2065 - do shell script in AppleScript under Other Concerns where it says:     "... how do I make do shell script not wait until the command completes?"       Use codedo shell script \"command &amp;&gt; file_path &amp;\"/code. do shell script will return immediately with no result and your AppleScript script will be running in parallel with your shell script. The shell script’s output will go into file_path; if you don’t care about the output, use code/dev/null/code.   Example:  precodedo shell script "afplay '/System/Library/Components/CoreAudio.component/Contents/SharedSupport/SystemSounds/dock/drag to trash.aif' &amp;&gt; /dev/null &amp;" /code/pre  <comment356497> It works nicely. I notice that the script is "paused" until the sound effect fully comes to an end. Do you know how to make the script move onto the next line as soon as your line is triggered? In other words, is it possible to have a `without waiting for completion`-type effect for the `afplay` command? <comment356502> maybe a `try` block? [just a guess, I've never tested it.] <comment356549> @rubik's sphere, I've updated the answer to cover your comment. <comment356550> @Tetsujin, A `try` _statement block_ is not going to do anything towards what was asked by rubies' sphere in his comment. Please delete your comment, thanks. <comment356591> @user3439894 With your updated answer, the script still waits until the audio file has fully played before moving on to the next line of code. I confirmed this by swapping out the short "drag to trash.aif" audio file with an audio file that has a length of 3 minutes, and the script was paused for 3 minutes. <comment356592> @rubik's sphere, Sorry, there was a typo, I didn't copy the `&` in front of the ``. I've updated the answer. <comment356594> To whomever just down-voted my answer, please give a legitimate reason for doing so. My original answer technically correctly answered the original question asked, and I updated it to handle the after the fact comment from the OP. I even quoted from the  Technical Note TN2065 - do shell script in AppleScript and while my updated example command did initially have a typo in it, which it's now corrected, you have no legitimate reason for having down-voted my answer! <comment356608> @user3439894 Your updated answer now functions as desired. The script executes the following line immediately after triggering the audio file. Thanks!