Where did /usr/bin/git come from? <body> I have a small problem. At some point I used git but I don't remember if it was installed by default on Lion.  Here is the version and path of git:  precode$ git --version git version 1.7.5.4 $ which git /usr/bin/git /code/pre  I also have a newer git in /usr/local/git  I would like to use the newer version but I don't know if by removing the old one (/usr/bin has precedence in the path variable) I'll break something.  What is the proper way to resolve this conflict?  <answer39104> git is installed by Xcode. I doubt you'll have any problems if you replace it, but I can't give you a definitive answer to thatâ€¦  ol liWhat I'd do is rename the old code/usr/bin/git/code to codegit_old/code, then rely on your path to select the new one./li listrongIf that doesn't work/strong, move the new one to code/usr/bin/code. I doubt Xcode is picky about which version of git it's using./li listrongIf that still doesn't work/strong, move codegit_old/code back to code/usr/bin/git/code and use either a direct path, rename, or alias for your new one./li /ol  I doubt you'll have to go past #1 above, though. That should be enough.  Edit: I read your original post backwards. The first thing you should do is make sure your path includes the new git directory BEFORE the directory that contains the old git.  <answer39130> You don't need to go hacking the other version out unless you are really tight for space. Edit your .bash_profile and make sure that /usr/local/bin occurs in front of /usr/bin in your PATH variable  Personally I prefer to adopt a scheme with tool paths defined and the path built from these e.g.  precodeGIT_HOME=/usr/local  PATH=${GIT_HOME}/bin:${PATH};export PATH MANPATH=${GIT_HOME}/share/man:${MANPATH};export MANPATH /code/pre  This means that anything that searches for tools using the PATH will find your version of git, and anything that "really must" have the /usr/bin version will most likely have that path hard wired in and can still find it  <answer51344> On my system (10.7.3, Xcode 4.3.2) Xcode's codegit/code is not installed in code/usr/bin/git/code.  All of Xcode 4 (like all apps from the App Store, I think) is in its .app bundle.  Specifically, its git is at code/Applications/Xcode.app/Contents/Developer/usr/bin/git/code.  I use git (via Xcode) all the time, and I have no code/usr/bin/git/code here at all.  So it's not part of the default Lion install, either, or at least, not at that location.  FWIW, the git in the Xcode.app bundle has a code--version/code that reads:     git version 1.7.7.5 (Apple Git-26)   so I bet your code/usr/bin/git/code is your own installation, and updating it can't hurt anything.  Alternatively, you could install Xcode (it's free!), and put code/Applications/Xcode.app/Contents/Developer/usr/bin//code in your $PATH, but that's overkill if you only want git.  <answer56257> I had the same problem: an old version of Git that was the Xcode version. I've tried to install a new version of Git from http://git-scm.com/ and updated the codebash_profile/code with  precodePATH=/usr/local/git/bin:$PATH /code/pre  Then reload your bash and try codegit --version/code  Worked for me :)  <answer60808> Ken is correct in that git was only available through the Xcode.app path. When I installed Mountain Lion (10.8), suddenly I had git in /usr/bin/git, so it was a Mountain Lion addition as far as I can tell...  Although...I have installed quite a few things since and am not entirely sure it wasn't a dependency for something else.  <answer101801> I really don't know, I think I haven't installed git or XCode for the momment but after install homebrew and run codebrew doctor/code it says:  precode$ brew doctor Warning: /usr/bin occurs before /usr/local/bin This means that system-provided programs will be used instead of those provided by Homebrew. The following tools exist at both paths:      git     git-cvsserver     git-receive-pack     git-shell     git-upload-archive     git-upload-pack  Consider setting your PATH so that /usr/local/bin occurs before /usr/bin. Here is a one-liner:     echo export PATH="/usr/local/bin:$PATH" &gt;&gt; ~/.bash_profile /code/pre  So why? I just installed Command Line Tools for XCode (mountain Lion) and I think this one is the one who installed it.  <comment44244> git is installed by Xcode. I can't tell you if it'll break anything, though. In your shoes, I'd rename it in case I need to put it back later. <comment44246> ah ok..Well what I'll do is just rename the new installt o git2 or something and use it like that. <comment44249> I meant rename the old one, rather than removing it. That way if you DO have problems you can just rename it back. <comment44251> @StevenFisher you should make that an answer. :) <comment44254> OK. I was hoping someone would have a real answer that didn't have an "I don't know!" in it. :) <comment58726> I also have xcode, so I have three versions of git currently installed... nice find! <comment64948> 3 alternatives: confirming that the first one worked well. <comment86356> if you don't have `/usr/bin/git`, you probably didn't install the Xcode "Command Line Tools". see http://stackoverflow.com/q/9329243/152142