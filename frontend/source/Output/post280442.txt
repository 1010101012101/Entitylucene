How to identify a missing datastore for com.apple.securityd? <body> My fans are blowing constantly, and some investigation of my Console shows this error being spit out at a fantastic rate   precodeCSSM Exception: -2147413737 CSSMERR_DL_DATASTORE_DOESNOT_EXIST /code/pre  and  precodedbBlobVersion() failed for a non-existent database /code/pre  The following applications are producing it, but I seem to remember a few more during different log watching sessions:  ul liTwitter/li licom.apple.WebKit.Networking/li li1Password/li liaccountsd/li /ul  I've tried the following things to work the problem:  ol liSome digging showed this error might be related to a Keychain issue. I completely nuked my Keychain in an attempt to get it to rebuild whatever was missing to no avail.   a. I have a codecrlcache.db/code reference that appears dead, but no number of deletion attempts makes it go away.  b. Before nuking everything, I tried wiping away dead certificates without luck./li liAn Instruments run with File Activity watching the Twitter process in hopes of finding out which file it thinks it is looking for (too noisy and I'm not sure what I'm looking for)./li liA full over-install of a fresh 10.12.4 Sierra download burned 30 minutes but did nothing else to remedy the situation./li liA Recovery-Mode Disk Repair First Aid session did find a catalog issue with my disk (late 2013 1tb SSD) and successfully repaired it. This is possibly related to whatever file is missing, but no log or notice tells me emwhich/em file it is looking for./li /ol  Any tips for other things to try? I'm running Sierra 10.12.4 on a Late 2013 15" MBP with a 1tb SSD.  <answer280517> h1Resolution/h1     a. I have a codecrlcache.db/code reference that appears dead, but no number of deletion attempts makes it go away.   This was the root problem, but it was difficult to make it go away with any of the existing tools. The codecrlcache.db/code entry was ghosted in my Keychain Access application, so an entry still existed. While I had reset all of my passwords, I hadn't fully killed the Keychain. All the applications I listed were using the Keychain to find their information, hitting codecrlcache.db/code and then either retrying or throwing I had to manually remove both of these files (essentially a hard-reset of the entire Keychain):  precode~/Library/Preferences/com.apple.security.plist /Library/Preferences/com.apple.security.plist /code/pre  h1Diagnosis/h1  It was very difficult to diagnose the issue because nothing would tell me which file did not exist. This comment, with its command that gathered bug information for Apple, was the most helpful. This produced a giant codetar.gz/code with lots of diagnostic goodies that told me much more about what was going on. Make sure to run along with whatever application(s) is misbehaving at the time.  precodesudo sysdiagnose securityd /code/pre  Among the many plain text debug output files it produced, there was a large one called codefs_usage.txt/code, and when I opened it up, I could see 1000s of familiar entries   precode08:01:11.999993  getattrlist                            /private/var                                                                                                                                                          0.000003   Twitter.3616 08:01:11.999996  getattrlist                            /private/var/db                                                                                                                                                       0.000003   Twitter.3616 08:01:11.999998  getattrlist                            /private/var/db/crls                                                                                                                                                  0.000003   Twitter.3616 08:01:12.000000  getattrlist            [  2]           /private/var/db/crls/crlcache.db                                                                                                                                      0.000002   Twitter.3616 08:01:12.000004  statfs64                               /private/var/db/crls       /code/pre  Once I saw that, it was clear the Keychain was still the issue, and my ghosted entry had to go. Lacking the knowledge of how to perform laparoscopic surgery on the plist files, I simply amputated and started over.   <answer293861> In my case after removing Espionage it left a reference for its .keychains file in Keychain Access. Log entries were like these:  precodedefault 15:11:56.715938 +0200   com.apple.WebKit.Networking DbOpen of /Volumes/1Tb/Users/MyUser/Library/Application Support/Espionage/Espionage.keychain default 15:11:56.716702 +0200   com.apple.WebKit.Networking open /Volumes/1Tb/Users/MyUser/Library/Application Support/Espionage/Espionage.keychain: No such file or directory default 15:11:56.716765 +0200   com.apple.WebKit.Networking CSSM Exception: -2147413737 CSSMERR_DL_DATASTORE_DOESNOT_EXIST default 15:11:56.716848 +0200   com.apple.WebKit.Networking CSSM Exception: -2147413737 CSSMERR_DL_DATASTORE_DOESNOT_EXIST default 15:11:56.716910 +0200   com.apple.WebKit.Networking CSSM Exception: -2147413737 CSSMERR_DL_DATASTORE_DOESNOT_EXIST default 15:11:56.716952 +0200   com.apple.WebKit.Networking dbBlobVersion() failed for a non-existent database /code/pre  The resolution was rather simple: had to remove the database reference in Keychain Access using the menu entry in codeFile/code called codeDelete Keychain Espionage/code. You should try to find the missing file reference in a codeDbOpen/code line before the codeCSSM Exception/code lines to see what's missing. 