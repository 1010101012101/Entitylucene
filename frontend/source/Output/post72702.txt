Remove entries from finder's context menu? <body> Does any one know how can I remove items that I never use from the context menu?   eme.g.:/em Burn "yadda yadda" to Disk...  img src="https://i.stack.imgur.com/9KyoK.jpg" alt="enter image description here"  <answer73208> You emcan/em actually remove native MacOS items from the context menu....but unfortunately, it doesn't appear you can remove the ones you indicated above. Regardless, if you want to take a look, head to   System Prefs  Keyboard  Keyboard Shortcuts  Services  and then uncheck the items you don't want on the menu.  img src="https://i.stack.imgur.com/FPk7A.png" alt="enter image description here"  It's unfortunate that you can't remove all of them. But it can at least help you get rid of emsome/em of the clutter.  <answer187491> ul liI have worked out a solution for this that (so far) works for strongemdefault/em/strong Finder right menu context items such as strongcodeBurn to disk/code/strong and strongcodeBurn "^1"  to disc/code/strong. This is exactly the goal of OPs request./li liThere's strongemanother/em/strong breed of context menu bloat that comes from installing strongServices/strong in the form of Applescript or executable plugins.   Those are simple to get rid of. Whatever they're named, just search your disk for that string. i.e. codeInject Potatos!/code service will ultimately be found in a file named codeInject Potatos!.&lt;something&gt;/code. There may be some other shapes and sizes of them but they're the easy problem to solve and out of scope from the OPs post. /li liFor non-english users: This solution is language agnostic. We take advantage of the localization functions that convert default strings + args into localized strings with expanded variables. /li /ul  h2How it works explained with a series of wild guesses/h2  I'm not sure about the Objective-C internals of it, but I suspect something similar to this is whats going on..  precodesnprintf(str, 0, "", var1, var2, ..); /code/pre  There's no format string (i.e. ""), so you always end up with codestr/code being zero length.  If the str is zero length, the localization resolver will walk backwards up the tree to find an ancestor format template that work. As long as you zero out all of the ancestors of that message class - it'll eventually exhaust templates and return a zero-length string to the localization requestor.  The context menu renderer recognizes that it's zero length and omits it from the context menu list items and you get a slimmer context menu.  h2IMPORTANT/h2  ul liIf you don't know what you're doing - you could mess up Finder. Use this checklist to verify you've got the kung-fu./li liBe comfortable using the shell /li liKnow how to use a plaintext editor such as vim, nano, emacs, etc./li liAlways backups of any files you edit BEFORE you edit them. /li liMake ONE change at a time, kill Finder, verify everything looks good, goto 10. If you make a bunch of changes and it borks things up you'll just have to go revert all your changes anyway. /li liI know that NSString formatting is different than C, but if you're not an Objective-C guy, and need to think about it in terms of printf, the following too examples are basically the same for the purposes of this exercise.  ul liObj-C template: strongcode"Throw ^1 into the ^2"/code/strong/li liprintf template: strongcode"Throw %s into the %s", arg1, arg2/code/strong./li /ul  If you make a modification and after restarting Finder it does't seem to be taking affect - you might be modifying a localization string in some other area than the right-click context menu. Revert your change, restart Finder and try again. If you skip this step you may end up modifying something other than the context-menu and not realize it until days later./li liUnderstand that this is basically a hack, it may not work the way you want or expect it to. For what it's worth I've been running with these changes (and more) for at least a couple weeks now and have experienced no ill effects. /li /ul  hr  h2Stock Finder Context Menu Example/h2  First lets look at a 'before' image taken from the OP's post that shows us a typical default Finder context menu full of bloat.  img src="https://i.stack.imgur.com/QTV75.png" alt="Bloated Finder Context Menu"  strongemTerrible!/em/strong   The majority of Apple devices don't even ship with DVD burners anymore, yet there's strongcodeBurn "^1" to disc/code/strong taking up valuable real estate.   Not to mention the equally useless strongcodeQuick Look/code/strong, strongcodeDuplicate/code/strong, strongcodeMake Alias/code/strong, strongcodeCopy ^1/code/strong, etc.  hr  h2New Hotness Context Menu/h2  img src="https://i.stack.imgur.com/88fUk.png" alt="New Hotness"     Stripped down as far as I could get it. Bear in mind, if we were selecting a file we would have the default strongcodeOpen/code/strong and strongcodeOpen with../code/strong menu items.    You don't lose anything unless you omit it.   Things can be made fairly sparse if you wish.  hr  h2Instructions/h2  ul liFind the $LANGUAGE.lproj file you're interested in. In my case I speak English./li listrongcodecd /System/Library/CoreServices/Finder.app/Contents/Resources/English.lproj/code/strong/li lirun strongcodeplutil -convert xml1 Localizable.strings/code/strong, to convert Localizable.strings into a plaintext XML plist file /li listrongemMAKE A BACKUP OF Localizable.strings/em/strong. If you mess something up you'll want to be able to revert your changes. /li liOpen Localizable.strings in a plaintext / code editor (vi, pico, emacs, jed, etc -- TextEdit.app cannot save *.txt files and should be avoided)  Find the value you want to hide. In my case it was 'Burn "^1" to disk' which is key BC50_V2. /li /ul   precode    &lt;key&gt;BN50_V1&lt;/key&gt;     &lt;string&gt;Burn to Disc…&lt;/string&gt;     &lt;key&gt;BN50_V2&lt;/key&gt;     &lt;string&gt;Burn “^1” to Disc…&lt;/string&gt; /code/pre   ul liMy first attempt was to remove the key-value-pair entirely, but this resulted in BC50_V1's string showing up in my menu.   Some format strings will fall back to more generic templates if they exist. In that case you'll have to zero out multiple values.   You can see this behavior with BC50_V2 which falls back to BC50_V1.  Since I wanted to complete get rid of any strongcodeBurn.../code/strong menu entries, I had to zero out BC50_V1 as well.   There are other key value pairs that had multiple fallbacks  but they're usually pretty easy to identify as they'll have the same prefix codeBC50_/code and numerically incrementing suffixes code_V1, _V2, _V../code/li liYou can annotate your changes by keeping a copy of the original key/value pair XML fragment inside an XML comment.   I make a copy of the fragment to change, comment out the old fragment with a description and make my modifications to the copy. That way I can easily revert and don't have to use version control or have multiple copies of the file./li /ul   precode&lt;!-- OLD Burn.*to Disc...       &lt;key&gt;BN50_V1&lt;/key&gt;     &lt;string&gt;Burn to Disc…&lt;/string&gt;     &lt;key&gt;BN50_V2&lt;/key&gt;     &lt;string&gt;Burn “^1” to Disc…&lt;/string&gt;  --&gt;  &lt;!-- NEW Burn.*to Disc --&gt; &lt;key&gt;BN50_V1&lt;/key&gt; &lt;string&gt;&lt;/string&gt; &lt;key&gt;BN50_V2&lt;/key&gt; &lt;string&gt;&lt;/string&gt; /code/pre   ul liIf you want to change a string instead of removing it entirely - you can do that too. Variables seem to be accessible using the form strongcode^&lt;number&gt;/code/strong. Then number represents the nth argument. If you were feeling especially pimpy you could modify strongcodeBurn "^1" to Disc/code/strong to strongcodeArchive "^1" forever utilizing an optical disk!/code/strong. /li liSave your modifications to disk/li listrongcodekillall -HUP Finder/code/strong to restart Finder/li listrongcodeopen ./code/strong to open up a Finder window in your current working directory. Right click to open the context menu, verify everything looks good. /li liAll done! There doesn't seem to be any penalty to keeping the Localization.strings file in the text plist format so you don't need to concern yourself about converting in and out of binary or text formats whenever you make changes. /li /ul  <comment130094> /System/Library/CoreServices/Finder/Contents/Resources/English.lproj/Menubar.nib has all the entry but I don't know how to delete strings <comment225907> Check my solution - it allows you to remove Finder default context menu item exactly as OP requests. <comment297437> All my attempts at modifying or even doing backups end up with: Operation not permitted. No matter if I use sudo, su or my user. <comment303481> Just a note in El Capitan you have to turn off the system integrity mode to change the files needed. http://stackoverflow.com/questions/32590053/copying-file-under-root-got-failed-in-os-x-el-capitan-10-11