Can I improve network speed with VirtualBox between host and guest? <body> I use a VirtualBox machine with Arch Linux as development web server. I want to improve rsync transfer speed via smb://. What kind of configuration is best to improve file transfer/synchronization?  Which network configuration is best for speed between the host and the guest?   My config: Intel PRO/1000 MT Desktop (Adaptador em ponte (bridged), en1: Wi-Fi (AirPort))  <answer55917> This is not directly the answer you are looking for, but an alternative approach that works wonders for my development environments.  Vagrant (vagrantup.com) is a tool built on VirtualBox which facilitates using virtual machines for development environments. Once you installed it, you can navigate to a local folder with your source files in the terminal, and initialize your virtual machine. Vagrant will map the current folder by default to "/vagrant" inside the virtual machine with read-write access, through VirtualBox's shared folder support. You could then point the webroot inside your virtual machine to a folder below there, for example.  Have a look at the Get Started guide for more info on Vagrant. If you prefer Arch Linux, you can also find prebuilt boxes at www.vagrantbox.es. You can even build your own box from scratch, in which case you might want to look at this chapter in the manual.  As for portability, I believe it is not such a good idea to distribute your sources inside a virtual machine this way (even for a single developer). You should put those in a version control system like Git or SVN, and have a check-out on every machine where you want to develop on.  <answer60151> If you're running into an I/O bottleneck, I would recommend putting the VM on it's own hard drive.  Either that or upgrade to an SSD for improved disk I/O performance.  <answer141314> Better than codesmb:///code would be to NFS mount your shares over a private network interface running the virtio-net drivers. Once mounted, inside the host OS, you'd rsync in the data with:  precodersync /some/mount/point /home/myuser/ /code/pre  Or whatever you wanted.  Someone already mentioned Vagrant and, on its own it won't speed up your VirtualBox setup, but it does make doing things like mounting in shares on your Mac via NFS export emmuch, much/em easier than doing it by hand.  For example, here's a Vagrantfile that ups an Arch Linux installation and mounts your Documents directory on your machine via NFS using virtio drivers to code/documents/code on the image.  precodeVAGRANTFILE_API_VERSION = "2"  Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|   config.vm.box = "losingkeys/arch"   config.vm.network "private_network", ip: "192.168.33.10"   config.vm.network "public_network"   config.vm.provider "virtualbox" do |vb|     vb.customize ['modifyvm', :id, '--nictype1', 'virtio']     vb.customize ['modifyvm', :id, '--nictype2', 'virtio']     vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]     vb.memory = 1024     vb.cpus   = 2     # Uncomment this to run in not-headless mode     # vb.gui  = true   end   config.vm.synced_folder '.', '/vagrant', type: 'nfs'   config.vm.synced_folder File.join(ENV['HOME'], 'Documents'), "/documents", type: "nfs" end /code/pre  It requires root priveledges to work. You'll need to add:  precodeCmnd_Alias VAGRANT_EXPORTS_ADD = /usr/bin/tee -a /etc/exports Cmnd_Alias VAGRANT_NFSD = /sbin/nfsd restart Cmnd_Alias VAGRANT_EXPORTS_REMOVE = /usr/bin/sed -E -e /*/ d -ibak /etc/exports %admin ALL=(root) NOPASSWD: VAGRANT_EXPORTS_ADD, VAGRANT_NFSD, VAGRANT_EXPORTS_REMOVE /code/pre  to your sudoers file via codevisudo/code for it to work.  Once you've put that Vagrantfile on disk all you have to do is cd to the directory where you saved it and run codevagrant up/code and you're in business. To connect it's codevagrant ssh/code or you can uncomment that line I left in there to run it with a display head.  That's the fastest configuration I know of for host/guest I/O with VirtualBox running Linux as a guest OS.  <comment64158> If I understand this right: You are running VirtualBox on an OS X host and mounting Arch Linux drives from OS X via Samba, correct? <comment64160> Yes. A script mounts the samba share and runs rsync after. <comment64167> Have you considered using VirtualBox's shared folder support instead? <comment64173> I haven't thought about that. <comment64174> I seems that I would lose my portability using shared folders. Meaning if I copy the virtual machine to my notebook it wouldn't work because the files are not stored inside the vm. <comment64220> Thanks! I'll take a look at that. <comment64222> Looks promissing mainly because it has the name of the only RPG that I played (liked). :) <comment68205> Note the default folder sharing is not very fast, but Vagrant has an option to use NFS instead. See the Vagrant wiki for info on this. <comment166524> Vagarant, while it makes the configuration of VirtualBox instances easier, doesn't actually do anything to improve the I/O performance between the host and guest OS.