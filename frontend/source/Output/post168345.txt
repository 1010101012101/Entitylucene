My iMac has been hacked via sshd. What now? <body> My iMac runs Mac OS X Yosimite 10.10.1  I accidentally had "Remote Login" enabled in my Mac's system preferences, so the sshd was running.  I just notified in Little Snitch's network monitor window, that it logged about 90 connections from different servers to sshd. I checked the ip addresses on http://ipinfo.io and all the logged ip addresses are located in China, Hong Kong and South Korea.  It seems to be pretty bad.  I looked around a little bit in the available network protocol of Little Snitch and found out, that the ip addresses appearing in the sshd log also appeared in the logs of several other processes, including   ul lish /li liDDService64d (apparently DDService64d is part of the Drobo Dashboard - I have a Drobo 5N installed in my LAN) /li lilaunchd/li /ul  all with user "root" (including the sshd logs). I thought user root was disabled by default on Mac OS X, but this might all be results of the hack...  So the question now is how to proceed?  ul liOf course I switched off "Remote Login" (sshd) on the machine./li liI disabled the root user with the "dsenableroot -d" terminal command/li liI changed my admin password/li /ul  I use a cable modem for internet connection (FritzBox 6360). UPnP is switched on (and I use this feature for several apps). There where several mappings to port 22. I removed all these.  But probably this won't be enough.  Since my computer definitely is compromised I don't really trust it anymore. What should I do now? Erase the whole thing and re-install all new? That would be a huge amount of time going down the drain.  And what's about the DDService64d access? Is my Drobo 5N also compromised? Is there a way to check this?  My TimeMachine backup is also saved on the Drobo 5N, so even if I decide to erase the computer and start all over again, how can I be sure, that it isn't compromised again by the TimeMachine backup on the Drobo?  Any advice?  <answer168354> If you are absolutely certain that your Mac has been hacked I'd strongly recommend that you erase your hard drive, reinstall OS X and manually copy you data back from Time Machine:  ol liBack up your Mac./li liRestart and hold Command+R to enter OS X Recovery (http://support.apple.com/en-us/HT4718)./li liSelect 'Disk Utility' and reformat your hard drive (http://support.apple.com/kb/PH5849)./li liQuit 'Disk Utility' and select 'Reinstall OS X'. Note that (from http://support.apple.com/en-us/HT4718):     Reinstalling OS X using Recovery requires strongbroadband access to the   Internet/strong using a Wi-Fi or Ethernet connection. OS X is downloaded over   the Internet from Apple when OS X Recovery is used for reinstallation.   You must use DHCP on your Wi-Fi or Ethernet network to reinstall OS X   using OS X Recovery. If you bought OS X from the Mac App Store, you   may be prompted to enter the strongApple ID and password/strong you used to   purchase OS X. /li liWhen OS X is up and running, plug your external Time Machine drive, open it in Finder, open the folder named after your Mac and then the 'Latest' folder (http://www.macissues.com/2014/04/14/how-to-restore-files-from-time-machine-manually/)./li liBrowse to 'Applications' and copy non-Mac App Store applications back to '/Applications'. Note that some apps (for example VMware Fusion) won't work properly if copied, you must reinstall them with the installer provided by the manufacturer./li liInstall Mac App Store applications from the App Store./li liBrowse to 'Users/[your username]' and copy Documents, Pictures, Movies, Music, and any other folder that contains important data to your new home folder./li liI would refrain from copying 'Library', although that's where your settings are located. If you have iCloud Mail, Contacts, Calendars, Reminders, Safari, Notes and Keychain synchronization enabled most of your settings will rebuild themselves just fine. You may want to selectively copy application settings from 'Library/Application Support' after checking the files' contents./li liIf you share your Mac with other people repeat steps 8. and 9. for their accounts. /li /ol  strongiCloud synchronization is especially important for Keychain/strong, and I talk from experience: I had a pretty hard time exporting and importing Keychain after installing OS X Yosemite from scratch without restoring from a Time Machine backup.   strongA piece of advice/strong: It is best practice that the login account you use on a daily basis doesn't have administrative rights. You should create an administrative account instead. I usually call it codeadmin/code:  img src="https://i.stack.imgur.com/9tetZ.png" alt="enter image description here"  while my account is 'Standard'. The side effect is that OS X will prompt you to type codeadmin/code's password every now and then, for example to edit settings in System Preferences:  img src="https://i.stack.imgur.com/ccfwT.png" alt="enter image description here"  Good luck!  <answer177055> h1Date 1st impact/h1  Identify as best as you can the strongdate of 1st attack/strong. Because all the backup after this date are corrupted and can't be trusted. (By the way, no need to make a backup of a potentially dangerous system.)  Look at the oldest log in code/var/log/system.log/code showing abnormal codessh/code access, i.e. from an IP you weren't at.  h1Damage size/h1  Once you have identified this approximate date, estimate the perimeter of damage caused by your attaquant.  If the event occured 14 days ago, use a codefind/code command to identify all the files your attackants modified on your system:  precode/usr/bin/sudo find / -mtime -15 -mtime +13 -ls /code/pre  I insist on using code/usr/bin/sudo/code because it is possible that your codesudo/code within your PATH might have been replaced.  A safer method is to do all this investigation with:  ul liyou Mac unplugged from any form of network (totally isolated),/li liwith a safe version of your Yosemite on an USB key or an external drive (if you don't have one, don't build it from your dangerous system, ask a colleague to make you one on a safe system)./li /ul  h1Restore safe data/h1  From a safe version of your Yosemite on an USB or an external drive do:  ul lia total format of your internal disk,/li lia new install of Yosemite./li /ul  Restore the rest of your users data from a backup older than the date of 1st attack, in my example 15 days old.  h1Avoid most common weaknesses/h1  Close any guest access.  Change all users password (I mean a real change, don't switch from codepassword/code to codepassword1/code, change for code{}=øph0!/code or codeMißm4tcH/code…).  Change them on any other system were you might have used the same passwords. Consider all of them as dangerous… since 14 days.  Keep sharing (codeSystem Preferences &gt; Sharing/code) to the minimum you really need.  h1Return to surface/h1  Now you can configure your Mac to a normal network configuration and return to the surface of the Internet :).  <comment197594> A connection does not mean anything. Were they able to log in? Can you please paste the according log entries? <comment197612> All I have so far is a snapshot of the Little Snitch Network Monitor. How ever there seems to be more than just connection requests. For example, one log entry of sshd says, that there were 3,2MB up / 1,76MB down traffic during a ssh (22) connection with one of the "unknown" Chinese IP addresses. <comment197732> OK this is definitely not normal ... <comment199372> I wonder, if the whole thing had something to do with that: http://furbo.org/2015/01/22/fear-china/ <comment209288> Not at all. Your Mac would have crashed under such a trafic load, with an Apache not bulletproof. <comment209298> Little Snitch is a firewall monitoring tool. It monitors inbound and outbound connections and alerts you to them, but it doesn't tell you if connection attempts were *successful*. That is: it's not an indication that you've been breached, just that attempts were made. You need to look in `/var/log/system.log` and see if any of the ssh login attempts succeeded. The network traffic may just represent repeated attempts to find a valid account to log in as. Here is a sample of failed login attempts from this log file: https://gist.github.com/ianchesal/3d73b5b018d2b811df87 <comment209349> Ian C :  pretty accurate comment :). From 2nd comment from Zaggo, the evil is inside :(.