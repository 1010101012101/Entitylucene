Disable a user's ability to unlock a FileVault 2 volume at startup/login time <body> I recently performed a clean install of Lion on one of my Macs. The installation process created one administrative user account. After installation, I enabled FileVault for the entire disk. Then, I created an additional administrative user. Both users are able to decrypt the drive during login.  How would I revoke decryption rights to one of the users without deleting the user or temporarily disabling FileVault? I have tried revoking one user's administrative privilege, making them a regular user, but they are still able to decrypt the drive during boot.  <answer20899> h1FileVault 2 and Recovery HD/h1  emRecovery HD/em not to be confused with the emRecovery OS/em (one is greater than the other).   When you enable FileVault 2 for a user: the non-encrypted hidden Apple_Boot Recovery HD partition, separate from but critical to the encrypted startup volume, is temporarily mounted for writes to EFI-related and other files. If you wish to view this file system activity, whilst enabling a user for unlock purposes:   ul libefore clicking strongDone/strong, use a command such as fs_usage or an application such as fseventer.  /li /ul  A glance at the activity suggests that edits to the non-encrypted volume — in relation to the user account on the encrypted volume — are strongnontrivial/strong.   h1If a user is given inappropriate authority to unlock/h1  Maybe an update to Lion (something greater than Build 11A511) will provide a way to remove, from the EFI loginwindow, a user who should no longer be able to unlock the startup volume.   In the meantime I can think of only two methods that may be used.   h2Method A: disable then enable FileVault/h2  ol lidisable FileVault 2/li liallow backward conversion to complete/li lirestart the operating system/li lienable FileVault 2, but not for that user. /li /ol  h2Method B: remove the user but not the home directory, et cetera/h2  I have not tested this method, I emimagine/em that the following might work:   ol libackup/li liremove the user but not the user's home directory/li lirestart the operating system/li licreate a new user with the same RecordName as the original/li liset a UniqueID number that strongdiffers/strong from the original/li liassociate the previous home directory with the new user. /li /ol  <answer53798> It looks like temporarily removing the users' passwords removes them from the EFI boot menu:  http://www.tuaw.com/2011/12/12/prevent-certain-accounts-from-unlocking-filevault-2/  Unfortunately, in my case, some of the users are Open Directory Mobile users, and I am unable to find out a way to set their password to empty.  <answer53803> It is not impossible. (Although if you have deleted user you may have made this more complicated!)  I wrote the article 'jaydisc' linked to and just tested that it still works in 10.7.4:  Assume that you have an admin user 'charlie' that you want to be able to use, but not unlock, the computer:  precodesudo su - charlie   $ passwd  Changing password for charlie. Old Password:**[enter old password here]** New Password:**[press enter]** Retype New Password:**[press enter]** $  /code/pre  Note that you cannot do this:  precodesudo passwd charlie Changing password for charlie. New password: /code/pre  because if you press enter when you get the 'new password prompt' it will come back and say:  precodePassword unchanged. /code/pre  <answer94373> Use fdesetup:  precodesudo fdesetup remove -user username /code/pre  See: http://derflounder.wordpress.com/2012/07/25/using-fdesetup-with-mountain-lions-filevault-2/  <answer227023> Here is the very simple answer on how to disable a previously enabled user's access to a FileVault 2 encrypted drive:  In terminal, use:  precodesudo fdesetup remove -user Username /code/pre  You will see thereafter the disabled user in the list of users that are available for enabling in System Preferences-Security &amp; Privacy - FileVault as verification that the disabling was successful  <comment20153> Since that user's home folder is stored on an encrypted disk (as well as all of the Applications) you might as well suspend that user account if the disk will remain encrypted. Perhaps I'm missing something - but it seems literally impossible to do. <comment20215> If the computer already has multiple user accounts when you enable FileVault2, then it will ask you which users you would like to allow to decrypt the drive during boot. So, it is possible for only some user accounts to have access. If you have users Amy and Barry, and only give access to Amy, she would have to log in during boot before Barry can switch to his account. You may be right that it may be impossible to do given my restrictions, but I'm not giving up yet. :-) <comment20223> Wow - it looks like I need to study up more before saying impossible :-) I could see how this would be accomplished by storing a key (rather than the password) in those user's keychain. Have you looked there to see if it's as simple as that? <comment20243> I found [one article](http://bit.ly/ffkara) that claims the decryption key is stored in the user's keychain. I can't find any evidence of that in either the login or System keychains. In any case, that wouldn't make sense, since the keychains are stored on the encrypted partition. There'd be no way to get to them without first decrypting the drive. I read one article (can't find it now) that claimed the encryption key is stored on the recovery partition, but I've looked through that and couldn't find anything noteworthy. It's quite a conundrum. <comment20250> I could see the system having a privileged process running as root which could easily have its own key to read anything it pleases from any user's keychain (or just check for the presence of said key) before deciding whether to let you log them in. Also a log out caching mechanism could pre-store info. It's really up to the implementation details which Apple might well keep secret from us. You surely can un-do and re-do the whole encryption, but I would simply ask AppleCare to tell you how to do what you ask. You do get 90 days personalized support from Apple whenever you buy a new OS. <comment59218> *Sorry - not an answer - can't comment yet* Seems deleting a user doesn't help. Which is a wee bit spooky. What I did was... 1. Created a fresh install of Lion with a temporary admin user - called "migrate" 2. Switched on FV2 3. Migrated my user in from Time Machine backup 4. The deleted the "migrate" user When I next rebooted I had to login with the migrate user's login. I thought this might have been because I'd forgotten to add permission for my user to unlock the disk, so I set that permission. Now I can unlock with either my password or migrate's - even though the migrate user no longer e <comment59219> *This is not an answer, just some background information to help us find an answer. I just don't have the rep to comment yet.* This should actually be possible, provided that we can find the place to change the permissions. In Apple's July 22, 2011 support article ["OS X Lion: About FileVault 2"][a], they state the following:  Users not enabled for FileVault unlock will only be able to log in to that Mac after an unlock-enabled user has started or unlocked the drive. Once unlocked, the drive remains unlocked and available to all users, until the computer sleeps, hibernates, or is shut down. H <comment59220> "until the computer sleeps". So what happens to those unprivileged users when the computer goes to sleep while they are logged in? <comment113779> This is correct for Mountain Lion, although I am not sure 1) that it works for Lion or 2) was available in Lion when the question was originally asked. <comment147938> This works on Mavericks as well <comment165878> And it also works on OS X 10.10 Yosemite. <comment275717> How does this differ from the accepted answer? <comment318255> `sudo fdesetup remove -user username` works on macOS 10.12 Sierra, too!