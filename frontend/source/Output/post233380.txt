Clean shutdown/restart from terminal in 10.7+ <body> I have a headless system that is controlled remotely that I need to shutdown/restart in an automated way (without the use of VNC or local keyboard/mouse).  Using various commands via SSH or via my daemon work as expected and restart the machine:  codesudo shutdown -r now/code or codeosascript -e 'tell application "System Events" to restart'/code  However these commands cause the OS to reopen windows of any running applications even though the following are all true:  ul liWhen logging out normally codeReopen windows when logging back in/code is strongunchecked/strong/li liOnly the item I want to start with the login is listed in codeSystem Preferences &gt; Users &amp; Groups &gt; Login Items/code./li licodedefaults write -g ApplePersistence -bool no/code is set/li licodeSystem Preferences &gt; General &gt; Ask to keep changes when closing documents/code is strongchecked or unchecked/strong/li licodeSystem Preferences &gt; General &gt; Close windows when quitting an app/code is strongchecked or unchecked/strong/li licodeRecent Items/code is set to any value (has no effect)/li licode~/Library/Preferences/com.apple.loginwindow.plist/code contains codeTALLogoutSavesSate/code set to strongNO/strong/li /ul  In my case I can't actually use the applescript since 10.7+(?) warns when another machine is network shared with AFP or SMBed causing the shutdown to fail. The codeshutdown/code command forces the restart without popping up a dialog which is exactly what I need. However when the machine starts up I want exactly one application to start at login, and it is listed in Login items.   The machine is set to automatically log in so this application can run but if any other windows were open (Terminal or TextEdit with unsaved changes) want my shutdown/restart script to force close any open applications without saving and strongNOT/strong open on next login. I also would rather not for-loop through all the user processes sending each a codeSIGTERM/code or codeSIGKILL/code manually before sending the codeshutdown/code command.  I am fully aware this may cause data loss (if the user did not save their document) but this this is typically an unattended machine that I want a restart to take the machine to a known state, not the state it was left in.  AFAICT none of these work to cleanly shutdown/restart the machine in 3.7+.  <answer233381> While writing up this question I made a discovery that might help others to emalmost/em fully solve this issue:     ul   licode~/Library/Preferences/com.apple.loginwindow.plist/code contains codeTALLogoutSavesSate/code set to strongNO/strong/li   /ul   While this is true, there is another file located at code~/Library/Preferences/ByHost/com.apple.loginwindow.*.plist/code that contains an array called codeTALAppsToRelaunchAtLogin/code. That array contains a list of app windows currently open.   Deleting this array, or in a more blunt way the whole file, and immediately restarting almost completely fixed the issue.  The remaining issue is when the machine starts up any open Finder windows are restored and if you had one or more terminal windows and actually ran the shutdown command from that window it causes it to be restored when Terminal is started again, but via SSH or a daemon seems to work fine.  I don't really think this a suitable solution in the long run but so far in my little testing it does seem to work.  upon further research it seems you can hook a script into login so it always deletes the file: defaults write com.apple.loginwindow LoginHook /usr/bin/loginfix.sh  :edit, along the same lines as the terminal window it looks like each individual app is saving it's state, so for example if you open TextEdit, make some changes and then restart the machine using the above method when the you log back in and start TextEdit you end up with the document you had open. Looking in code~/Library/Containers/com.apple.TextEdit/code explains everything 