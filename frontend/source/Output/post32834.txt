Is there an OS X terminal program that can access serial ports? <body> What programs can act as a terminal and access serial ports?  This is not for terminal access on an IP connection, this is so I can access a hardware device plugged into a USB/serial converter running at 9600/8/N/1.  <answer32835> You should have a look at ZOC, what I think to be the best terminal emulation program available for the Mac.  I use it everyday for my job.  It has the ability to do direct communication with a serial port.  Of course it does way more than just serial communication.     ZOC is a professional SSH/telnet client and terminal emulator. With its impressive list of emulations it lets you easily connect to hosts and mainframes, using communication methods like secure shell, telnet, serial cable or modem/isdn.      Its sleek user interface has many ways of making your life easier. In its own way, this is the swiss army knife of thin clients: versatile, robust, proven.      Key features:br   - Tabbed sessions with thumbnailsbr   - Customizable to meet your preferences and needsbr   - Scripting and automation featuresbr   - Compatible with Windows 7 and OS X Lionbr   - Administrator friendly (deployment, configuration)br   - Now $79.99 with attractive bulk discounts   <answer32836> The best program I know of for this is codeminicom/code, available from Homebrew, fink, and macports.     Minicom is a serial communication program. It is a Unix clone of the well-known MS-DOS Telix program. It has ANSI color, a dialing directory, dial-a-list, and a scripting language.   <answer32840> You can use the terminal command codescreen/code to do this!!!  As seen on ServerFault:     I emlove/em using [screen] for connecting to serial consoles, i.e.  precodescreen /dev/ttyS0 19200 /code/pre   Or, if you prefer Mac OS X hints...     I often have to do router configuration via a console port, so I use a   Keyspan Serial Adapter to get access. Two problems then present   themselves: ZTerm is a horrible Mac OS X app. It hasn't been updated   in five years or so, and isn't a Universal Binary. The developer   doesn't seem in any hurry to rectify the situation. It is not worth   the shareware fee in its current form. Minicom requires installation   of Fink or MacPorts and is overly complex. Solution: Use screen,   Terminal, and a little AppleScripting.      First, launch Script Editor and type/paste in the following code:  precodetell application "Terminal"   do script with command "screen /dev/tty.KeySerial1"   set number of rows of window 1 to 100   set number of columns of window 1 to 80   set background color of window 1 to "black"   set normal text color of window 1 to "green"   set custom title of window 1 to "SerialOut" end tell /code/pre      Compile and save as an app from within Script Editor, and you have a   double-clickable application to launch a serial Terminal session. You   may want to customize this slightly -- you can change the screen   colors or number of columns or rows. You may also need to customize   the screen command with a different device name if you are using   something other than the Keyspan Serial Adapter (do an ls tty* of the   /dev/ directory to get the right name).       screen uses Control-A to take commands directed to it. So type   Control-A followed by Control-\ to exit your screen session. If you   fail to do this and exit a Terminal session, you'll leave the screen   session alive and the serial resource unavailable until you kill the   screen session manually. man screen will show you further commands to   send to a screen session.       If anyone can reply with a link to a tutorial on how to wrap an   interactive Unix App in Cocoa, that would be the next step -- it would   be nice to do this without involving Terminal. If you prefer to use   Minicom, you could still use the AppleScript to wrap it into a nice   launchable app -- use this older hint to find the right command line   commands.   Many USB-Serial adapters use the chip from FTDI. Install the "emVirtual COM Port/em" driver and look for the proper TTY name in code/dev/code. For example, on a PowerBook G4 it came up as code/dev/tty.usbserial-FTALKY8I/code.  <answer59062> If you prefer not to work in Terminal, you might mant to try CoolTerm (free). Scroll down a bit for description and download. Don’t let the fact it‘s written in RealBasic turn you away... I have used it to connect to plotters, Arduino boards and receipt printers via a Keyspan USB&lt;-Serial Adaptor.  <answer133128> There's a new Mac app called Serial, available in the app store. Full disclosure- I wrote it. The main advantage over other apps is it can work with most USB to serial devices without having to install any drivers, as it has its own drivers built-in. It also does full terminal emulation so you can use it to work with Linux or other devices that require it. You can try it for free, too.  Also, Apple began including their own driver for FTDI-based devices in Mavericks (10.9). So, if you're on 10.9 or later and your device has an FTDI chip inside, you can use the built-in screen command in the terminal to access your device without worrying about drivers.  <answer133225> And then there still is the old ZTerm which is just as old as it's looks suggest yet it gets the job done just fine and it is available for free. Works fine with Prolific (PL 2303) and FTDI based USB serial adapters.  <answer174184> C-Kermit is alive and well in Brew, and can be installed with:  precodebrew install c-kermit /code/pre  Naturally you would require Brew to be installed first. You can find information on how to do this here: http://brew.sh  Alternatively use Macports  precodesudo port install kermit /code/pre  This would too require you to have Macports installed  <answer242026> I have had success with cutecom on Ubuntu 16.04  Supported on OSX: http://cutecom.sourceforge.net/    <answer250036> My preference is codecu/code. I use it for Arduino or Bus Pirate related fun. It's installed by default and supports parity settings among other options (type codeman cu/code for more info).  precodesudo cu -s 115200 -l /dev/tty.usbserial-A6005kdh /code/pre  To bail out when you're done, type code~./code as you would with SSH  <answer264309> Another serial terminal for Mac OS X is Cornflake!  It features Device Selection with a Refresh Button, Baud Rate &amp; Packet Type &amp; Flow Control Selection, Port Control and a View Filter to view incoming data as ASCII, ASCII+, Integer or HEX.  <answer291019> After trying other approaches (incl. codescreen/code) unsuccessfully, I started using goSerial from this list of serial port apps for mac. Seems to be working fine. It's a free (donation based) program.  <comment37528> You mean like a modem port 20 years ago? <comment37529> @patrix, yes.  I can load vmware, run windows, and use putty, but that seems like a lot of trouble to perform such a simple task. <comment37549> 80$ for a terminal emulator seems a bit steep if he just needs that feature! <comment37568> Price was not mentioned as a criteria in the question.  Please don't diminish an answer just because you don't agree with the price. <comment64415> I second Agos' comment. He's not "diminishing" your answer, just saying that he thinks that ZOC is not a good solution considering everything (cost, features, etc) <comment68132> Also, combined with the other answers above, it seems (from the quoted description) like the only difference between ZOC and Terminal is tab thumbnails (and the price). <comment88848> Lol.  9600/8/N/1. like a mantra to me. you can use zterm which still works at least up to 10.6. It old software. But was built to configure , communicate with Modems and transmit files modem to modem. http://www.dalverson.com/zterm/ <comment146634> The latest zterm works with 10.9. <comment146635> For USB-Serial adapters with PL2303 chip, see http://sourceforge.net/projects/osx-pl2303/ <comment157866> Wow, ZTerm lives! Brings backs many memories and old Macs. <comment166091> Clearly the best answer: Terminal + screen + osx-pl2303 (in production use since… many years ☺). <comment188000> It's worth looking at Chris K's answer below; apparently OS X comes with FTDI drivers since 10.9 (after this answer was written), so the installation isn't necessary. <comment202035> I just tried Serial today. So far, I'm quite impressed. I'll purchase it just for sparing me from having to worry about USB to serial drivers. I won't miss ssh'ing into my Linux box to run minicom. <comment209553> The meta key is Esc. So Esc-Q to quit, Esc-O for options, etc. I found minicom (and Serial.app) to be best at handling disconnects/reconnects which are basically implicit when running LinkitOne (all Arduino?) development. Most other apps crash or lose the connection and cannot reconnect until relaunch. <comment256561> WOW, I am using Serial right now and I think this is how every single piece of software should work. As I only need it for a very specific job and it comes with some free trial days, and I am broke, I won't get the full version... if any of the three conditions were false, I would get it... they deserve it! <comment261484> Screen (or minicom for that matter) is not quite right.  It looks good until you try to run nano or vi.  It can't handle those.  The arrow keys and return key generate garbage.  If there's a setting on screen to fix that, please let me know. <comment282176> Well, once I selected the baud rate for my device, I can't open it again with a different value... The selection window just do not appear and I'm stuck on 9600... <comment282449> @JBernardo, contact us when you have the chance and i'll take a look at the issue for you. <comment297548> Welcome to Ask Different!  Please don't give link-only answers.  We're looking for answers that provide explanations as to why it answers the question as well as why it's the best answer.  Links can change over time and then we'll lose the question-answer context.  See [answer] for info on what makes up a good answer.  - From Review - <comment311906> Already a CoolTerm user, just searching for a "send in HEX" feature brought me back to this thread. CoolTerm is so great and even has this feature included in Menu "Connection  Send String ..." then toggle to HEX for send format! <comment338979> This seems like the start of a good answer, but running it as root feels wrong; other programs don't need that to acess /dev/tty.xxx or /dev/cu.xxx programs, yet `cu` seems to fail with an error about lock files, when run as a user who has access to the port itself.  Perhaps the default install of the program is misconfigured? <comment339487> No? The permissions should be on the device, not the program. I've been pretty lazy researching permissions to be honest. Have you tried "/dev/ttyS0" as in the `screen` solution? Does `cu` cause permissions problems then?