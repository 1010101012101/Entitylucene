How can one start a process and monitor its syslog messages? <body> I would like to start a process and monitor its LOG_DEBUG syslog messages.  I know that I can change the filter of an emalready running/em process with codesyslog -c process/code (and then monitor its messages with codesyslog -w -k Sender process/code), but that requires the process already to be running and furthermore fills up logfiles with messages that I only need temporarily.  Is my only option to change the running configuration with codesyslog -config/code, then later restore the configuration once I have read the messages I want?  Surely there is a "better" way.  <answer162508> Using the tail command in Terminal.app will follow a log file and print out in real time whats being written to just that log file.  precodetail -f /path/to/your/log/file.log /code/pre  If your process has a common name that shows in every log file, like emcom.my.process/em you can tail the file and grep out for that keyword/process.  precodetail -f /var/log/system.log | grep "com.my.process" /code/pre  tail command  <comment190024> I think this rather misses the point of my question.  I'm trying to avoid (a) writing these messages to the filesystem; and (b) making anything more than an ephemeral change to syslog's configuration.  Use of `tail` in this fashion necessitates both. <comment190070> Not completely sure what you're asking for; if it's a temporary solution, you already included it in your question (wouldn't be to complicated to put in a .sh script) if it's a more long-term thing you should configure `/etc/asl.conf` with something like `[= Sender exampleApp] [ Level Error] file exampleApp.log`. In any case if you want to log something, you need to store it somewhere; whether it's a file or "only" printed on your screen, it's using more or less the same resources.