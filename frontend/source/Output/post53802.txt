Waking display from terminal, general waking <body> This is a two part question.  A practical, "how to" question is first, and then I ask for configuration suggestions.  First, I put my displays to sleep at night, and I would like to be able to wake the display remotely.  Is there a command line utility I can use to wake it via SSH?  I know about WakeOnLan, but that seems like overkill.  Second, the whole reason for me wanting to wake my display remotely has to do with how Lion's power savings settings changed.  The Apple infrared remote no longer wakes the display.  This is a huge deal for a machine I originally bought to be a combined desktop/home theater pc, since it defeats half of its purpose.  So, does anybody have any ideas/suggestions what to do about this?  This is open ended, I know.  <answer56757> h2Waking the Display from the Command Line/h2  For waking your display remotely, try running an AppleScript on the command line:  precodeosascript -e 'tell application "System Events" to key code 123' /code/pre  This will simulate pressing the cursor key kbdâ¬…/kbd  and should make Mac OS X 10 believe a user is active on the computer.  This AppleScript is based on the answer, How do I automate a key press in AppleScript?  h2Waking the Display after Waking with the Remote/h2  If you are waking your Mac using the remote and the display is not powering on, try Wake Assist. It is not designed for this situation but might just work.  Wake Assist simulates a mouse click after your Mac wakes up. The mouse is clicked twice in the upper-left of your main display. Wake Assist will do nothing if it detects a user but if the computer wakes and is idle, then the mouse is clicked for you.  <answer72459> You can use   precodepmset schedule wake "01/01/2012 20:00:00" /code/pre  to wake up a sleeping display on an otherwise "awake" Mac. Replace the date/time part with current time of course.  <answer95119> Oh, how I wish I had enough rep to upvote @wuc's answer the 10 times it deserves for this maddeningly frustrating problem (or to at least be able to leave a simple comment with the praise it deserves).   Apple, in its paternalistic wisdom, added a "feature" that intentionally made it harder to wake the display on Lion and Mountain Lion.  This has made life much harder for those desiring to remotely wake the display (using IR remotes or via VNC) to interact with their Macs .  For some reason, this became more pronounced with OS X 10.8.2.  Using codepmset/code was a marvelous workaround for me.   Step 1: Login to the remote machine using codessh myname@192.168.1.2/code (replace with an appropriate username and ip for the remote Mac).  Step 2: Wake up the display using codepmset schedule wake "06/27/2013 04:20:00"/code (with an appropriate future date of your choosing).  <answer126234> wuc wrote:     You can use      codepmset schedule wake "01/01/2012 20:00:00"/code      to wake up a sleeping display on an otherwise "awake" Mac. Replace the date/time part with current time of course.   However, that didn't work for me on a circa 2008 iMac running 10.9.1 or a late 2010 MacBook Air running 10.9.2. I'm not sure if this has something to do with Mavericks' energy management or the hardware, or what.  I was able to get it to work by setting the wake time to be 15 seconds into the future. Occasionally I was able to get it to work with the setting as low as 12 or 13, but not reliably. But there may have been other factors I didn't realize at the time, but 15 worked, so I used 15.  But how do you calculate 15 seconds into the future programmatically?  I used codegdate/code from the GNU Coreutils package (codedate/code in OS X might be able to do this, but if it can, I don't know how, and I already had codegdate/code installed):  [to use codedate/code instead of codegdate/code use alias set_wake_time='date "-v+${OFFSET}S" "+%D %T"']  Here's the script I used:  precode#!/bin/zsh -f  # how many seconds into the future we want to wake the display # 15 seems to work reliably. YMMV. OFFSET=15  # to calculate the time, we need `gdate` alias set_wake_time='/usr/local/bin/gdate --date "+${OFFSET} sec" "+%m/%d/%g %H:%M:%S"'  # this is where we set the wake command # if it doesn't succeed the script will exit immediately /usr/bin/sudo /usr/bin/pmset schedule wake "`set_wake_time`" || exit 1  # if you were not testing this, you'd probably want to end at the # next line. Just remove the leading '#' #exit 0 #######################################################  ### Everything below this line is only needed during testing ###  # this tells the display to sleep # because we can test waking the screen up unless it's asleep pmset displaysleepnow  # for testing purposes: now the script will pause for $OFFSET seconds sleep $OFFSET  # For testing purposes: # after $OFFSET seconds, this sound will play 3 times. # by that time, the display should be awake # I did this to help me know when I had set OFFSET too low  afplay /System/Library/Sounds/Glass.aiff  afplay /System/Library/Sounds/Glass.aiff  afplay /System/Library/Sounds/Glass.aiff  # script is done exit 0 /code/pre  Everything after the '#######################################################' can be removed once you have finished testing.  <answer161527> The easiest way to do this over SSH is to use codecaffeinate  -u/code (available since OS X 10.9 I think) to simulate user activity.   Add the flag code-t 5/code to specify a timeout of 5 seconds (else you'd have to kbdctrl/kbd+kbdc/kbd out of caffeinate, it seems).  <answer196313> Option if you don't want to use gdate:  ul liEnable SSHD (Remote Login) under System Preferences, Sharing/li liEnable 'Wake for network access' under System Preferences, Energy Saver/li /ul  put this code in a file like 'wakeup.sh' in your home folder:  precodeshopt -s expand_aliases #NB: 7 is the waiting interval. Works for me. Increase as needed.  alias myDate='date -v+7S "+%m/%d/%Y %H:%M:%S"' echo MacBook will wake up at: `myDate` echo yourMacPW | sudo -S pmset schedule wake "`myDate`" /code/pre  ul liMake it executable with 'chmod +x wakeup.sh' and enter your password if you like. Otherwise drop the echo and -S. /li /ul  If you want to automate this process to work from a windows machine:  ul liGet PuTTY and a command line WakeOnLan tool (ie Aquila on SourceForge)/li liMake a one line text file containing './wakeup.sh'/li liwrite a batchfile like this:  precode@echo off c: cd "C:\Program Files (x86)\Aquila Technology\WakeOnLAN" :tryAgain wakeonlanc.exe -w -mac 00:00:00:00:00:00 ping 192.168.1.101 -n 1 | find "unreachable" if %ERRORLEVEL% EQU 0 GOTO tryAgain cd C:\putty putty.exe -ssh 192.168.1.101 -l yourUser -pw yourMacPW -m c:\putty\macWake.txt /code/pre/li /ul  Things you need to change: your IP, your MAC address, the word 'unreachable' may not be what you get - you might get 'timed out'. Storing a root password in plain text is of course, not a good idea, but this how to do it completely automatically from Windows to OSX.   <answer237551> Wake: codecaffeinate -u -t 2/code  Sleep: codepmset displaysleepnow/code  <comment65189> The AppleScript thing did not work for me. I get a black image from `screencapture` even after waiting a few minutes. <comment65233> Have you tried any other simulated key presses - maybe the cursor key is not enough? Do you require a password on wake? <comment83173> Worked fine for me on OS X 10.6 <comment148223> `date -jv+15S` will do the trick of calculating the date 15 seconds in the future from now. The `-j` switch prevents `date` from trying to set the system clock. <comment148489> Oh, hey, thanks! <comment205770> there you go a (+) for your answer that no one has been paying attention to. I have so many of those my self, where ppl come ask a question newer to come back to check for a answer. <comment218514> The command `date -jv+15S "+%m/%d/%Y %H:%M:%S"` will put the 15 seconds in the future into the correct format for `pmset`. <comment234225> According to the OSX 10.10.3 pmset manpage, there is a 'pmset relative wake seconds' option as well.  Might be worth investigating as well. <comment259875> This is great, Thank you! <comment291001> Nice solution! Never though of using `caffeinate`for turning the display on, but I guess it works. <comment363540> I kind of agree, and I enjoyed reading your answer, but perhaps consider https://apple.stackexchange.com/help/how-to-answer.