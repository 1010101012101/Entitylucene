How can I verify that an iOS app has or has not been updated? <body> Today I noticed that an app needed to update. Updates is set to be done automatically, but did not update as it normally would.br When I entered the updates list it just started blinking between the Update- and Open-button, and mostly as Open. After reading the question "Can't update apps in iOS App Store; can only Open" I force quitted the App Store app hoping that could do the trick, hoping the app would appear again with the update. When the App Store restarts the update is gone and has still not appeared in the list after an hour.  The app in question was the Facebook Messenger app. I know by looking at the information in App Store that there were in fact a release of the app today.  How can I verify that the app has or has not been updated?   <answer210217> You can check the version of Messenger installed by going here:  codeSettings/code  codeGeneral/code  codeStorage (&amp; iCloud Usage)/code  codeManage Storage/code  codeMessenger/codebr Version will be displayed next to app icon.  And you can check the latest version of Messenger in the App Store by going to its page and check the version.  If they are the same, you are good to go. If not, I suggest closing App Store, restarting your iPhone and then checking App Store. It will probably says codeUpdate/code and you can do so.  <answer210247> Sadly, there's a problem with the concept of "update available" since there is no one server with a truth to which version of an app is live. Even if you check the version on your device and what the "store" says online or in iTunes - there can be short periods (think an hour or two typically) of disconnect where your device doesn't "pull" the update.  Apple maintains a fleet of servers (like a CDN - content delivery network) across multiple geographic regions to handle the update requests of literally millions of devices. So, even if you were to snoop on the traffic between your one device and the server you were selected to connect to by the technology that directs a request for one resource to the actual server that will answer that request you might find that the problem you describe is that the server you connect to doesn't have the "updated" app yet so you no longer see it.  Over a 8 hour time window, I've rarely seen apps get pulled once they are started to propagate, but I do two things to help manage this that require some setup, but make updating far better at avoiding the situation you describe:  ol liSet up MDM so I have profiles that collect installed app details from all my devices. This costs money, so many people won't do this for small deployments./li liSet up OS X Caching Server/li /ol  There are some nice articles on Caching Server but in essence, your local Mac becomes part of Apple's CDN and you can download apps from your own private store. Yes, one update still has to go out to Apple's servers and download the initial asset, but once it's local, all other requests are very much accelerated. It also speeds up iCloud data, Mac App store and anecdotally - I seem to get updates and app updates faster when I'm using caching server than if I were to go on LTE and check an update directly to Apple.  I have a Mac Mini and dedicate an external 1 TB drive to store caching data but even if you had a modest 200 GB cache, most app updates would be much faster.  <comment253771> I could verify that the app was installed by comparing the version of the app in the App Store against the version in Manage Storage. I guess that my App Store got a hick-up and was not able to store that the update was installed. Thanks @behdad <comment253964> This might be relevant for making a workaround for the issue that I've seen. Still the app itself should know about the problem with the "CDN" and handle it well. From a users point of view the App Store app has a bug. Setting up a caching server is a workaround that might help the App Store on different devices work as it should. As I found that it is only the list that is wrong, and not the update, I think I can live with it until Apple fixes the bug. Thanks for the informative answer @bmike