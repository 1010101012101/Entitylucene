Does `dtruss -p PID` list system calls made before dtruss was run? <body> I'm trying to diagnose an intermittently slow command. When I run the command and see it hanging, I press control + t to get the PID, then in another tab, run codediagnose [PID]/code - eg, codediagnose 123/code. I've defined codediagnose/code as a function in my zsh configuration:  precode# See system calls of the process with a given PID function diagnose() { sudo dtruss -cade -p "$1" 2&gt;&amp;1 | tee /tmp/dtruss_output } /code/pre  Obviously, since I'm reacting when I notice a hang, I run codediagnose/code several seconds after the process started. The output lists many system calls, but I wonder whether I'm missing anything important.  Does dtruss list commands retroactively? In other words, does the output of codedtruss -p [PID]/code include system calls made by that process before codedtruss/code was run?  <answer172270> h1No/h1  I've just run an experiment to test this. I wrote and ran this Ruby script:  precodeputs "going to read foo" puts File.read('/tmp/foo.txt')  sleep 5 puts "going to read bar" puts File.read('/tmp/bar.txt')  sleep 5 puts "going to read baz" puts File.read('/tmp/baz.txt') /code/pre  After it started, I ran codediagnose/code on its PID, as described above. I only saw one call to codeopen/code:  precode20309/0x4a7118:     34082      41     34 open("/tmp/baz.txt\0", 0x1000000, 0x1B6)        = 7 0 /code/pre 