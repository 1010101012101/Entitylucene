How to create an Automator service to run a script on all files in a folder <body> I want to create a service using Automator to run a shell script on all files in a folder, say delete all log files. What I have done is   ol liCreated a new service in automator./li liAdded a "Run Shell Script" action. I have change this to 'pwd' for now. /li liSelected "Service receives selected folders"./li liTried to run it, but get a message. "To test this service within Automator, add the "Get Specified Finder Items" action to the beginning of your workflow. Remove or disable the action before running the workflow outside of Automator./li liOK. So I add "Get Specified Finder Items". Added a 'test' directory to the list of items./li /ol  Now, when I run the script, the results window prints out my home directory.  Elsewhere, I have read that I maybe need to add   precodecd "$1" /code/pre  to the beginning of my script. I did that but it still prints my home directory. How do I get this thing to print the directory I have selected in "Get Specified Finder Items?"  Edited to Add  Here is a screen shot of a script that works.  img src="https://i.stack.imgur.com/cop5V.png" alt="test"  Here is a screen shot os a script that doesn't work.   img src="https://i.stack.imgur.com/4yZKc.png" alt="enter image description here"  The usual way I would deal with the "no match found : *.log" error would be to redirect error output to null. Replacing the "rm" line by  precodefind . -name "*.log" -print0 | xargs -0 rm -rf /code/pre  Does work though. This seems more difficult than it should be.  <answer232211> If you're creating a strongService/strong using strongRunShell Script/strong which you want to pass the selected strongFolder(s)/strong to the strongRunShell Script/strong and have additional actions take place in the emscript/em on them, then start with these settings.  strongCreate the Service:/strong  ol liOpen strongAutomator/strong and select strongService/strong or strongFile/strong  strongNew/strong  strongService/strong If strongAutomator/strong is already open./li liSet strongService receives selected/strong to strongfolders/strong and strongin/strong to strongFinder/strong./li liAdd a strongRun Shell Script/strong emAction/em, setting strongShell:/strong to strong/bin/bash/strong and strongPass input:/strong tobr strongas arguments/strong.  This changes the default emcode/em to from codecat/code to:br  precodefor f in "$@" do     echo "$f" done /code/pre/li /ol  Now you can use code$f/code to act on the target strongFolder(s)/strong, e.g. codecd $f/code and now you're in the directory of code$f/code and can add additional emcode/em to act upon the files/folders within code$f/code, etc.  strongUpdate:/strong  Use the following emworking code/em as an example:  precodefor d in "$@"; do     cd "$d"     for f in *.log; do             rm "$f"     done done /code/pre  Within the strongTest/strong and strongTest copy/strong folders there were a number of strong.log/strong files and files with other extensions as well.  When the above code was run it deleted only the strong*.log/strong files within the target folders as show in the images below using two folders or one folder and both files and folders with/without spaces in their names.  hr  img src="https://i.stack.imgur.com/EVis3.png" alt="enter image description here"  hr  img src="https://i.stack.imgur.com/E9Wjj.png" alt="enter image description here"  <comment283831> Thanks. That works. The bit I was missing was "Pass input: as arguments". However, when I add the lines cd $1, rm *.log 2/dev/null fails with an error "Run Shell Script failed - 1 error" and nothing more enlightening. <comment283838> @pheon, Trying to troubleshoot someone's _code_ without a proper [mcve](http://stackoverflow.com/help/mcve) is difficult. Also when using a Run Shell Script, there should be no need to use redirects like `2/dev/null`. If you're trying to `cd` to the Folder passed to the Automator Service you should be using the `for` loop and `cd $f`` as I said, not `cd $1`. Read the mcve and add additional information to your question so as to enable proper troubleshooting, otherwise there is not much I can do.  You also need to add a screenshot of _code_ being used as it's written in your Automator service. <comment284051> I'v updated my answer to show you a working example, have a look and let me know if you have any questions. <comment285186> This fails for me if there are no .log files in the folder. <comment285252> @pheon. Please understand that _code_ provided is example/sample _code_ and is often minimal to show that something can work.  The onus is on the _user_ to write appropriate error checking _code_ and implement it. I'll look at it sometime this weekend and modify/add error checking to the existing example/sample _code_ . <comment285359> I appreciate that it is more complicated than I first thought. I admit I thought it was going to be easy. I was using this as an exercise in learning automator. The frustrating thing is that a bash shell script that works from the terminal does not translate directly into automator and automator does not give useful diagnostic messages when that script fails. Thanks for your help. From here, it is only necessary to help solve the problem if you enjoy the puzzle; I'll find a work around by using the bash script as intended.