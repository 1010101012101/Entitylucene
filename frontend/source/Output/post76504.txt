Installed application using brew, but now it's saying it can't find it? <body> I have installed an application (dsniff) using brew, but when I try to run it I get a "Command not found" error.  I even tried going to the directory it was installed to:  /usr/local/Cellar/dsniff/2.4b1/sbin/  confirming that it was there (it is) and running it, but I get the same error.  Any idea why this would happen?  <answer76509> Check code/usr/local/bin/code and is it in your code$PATH/code? Make sure code/usr/local/bin/code is before code/usr/bin/code.  For a quick (non-permanent) check, execute codeexport PATH=/usr/local/bin:$PATH/code in the current shell and retry to run the command.  <answer76519> As kukoo mentioned, it sounds like you don't have code/usr/local/bin/code in your path. To make it so you can easily run applications that you've installed from brew, run this command:  precodeecho "export PATH=/usr/local/bin:\$PATH" &gt;&gt; $HOME/.bashrc /code/pre  That should set you straight.   As for why it didn't run after being in the same directory, it's probably because of the way you were referencing it. Did you preface the binary name with code.//code?  <answer76597> You can try manually linking the executable codedsniff/code.  precodeln -s /usr/local/Cellar/dsniff/2.4b1/dsniff /usr/local/bin/dsniff /code/pre  This creates a link back to the original file in codeCellar/code, but your shell will be able to find it in its path, because code/usr/local/bin/code is usually in it.  After doing so, you can call codedsniff/code from anywhere.  <answer89774> Dsniff links its programs in to code/usr/local/sbin/code instead of code/usr/local/bin/code. The sbin/ directory is for more sysadmin-oriented stuff and isn't on the path for non-root accounts. Most other Homebrew formulae don't link there.  Dsniff will even warn you about this during the installation.  precode$ brew install dsniff ==&gt; Downloading http://monkey.org/~dugsong/dsniff/beta/dsniff-2.4b1.tar.gz # [ ... ] ==&gt; make install Warning: /usr/local/sbin is not in your PATH You can amend this by altering your ~/.bashrc file ==&gt; Summary /usr/local/Cellar/dsniff/2.4b1: 35 files, 420K, built in 11 seconds /code/pre  So, add code/usr/local/sbin/code to your path in the same place that you add code/usr/local/bin/code, probably in code~/.bashrc/code, and you'll pick up dsniff.  In general, when you run in to things like this, and you're not sure where the files went, you can use codefind/code to search for them. For Homebrew, they'll always be somewhere under /usr/local, if they're anywhere.  precode$ find /usr/local -name dsniff /usr/local/Cellar/dsniff /usr/local/Cellar/dsniff/2.4b1/sbin/dsniff /usr/local/Library/LinkedKegs/dsniff /usr/local/opt/dsniff /usr/local/sbin/dsniff /code/pre  <answer128093> If anyone else is having issues and their code$PATH/code variable is already fine, I'd suggest:  precodebrew unlink dsniff brew link dsniff /code/pre  This worked for me when I had a similar issue.  <comment88770> Ok, I went to `/usr/local/bin` and dsniff is not there.  Could this be my issue? <comment88830> Your formula wasn't linked to `/usr/bin`. Try `brew link dsniff`. Does that work or do you get an error? <comment88831> Threw an error: `Warning: Already linked: /usr/local/Cellar/dsniff/2.4b1 To relink: brew unlink dsniff && brew link dsniff` <comment88832> Does it work if you re-link? Or throw any error messages? Can you run `/usr/local/Cellar/dsniff/2.4b1/dsniff` directly? (Just literally execute this) <comment88834> If run your code snippit directly I get the same error. But if I go to the directory and type ./dsniff it runs... <comment88835> Hrrm, that's still giving me a command not found error <comment88836> What does `echo $PATH` give you? <comment88839> /Users/abe/.rvm/gems/ruby-1.9.3-p286/bin:/Users/abe/.rvm/gems/ruby-1.9.3-p286@global/bin:/Users/abe/.rvm/rubies/ruby-1.9.3-p286/bin:/Users/abe/.rvm/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/usr/local/git/bin <comment88840> Have you restarted your shell in between? Can you confirm that dsniff now is in `/usr/local/bin`? <comment88841> I haven't restarted my shell.  dsniff is in `/usr/local/bin` <comment88859> Well did you **try** restarting? Sorry but you have to help us help you too. <comment88908> What is that supposed to mean?  How am I not helping you?  I provided all information that I thought was important and have answered all of your questions.... <comment88909> When I asked if you had restarted your shell in between, your answer was, no. I thought you'd try restarting the shell and see if that works. Now I hadn't literally asked you to try restarting, but I thought you'd try. So, can you please restart the shell and try again? Maybe at this point it would be good to edit your question and add all the info we've gathered so far about what your `$PATH` is, where your `dsniff` executable is, where you can run it from, and where it fails.