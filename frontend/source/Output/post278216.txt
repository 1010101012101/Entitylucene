save mysql backup to afp network drive fails as cron job <body> For some strange reason I am not able to save a generated mysql backup via mysqldump to an afp network drive as a cron job. If I call the shell script as root user (login via sudo su in terminal), it works just perfectly. So, the script is ok. It must have something to do with the cron job itself.  For doing so, I edited the root's crontab using crontab -e like so:  precode10 12 * * 1-5 sh /var/root/cronjobs/mysql_backup.workdaily.sh /code/pre  This tells the crontab daemon to execute it every work day (monday to friday) at 12.10 PM.  With the same call from terminal it works (as described above).  This is the shell script that I am using for doing it:  precode#!/usr/bin/env sh LOCALMOUNTPOINT="/Volumes/MyDrive"  # check if network drive is mounted if mount | grep "on $LOCALMOUNTPOINT" &gt; /dev/null; then     echo "mounted" else     # not needed the below check, but much more safer in cron job execution:     if ls -lha /Volumes | grep "$LOCALMOUNTPOINT" &gt; /dev/null; then         mount -t afp "afp://username:password@NETWORKDRIVE%28AFP%29._afpovertcp._tcp.local/Subfolder" /Volumes/MyDrive     else         mkdir /Volumes/MyDrive &amp;&amp; mount -t afp "afp://username:password@NETWORKDRIVE%28AFP%29._afpovertcp._tcp.local/Subfolder" /Volumes/MyDrive     fi fi  mysqldump -u root -ppassword --all-databases | gzip -c &gt; $(date "+/Volumes/MyDrive/Dumps/mysql/username/full__%FT%H_%M_%S.sql.gz") /code/pre  The cron job creates a file on network drive with a file size of 20 Bytes. If I gunzip it, it is empty. Normally the database has about 12 MB. So, something is wrong here.  This script is executed via the cron job in lunch time, so no one uses the MacBook at this time (the screen is locked with a logged in user). Standby is fully disabled (only the screen standby is active after 10 minutes).  Does anyone know why this does not work? Any help or suggestions would be great.  <answer278222> Found the solution: The problem was, that the mysqldump command could not be find. I needed to add the absolute path to it code/Applications/MySQLWorkbench.app/Contents/MacOS/mysqldump/code  Thanks to patrix and Allan for that tip.  <comment350089> The shebang is missing, also mysqldump may not be in PATH. If this doesn't help please catch any output created the crib job and add it to the question <comment350090> @patrix sorry, my bad. The shebang issue was just a copy & paste error. I edited the question. And yes, mysqldump is in PATH, because I added the mysql app to PATH variable. But it may can be caused by the sudo shell. So, maybe it is in the users one, but not in the root one's. And there is no error to show. Because the root user has not received ever any mail. Usually you would receive a mail, if a cron job exited with an error code. The strange thing is, there is a file, but without any content. <comment350092> I concur with @patrix about mysqldump not being in PATH.  Expanding on that, keep in mind that when cron is run, it has no PATH environment to begin with so try expanding out the full path for mysqldump. <comment350094> Also, when testing, are you running under the same user as the cronjob does? To catch all output, consider redirecting stdout and stderr to a file in crontab <comment350101> Not related to your problem, but existence of directories is easily tested with `if [[ -d "LOCALMOUNTPOINT" ]]; then` instead of using ls and grep :-) <comment350102> You can even avoid the code duplication by using `[[ -d "LOCALMOUNTPOINT" ]] || mkdir "LOCALMOUNTPOINT" to ensure that the directory exists and then run the mount command <comment350104> @patrix your statement does not work. Does it needs to be sorrounded by an if statement? <comment350105> No, but it only works in bash :-) sh needs [ and ] as far as I know. Or just use bash instead <comment350106> Instead of  `if ls -lha /Volumes...then....else..if` your could use `mkdir -p "$LOCALMOUNTPOINT"` and then mount  the drive. The `p` option in `mkdir` will create the directory if needed or silently fail if it already exists.