Making items added to paths via paths.d show up everywhere under Mavericks <body> I'd like to set the path under OS X Mavericks so that the setting shows up everywhere (e.g., in .apps and in Darwin shells). There's plenty of discussion out there about how to set environment variables generally under OS X. With codeenvironments.plist/code no longer supported by Mavericks, it seems that editing code/etc/launchd.conf/code is the best option for doing so. Unfortunately, launchd.conf apparently does no parameter expansion, so I can't do this:  precodesetenv PATH /Users/kuzzooroo/anaconda/bin:$PATH /code/pre  and I don't want to hardcode my entire path--it seems unmaintainable.  There's another question in AskDifferent specifically about setting the system-wide PATH environment variable in Mavericks. The accepted solution is to use code/etc/paths.d//code, but someone has posted the following comment (which has garnered several upvotes) as a caveat:     Paths in paths.d are added to the path by path_helper, which is run from /etc/profile and /etc/csh.login, but not when for example bash is invoked as a non-interactive or non-login shell or when you run programs in text editors.   Is there a way I can make these environments pull in paths.d (for example, by putting a command to process paths.d into some bash configuration file that is run even for non-interactive shells)?   <answer127099> h2Option 1: just use /etc/launchd.conf/h2  Add a line like  precodesetenv PATH /Users/username/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin /code/pre  to code/etc/launchd.conf/code and restart to apply the changes.  The default path is code/usr/bin:/bin:/usr/sbin:/sbin/code.  code/etc/launchd.conf/code applies to all processes, which includes graphical applications, non-login shells, and programs started by launchd jobs.  Edit code/etc/launchd.conf/code manually if you see that some program or installer has added new paths to code/etc/paths/code or code/etc/paths.d/*/code.  h2Option 2: use a launchd job to set the path during startup/h2  Save this plist as code/Library/LaunchDaemons/setpath.plist/code:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;setpath&lt;/string&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;bash&lt;/string&gt;     &lt;string&gt;-c&lt;/string&gt;     &lt;string&gt;launchctl setenv PATH "$((launchctl getenv PATH|tr : \\n     cat /etc/paths /etc/paths.d/*)|awk '!a[$0]++'|paste -sd: -)"&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  The program should be run the next time you restart. It changes the codePATH/code of the root codelaunchd/code process, which is inherited by the user codelaunchd/code process.  In my opinion it's easier to just edit code/etc/launchd.conf/code though.  h2Option 3: make bash run path_helper even for non-login shells/h2  path_helper is run from code/etc/profile/code, code/etc/zshenv/code, and code/etc/csh.login/code. codezsh/code reads code/etc/zshenv/code even for non-login shells but codebash/code does not read code/etc/profile/code for non-login shells.  This makes codebash/code run codepath_helper/code for interactive non-login shells and for non-interactive non-login shells:  precodeecho 'eval $(/usr/libexec/path_helper -s)'&gt;&gt;~/.bashrc setenv BASH_ENV /etc/profile|sudo tee -a /etc/launchd.conf /code/pre  It does not make codebash/code run codepath_helper/code for non-interactive non-login shells invoked as codesh/code. It also does not affect graphical applications or processes that are not started from shells. 