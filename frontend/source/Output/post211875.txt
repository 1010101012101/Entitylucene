Using Tag how do I cut and parse file paths into tags <body> I'm using Tag and Hazel and I'd like to recursively go through files on our server, obtain their file paths and filenames and parse the whole thing into tags to apply to the file.  Is there a shell script that can do this?  I can use Leap by Ironic Software to remove the trash tags system wide, but this gives me a real start into an automatic tagging system for all my files.  Basically I'm going to take a filename like      /Volumes/media/Clientele/Stock/Purchased Sets/Vintage   Bundle/vintage-bundle-7/offset/30_CIRCULAR_VECTOR_TEXTURES/C03.eps   Truncate the code/Volumes/media/Clientele/Stock//code off the top, and the file extension code.eps/code from the end, then codecut/code the rest into separate tags:  ul liPurchased Sets/li liVintage Bundle /li livintage /li libundle /li li7 /li lioffset /li li30 /li liCIRCULAR/li liVECTOR /li liTEXTURES/li liC03/li /ul  ...remove leading and trailing spaces, change to lowercase, then reapply those tags back to the file with codetag/code.    Additionally, removing tags from the system that are just numbers would be helpful also.  strongUpdate:/strong I need to do this specifically:  Hazel handles the recursion so for every file it finds:  ul liStore the code$working_folder/code and the code$filepath/code/li licodecut/code the code$working_folder/code from the code$filepath/code/li licodecut/code the code$result/code at the code_-. &lt;space&gt; ,/code characters and store into a list or array/li liloop through the list or array and codesed 's/^[ \t]*//;s/[ \t]*$//'/code to remove leading and trailing whitespace (from http://sed.sourceforge.net/sed1line.txt)/li liconvert the array to a comma separated string to feed into codetag -s $comma_separated_tags $filepath/code/li /ul  I just don't know how to put that into a bash script format.  <answer211905> run 'find' from a root directory searching for plain files (-type f?) and -exec a bash script on each file (or perhaps automator).  Looks like you'll need a bit of 'basename' and 'sed'.  Append to an empty string for each input path, and treat that as a list for that file. I believe with 'tag' that you can pass a comma separated list, so you can append one (dealing with first having no comma) or post process using 'sed'. worst case loop over the list string and run 'tag' each time.  'tag' might be smart enough to append tags it doesn't already have what's passed, otherwise the top of the script might want to bail if the file already contains tags.  Not trivial to write, but if you're not familiar with bash, tag and sed it would be a good learning exercise.  <comment256246> well the find and exec operation is being handled by Hazel.  It does the recursive searching.