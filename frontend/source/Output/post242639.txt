File/Folder Bi-directional Sync <body> I need a good bi-directional file/folder sync utility for my Mac running OS X El Capitan 10.11.5. I have tried some options but none seem to perform the tasks exactly that I need. What I need is this:  ol liA utility that will update files and folder structure between my primary Mac HD and an NAS and it has to be bi-directional. The solutions I have tried so far either only update files in one direction or they will not update the folder structure between the two drives./li liAutomation as much as possible. I have reviewed a couple of utilities that claim the ability to do everything I need in #1 but will only work when launched manually./li /ol  The main utilities I have tried so far are Unison, rsync and the built in file merger capability of Mac OS X. Unison has not worked since I started setting it up. There seems to be a conflict between the type of NAS Unison needs to operate and how my NAS is set up. I have connected with afp which Unison does not recognize.  Rsync will update files if I run it twice, in two different directions. The problem with this approach is there is no analysis done by Rsync to determine which file version is the most recent.  The built in capability of Mac OS X to merge files has limited capability that works but it only works for files, not for folders.  I am basically looking for something similar to the offline file option available in Windows.  Thanks  <answer248710> Think about your exact requirements, and check whether they would also allow using a synchronization tool that is not file-oriented. Bittorrent Sync or its open source cousin SyncThing should fit your use case fine, if I imagine all your requirements correctly.  <comment298595> rsync does check which file is most recent <comment298675> what is the process to get that working? in my experience the analysis was done only one way and was based on the modified date of the file. so even if a file was not truly updated, the modified date would cause rsync to assume it was and would overwrite which could in fact cause the most recent file version to be overwritten by an older file version. i certainly don't know enough about rsync so the way i originally tested it may have been incorrect. <comment308255> A note on your unison problems (since, once it works, it should pretty much exactly do what you need, and be very efficient and fast about it): It needs identical unison versions on both sides of the transfer (source: https://alliance.seas.upenn.edu/~bcpierce/wiki/?n=Main.UnisonFAQTroubleshooting), and if you compile it using different compilers on server and client, problems are also possible (source: https://github.com/bcpierce00/unison/issues/15).