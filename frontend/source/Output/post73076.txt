Mac OS X Mountain Lion - DNS resolving uses wrong order on VPN via dial-up connection <body> I am using a MacBook with Mac OS X 10.8.2 and connect to my company's network via VPN. Everything works great when establishing the VPN connection via LAN or WLAN. However, when I use a dial-up connection (Huawei HSDPA USB Stick) host names are not correctly resolved in applications (e.g. Web-Browser). Command line tools like codehost name/code will correctly resolve the IP address, codeping name/code will not resolve.  Using codescutil --dns/code I dumped the DNS configuration when connecting via WLAN vs. dial-up. There is a notable difference in the lookup order:  precodeconnecting using WLAN:  resolver #1   nameserver[0] : 192.168.80.10   nameserver[1] : 192.168.80.24   if_index : 6 (ppp0)   reach    : Reachable,Transient Connection   order    : 100000  resolver #2   nameserver[0] : 192.168.80.10   nameserver[1] : 192.168.80.24   if_index : 6 (ppp0)   reach    : Reachable,Transient Connection   order    : 200000  resolver #3   domain   : local   options  : mdns   timeout  : 5   order    : 300000  resolver #4   domain   : 254.169.in-addr.arpa   options  : mdns   timeout  : 5   order    : 300200  resolver #5   domain   : 8.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300400  resolver #6   domain   : 9.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300600  resolver #7   domain   : a.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300800  resolver #8   domain   : b.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 301000  DNS configuration (for scoped queries)  resolver #1   nameserver[0] : 192.168.1.1   if_index : 4 (en0)   flags    : Scoped   reach    : Reachable,Directly Reachable Address  resolver #2   nameserver[0] : 192.168.80.10   nameserver[1] : 192.168.80.24   if_index : 6 (ppp0)   flags    : Scoped   reach    : Reachable,Transient Connection /code/pre  The ppp0 connection is the VPN connection. As you can see, two servers are connected and they answer correctly on the command line and in applications.  precodeConnecting via UMTS:  resolver #1   nameserver[0] : 139.7.30.126   nameserver[1] : 139.7.30.125   if_index : 6 (ppp0)   reach    : Reachable,Transient Connection   order    : 100000  resolver #2   nameserver[0] : 192.168.80.10   nameserver[1] : 192.168.80.24   if_index : 7 (ppp1)   reach    : Reachable,Transient Connection   order    : 100000  resolver #3   nameserver[0] : 192.168.80.10   nameserver[1] : 192.168.80.24   if_index : 7 (ppp1)   reach    : Reachable,Transient Connection   order    : 200000  resolver #4   domain   : local   options  : mdns   timeout  : 5   order    : 300000  resolver #5   domain   : 254.169.in-addr.arpa   options  : mdns   timeout  : 5   order    : 300200  resolver #6   domain   : 8.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300400  resolver #7   domain   : 9.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300600  resolver #8   domain   : a.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300800  resolver #9   domain   : b.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 301000  DNS configuration (for scoped queries)  resolver #1   nameserver[0] : 192.168.80.10   nameserver[1] : 192.168.80.24   if_index : 7 (ppp1)   flags    : Scoped   reach    : Reachable,Transient Connection  resolver #2   nameserver[0] : 139.7.30.126   nameserver[1] : 139.7.30.125   if_index : 6 (ppp0)   flags    : Scoped   reach    : Reachable,Transient Connection /code/pre  This time, ppp1 is the VPN connection and ppp0 is the UMTS connection. From the response times of the commands (using the non-existing hostname codefoo.bar.local/code) I infer that codeping/code uses the first resolver chain, where as codehost/code uses the scoped query configuration. codeping/code takes 5 seconds to return "Unkown host", codehost/codegets back immediately. I assume ping runs into the 5 second timeout of the mdns resolver.  In order to fix my problem with the broken DNS lookups when dialing in via VPN over modem I need to change the order of the resolvers. So far I have not found a way of doing this.   Any ideas welcome.  <answer79946> Try changing the order of the DNS entries in the Network preference pane:  ol liOpen strongSystem Preferences/strong → strongNetwork/strong./li liSelect your network service in the list on the left./li liUnlock the preference pane using the lock in the bottom-left corner./li liClick strongAdvanced…/strong and choose the strongDNS/strong tab./li liChange the order of the DNS servers by dragging them up/down.  img src="https://i.stack.imgur.com/geHtO.gif" width="230"/li /ol  <answer83931> I have the same problem. I have tried changing the order of responders in my Network prefpane, and it has not been successful.  Here are screenshots of my network configuration.  ul liEthernet Configuration/li liVPN Configuration/li /ul  Also puzzling to me is that the VPN does NOT have my office domain in the search domain list, but the first resolver still specifies my office domain to go over the VPN.  Even more curious: attempting to do codetraceroute support.inresonance.com/code gives "unknown host", but doing codehost support.inresonance.com/code returns the correct IP address.  Suggestions?  h3Without the VPN:/h3  precode resolver #1   search domain[0] : inresonance.com   nameserver[0] : 10.32.123.82   nameserver[1] : 10.32.123.87   nameserver[2] : 10.32.123.82   if_index : 4 (en0)   reach    : Reachable,Directly Reachable Address  resolver #2   domain   : local   options  : mdns   timeout  : 5   order    : 300000  resolver #3   domain   : 254.169.in-addr.arpa   options  : mdns   timeout  : 5   order    : 300200  resolver #4   domain   : 8.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300400  resolver #5   domain   : 9.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300600  resolver #6   domain   : a.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300800  resolver #7   domain   : b.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 301000  resolver #8   domain   : inresonance.com   nameserver[0] : 10.32.123.1  DNS configuration (for scoped queries)  resolver #1   search domain[0] : inresonance.com   nameserver[0] : 10.32.123.82   nameserver[1] : 10.32.123.87   nameserver[2] : 10.32.123.82   if_index : 4 (en0)   flags    : Scoped   reach    : Reachable,Directly Reachable Address  resolver #2   search domain[0] : inresonance.com   nameserver[0] : 10.32.123.82   nameserver[1] : 10.32.123.87   nameserver[2] : 10.32.123.82   if_index : 5 (en1)   flags    : Scoped   reach    : Reachable,Directly Reachable Address /code/pre  h3With the VPN:/h3  precode DNS configuration  resolver #1   search domain[0] : inresonance.com   nameserver[0] : 10.41.220.10   nameserver[1] : 10.41.220.11   if_index : 8 (ppp0)   reach    : Reachable,Transient Connection   order    : 100000  resolver #2   nameserver[0] : 10.32.123.82   nameserver[1] : 10.32.123.87   nameserver[2] : 10.32.123.82   if_index : 4 (en0)   reach    : Reachable,Directly Reachable Address   order    : 200000  resolver #3   domain   : local   options  : mdns   timeout  : 5   order    : 300000  resolver #4   domain   : 254.169.in-addr.arpa   options  : mdns   timeout  : 5   order    : 300200  resolver #5   domain   : 8.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300400  resolver #6   domain   : 9.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300600  resolver #7   domain   : a.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 300800  resolver #8   domain   : b.e.f.ip6.arpa   options  : mdns   timeout  : 5   order    : 301000  resolver #9   domain   : inresonance.com   nameserver[0] : 10.32.123.1  DNS configuration (for scoped queries)  resolver #1   search domain[0] : inresonance.com   nameserver[0] : 10.32.123.82   nameserver[1] : 10.32.123.87   nameserver[2] : 10.32.123.82   if_index : 4 (en0)   flags    : Scoped   reach    : Reachable,Directly Reachable Address  resolver #2   search domain[0] : inresonance.com   nameserver[0] : 10.32.123.82   nameserver[1] : 10.32.123.87   nameserver[2] : 10.32.123.82   if_index : 5 (en1)   flags    : Scoped   reach    : Reachable,Directly Reachable Address  resolver #3   nameserver[0] : 10.41.220.10   nameserver[1] : 10.41.220.11   if_index : 8 (ppp0)   flags    : Scoped   reach    : Reachable,Transient Connection /code/pre  <answer94559> Does not work in Lion / Mountain Lion, due to a bug which causes the local DNS Server beeing always used instead of the DNS server of the remote network even when Split DNS is correnctly setup in the VPN router.  However, if you use a Cisco ASA IPSEC router, you can force the remote DNS Servers to be used whenever you establish a VPN connection:  If using Cisco ASDM, go to  Configuration  Network (Client) Access  Group Policies  (your vpn group for OSX/iPhones)  Advanced  Split Tunneling  There set: DNS Names (uncheck "inherit" and define the internal dns domain names, e.g. myoffice.local) Send All DNS Lookups Throug Tunnel: Set to YES (This is the important setting)  Save it and don't forget to store in the flash for future use.  If you use the IOS command line, set:  precodegroup-policy &lt;your-tunnel-group-name&gt; attributes  split-dns value myoffice.local  split-tunnel-all-dns enable` /code/pre  <answer95708> Send All DNS Lookups Throug Tunnel doesn't help here. VPN is 1st in the order list, but still sometimes the external DNS Server is used by ML to resolve internal domain addresses. Thats really annoying.  <answer96110> I had the same issue for long time, but now I had time to find a solution that works for me. I didn't change the order of the DNS server, but I'm using the DNS server behind the VPN permanently.  ol liConnect via dial-up./li liConnect the VPN connection and copy the DNS server IPs and the search domain from VPN Connection → Advanced → DNS./li liDisconnect the VPN connection./li liPing code&lt;name&gt;/code or code&lt;hostname&gt;/code of your VPN server and write down the IP./li liDisconnect the dial-up connection./li liDuplicate the dial-up connection (e.g. name it "3G for VPN")./li liEnter the IPs and the search domain into the DNS tab of the dial-up connection. They will be stored and used permanently./li liConnect via the new dial-up connection./li liNow you have no access to the nameservers (because they are secured by the VPN) - you have to edit the server address of the VPN connection. Replace the host by the IP./li liConnect via VPN connection and you should be able to use it./li /ol  Note: In general hostnames does not change, but IPs can. So if it's not working someday, do the steps again…  <answer97015> I found a workaround: your VPN DNS will still be ignored, and only 3G-dongle DNS will be used, but just adding your VPN DNS to the list under 3G interface does the trick… The main problem is that 3G connectivity manager overwrites configuration everytime you click connect, and you need connectivity manager to enable Radio on the 3G dongle… so I mixed both solutions in one:  ol liConnect to your VPN and write down your DNS (I have 2 on the list). You can check it in Network Preferences → Advanced → DNS tab. Disconnect VPN. You need to connect to VPN because DNS is assigned dynamically upon connection…/li liConnect to your 3G and do the same: write the DNS on paper. Then disconnect 3G./li liGo to Network Preferences → click on 3G interface → Advanced → DNS Tab, and under DNS table (that typically will be empty as you are not connected) click on '+'. Add all the DNS servers (those from 3G first and then add VPN later). Click OK and Apply./li listrongFrom now on/strong, to connect to 3G, just plug your USB and wait until you have 3G coverage (you will need to open 3G connectivity manager), strongbut do not/strong use the supplied connectivity manager to connect. And if it automatically connects, go to preferences and uncheck that tick. You need that manager strongonly/strong to turn radio strongon/strong in the USB Dongle, nothing else.  If you click on "connect" on your 3G manager, it will overwrite configuration on your 3G interface and you need to repeat step 3 again./li liGo to Network → Preferences and click on the 3G interface. Then click connect. It will connect to your 3G using the configured DNS servers (instead of dynamically received), that include both the "public" DNS and your VPN DNS./li liConnect to your VPN. It will work as expected./li /ol  Just be aware that:  ul liIf your VPN DNS changes, you need to change it manually. This can easily be checked under Network → VPN interface w Advanced → DNS tab since your VPN DNS is still assigned dynamically to the interface (although ignored by OS X)./li liIf your 3G DNS changes (unlikely) you need to change it manually too. If something goes wrong and you cannot navigate you need to go through your 3G connectivity manager, click "Connect" and see what DNS are dynamically assigned… That will require you to go back to step 3 and reconfigure it./li /ul  <answer101827> I had the same problem on my Mac, and after fixing it I have figured out that it was caused by FortiClient (VPN client). Even when FortiClient was disconnected - it's DNS still appeared in the scutil.  The solution for me was:  precodescutil &gt; list ".*DNS" /code/pre  This will show you a list of all DNS configs, that will look something like:  precodesubKey [0] = State:/Network/Global/DNS &lt;br&gt; subKey [1] = State:/Network/MulticastDNS&lt;br&gt; subKey [2] = State:/Network/OpenVPN/DNS&lt;br&gt; subKey [3] = State:/Network/OpenVPN/OldDNS&lt;br&gt; subKey [4] = State:/Network/PrivateDNS&lt;br&gt; subKey [5] = State:/Network/Service/forticlientsslvpn/DNS &lt;br&gt; /code/pre  To check each of them run: (until you find the problematic one)  precode&gt; get key_name &gt; d.show /code/pre  …and to fix it run:  precode&gt; get key_name &gt; d.remove ServerAddresses &gt; set key_name /code/pre  This is how it looked on my machine:  precode&gt; get State:/Network/Service/forticlientsslvpn/DNS  &gt; d.show &lt;dictionary&gt; {   ServerAddresses : &lt;array&gt; {     0 : 192.168.30.6     1 : 192.168.30.15   }   SupplementalMatchDomains : &lt;array&gt; {     0 :   }   SupplementalMatchOrders : &lt;array&gt; {     0 : 100000   } } &gt; d.remove ServerAddresses &gt; d.show &lt;dictionary&gt; {   SupplementalMatchDomains : &lt;array&gt; {     0 :   }   SupplementalMatchOrders : &lt;array&gt; {     0 : 100000   } } &gt; set State:/Network/Service/forticlientsslvpn/DNS &gt; exit /code/pre  <answer106731> The issue is solved for me with OS X Mavericks.  <answer134740> what you said gave me a hint, so I've added the dns ip in the vpn connection to the dns list in the main connection (nothing fancy, just using the graphical interface for Network preferences.) I'm not sure if what you are dealing with is different, but it worked with me.  <answer136023> You can fix this by adjusting the service order of the network connections. Move VPN to the top of the list and the resolver order will follow.  http://support.apple.com/kb/PH14006  <comment113225> Hi Alexander, that sounded like a promising approach. However, I did not had any luck although the order of the dns resolver looked pretty good. Have to check again with our IT. <comment113226> Hi irCristos, same here. The different applications and command line tools behave differently. I assume they use different set of configurations for dns lookup. <comment123588> This does not provide an answer to the question. To critique or request clarification from an author, leave a comment below their post - you can always comment on your own posts, and once you have sufficient reputation you will be able to [comment on any post](http://apple.stackexchange.com/help/privileges/comment). <comment123666> That is a weird comment. The poster didn't mention if he had tried this in his question and it could be relevant and a simple solution to his problem. Hard to tell without using the same setup. <comment123670> As it is worded, it is written as a request for clarification - answers should be written as answers; the comments is the most appropriate place to request for clarification. This answer was in the Low Quality Post review queue, and in my opinion that stock comment seemed the most appropriate. Indeed, rewording this as an answer (and adding detail such as screenshots and a properly-formatted list of instructions) would make this a full and legitimate answer. <comment123764> This is ridiculous. Are you Rainman or what? It was an answer expressed in a passive and humble way (since it is so obvious the person asking the question - who seemed fairly skilled - probably had tried it but just forgot to mention it in the question). And if you had tried my suggestions yourself you would notice that most likely no more steps beyond the steps included (System Preferences - Network) was necessary for someone as proficient as the OP. <comment123769> As I've said, this is simply my opinion. I was not the one who downvoted you by the way. I've edited your answer to include more details about the steps. Feel free to rollback the edit if you believe it was inappropriate. <comment126797> That is a ridiculous argument. Should an answer to complicated programming question be rejected because it does not explain the foundations of OO-programming? I don't understand most of the answers in the section about math, should they be rejected because they don't go through the foundations of transforming integrals!??