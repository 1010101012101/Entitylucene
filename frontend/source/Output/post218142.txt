Accidentally changed owner of /var system folder recursively to myself <body> Long story short, accidentally I ran  precodesudo chown -R myusername /var/ /code/pre  and now my mac won't boot anymore (after entering user password for hdd decryption loading bar is slowly filled and after it gets full, nothing happens). I have access to the hdd via the OS X restore utilities (Cmd+R) on startup and managed to mount my hdd using terminal. What should I do to fix this? Should I codesudo chown -R root /var//code now?  I also tried fixing the disk using Disk Utilities First aid, but that didnt work.  <answer218143> What group is it chowned to? You could try adding yourself to the root group and then doing codesudo chown -R yourusername:root /var/code, then make sure group access is set to whatever right now owner access is at (so if it's coderwx-r-r/code make it coderwx-rwx-r/code)  <answer218146> Since the system isn't bootable (in the normal sense), one easy way forward is to boot to Recovery HD and re-install the OS. There are thousands of files in code/private/var/code that should be owned by coderoot:wheel/code, code_softwareupdate:_softwareupdate/code, codemyusername:staff/code, and hundreds coderoot:admin/code so carpet bombing one ownership across the directories might lead to even worse breakage.  A reinstallation won't delete anything in the user and application folders but it also may or may not work - depending on if it moves aside /private and makes a new one or if it runs the equivalent of codesudo /usr/libexec/repair_packages --repair --standard-pkgs --volume //code which is a way to "repair permissions" on El Capitan if you managed to get things running again. If you have a recent backup, you could always just erase and reinstall from that.  I would try this as a first step to see if your system is salvageable. The coderepair_packages/code tool will run in single user mode, so that might be a nice thing to try after mounting / as read write (the syntax is provided when you boot). That tool used to be something you could run from Disk Utility, but now it's a command line tool for more specialized use apparently.  <comment263706> This might not be feasible. I have about 10k files in /private/var and there are 53 different user/group combinations present on my system. Not everything is root:wheel let alone when you start talking about changing permissions in addition to ownership. <comment265834> So for anyone interested, I ended up doing the following: I chowned the var folder to `root:root`, which made me able to boot the system but I could'nt use any apps except terminal and the error console was spammed with errors. I made a backup of all my data (just to be sure) and then reinstalled the system.