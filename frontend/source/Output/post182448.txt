How do I copy a Mac volume using cp? <body> I have researched this for hours. In Single User Mode, I used:  precodecp -Rpvn /* /Volumes/MyBackup /code/pre  My external USB is mounted on code/Volumes/MyBackup/code  The issue however is that after 24hrs it still has not stopped copying 300GB of data to an external USB drive. I think it is having issues with symbolic links such as the code/Volumes/MacHD/code volume also having a code/Volumes/MacHD/code and code/Volumes/MyBackup/code I am not sure about this however.  How do I copy a Mac volume using codecp/code? Is codecp -Rpvn /* /Volumes//codeMyBackup correct?  <answer182450> Use codersync/code for this purpose since codecp/code cannot faithfully reproduce all the files that exist on OS X. The benefits of codersync/code over codeditto/code and cp are:  ul liinterrupted transfers can restart easily with very little cost. /li lirestarts even resume part way through a large file. /li lifile exclusion and --dry-run allow easy testing and iterative thinning./li /ul  The simplest way to use codersync/code and preserve most things (permissions, symlinks, edit dates, etc) is to use the code-a/code or code--archive/code flag to archive. To see your progress use code-P/code or code--progress/code  Rsync works as:  precodersync options source destination /code/pre  In your case I would recommend the following:  precodersync --archive --verbose --one-file-system --human-readable --progress /from/ /to /code/pre  Or in short:  precodersync -avxhP /from/ /to /code/pre  Mind the lack of trailing slash in the code/to/code location.  emsee comments for more useful flags/em  <answer182452> You forgot to make an exclude-files list, and are likely copying things that can't / shouldn't be copied, including bottomless files like /dev/random.  While cp emcan/em do the job, there are better tools. Rsync is one, Carbon Copy Cloner or SuperDuper is another. To use a kitchen analogy, you are using a knife to open a can. Rsync is a can opener, Carbon Copy Cloner is an electric can opener. I use rsync regularly, but the settings needed to copy a running operating system are sufficiently complex I've never bothered to do it all myself.  precode cp -Rpvn /* /Volumes/MyBackup  /code/pre  It looks like all you want to do is make a backup. Your Mac includes Time Machine expressly for this purpose. Open System Preferences - Time Machine, choose the external disk, turn it on and then leave it alone. It works very well and requires under a minute of your time.  <answer182476> If you want to make a faithful copy of the filesystem contents, avoid using codecp/code.  Instead, use the codeditto(1)/code command, which preserves hard links, file permissions, resource forks, and HFS metadata.  Unlike codecp/code, codeditto/code is meant to preserve as much of that information as possible by default.  It's just a matter of running codesudo ditto isrc/i idest/i/code.  <answer183358> You can create a time Time Machine backup from the command line with codetmutil/code, the Time Machine utility. You can set a destination then order a manual backup.  To set the Time Machine backup volume:     sudo tmutil setdestination /Volumes/MyBackup   Then start the backup:     tmutil startbackup --auto   The code--auto/code flag will try to treat it as an ordinary time scheduled backup.  Once you have your Time Machine backup, you can then re-install OS X on your Mac, then import all of your files from the Time Machine backup.  <comment217202> You use cp like this, but it is not the correct tool for the job. You need rsync for this. <comment217203> Do you have the possibility to run your mac in target disk mode? Or perhaps just pop out the HD? <comment217204> I am unable to do target mode since I dont have a second mac.  I was hoping for a less risky option than taking out the drive. <comment217226> I am unable to access a GUI. All I am able to get working is Single User Mode, so time CCC, superduper and time machine are not options. What settings would you use with rsync? Ideally i would like a bootable copy. I could not get asr to work. <comment217270> rsync is probably your best option here, though I think you can also use `dd` to make a byte for byte copy of your Mac's HDD. <comment217308> You also want the -x flag, to avoid traversing to mounted disks that aren't on the same volume. <comment217320> @ermSO Since you obviously have an external drive, install a new OS on the external and then boot from it. All current Macs can boot from either firewire or USB. You can then make a decent backup of your user files and then repair your internal drive. I usually do a complete erase in these cases, eliminating any residual directory problems. <comment217329> Correct me if I am wrong, but I am pretty sure `cp` was updated to copy file metadata in 10.4. <comment217368> `dd` is the way to go for sector-by-sector backups, which seems like what you're doing here (but be very careful with it, to make sure the thing you're overwriting is actually the thing you want to overwrite). `rsync` is the way to go to do complicated or large copy operations. `cp` is great for individual files, but isn't good for large-scale operations. <comment217370> `dd` will do sector-by-sector copies on the command line, and is a good choice for copying an entire volume onto another entire volume while erasing the whole second volume. <comment217408> It was, but `ditto` is still a better option. <comment217409> Are you sure that you want the `-R` option? That means that if you have symbolic links to a single folder in several places, you will be duplicating content. That might explain the time is taking. If you use [`ditto`](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/ditto.1.html) instead, you'll get what you want with the default settings. <comment217466> @juandesant it's his command, not mine. i wouldn't use cp at all. <comment217467> @cpast dd (or any other block copier) copies your problems as well. If drive A won't boot, and you dd it somewhere else, highly unlikely the new drive will boot either. <comment217468> And `rsync` is the best option. <comment218461> kudo's for bmike for making this post a lot more readable. <comment218525> `-P` is actually equivalent to both `--progress` and `--partial` combined. See the [man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/rsync.1.html). <comment218693> Please don't try to use `dd` in this situation. It won't work right if the source and destination volumes (/devices) aren't *exactly* the same size, and may fail interestingly if the source volume is mounted for write access, and even in the situations where it works it tends to be horribly slow on OS X (using the /dev/rdisk entry instead of /dev/disk helps somewhat, but it still doesn't know better than to copy all of the unused space on the disk). `asr` and `rsync` (with appropriate options) are *much* better options. <comment218694> I'd skip `--compress` (it's only useful for network transfers), and add `-E` (preserve extended attributes and resource forks).