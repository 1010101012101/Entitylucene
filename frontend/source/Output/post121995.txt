Automator: Change to selected directory and run shell script <body> I'm trying to create a context menu command via Automator service. The context menu command will run a shell script to create some default documents in the given directory.   I wrote out the shell script which executes correctly when run from the target directory:  precode#!/bin/bash   touch History.markdown touch Notes.markdown touch Plan.markdown  touch ProjectName.tmproj  cat &lt;&lt;TEXT &gt; ProjectName.tmproj &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;currentDocument&lt;/key&gt;     &lt;string&gt;Notes.markdown&lt;/string&gt;     &lt;key&gt;documents&lt;/key&gt;     &lt;array&gt;         &lt;dict&gt;             &lt;key&gt;filename&lt;/key&gt;             &lt;string&gt;Notes.markdown&lt;/string&gt;             &lt;key&gt;selected&lt;/key&gt;             &lt;true/&gt;         &lt;/dict&gt;         &lt;dict&gt;             &lt;key&gt;filename&lt;/key&gt;             &lt;string&gt;History.markdown&lt;/string&gt;         &lt;/dict&gt;         &lt;dict&gt;             &lt;key&gt;filename&lt;/key&gt;             &lt;string&gt;Plan.markdown&lt;/string&gt;         &lt;/dict&gt;     &lt;/array&gt;     &lt;key&gt;openDocuments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;History.markdown&lt;/string&gt;         &lt;string&gt;Notes.markdown&lt;/string&gt;         &lt;string&gt;Plan.markdown&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;fileHierarchyDrawerWidth&lt;/key&gt;     &lt;integer&gt;200&lt;/integer&gt;     &lt;key&gt;metaData&lt;/key&gt;     &lt;dict/&gt;     &lt;key&gt;showFileHierarchyDrawer&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;windowFrame&lt;/key&gt;     &lt;string&gt;{{113, 95}, {1230, 900}}&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; TEXT /code/pre  I then opened Automator and created a new service. I set the service to receive selected input of codefolders/code in codeFinder/code.  I then added the following to the top of my shell script to received the selected directory as standard input:  precodeFolderPath=$1 $(cd $FolderPath) /code/pre  The variable codeFolderPath/code definitely gets the current directory. I added a codesay $FolderPath/code to the shell script and it says out the entire path when run from the context menu command.   The problem is that when I try to change to the directory in the variable, nothing happens. I put another codesay/code command that spoke the command codepwd/code after the directory change and it says that I'm at my user's root.   Is there something that automator does differently when dealing with shell scripts?  Here's a screen shot of the entire service. img src="https://i.stack.imgur.com/rpInr.png" alt="enter image description here"   I should also mention that I have tried to just concatenate the folder path and the file name that I've tried to create with the codetouch/code command and when I do so it only uses the string name of the file to create:  precodesay "$FilePath/History.markdown" # only says "History dot markdown" /code/pre  Any help would be greatly appreciated!  <answer121999> The problem here is you have the input being passed to codestdin/code. I don't know why that's the default, but you should be able to just change the popup menu in the top right to "as arguments." I did that and added codecd "$1"/code to the top of the script and it worked.  <comment142287> Why do you use `$(cd $FolderPath)` instead of `cd $FolderPath`? <comment142288> I tried `cd $FolderPath` first and it didn't work so I tried forcing the command with `$()` and just didn't pull it out after it still didn't work. <comment142289> You can't *force* a command with `$()`, run it directly in `bash` to see what happens. <comment142291> With some commands you can force it using `$()` as it runs the command within the parens in a subshell and returns the result (though looking back at my command now it wouldn't do anything with the cd command because the navigation's scope is the subshell). Either way, I did run it in bash and it works fine (I built it originally for bash). As a test just now, I wrote the following command which executes successfully when run from a shell: `say $(pwd) FolderPath="/Volumes/Secure/TEMP/" cd $FolderPath say $(pwd)`. The same structure used in automator does not successfully change directory. <comment142293> Sorry, I was running out of room in the last comment. If you create an automator service with just the steps: `  #!/bin/bash  say $(pwd) FolderPath=$1 cd $FolderPath say $(pwd)' The finder will speak the same directory each time. The `cd` doesn't actually change directories. <comment142294> Awesome! Thanks for pointing that out. I switched it to `as arguments` and everything worked as it should. Thanks for the help!