Find/Unrar/Delete Script <body> I'm a PC convert, and quite novice when it comes to shell/bash scripting, but I really want to learn/understand more.  My need: I need to be able to scan a folder, find any .rar files, extract the files in place, and delete the associated .rar afterwards.  Each may also have the .r00, .r01, ... files associated, so those need to be deleted afterwards as well.  Can someone help me figure out (and understand) how to write a script for this?  The more comments, the better.  <answer86643> you could do something like this:  precodefind . -iname '*.rar' | xargs unrar x  find . -iname '*.r*' | xargs rm -f /code/pre  the script works as follows: it searches recursively for rar files in the directory you are in (the dot) it pipes all results to an argument list (xargs) that is passed through to the command 'unrar'  Same in the second line, but now it is passed to remove (rm). The -f flag makes sure that the files are deleted instantly, you won't be asked for your permission. The rm -f  is a powerful command that you should use carefully, so think about what it would remove if you would execute it before you delete it, or just test this by doing:  precodefind . -iname '*.r*' /code/pre  One thing about the unrar command: unrar is not a standard command in Mac OSX (not sure if this is the case in other Linux/Unix distributions), so make sure you have it installed on your machine.  hr  strongNote:/strong There is a fine but important difference between codefind . -iname *.r*/code and codefind . -iname '*.r*'/code relating to the way Unix shells handle wildcards:  ul liIn the first form, wildcards are expanded by the shell (so the shell will look for all files/folders matching code*.r*/code in the current directory and pass these as parameters to codefind/code. This will work ok if there is one file to match anyway but will fail if there are several (because then the call is codefind . -iname foo.rar bar.rar/code but code-iname/code only takes one argument)./li liIn the second form the pattern (without the code''/code) is passed to codefind/code and the wildcard expansion is done by codefind/code (which then tries to match every file it finds)./li /ul  So in general patterns passed to codefind/code should be enclosed in code''/code to produce the desired result.  <answer86644> I assume you only want to scan the current folder (and not all other folders beneath it):  precodefor rarfile in *.rar; do     unrar x "$rarfile" done /code/pre  Key thing is to put the file name into "" when passing it to codeunrar/code to avoid any problems with spaces in the name.  Now if you want to have this as a script you can run, you can do the following  precode cd ~  mkdir .bin   echo 'PATH=$PATH:$HOME/.bin' &gt;&gt; .profile  echo 'export PATH' &gt;&gt; .profile  . ./.profile  nano .bin/extract_all_rars /code/pre  This gives you a simple editor for text files, essential commands are displayed at the bottom. Type  precode #!/bin/bash /code/pre  followed by the code block at the top, save the file and exit. Then (in the shell again) type  precode chmod +x .bin/extract_all_rars /code/pre  to mark it executable (so the shell recognizes it as a command).  Automatic deletion has one caveat: codeunrar/code doesn't return an error status if things go wrong so you may loose your rar files. If this is not an issue, adding  precode rm -f "$rarfile" ${rarfile%%.rar}.r{0..9}{0..9}  /code/pre  after the codeunrar/code in the loop above will do the job. The second parameter is used to create all possible code.r04/code suffixes by first stripping away the suffix (code${rarfile%%.rar}/code) and then iterating from 0 to 9 twice to get all possible combinations (run codeecho foo{0..9}/code in bash to see how it works). As most of these file names do not exist, I've added code-f/code as an option to avoid error messages.  If you are fairly sure that no other files with a code.rXX/code suffix are in the same directory, a simple  precoderm -${rarfile%%.rar}.r?? /code/pre  does the trick as well.  hr  If you don't have coderar/code/codeunrar/code already:  ul liDownload RAROSX 4.2 from rarlab.com/li liIn Finder, open code~/Downloads/code and double click the downloaded file to unpack. A coderar/code folder will be created/li liOpen Terminal and run the following commands  precodecd ~/Downloads/rar sudo install -d rar unrar /usr/local/bin /code/pre  to install the binaries (executables)/li liWe must also make sure that the shell afterwards finds the binaries  precodecd ~ echo 'PATH=$PATH:/usr/local/bin' &gt;&gt; .profile echo 'export PATH' &gt;&gt; .profile . ./.profile /code/pre/li /ul  <answer86842> I use unar, which is a command line version of The Unarchiver.  These also work with paths that contain spaces:  precodefind . \( -name \*.rar -o -name '*.r[0-9][0-9]' \) -print0 | xargs -0 unar find . -name '*.r[a0-9][r0-9]' -exec unar {} \+ find . -name '*.r*' -delete /code/pre  Or if you install Bash 4 and add codeshopt -s globstar/code to code~/.bash_profile/code:  precodeunar **/*.r* shopt -s extglob; printf %s\\n **/*.@(rar|r[0-9][0-9]) rm **/*.r[a0-9][r0-9] /code/pre  <comment100143> Things to read: http://files.fosswire.com/2007/08/fwunixref.pdf, http://www.digilife.be/quickreferences/QRC/The%20One%20Page%20Linux%20Manual.pdf, any bash introduction you can find and man pages for all commands you run into <comment100149> Thank you.  Yes, I'm willing to forgo the risk of accidental deletion if the rar is corrupt.  I could probably just pipe the filenames into a log in as an audit case something does go wrong.  Very concise and well written.  Much appreciated.  I'm learning so much from this! <comment100150> I wish I could accept both answers.  This helps tremendously! <comment100384> Note that programs like unarchiver,app will unrar and remove all the files when you double click on one of them in Finder <comment102079> @patrix: thanks for the Note