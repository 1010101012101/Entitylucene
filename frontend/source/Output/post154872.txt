Panic on boot, need to use single user mode (was: need to rebuild kext cache) <body> I'm getting this at every boot on one Mac:  img src="https://i.stack.imgur.com/W41y1.jpg" alt="Kernel panic messages"  With some searching and asking around I've found that I can get a successful boot if I boot into single-user mode, mount code//code as read/write, and then do  precodetouch /System/Library/Extensions kextcache -f -update-volume / /code/pre  Then press ctrl-D and booting completes. strongUpdate/strong emOn further testing, these commands are not actually necessary-- just booting into single-user mode and then pressing ctrl-D is enough./em Except the next time I reboot I get the same panic and have to repeat the process. How can I figure out what's actually causing this so that I can fix it and have it stay fixed?  Details: 2013 13" rMBP, Mac OS X 10.10 "Yosemite", FileVault enabled.  Update: here's the results of running kextstatus while in single-user mode. If StackExchange makes it awkward to read, you can also find a gist of the same information.  precodeIndex Refs Address            Size       Wired      Name (Version) &lt;Linked Against&gt;     1   52 0xffffff7f80a3e000 0x8c50     0x8c50     com.apple.kpi.bsd (14.0.0)     2    7 0xffffff7f80e04000 0x28c0     0x28c0     com.apple.kpi.dsep (14.0.0)     3   62 0xffffff7f80a03000 0x20500    0x20500    com.apple.kpi.iokit (14.0.0)     4   67 0xffffff7f80a24000 0xbf50     0xbf50     com.apple.kpi.libkern (14.0.0)     5   56 0xffffff7f80a00000 0x2d50     0x2d50     com.apple.kpi.mach (14.0.0)     6   31 0xffffff7f80a30000 0x8420     0x8420     com.apple.kpi.private (14.0.0)     7   35 0xffffff7f80a39000 0x4900     0x4900     com.apple.kpi.unsupported (14.0.0)     8    3 0xffffff7f80e0a000 0x9c000    0x9c000    com.apple.kec.corecrypto (1.0) &lt;7 6 5 4 3 1&gt;     9    0 0xffffff7f80f3e000 0xc000     0xc000     com.apple.kec.pthread (1) &lt;7 6 5 4 1&gt;    10    0 0xffffff7f80f4a000 0x9000     0x9000     com.apple.kec.Libm (1) &lt;4&gt;    11   11 0xffffff7f81414000 0x9000     0x9000     com.apple.iokit.IOACPIFamily (1.4) &lt;7 6 4 3&gt;    12   10 0xffffff7f80b24000 0x2f000    0x2f000    com.apple.iokit.IOPCIFamily (2.9) &lt;7 6 5 4 3&gt;    13    2 0xffffff7f8287f000 0x5f000    0x5f000    com.apple.driver.AppleACPIPlatform (3.1) &lt;12 11 7 6 5 4 3 1&gt;    14    1 0xffffff7f81127000 0xb000     0xb000     com.apple.driver.AppleFDEKeyStore (28.30) &lt;8 7 6 5 4 3 1&gt;    15    0 0xffffff7f8140d000 0x7000     0x7000     com.apple.iokit.IOReportFamily (31) &lt;5 4 3&gt;    16   10 0xffffff7f80a47000 0x26000    0x26000    com.apple.iokit.IOStorageFamily (2.0) &lt;7 6 5 4 3 1&gt;    17    0 0xffffff7f8149a000 0x19000    0x19000    com.apple.driver.DiskImages (389.1) &lt;16 7 6 5 4 3 1&gt;    18    1 0xffffff7f82271000 0xf000     0xf000     com.apple.driver.AppleCredentialManager (1.0) &lt;7 5 4 3 1&gt;    19    2 0xffffff7f80f0b000 0xd000     0xd000     com.apple.driver.AppleMobileFileIntegrity (1.0.5) &lt;7 6 5 4 3 2 1&gt;    20    0 0xffffff7f82280000 0x23000    0x23000    com.apple.driver.AppleKeyStore (2) &lt;19 18 8 7 6 5 4 3 1&gt;    21    0 0xffffff7f80e07000 0x2000     0x2000     com.apple.security.TMSafetyNet (8) &lt;7 6 5 4 2 1&gt;    22    2 0xffffff7f80f18000 0x5000     0x5000     com.apple.kext.AppleMatch (1.0.0d1) &lt;4 1&gt;    23    1 0xffffff7f80f1d000 0x17000    0x17000    com.apple.security.sandbox (300.0) &lt;22 19 7 6 5 4 3 2 1&gt;    24    0 0xffffff7f80f34000 0x9000     0x9000     com.apple.security.quarantine (3) &lt;23 22 7 6 5 4 2 1&gt;    25    0 0xffffff7f828f5000 0x8000     0x8000     com.apple.nke.applicationfirewall (161) &lt;7 6 5 4 3 1&gt;    26    0 0xffffff7f82852000 0x3000     0x3000     com.apple.driver.AppleAPIC (1.7) &lt;4 3&gt;    27    2 0xffffff7f8139a000 0x4000     0x4000     com.apple.iokit.IOSMBusFamily (1.1) &lt;5 4 3&gt;    28    0 0xffffff7f828e4000 0x7000     0x7000     com.apple.driver.AppleACPIEC (3.1) &lt;27 13 11 5 4 3&gt;    29    0 0xffffff7f82184000 0x4000     0x4000     com.apple.driver.AppleSMBIOS (2.1) &lt;7 4 3&gt;    30    0 0xffffff7f824e7000 0x3000     0x3000     com.apple.driver.AppleHPET (1.8) &lt;11 7 5 4 3&gt;    31    0 0xffffff7f821b2000 0x8000     0x8000     com.apple.driver.AppleRTC (2.0) &lt;11 5 4 3 1&gt;    32    7 0xffffff7f81132000 0x76000    0x76000    com.apple.iokit.IOHIDFamily (2.0.0) &lt;14 7 6 5 4 3 2 1&gt;    33    0 0xffffff7f828ee000 0x4000     0x4000     com.apple.driver.AppleACPIButtons (3.1) &lt;32 13 11 7 6 5 4 3 1&gt;    34    1 0xffffff7f8277a000 0x5000     0x5000     com.apple.driver.AppleEFIRuntime (2.0) &lt;7 6 5 4 3&gt;    35    0 0xffffff7f8218a000 0x8000     0x8000     com.apple.driver.AppleSmartBatteryManager (161.0.0) &lt;27 11 5 4 3 1&gt;    36    0 0xffffff7f8277f000 0xb000     0xb000     com.apple.driver.AppleEFINVRAM (2.0) &lt;34 7 6 5 4 3 1&gt;    37    0 0xffffff7f822e4000 0x9000     0x9000     com.apple.driver.AppleIntelLpssI2C (2.0.45) &lt;12 11 7 5 4 3&gt;    38   10 0xffffff7f8109f000 0x65000    0x65000    com.apple.iokit.IOUSBFamily (705.4.14) &lt;12 7 5 4 3 1&gt;    39    0 0xffffff7f811d8000 0x20000    0x20000    com.apple.driver.AppleUSBXHCI (705.4.14) &lt;38 12 7 5 4 3 1&gt;    40    0 0xffffff7f822bc000 0x8000     0x8000     com.apple.driver.AppleIntelLpssDmac (2.0.45) &lt;12 11 5 4 3&gt;    41    0 0xffffff7f822c4000 0xa000     0xa000     com.apple.driver.AppleIntelLpssGspi (2.0.45) &lt;12 11 7 5 4 3&gt;    42    3 0xffffff7f81060000 0x2c000    0x2c000    com.apple.iokit.IONetworkingFamily (3.2) &lt;7 6 5 4 3 1&gt;    43    1 0xffffff7f816b9000 0x7000     0x7000     com.apple.driver.mDNSOffloadUserClient (1.0.1b8) &lt;42 4 3 1&gt;    44    1 0xffffff7f816c0000 0xab000    0xab000    com.apple.iokit.IO80211Family (700.52) &lt;42 8 7 6 5 4 3 1&gt;    45    0 0xffffff7f81773000 0x5d7000   0x5d7000   com.apple.driver.AirPort.Brcm4360 (900.19.8) &lt;44 43 42 12 7 6 5 4 3 1&gt;    46    4 0xffffff7f8128c000 0xdd000    0xdd000    com.apple.iokit.IOThunderboltFamily (4.2.1) &lt;5 4 3 1&gt;    47    0 0xffffff7f820a0000 0x1b000    0x1b000    com.apple.driver.AppleThunderboltNHI (3.1.7) &lt;46 12 11 5 4 3 1&gt;    48    2 0xffffff7f8166e000 0x16000    0x16000    com.apple.iokit.IOAHCIFamily (2.7.0) &lt;5 4 3 1&gt;    49    0 0xffffff7f82857000 0x1b000    0x1b000    com.apple.driver.AppleAHCIPort (3.0.7) &lt;48 12 5 4 3 1&gt;    50    0 0xffffff7f81694000 0x18000    0x18000    com.apple.iokit.IOAHCIBlockStorage (2.6.5) &lt;48 16 6 5 4 3 1&gt;    51    0 0xffffff7f8208e000 0x5000     0x5000     com.apple.driver.AppleThunderboltPCIDownAdapter (2.0.2) &lt;46 12 5 4 3 1&gt;    52    1 0xffffff7f820e2000 0xf000     0xf000     com.apple.driver.AppleThunderboltDPAdapterFamily (4.0.6) &lt;46 11 5 4 3 1&gt;    53    0 0xffffff7f8210c000 0x6000     0x6000     com.apple.driver.AppleThunderboltDPInAdapter (4.0.6) &lt;52 46 5 4 3 1&gt;    54    0 0xffffff7f81f8d000 0x3000     0x3000     com.apple.driver.XsanFilter (404) &lt;16 5 4 3 1&gt;    55    0 0xffffff7f81239000 0x1b000    0x1b000    com.apple.driver.AppleUSBHub (705.4.1) &lt;38 5 4 3 1&gt;    56    0 0xffffff7f81ec0000 0xa000     0xa000     com.apple.BootCache (35) &lt;7 6 5 4 3 1&gt;    57    0 0xffffff7f8276b000 0x5000     0x5000     com.apple.AppleFSCompression.AppleFSCompressionTypeZlib (1.0.0d1) &lt;6 4 3 2 1&gt;    58    0 0xffffff7f82772000 0x3000     0x3000     com.apple.AppleFSCompression.AppleFSCompressionTypeDataless (1.0.0d1) &lt;7 6 4 3 2 1&gt;    59    1 0xffffff7f81dc2000 0xde000    0xde000    com.apple.driver.CoreStorage (471) &lt;16 7 6 5 4 3 1&gt;    60    0 0xffffff7f82776000 0x2000     0x2000     com.apple.driver.AppleFileSystemDriver (3.0.1) &lt;16 4 3&gt;    61    0 0xffffff7f81ea6000 0x16000    0x16000    com.apple.driver.CoreStorageFsck (471) &lt;59 16 7 6 5 4 3 1&gt;    62    1 0xffffff7f811ce000 0xa000     0xa000     com.apple.driver.AppleUSBComposite (705.4.9) &lt;38 4 3 1&gt;    63    0 0xffffff7f81232000 0x7000     0x7000     com.apple.driver.AppleUSBMergeNub (705.4.0) &lt;62 38 4 3 1&gt;    64    4 0xffffff7f80ae2000 0x2b000    0x2b000    com.apple.iokit.IOSCSIArchitectureModelFamily (3.7.0) &lt;5 4 3 1&gt;    65    1 0xffffff7f81110000 0x11000    0x11000    com.apple.iokit.IOUSBMassStorageClass (3.7.0) &lt;64 38 16 5 4 3 1&gt;    66    1 0xffffff7f80f83000 0x15000    0x15000    com.apple.iokit.IOSCSIBlockCommandsDevice (3.7.0) &lt;64 16 5 4 3 1&gt;    67    0 0xffffff7f8215e000 0x8000     0x8000     com.apple.driver.AppleUSBCardReader (3.5.0) &lt;66 65 64 38 16 5 4 3 1&gt;    68    0 0xffffff7f813b9000 0x7000     0x7000     com.apple.iokit.SCSITaskUserClient (3.7.0) &lt;64 16 5 4 3 1&gt;    69    3 0xffffff7f811c5000 0x9000     0x9000     com.apple.iokit.IOUSBHIDDriver (705.4.0) &lt;38 32 5 4 3 1&gt;    70    0 0xffffff7f81fc1000 0x4000     0x4000     com.apple.driver.AppleUSBTCKeyboard (240.2) &lt;69 38 32 7 6 5 4 3 1&gt;    71    0 0xffffff7f81fbd000 0x2000     0x2000     com.apple.driver.AppleUSBTCKeyEventDriver (240.2) &lt;32 5 4 3&gt;    72    0 0xffffff7f81fcc000 0x13000    0x13000    com.apple.driver.AppleUSBMultitouch (245.2) &lt;69 38 32 6 5 4 3 1&gt;    73    0 0xffffff7f81fc7000 0x3000     0x3000     com.apple.driver.AppleUSBTCButtons (240.2) &lt;69 38 32 7 6 5 4 3 1&gt; /code/pre  Update #2: In the interest of clarity and completeness,  ul liThis Mac never ran any pre-release builds of Yosemite. It was on 10.9.5 until Yosemite was installed./li liThe problem began immediately when Yosemite was installed (I had to use the trick above to complete the install)./li liThe SSD is the stock model from Apple, and I have never installed a TRIM enabler for it./li /ul  Update #3: Kernel panic log with requested nvram boot args also available in possibly easier to read format at github:  precodeAnonymous UUID:       936245CB-C37F-6300-8568-D67DB990D759  Wed Nov  5 14:16:23 2014  *** Panic Report *** panic(cpu 3 caller 0xffffff801c61e80a): Kernel trap at 0xffffff801c30e11b, type 14=page fault, registers: CR0: 0x000000008001003b, CR2: 0xffffff82068b4000, CR3: 0x000000001f225000, CR4: 0x00000000001626e0 RAX: 0x0000000000000000, RBX: 0xffffff82068b3f48, RCX: 0x0000000076fdd000, RDX: 0x0000000000000000 RSP: 0xffffff82068b3e98, RBP: 0xffffff82068b3ed0, RSI: 0x00000003b7ee8080, RDI: 0xffffff82068b4000 R8:  0x0000000000000000, R9:  0xffffff82069c5000, R10: 0xffffff80202c8f00, R11: 0x0000000d273b7a85 R12: 0x000000000000000c, R13: 0x0000000000000000, R14: 0xffffff803b7ee808, R15: 0xffffff82068b3ea0 RFL: 0x0000000000010202, RIP: 0xffffff801c30e11b, CS:  0x0000000000000008, SS:  0x0000000000000010 Fault CR2: 0xffffff82068b4000, Error code: 0x0000000000000002, Fault CPU: 0x3  Backtrace (CPU 3), Frame : Return Address 0xffffff82068b3b40 : 0xffffff801c53a811 mach_kernel : _panic + 0xd1 0xffffff82068b3bc0 : 0xffffff801c61e80a mach_kernel : _kernel_trap + 0x84a 0xffffff82068b3d80 : 0xffffff801c63a443 mach_kernel : _return_from_trap + 0xe3 0xffffff82068b3da0 : 0xffffff801c30e11b  0xffffff82068b3ed0 : 0xffffff801c97d684 mach_kernel : _NodesAreContiguous + 0x1794 0xffffff82068b3f80 : 0x0   BSD process name corresponding to current thread: kernel_task Boot args: -v keepsyms=y  Mac OS version: 14A389  Kernel version: Darwin Kernel Version 14.0.0: Fri Sep 19 00:26:44 PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 Kernel UUID: 89E10306-BC78-3A3B-955C-7C4922577E61 Kernel slide:     0x000000001c200000 Kernel text base: 0xffffff801c400000 __HIB  text base: 0xffffff801c300000 System model name: MacBookPro11,1 (Mac-189A3D4F975D5FFC)  System uptime in nanoseconds: 2061441990 last loaded kext at 1497836320: com.apple.driver.CoreStorageFsck    471 (addr 0xffffff7f9e041000, size 106496) loaded kexts: com.apple.driver.CoreStorageFsck    471 com.apple.driver.AppleFileSystemDriver  3.0.1 com.apple.AppleFSCompression.AppleFSCompressionTypeDataless 1.0.0d1 com.apple.AppleFSCompression.AppleFSCompressionTypeZlib 1.0.0d1 com.apple.BootCache 35 com.apple.driver.AppleUSBHub    705.4.1 com.apple.driver.XsanFilter 404 com.apple.iokit.IOAHCIBlockStorage  2.6.5 com.apple.driver.AppleAHCIPort  3.0.7 com.apple.driver.AirPort.Brcm4360   900.19.8 com.apple.driver.AppleUSBXHCI   705.4.14 com.apple.driver.AppleSmartBatteryManager   161.0.0 com.apple.driver.AppleACPIButtons   3.1 com.apple.driver.AppleRTC   2.0 com.apple.driver.AppleHPET  1.8 com.apple.driver.AppleSMBIOS    2.1 com.apple.driver.AppleACPIEC    3.1 com.apple.driver.AppleAPIC  1.7 com.apple.nke.applicationfirewall   161 com.apple.security.quarantine   3 com.apple.security.TMSafetyNet  8 com.apple.driver.CoreStorage    471 com.apple.driver.AppleThunderboltDPInAdapter    4.0.6 com.apple.driver.AppleThunderboltDPAdapterFamily    4.0.6 com.apple.driver.AppleThunderboltPCIDownAdapter 2.0.2 com.apple.iokit.IOAHCIFamily    2.7.0 com.apple.driver.AppleThunderboltNHI    3.1.7 com.apple.iokit.IOThunderboltFamily 4.2.1 com.apple.iokit.IO80211Family   700.52 com.apple.driver.mDNSOffloadUserClient  1.0.1b8 com.apple.iokit.IONetworkingFamily  3.2 com.apple.driver.AppleIntelLpssGspi 2.0.45 com.apple.driver.AppleIntelLpssDmac 2.0.45 com.apple.iokit.IOUSBFamily 705.4.14 com.apple.driver.AppleIntelLpssI2C  2.0.45 com.apple.driver.AppleEFINVRAM  2.0 com.apple.driver.AppleEFIRuntime    2.0 com.apple.iokit.IOHIDFamily 2.0.0 com.apple.iokit.IOSMBusFamily   1.1 com.apple.security.sandbox  300.0 com.apple.kext.AppleMatch   1.0.0d1 com.apple.driver.AppleKeyStore  2 com.apple.driver.AppleMobileFileIntegrity   1.0.5 com.apple.driver.AppleCredentialManager 1.0 com.apple.driver.DiskImages 389.1 com.apple.iokit.IOStorageFamily 2.0 com.apple.iokit.IOReportFamily  31 com.apple.driver.AppleFDEKeyStore   28.30 com.apple.driver.AppleACPIPlatform  3.1 com.apple.iokit.IOPCIFamily 2.9 com.apple.iokit.IOACPIFamily    1.4 com.apple.kec.corecrypto    1.0 com.apple.kec.Libm  1 com.apple.kec.pthread   1 /code/pre  In the event that anyone from Apple is reading this, check out rdar://18886126.  To answer some questions that have come up:  ul liThe disk has never been partitioned, whether for different versions of OS X or for Boot Camp./li liThe previous Mavericks installation was upgraded in-place./li liNo flash drives, RAID arrays, or other external devices were used for the upgrade. It was an in-place upgrade via the app store./li liThe comment about "I had to use the trick above..." refers to rebuilding the kext cache as described above. I got a panic on the first boot after the installer finished, and couldn't get the Mac to finish booting without taking those steps./li liFile Vault 2 was enabled for Mavericks, and it has always seemed to be working normally./li liWhen I hold "option" down at startup, the only disk presented is my main drive. /li liIf I hold cmd-R at startup, I boot into recovery mode. This takes me to "OS X Utilities" with restore, reinstall, etc options but no message about recovery via internet./li liI've uploaded the results of diskutil list and diskutil activity (this question is getting ridiculously long already). There is no code/var/log/fsck_cs.log/code./li /ul  <answer155259> This should be either a kernel extension issue or bad memory.   If you have replaced the RAM in this machine restore it to Apple Factory RAM and see if the issue persists. Alternatively if you are using factory RAM (or third party and don't have original or suspected good RAM) and have more than one SIMM try removing one or more of them to determine if one or more of them has gone bad. Or Try new or known good memory.   More than likely though its a bad kext. I'd recommend a clean install and seeing if the problem persists. If it does you have bad memory or a logic board issue.   <answer157711> I encountered the same problem after updating to 10.10.1.   When I was booting through single user mode I noticed that fsck was reporting that the root file system didn't have journaling enabled.  After booting into OS X Recovery and enabling journaling on the volume in Disk Utility the kernel panics stopped.  I suspect that your problem will be solved by this as well as my panic seems to have the same callstack:  precode0xffffff875d5f3b40 : 0xffffff801573a811 mach_kernel : _panic + 0xd1 0xffffff875d5f3bc0 : 0xffffff801581e80a mach_kernel : _kernel_trap + 0x84a 0xffffff875d5f3d80 : 0xffffff801583a443 mach_kernel : _return_from_trap + 0xe3 0xffffff875d5f3da0 : 0xffffff801550e11b  0xffffff875d5f3ed0 : 0xffffff8015b7d684 mach_kernel : _NodesAreContiguous + 0x1794 0xffffff875d5f3f80 : 0x0  /code/pre  <comment182206> Pressing ctrl-d in Single User mode boots you into Safe Mode, in which all third-party kernel extensions are disabled. Given that the system is stable in that environment, I strongly suspect that you have a rogue kernel extension. While still in Single User Mode, save the output of the `kextstat` command with `kextstat  ~/Desktop/kexts.txt` (or wherever else you like). After exiting into Safe Boot and gaining access to a functioning system, please post the results. <comment182208> @DocG. I agree and have deleted my comment. I like yours better anyway :) <comment182218> @DocG. Thanks, I didn't realize I was in safe mode. Updated the question with that info <comment182233> The reason you didn't realize you were in Safe Mode is... you weren't. You may care to un-update. Apparently I've reverted to working with OS X 10.2 and rebooting from SU mode with `rc.common` and `rc.init`. Moreover, I neglected to mention I'd like to see the loaded .kexts list which is included with a kernel panic log. Also, if you care to, the command `sudo nvram boot-args="-v keepsyms=y"` will restart into verbose mode and write more data to the Kernel Panic logs. (To revert, `sudo nvram boot-args=""`)  <comment182241> @DocG. Added a panic log, let me know if that's not the one you meant. <comment182271> Well, I don't see any third-party extensions loaded, which I thought I would--they're the usual suspects. I do see a repetition in that both the panic log you posted and the photo of your screen in your original post indicate the same cause, that being exception vector 14 [Page Fault] with, in each case, the trigger being error 0x00000002, indicating a write to a non-present page. The important question has now become this: In your earlier panic logs, is the last loaded kext also given as com.apple.driver.CoreStorageFsck? <comment182277> Yes, they all show the same last kext loaded. Given the nature of the error, it may be worth mentioning that Disk Utility seems to think everything is fine. <comment182635> As far as I know the RAM in this Mac is not user upgradeable. In any case it has never been touched. Wouldn't a bad logic board issue be likely to manifest itself at other times, instead of solely when booting? <comment184937> I just updated to Yosemite from Mountain Lion and have exactly the same problem. I have to reboot it to single user mode (hold down shift key until apple logo appears). Then reboot again into and it comes up fine until a subsequent reboot it goes into the same boot crash loop. I think its a OS-X bug that was introduced in the Yosemite release. My system was working perfectly before this updated. <comment185912> Thanks, this was the problem. I don't know how or why journaling was disabled, but I enabled it and now the Mac boots normally. Thanks! <comment192833> Thank you both. FYI I used parts of the question and answer as examples in a topic in MacRumors Forums: [Getting more from kernel panics with keepsyms (address to symbol translation)](http://forums.macrumors.com/showthread.php?t=1834117) <comment312896> "how or why journaling was disabled" – for what it's worth: on the few occasions when I encountered that unexpected change, at least some of the cases involved a disk that was probably failing, or in a pre-fail state.