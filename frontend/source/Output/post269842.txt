How to debug AppleScript error: "Expected “*)” but found end of script." <body> I am going mad trying to fix the following error in my AppleScript code:  img src="https://i.stack.imgur.com/6wv4D.png" alt="enter image description here"  What this error means is that I have opened a comment somewhere in the code with a code(*/code but I have forgot to close it with a code*)/code.  The code contains over 4000 lines and hundreds of comments. I have looked through the code for hours trying to find this missing closure but I cannot find it.  Is there some method or application that can inform me of the exact line of the code that is responsible for the error?  <answer269843> There's a syntax highlighting package for AppleScript for the text editor Atom. It works better than the one provided with Script Editor, as it will correctly identify multiline comments, even if the script itself doesn't compile:  img src="https://i.stack.imgur.com/hvkF0.png" alt="enter image description here"  From there, it should be easy to identify the missing code*)/code.  <answer269911> Update:  The reason why I could not find an instance of a code(*/code without a corresponding code*)/code is because every instance of code(*/code strongdoes in fact have/strong a corresponding code*)/code. This wasn't the cause of the error, despite the misleading error message that claimed that it was.  The following comment was responsible for the error:  precode    (*           "This is the text that I want to display                 *) /code/pre  You cannot put an odd number of double quotation marks in an AppleScript comment, apparently. That is to say, if you open a quote, you must close the quote.  I have no idea why this is. It's a emcomment/em, for Pete's sake. Why does AppleScript care if I forget to close a double quotation mark in a emcomment/em?  Also, this requirement is not mentioned in the AppleScript Language Guide - Comments.  If you are curious, I just tested it, and you are allowed to put a single quotation mark in a comment without closing it. For example,  code(* 'This is the text that I want to display *)/code  produces no error.  hr  Anyway, to answer my original question:     Is there some method or application that can inform me of the exact line of the code that is responsible for the error?   I managed to think of a method heuristically. It's crazy basic, and to many people it is probably obvious, but it never occurred to me as I was reading line after line for hours, looking for the missing code*)/code.  Using the following method, I found the exact line of code responsible for the error emin under 5 minutes/em:  ol liCreate a new, blank AppleScript file./li liCopy one half of your code to the new file.  ol liIf this code produces an error, then delete one half of this code. Compile the code.  ol liIf this code still produces an error, then delete one half of this code. Compile the code./li liIf this code no longer produces an error, then hit the Undo button and delete the other half of the code. Compile the code./li /ol/li liIf this code does not produce an error, then hit the Undo button. This time, copy the other half of the original code (that is, copy the half that you did not copy the first time)./li /ol/li /ol  You get the idea. You are basically halving the code (by trial and error) until you can isolate the error down to a single line of code. There must be a technical term for this method, but I don't know the term.  <comment339026> it will also give that error if you have a -- line as a comment within the (* *) block & not separated by a line break. <comment339060> To clarify what Tetsujin said, you cannot have an **--end-of-line comment** on the same line as the **closing *) block comment** and if this is the cause of your error you can find it by copying and pasting the AppleScript _code_ into a text editor that supports `grep`ing a regular expression and then search for this string `.*--.*\*\)` as the RegEx. I use [TextWrangler](http://www.barebones.com/products/TextWrangler/) for operations such as this. <comment339061> See [AppleScript Language Guide - Comments](https://developer.apple.com/library/content/documentation/AppleScript/Conceptual/AppleScriptLangGuide/conceptual/ASLR_lexical_conventions.html#//apple_ref/doc/uid/TP40000983-CH214-SW8) for an example of how you can use comments. <comment339113> Hi, I've downloaded Atom and I've installed the language-applescript package, but I don't understand how to actually run the package? <comment339114> For me, it automatically applied when I opened an existing AppleScript document. <comment339117> I opened an existing AppleScript document, and it works for me now. But how does this method make the process of finding the missing `*)` any easier? It's not like it tells me which line contains the error, correct? <comment339118> No, you still have to go through the document yourself, but the syntax highlighting will really help you spot the mistake. <comment339120> @user3439894 I downloaded TextWrangler and copied my AppleScript code into TextWrangler. So, I should hit cmd + F, then paste the string that you provided into the "Find" field, then click the checkbox for "Grep", and finally click the "Find" button. I'm not sure what you mean by _"as the RegEx."_ Is there something that I am missing? I ask because I just added an --end-of-line comment on the same line as a closing *) block comment, but the "Find" function still does not find any instances. <comment339126> I have no problem finding the defined RegEx, which stands for [Regular Expression](https://en.wikipedia.org/wiki/Regular_expression), when it's present. What version of OS X/mac OS and TextWrangler are you using? <comment339129> My apologies. The "Find" feature of TextWrangler does in fact work correctly for me. I've learned that my code does not have one instance of an --end-of-line comment on the same line as a closing *) block comment. But I thank you and Tetsujin for informing me that this mistake would also produce the error in the title of my question. I still haven't found the line of the code that is responsible for the error, even though I'm now using the method provided by Glorfindel. I'll keep looking... <comment339132> If you want to archive a copy of the code and upload it to [http://www.tinyupload.com](http://www.tinyupload.com) and then provide the download URL I'll find where the issue is. <comment339145> @user3439894 Thank you for the offer. I've finally found the problematic line. Please see my answer below. <comment339150> You ultimately did exactly what I would have done had your uploaded the code. I thought about telling you about the _Half-Split Method of Troubleshooting_, commonly know as divide and conquer approach, but I could have found the cause of the error message faster then explaining what to do. :) <comment339165> Ah, nice. Thanks for sharing the term. Can you offer any theory/speculation as to why the AppleScript language was made to not run if one forgets to close a double quotation mark within a comment? Because requiring a closing double quotation mark in a _comment_ seems nonsensical to me. <comment339169> You'd have to as Apple about that. The Script Editor is somewhat lame compared to the IDE used by other Languages.