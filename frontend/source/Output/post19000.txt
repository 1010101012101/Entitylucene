Does "Secure Empty Trash" securely delete the hidden version files for documents in the Trash in OS X Lion? <body> The new Versions feature in Lion creates hidden files that store old versions of the document you're working on in case you want to revert back to some older version of the document. If I drag a document to the Trash, then select Secure Empty Trash from the Finder menu, do the hidden version files get securely deleted along with the document?  <answer19006> I just tested this out, and it appears that the older files do indeed get deleted. It did not matter if I chose Secure Empty Trash or simply emptied the trash normally, they were also deleted.  A little more detail:  To test this, I enabled the root user to allow me to peer into code/.DocumentRevisions-V100/code and the files within. The exact structure of this folder and its contents are better explained over in John Siracusa's Lion review (Internals, Document Revisions).  I created a couple files, then made some changes, saving new versions. The folder that contained the revisions populated with new files as I saved new versions. Within this top level folder, there's a folder called codePerUID/code, which houses subfolders for each user account. Each user account folder contains a series of numbered folders, one folder for each file that has revisions saved. Thus, the actual revisions are saved as files a few levels down in this hierarchy, with hashed filenames. Emptying the trash (either way) would delete these files, but the preceding folder structure would remain in place.  Before deleting: code/.DocumentRevisions-V100/PerUID/0/5/com.apple.revisions/code This folder still has the previous versions contained within.  After deleting: code/.DocumentRevisions-V100/PerUID/0/5/com.apple.revisions/code This folder still exists, but it is empty.  I did not inspect the other folders within code/.DocumentRevisions-V100//code, so I did not check the databases that are contained within them. Siracusa goes into more detail, but they seem to exist to contain databases to track changes and map the user's files to the revisions saved by the system. I'm fairly certain that no document contents are saved there, though I'm not sure about filenames, and if filenames are present, if they're hashed or not.  <answer20361> My guess is no, but this is not a definitive answer.  I first created a very large (~160 MB) .txt file, and made changes to the file in TextEdit. As expected, that file and its versions showed up in code/.DocumentRevisions-V100/PerUID/code. The files appeared to be ~160 MB to codels/code, but according to codedu -h/code they used 0B on disk. The hard link count for each file was 1. A folder called code.cs/code (chunk storage) under code/.DocumentRevisions-V100/code had grown by about 110 MB.  Every time I changed the file, the following happened in code/.DocumentRevisions-V100/code:  ol liA ~160 MB file was created in code/.DocumentRevisions-V100/staging//code. The hard link count for this file is 1./li liThat file appeared to move to code/.DocumentRevisions-V100/PerUID/&lt;UID&gt;/&lt;#&gt;/com.apple.documentVersions/code. The hard link count remained 1./li liThat ~160 MB file became 0B, and the size of code/.DocumentRevisions-V100/.cs/code grew by about 2 MB./li /ol  The free space of the drive (codedf/code) was consistent with what codedu/code told me. Free space would go down significantly, and then return to nearly what it was before saving a new version.  Next, I tried to shred the file with Secure Empty Trash. OS X seems to use a program called codeLocum/code to securely delete the file. Attaching codefs_usage/code to codeLocum/code shows an awful lot of reads and writes to the original .txt file. While codeLocum/code is doing its thing, all the versions under code/.DocumentRevisions-V100/PerUID/code can still be accessed with data intact. After codeLocum/code is done writing over the data, it unlinks the original .txt file, and the versions in code/.DocumentRevisions-V100/PerUID/code suddenly disappear. codeLocum/code then moves on to anything else in the Trash, while never touching code/.DocumentRevisions-V100/code.  Whatever is in code/.DocumentRevisions-V100/code is not being securely erased.  EDIT: I should add that whatever emis/em in code/.DocumentRevisions-V100/code is somehow obfuscated or compressed (the folder was only ~120 MB). I haven’t yet read the versions or filesystem sections of Siracusa’s review… maybe there are clues in there.  <comment20818> This is good progress, but I think this only proves the files were deleted, not necessarily deleted securely. To prove secure deletion I would think you would either need to reference Apple's Developer documentation or run file recovery software and see what is recoverable. <comment20833> ah, sorry, i misunderstood you. should be a fairly simple experiment for somebody to reproduce and run a recovery app against. i'm not on ADC, so i'm not of much use there. <comment21010> and how about the copies in the new local time machine cache? <comment22078> iostat and an otherwise "still" mac should make it easy to see the write bandwidth. <comment22079> @thilo - not likely at all - why not ask that as it's own question?