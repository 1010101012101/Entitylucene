how to get shell scripts to run at startup on Yosemite <body> There is a directory in System/Library for startup items I presume: StartupItems  I need to have a shell script that will configure ethernet interface at start up, with local network address and subnet mask. I need to do this because the network preferences for configuring the ethernet interface will NOT set it using manual settings. THIS appears to be a serious bug, or my installation is bad.  I was given the advice to use  networksetup from the command line but that will not configure the ethernet interface in such a way that the configurations will be there on reboot.  The script needs to do its work with root privileges, or with sudo, but I am assuming that if it uses sudo, there will be a password dialog presented at boot time when the boot process gets to that script.  (I have had enough experience with FreeBsd and Linux to find my way around in the terminal, but not necessarily as it applies to Mac OSX)  <answer156312> One way of doing it would be assigning the script a launchd service:  Create the shell script as usual. Then you can make a launchd service to run it at startup. Those are located at code/Library/LaunchDaemons/code. These are in the XML property list format. Create another and populate it with something like this:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt;     &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;com.example.app&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;             &lt;string&gt;/bin/sh&lt;/string&gt;             &lt;string&gt;/path/to/script&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;true/&gt;         &lt;key&gt;KeepAlive&lt;/key&gt;         &lt;false/&gt;     &lt;/dict&gt; &lt;/plist&gt; /code/pre  Change codecom.example.app/code, code/bin/sh/code and code/path/to/script/code as required.  The script will then run while the system is booting. If it runs too early, you can either write the script to try and do what it needs to do until it succeeds, or have it exit with a non-zero error code and add this to the property list before the code&lt;/dict&gt;/code line:  precode&lt;key&gt;KeepAlive&lt;/key&gt; &lt;dict&gt;      &lt;key&gt;SuccessfulExit&lt;/key&gt;      &lt;false/&gt; &lt;/dict&gt; /code/pre  For more on OS X launch daemons and services, I suggest looking here for a nice quick-reference on making them, or here for a more comprehensive reference on what launchd can do.  <answer168827> Some time ago I used cron to do just that. You can make an entry like this  precode@reboot /path/to/my/script /code/pre  More info here     Instead of the first five fields, one of eight special strings may appear:   precode       string          meaning        ------          -------@reboot ------@reboot        @reboot         Run once, at startup.        @yearly         Run once a year, "0 0 1 1 *".        @annually       (same as @yearly)        @monthly        Run once a month, "0 0 1 * *".        @weekly         Run once a week, "0 0 * * 0".        @daily          Run once a day, "0 0 * * *".        @midnight       (same as @daily)        @hourly         Run once an hour, "0 * * * *". /code/pre  <answer209911> Take a look at login hook script.  https://wiki.afp548.com/index.php/Login/Logout_Hooks_in_OS_X  <comment183881> What do you call this plist document? And does the /path/to/script == /System/Library/StartupItems/script? <comment184269> For the first question: The plist document's name generally uses what the Label key in the property list is set to (in this case, "com.example.app") with a .plist extension. <comment184270> For the second question: That is correct, but the script should be moved elsewhere. <comment210671> Very handy to know! <comment235498> `cron` is not the right way to do this on OS X these days. Use LaunchAgent or LaunchDeamon instead (launchd). For more info: https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/ScheduledJobs.html `Although it is still supported, cron is not a recommended solution. It has been deprecated in favor of launchd.` <comment249564> `cron` is a lot easier to configure than `launchd`, though. Just compare the two answers in this thread to see what I mean. `cron` takes a single line in a single file, where `launchd` needs a script to describe the script you want run at boot. <comment252779> Your plist is malformed.  You need a Key: `keyProgram/key` with the value `string/bin/sh/string` and then `keyProgramArguments/key` should just have the value `string/path/to/script/string` <comment252785> Actually, mine is wrong too: `keyProgramArguments/key` needs to be an array.. <comment253260> A login hook is initiated by the loginwindow.app which is not the same as running a  script at startup. <comment256621> @Dannid Kron is not sensitive to run duplication, queue buffering, and others. Though viable in this case, it's not always a skeleton key, nor is it an idiomatic solution. <comment347725> Crontab is way better. It's quick and dirty and long established in the Unix world. I totally dig this @reboot keyword.