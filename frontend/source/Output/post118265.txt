In Terminal, when the the “cd” command is called, libwww-perl's “head” command is also executed <body> Currently, in Terminal, when I execute a codecd/code command, it also executes LWP's codehead/code command.  A copy of the Terminal output follows:  precodelaptop:bin user$ cd ~ Unknown option: n Usage: head [-options] &lt;url&gt;...     -m &lt;method&gt;   use method for the request (default is 'HEAD')     -f            make request even if head believes method is illegal     -b &lt;base&gt;     Use the specified URL as base     -t &lt;timeout&gt;  Set timeout value     -i &lt;time&gt;     Set the If-Modified-Since header on the request     -c &lt;conttype&gt; use this content-type for POST, PUT, CHECKIN     -a            Use text mode for content I/O     -p &lt;proxyurl&gt; use this as a proxy     -P            don't load proxy settings from environment     -H &lt;header&gt;   send this HTTP header (you can specify several)      -u            Display method and URL before any response     -U            Display request headers (implies -u)     -s            Display response status code     -S            Display response status chain     -e            Display response headers     -d            Do not display content     -o &lt;format&gt;   Process HTML content in various ways      -v            Show program version     -h            Print this message      -x            Extra debugging output laptop:bin user$ /code/pre  I've reviewed the code~/.bash_profile/code and code~/.bashrc/code but there are only three export statements and no alias or something like that. It's as follows:  precode[[ -s "/Users/user/.rvm/scripts/rvm" ]] &amp;&amp; source "/Users/user/.rvm/scripts/rvm"  # This loads RVM into a shell session. ### Added by the Heroku Toolbelt export PATH="/Applications/XAMPP/xamppfiles/bin:/usr/local/heroku/bin:$PATH" export PATH=/Users/user/bin/Sencha/Cmd/3.1.2.342:$PATH export SENCHA_CMD_3_0_0="/Users/user/bin/Sencha/Cmd/3.1.2.342" export PATH=$PATH:/Applications/acquia-drupal/drush /code/pre  From reading, it seems that installing LWP might have overwritten the code/usr/bin/head/code command, but I've checked and it's the OSX one. However, when I call codehead/code from Terminal, it invokes the LWP head command instead.  Per patrix's request, here are the contents of code~/.rvm/scripts/rvm/code: http://pastebin.com/7rZVQAcy  I'll keep out trying things, and I'll update the question with new information if relevant.  Additional information:  precodelaptop:dir user$ alias cd -bash: alias: cd: not found laptop:dir user$ which cd /usr/bin/cd laptop:dir user$ which head /Applications/XAMPP/xamppfiles/bin/head /code/pre  The output of codeecho "$PS1"; echo "$PROMPT_COMMAND"/code is:  precode\h:\W \u\$  update_terminal_cwd; /code/pre  The output of codetype -a update_terminal_cwd/code is:  precodeupdate_terminal_cwd is a function update_terminal_cwd ()  {      local SEARCH=' ';     local REPLACE='%20';     local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}";     printf '\e]7;%s\a' "$PWD_URL" } /code/pre  The output of codetype -a cd/code is:  precodecd is a function cd ()  {      if builtin cd "$@"; then         __rvm_do_with_env_before;         __rvm_project_rvmrc;         __rvm_after_cd;         __rvm_do_with_env_after;         return 0;     else         return $?;     fi } cd is a shell builtin cd is /usr/bin/cd /code/pre  <answer118382> I am going to assume you are using codebash/code.  So in that case when you just type codecd/code it should be running the bash built-in. This is what has the problem.  To confirm this try using the external version - at the command prompt type code/usr/bin/cd/code and you should go to your home directory with no problems.  Now let's check what the other codecd/code might be up to.  codetype -a cd/code should give us  precodecd is a shell builtin cd is /usr/bin/cd /code/pre  codewhich head/code should give us code/usr/bin/head/code  codealias/code might give us a long list but nothing pointing towards an alias for codecd/code  The CD environment variables should have sane entries:  precodeCDARGS_NODUPS=1 CDARGS_SORT=0 CDPATH='.:~:~/bin:~/dev:/usr:/' /code/pre  The same with:  precodePROMPT_COMMAND='history -a; history -n; printf "\e]1;${PWD}\a"' PS1='\[\033[34m\]\h:\W \u$\[\033[0m\] ' SHELLOPTS=braceexpand:emacs:hashall:histexpand:history:interactive-comments:monitor /code/pre  If all that is OK then my money would be on codecd/code being redefined by a builtin function that has gone pear shaped. At the command line codeset | less/code will allow you to page through a dump of all your shell variables, aliases and functions. If you type code//code you can search through the file for codecd/code (notice the space) and see if that is happening.  Once you have discovered that "someone" - in your case codervm/code - is defining a shell function called codecd/code then you can either uninstall the culprit or find where it does the nasty work and change the name of the function to something like 'rcd' instead of 'cd'. As the shell function is listed first in the output of codetype/code the builtin codecd/code is ignored except where it is getting called by the function (that's what the codebuiltin cd/code in the function definition is doing - calling the builtin version).  I'd almost guarantee that the function is defined in code/Users/user/.rvm/scripts/rvm/code.  I'd start by uninstalling codervm/code and then reinstall to see if that fixes it. Are you installing it using MacPorts or Homebrew?  <comment138021> What is in `/Users/user/.rvm/scripts/rvm`? <comment138031> @patrix, edited question to include that file's content, thanks! <comment138034> what does `alias cd` and `which cd` show? <comment138037> @Esteban, In terminal type `which head` then post the result here. That should tell the path of which one you're actually using. <comment138044> Ok, so it seems it's using head from XAMPP, however, why would that fire every time I use "cd" to move to a different directory? It does the directory change but then immediately fires off the head help message due to incorrect usage. Thanks for the help so far! <comment138055> What is the output of `echo "$PS1"; echo "$PROMPT_COMMAND"`? <comment138060> @glennjackman, it outputs: \h:\W \u\$  update_terminal_cwd; <comment138065> what is update_terminal_cwd? `type -a update_terminal_cwd` <comment138163> I think, based on the first command `type -a cd` we've got part of the culprit, as I'm getting something from RVM as well as the builtin shell function (added output to question). So I believe it's calling both? How would one fix that so it's not using those two cd definitions? <comment138164> Uninstalling fixed the issues (especially following RVM's instructions to remove all traces of it from the system) It was installed using Homebrew. <comment138190> Nice. RVM was actually my first thought when I read the description. Just get rbenv, it only aliases the ruby commands and therefor shouldn't mess with anything else.