OS X: Shift + Delete = Forward delete annoyance <body> Has anyone noticed this strange behavior of OS X El Capitan regarding forward delete? The usual keyboard shortcut for this on keyboards that have no distinct forward delete button is fn + delete, which works on my MacBook Pro 13'' Early 2015 as it should.  Additionally I have a forward delete when holding down shift and delete. This is so annoying because it happens very often while writing larger texts (especially in German where you have a lot of capital lettered words) or programming that this situation occurs.  Does anyone know a way to remap/deactivate forward delete?  <answer214076> Assuming you only see this in Textwrangler: You can change it in Preferences:  img src="https://i.stack.imgur.com/ZKogX.jpg" alt="enter image description here"  <answer214271> This is a change in behavior in the 10.11.2 beta, build 15C27e. Wether or not this is intentional or a mistake is unclear. But it is infuriating.  <answer215241> There's no official setting to change it afaik, but there is a workaround to basically overwrite the system's codeShift+Delete/code and map it to be just codeDelete/code.   ol liDownload, install and launch Karabiner./li liGo to the codeMisc &amp; Uninstall/code tab, and click the codeOpen private.xml/code button. A Finder window to a folder with a file named codeprivate.xml/code should open./li liOpen the codeprivate.xml/code file and replace its contents with the following:  precode&lt;?xml version="1.0"?&gt; &lt;root&gt;   &lt;item&gt;     &lt;name&gt;Shift+Delete to Backward Delete&lt;/name&gt;     &lt;identifier&gt;private.fixbackspace&lt;/identifier&gt;     &lt;autogen&gt;__KeyToKey__ KeyCode::DELETE, ModifierFlag::SHIFT_L, KeyCode::DELETE&lt;/autogen&gt;     &lt;autogen&gt;__KeyToKey__ KeyCode::DELETE, ModifierFlag::SHIFT_R, KeyCode::DELETE&lt;/autogen&gt;   &lt;/item&gt; &lt;/root&gt; /code/pre/li liGo back to the codeChange Key/code tab. There should be a checkbox named code"Shift+Delete to Backward Delete"/code in the list box (If you don't see it, click the codeReload XML/code on the upper right corner). Select it./li /ol  That should fix the issue. In my case doing this for some reason also changed the delay between tapping a key and the key press being repeated. That's just a slider in codeSystem Preferences/code  codeKeyboard/code.  Bonus: Send feedback to Apple through the Feedback Assistant, or the online bug reporting site, or just wherever, so hopefully they fix this nonsense or at least add the a setting to change it.  From the reddit thread linked to by fdnhkj.  <comment258395> I can't reproduce the described Shift-Delete behavior with El Capitan here. Do you have any kind of keyboard utility installed? Does it occur in all applications or only in one/some? <comment258398> Can't repro in TextEdit & 10.11.1 Fn/Backspace = forward delete; Backspace or Shift/Backspace = backwards delete, as expected. Text Wrangler, on the other hand does exhibit this behaviour, but as I never tested it before, idk whether that is new since El Capitan. <comment258520> Nope, not using Text Wrangler - but it is a nice to know. I also have no keyboard extension installed, nor any tools running in the background. This is very, very strange... <comment258582> 9 hours later OP mentions he isn't using TextWrangler <comment258884> @Arc676 This is a perfectly valid answer <comment258929> This is the answer! Somehow I didn't take the point in time into account from when the issue has started. But it was clearly from the time on I installed the beta on my machine. It's interesting that this issue hasn't been noticed by many testers so far nor this new behavior is documented somewhere. Hope that Apple fixes it asap. It really makes writing and coding harder... <comment259925> Link to related reddit post : https://www.reddit.com/r/OSXElCapitan/comments/3qmls9/help_os_x_10112_beta_15c27e_cant_backspace_with <comment260232> Sadly I cannot accept two answers as correct, but what @kevin9794 says is also a valid and pretty good solution (not only for my forward-delete problem).  BUT: Since 10.11.2 Beta 3 (15C40a) the behavior has disappeared! Everything is back to normal!!! :-) <comment260233> Thank you very much for your informative post! Sadly I cannot accept two answers as correct solutions! But I up-voted this post! :-) However, since 10.11.2 beta 3 (15C40a) the problem disappeared again. <comment260271> Ah good to know! Will update as soon as I get a chance <comment260376> The bug has been fixed in 15C40A. <comment323578> Even if the OP wasn't using it, I am glad this answer stuck! It just helped me...