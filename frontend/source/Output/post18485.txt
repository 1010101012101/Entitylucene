Seeking ambient screen recorder <body> I am a work-from-home developer that gets paid by the hour.  I am seeking an app that runs in the background and records my screen(s) and uploads it (every 20 seconds or so) through FTP to my webserver.  That way, I can set up a simple website for my clients, and they can "watch me work" and be assured that I am really working for them, and not just goofing around or playing games.  It will have to be a ambient app, meaning that it should be very discreete and not interfere in my work (xcode/unity stuff mainly)  Im willing to pay a fair shareware fee, but not anything subscription-based.  <answer18505> You could use Automator to build a workflow to do this.  Automator can take screenshots and you need to use a shell script to upload the screenshot unless you have an FTP client which is compatible with Automator.  Bear in mind that uploading a screenshot might take longer than 20 seconds depending on screen size and your internet connection speed.  A 5-minute interval might be more appropriate.  Here is an Automator workflow which I just tested successfully to take a screenshot and upload it to an ftp server.  NB: you need to set the shell script step to ignore input from the previous step or it will fail when trying to convert the image to text. img src="https://i.stack.imgur.com/fL0EY.png" alt="Automator Workflow" You can save this workflow as a .workflow file and then you need to schedule it to run on whatever interval you think is appropriate.  You could do this through iCal but I think iCal would only allow you to run it daily or less frequently.  So you need something else.  You could do it by writing a codelaunchd/code script or you could use a utility like lingon to create the script for you.  This way you could set it to run on whatever interval you like.  <answer18864> code/3/ftp_screenshots.sh/code:  precode#!/bin/sh  tmp=${TMPDIR}`uuidgen`.png screencapture $tmp fn=`date '+%m-%d-%H-%M'`.png ftp -in ftp.server.tld&lt;&lt;FTP user username pa55word binary cd www put $tmp $fn bye FTP rm $tmp /code/pre  I'd prefer SSH (ssh - Upload file with SCP bash script - Stack Overflow), but I still haven't figured out how to set up SSH keys.  hr  code~/Library/Preferences/ftp_screenshots.plist/code:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Disabled&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;ftp_screenshots&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;sh&lt;/string&gt;         &lt;string&gt;/3/ftp_screenshots.sh&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;StartInterval&lt;/key&gt;     &lt;integer&gt;1800&lt;/integer&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;ExitTimeOut&lt;/key&gt;     &lt;integer&gt;60&lt;/integer&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  hr  These functions could be helpful:  precodelaload() { launchctl load ~/Library/LaunchAgents/"$1".plist; } launload() { launchctl unload ~/Library/LaunchAgents/"$1".plist; } /code/pre  <comment20236> I've generally solved or prevented this kind of trust issue by working at their site at the beginning of a job, and a few days in, promising a piece of work that I'll do in my own office and deliver on [specified day].  Then I show up on that day with it done.  They usually relieved to find out they don't need to baby-sit me and they seldom care where or when I work after that. <comment20249> Great chaining of tools - just be sure to unload the launchd job before sleeping. Launchd will detect jobs that  should have run and could perhaps schedule a few more snaps than you want. A quick test to track the last pass and this pass would prevent dumping stale or too many snaps if launchd schedules them too rapidly. <comment20266> Wow, this was right on the money. I will try making a script with this right away. +1 and approved. <comment20269> Hope it works for you then, the only hurdle is getting it to run every x seconds/minutes so if you find launchd a bit complex then that app 'lingon' might make it simpler <comment20665> Cool! +1 for you