Assigning shortcuts to particular keyboard layouts <body> Is there any way to assign hotkeys to switching to emparticular/em keyboard layouts emdirectly/em, without having to cycle through them one by one?  I am quite new to OS X.  On Windows (which I used before) it is possible to set keyboard shortcuts for witching directly to particular keyboard layouts.  For example, I set it up so that kbdShift/kbd-kbdAlt/kbd-kbd1/kbd switches directly to English, kbdShift/kbd-kbdAlt/kbd-kbd2/kbd switches directly to Hungarian, etc.  This is very convenient when one has several layouts installed (I regularly used 4 different ones on Windows), and much faster than having to cycle through layouts one by one, emespecially when writing multilingual documents and needing to switch often./em  Is there similar functionality in OS X?  If there's isn't by default, is there a hack or third party program to set it up?  <answer70023> There is a solution that has been vetted on 10.5 through 10.7 and has both a source code example as well as a link to a direct download of a program to do this sort of switching.  https://discussions.apple.com/thread/4032238  You'll need Xcode or to use the compiled program to test if this works for you. emAnd always, use caution when downloading software from the internet. Most people are nice and good, but sometimes it's hard to know what you're running./em  <answer70030> h1Command Line Utility + System Service/h1  This is a two-part solution: first a means of changing the keyboard layout, and then a means to activate that by a keyboard shortcut. But it's fairly easily accomplished.  h21. Changing the Layout/h2  To change the layout programmatically, there's a handy (and free) little utility called codechangeInput/code, which you can download here.  Download and unzip it, and place the codechangeInput/code executable somewhere. Be sure to note the path for the second section.  h22. Creating Keyboard Shortcuts/h2  There several ways to do this, but to make things accessible for anyone, we'll do it with built-in tools by making a System Service with Automator.  ol liOpen Automator, and select strongService/strong as the document type./li liChange the drop-down menus in the upper right so that it reads emService recieves strongno input/strong in strongany application/em/strong./li liAdd the strongRun Shell Script/strong action to the workflow by double-clicking it or dragging it to the right pane./li liIn the text field, enter code/path/to/changeInput "Name of Layout Here"/code. Be sure to enter the exact path to codechangeInput/code as you saved it (tip: you can drag the executable right into the text field to get the proper path). Replace code"Name of Layout Here"/code with the emexact/em text that's displayed in the Input Sources section of System Preferences or the Input Menu â€” be sure to keep the quotes./li listrongSave/strong your service. It will prompt you for a name, make sure to note it for step 7 (something descriptive is best). The service file gets saved to code~/Library/Services//code./li liOpen the strongKeyboard/strong panel of System Preferences. Click the strongKeyboard Shortcuts/strong tab, and select the emServices/em item in the left pane./li liScroll through the list until you find the name of the service as you saved it in step 5 (it should be in the emGeneral/em section, near the bottom. Make sure the box is checked, then select it and click strongadd shortcut/strong, and set whatever shortcut you desire./li liRepeat steps 1-7 for each layout you want a shortcut for./li liTest out your shortcuts. You may need to open the services menu once (click the application menu for the current app and reveal the Services menu) before the shortcuts get activated./li /ol  As an alternative to using the Automator/Services combo to create the keyboard shortcuts, you can use FastScripts, the free version of which allows you to quickly set keyboard shortcuts for 10 scripts, or $14.95 for an unlimited number. Keyboard Maestro can also easily run a script with a keyboard shortcut, but it's a bit overkill if this is your only need (it is worth checking out for lots of other scripty/powerusery type things).  <comment81326> Tom - big welcome to our Apple Q&A site. I'm going to edit in at least a gist of what the proposed solution is since we generally discourage a short link to other sites without at least a short summary of the proposed solution. <comment81369> Excellent detailed answer!  Do you have any suggestions on which keyboard shortcuts are likely to be not yet taken and especially not conflict with in-application shortcuts on OS X?  On Windows I'd normally use the Windows key for such tasks, but I got the impression that on OS X all of Control, Option and Command are used for in-application shortcuts. <comment81377> It depends a lot on what apps you use, but for my custom system shortcuts I often use command+control plus a number or letter. I find that combination is less likely to interfere with default shortcuts in most apps. Or, if you have a full size keyboard with function keys F13 and up, those are almost always unused.