Creating an automated HFS+ compressed folder <body> I would like to set up an automated way for archiving files in OS X Lion. By archiving I mean using HFS+ compression feature on a specific folder, and make every file that I move into this folder automatically compressed. I'm thinking of using this to archive large files that I don't use often, but without having to manually create compressed archives and having to extract them in case I need them.  I came across the tool afsctool (codebrew install afsctool/code), which can, via command-line, apply HFS+ compression to a folder and all files in it. But I believe it does not activates compression of future files moved to the folder.  Moving files manually and running a command line instruction repeatedly is inconvenient. Therefore I'm guessing I would need to used automator/AppleScript to execute this in two steps:  ol liCreate a script that allows moving any file to a specific folder. Ideally an option named Archive accessible via right-click on the file./li liRun a command line instruction codeafsctool -c &lt;folder&gt;/code, to activate compression on all new files just moved to the folder./li /ol  I have no experience using automator or AppleScript, so I would like to know where to start, especially regarding how to add actions to Finder, and how to run a command line tool from a script.  hr  h1Updates/h1  @kopischke guide works well. The script itself, I made based on the answer by @mark, but using codeafsctool -c &lt;folder&gt;/code, instead of codeditto/code. Here's the script: It should be put in code~/Library/Scripts/Folder Action Scripts/code  precodeon adding folder items to this_folder after receiving these_items repeat with i from 1 to number of items in these_items     try         set this_item to item i of these_items         tell application "Finder"             set the file_name to the POSIX path of this_item         end tell         set cmd to "/usr/local/bin/afsctool -c " &amp; file_name         do shell script cmd     on error the error_message number the error_number         display dialog "Error: " &amp; the error_number &amp; ". " &amp; the error_message buttons {"OK"} default button 1      end try end repeat end adding folder items to /code/pre  Since http://web.me.com/brkirch/brkirchs_Software/afsctool/afsctool.html at MobileMe is no longer available, there's diimdeep/afsctool at GitHub, currently 1.6.4.   Also afsctool in MacPorts where they're aware of the MobileMe issue but maybe unaware of the source at GitHub.   <answer50537> This thread gives an applescript to use as a Folder action which will compress files as they are added  precodeon adding folder items to thisFolder after receiving theseItems     set destinationPath to "/POSIX path/to/destination/folder"     repeat with thisItem in theseItems         set cmd to "ditto --hfsCompression " &amp; quoted form of POSIX path of thisItem &amp; " " &amp; destinationPath         do shell script cmd with administrator privileges     end repeat end adding folder items to /code/pre  <answer50643> There are two parts to the answer to your question.  ol listrongHow to add a Finder context menu item to “Archive” files:/strong this is easy to achieve by creating an emAutomator Service/em (Mac OS X Automation has a good overview of what the Automator services introduced in OS X 10.6 can do):  ul liLaunch Automator, choose “Service” when prompted for the kind of workflow you want to create./li liChoose “Files or Folders” in the “Service receives” drop down (approximate translations – I’m on a German system). Optionally, set “in” drop down to “Finder”./li liAdd a “Get Selected Finder Items” action./li liAdd a “Move Finder Items” actions below that and set it to your target folder./li liSave your service in the default location (code~/Library/Services/code) as “Archive”./li /ul  you now have a new service menu strongand/strong context menu entry (depending on the number of services active: either on the first menu level, or in the “Services” submenu) called “Archive” that will move the selected file or folder to your target folder./li listrongHow to automate HFS+ compression of files added to your target folder:/strong there are several ways to achieve that. You could, of course, simply add that step to your archiving service. The disadvantage of this approach is that no compression will be applied if files or folders are ever added to the folder outside the service, of course. A better approach would be to have everything in the folder be compressed automatically, without reliance on the the entry vector or user interaction.    One way is, as you have discovered, to have a compression utility run every time a file or folder is added to your watched folder:  ul lithe way to launch a shell utility in AppleScript is the codedo shell script/code command – see the linked documentation;/li lithe inbuilt way to leverage filesystem events in an AppleScript is to use emFolder Actions/em, which call AppleScripts on changes in a watched folder. What events the script reacts to are defined by the script itself, through the handlers it provides (for instance, the script in Mark’s answer has a handler for codeadding folder items/code – meaning it reacts to newly added files; see the Applescript Language Guide for the full reference). Folder Actions configuration is found in the services menu of folders in Finder (in the context menu, too)./li lia turbocharged alternative to Folder Actions is Paul Kim’s emHazel/em (commercial software), which adds rule based processing and a plethora of criteria for filesystem event handling that go far beyond what you can achieve with simple Folder Actions – you might want to investigate Hazel if you plan on doing more or more complex stuff along the lines of what you are planning now./li /ul  An alternative to the whole scripting approach is using LateNiteSoft’s emClusters/em – another commercial software, that does nothing but automatically apply (and re-apply, where needed) HFS+ compression to the contents of watched folders./li /ol  <answer75761> @williamvoor: The script fails with filepaths which contain spaces, as codeset the file_name to the POSIX path of this_item/code does not escape properly. Correct the appropriate line of your code to this:  precodeset cmd to "/Users/sn/bin/bin/afsctool -c \"" &amp; file_name &amp; "\"" /code/pre  strongExplanation/strong: afcstool's file_name argument is surrounded with quotation marks, which themselves in the AppleScript code are escaped in order to be correctly handed over to the command line environment.  strongMeta-topic/strong: As I lack reputation points, I could not comment at the appropriate position (= to @williamvoor 's own post), therefore I post it as an own answer, and ask you to edit the code change into your post, and give me a thumbs up, so that I gain enough reputation, enabling me to directly comment in the future. Thanks!  After that is done I or and admin could delete my post.  <answer87309> h1Clusters/h1     …  takes advantage of the file compression technology in Mountain Lion, Lion and Snow Leopard …   h1MoreSpace Folder Compression/h1     … HFS+ compression has the best effect on uncompressed file formats like text and data documents, databases and mailboxes. A typical Mail mailbox size can be reduced up to 50%. …   h2Preference/h2  Of those two, I find Clusters more mature and easier to use – probably a better fit for this question.   hr  h2Proceed with caution/h2  In an edge case, silent dataloss may occur with third party uses of AppleFSCompression. From what I can tell this is a bug in the OS, and may occur only where there's an extraordinary lack of free space. I'll feed the bug to Apple.   <comment58020> Didn’t know about the `--hfsCompression` option in `ditto` – good one! But your answer doesn’t address OP’s question about integrating a moving script into Finder, it moves files dropped into the archive folder to another folder (which I think would be one more redirection than OP was planning to do) and it will ask for authentication every time (annoying in an automation context). <comment58102> Thanks for your answer. I'll try the option of running an AppleScript as a Folder Action. I'm aware of Clusters, and what I'm trying to achieve is exactly that (a poor man's Clusters) ;) <comment58112> @williamvoor: Glad if could help. Would you mind accepting the answer, then? That’s the check mark button :). <comment58128> The folder action script solution works. The script itself I pasted on the question. <comment204074> Nice question. What compression rates can be expected from this?