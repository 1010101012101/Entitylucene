Which program installs *osxfuse* files in / (root folder)? <body> precode$ ls -al /*fuse* -rwxr-xr-x  1 root  wheel   25400 Dec 17  2011 /libmacfuse_i32.2.dylib -rwxr-xr-x  1 root  wheel   25400 Dec 17  2011 /libmacfuse_i64.2.dylib -rwxr-xr-x  1 root  wheel  388048 Dec 17  2011 /libosxfuse_i32.2.dylib -rwxr-xr-x  1 root  wheel     990 Dec 17  2011 /libosxfuse_i32.la -rwxr-xr-x  1 root  wheel  388080 Dec 17  2011 /libosxfuse_i64.2.dylib -rwxr-xr-x  1 root  wheel     990 Dec 17  2011 /libosxfuse_i64.la -rw-r--r--  1 root  wheel     332 Dec 17  2011 /osxfuse.pc /code/pre  Is it ok to delete them?  <answer124763> I do not know about you, but I would not delete files out of the root, since you might break the dependencies and get problems with that.  Since you system is not generating errors with those files, and you do not know what app on your system is using it I would just leave them in peace.  About:  OSXFUSE is a file management utility for Macs.  Essentially it enables Macs to work better with the file systems of third-party applications.  For example SugarSync needs it, so do others.      If your Mac doesn't already have OSXFUSE, SugarSync will install the   latest version along with the actual SugarSync application.  This   happens automatically.  There is nothing you need to do.   This does not mean you have the sugarsync but just and example.  If you must then:  Here is some reading material.  Scan for Osxfuse app on your system to see where it is located.  Open console and type osxfuse in search, it will show you who called it in the lines before.  It is up to you if you want to just remove the osxfuse and find out which app is now generating errors.  There is also a script here, but I have NOT tested it  <answer124837> After some investigation, the *macfuse* files were codemv/code'ed to root folder by a mis-configured bash script.  The script was supposed to move the *macfuse* files to emsomewhere else/em and codeln/code from code/usr/local/lib/*.macfuse*/code, to kill some homebrew warning. Too bad, the destination path of the script was missing and so files were codemv/code'ed to root folder.  It's now fixed by:  ul licoderm/code all symbolic links of *macfuse* from code/usr/local/lib//code/li licodemv/code *macfuse* files to a proper folder/li licodeln/code each file from code/usr/local/lib//code/li /ul  <comment145948> But if they install in `/`, they must have been misconfigured. <comment145951> @microtherion please explain <comment146053> Dynamic libraries have no business in `/`. Code that is supposed to link to them will not pick them up unless explicitly given `/` as a search path. Almost certainly, the files ended up there because something went wrong in a configuration step that was supposed to figure out file locations. If somebody DID deliberately place dynamic libraries in that location, Iâ€™d consider that a reason for extreme mistrust of their basic competence.