Adding a compiled application to $PATH. Understanding the problem <body> I'm trying to understand the whole $PATH problem but I've got no luck so far. Suppose that I've just compiled an executable with make and I need to launch it with the shell without using the full path. Well the problem is that I don't fully understand all these "add to path" things.  My idea is that if the terminal reads on specific folders, why don't we just put all the application files to this folder?  Why don't we add the whole Applications folder to the list of folder that the terminal goes to open an application?  <answer218124> The PATH variable already containts a list of directories which the shell (which is what is running inside Terminal) is using to search for any executables. So if you compile something on your own and put it into one of the folders listed in PATH you can execute it from the shell prompt right away.   The current folder (code./code) usually is not part of PATH for security reasons. So for stuff you compile and want to run right away, you have to execute code./stuff/code for the shell to find it.  <comment263652> You have a lot of questions here that probably deserve their own post. <comment263664> Plus you would need to rehash to get a new executable on the path <comment263674> Rehashing is only required if the shell already knows the location of an executable (aka you've called it before) *and* you put a replacement into another directory listed in PATH. <comment265296> You CAN open any application without adding them to path. Just do `open -a Safari`, do `man open` to find out more.