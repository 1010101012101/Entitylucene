Where are system environment variables set in Mountain Lion? <body> In Lion (and previous releases) it was in code.MacOSX/environment.plist/code. After upgrading to 10.8, the file is still there, but the variables aren’t taking.    I’ve also tried adding them to code/etc/launchd.conf/code and they’ll show up in  Terminal, but not GUI applications (like my IDE).    <answer57402> I asked this question on the Apple Developer Forums as well and got back this, official response.     Change the Info.plist of the .app itself to contain an "LSEnvironment"   dictionary with the environment variables you want.br   ~/.MacOSX/environment.plist is no longer supported.   <answer57414> As you have discovered, the use of environment.plist file is no longer followed, the variables stored in Info.plist as strongLSEnvironment/strong strings are only set by launchd.  You cannot depend on them to set a general environment variable that the terminal will set if you call your program from the terminal/shell directly. The good news is the codeopen -a/code command does trigger launchd to do the launching, so the variables will be set consistently for the app environment if not for the local shell environment.  <answer85759> Try codelaunchctl setenv NAME VALUE/code. I don't know if/what it does differently from editing codelaunchd/code.conf, but it works for me in both Terminal and GUI apps. More details.  Note this doesn't survive across a reboot. Here's a way to fix that.  <answer88885> Setting environment variables in code/etc/launchd.conf/code is the way to go: Every application launched emafter a reboot/em by local shells, Finder or Spotlight inherits these variables - I have tested this extensively with Mountain Lion 10.8.3.  2 caveats:  ul liShells might overwrite the settings in their login scripts. (See For correct functioning in shells though...)/li liLaunched apps might not expose the environment to their children. (codessh/code seems to behave like this - see ...why do remote shells via ssh do NOT inherit the environment...)/li /ul  <answer146047> I know this is an old question but I thought I would point out that in Yosemite code/etc/launchd.conf/code no longer works (as confirmed by the man page). So here is an alternative.  Launch AppleScript Editor, enter a command like this:  precodedo shell script "launchctl setenv variablename value" /code/pre  (add as many lines as you like)  Now save (⌘S) as emFile format: Application/em. Finally open emSystem Settings/em → emUsers &amp; Groups/em → emLogin Items/em and add your new application.  <comment65902> Did you reboot after changing `/etc/launchd.conf`? <comment65906> I did, and all the variables therein are now available in any terminal, but not present for my IDE. <comment86728> Where is that located? <comment93173> It would be useful to provide a link to a more specific example. <comment93174> Update: I tried changing that file, after figuring out the syntax (I think), but it does not work at all for me. <comment93628> There will be an Info.plist per application in WhatEver.app/Content/Info.plist.  You can edit it with XCode.  Click the "+" on the Information Property List and add a dictionary called LSEnvironment. If you type it correctly it will rename it to Environment variables.  Then you click the "+" by that for each environment variable you want to add. <comment98837> That's quite a long page you are linking to here. Where exactly is the relevant part? Could you include it directly into your answer to make it easier for everybody? <comment99038> oops, good point, thought i'd included more of a fragment in that url. fixed. <comment104213> Maybe the IDE does not expose the environment to you (See my [answer](http://apple.stackexchange.com/a/88885/15340))? What IDE is it? is it launch directly by the Finder or Spotlight? <comment172246> Note that it might nor work with other apps that are opened as Login items and perhaps those you open quickly after login <comment172248> The way to survive across a reboot given there uses the environment.plist which stopped working under Lion <comment179078> This worked for me. Thank you so much. This has been driving crazy all day! <comment203862> Looks like the only real&universal solution so far. But it needs 9 more upvotes to go up and become first answer. :c <comment257415> This is a nice solution, but it no longer works as of Yosemite 10.10.5. <comment280063> This worked for me on El Capitan.  As noted above by @Mark, there are issues with ordering (eg. resumed applications may or may not have the environment), but once logged in this works as you would expect. That is, applications started from Spotlight or the Dock have the correct environment. <comment358622> `/etc/launchd.conf` is no longer supported since Yosemite. See https://apple.stackexchange.com/questions/106355/setting-the-system-wide-path-environment-variable-in-mavericks/106814#106814 <comment358634> @Mark You can try [this answer](https://apple.stackexchange.com/questions/106355/setting-the-system-wide-path-environment-variable-in-mavericks/106814#106814), making use of the Launch Agent. In my case the Launch Agent starts after the Login Items, so I move the target application (like Eclipse) from Login Item to Launch Agent, so that they will be started after this special application setting environment variables.