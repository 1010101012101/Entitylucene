Protect changes to plain text file written by standard user's execution of bash script <body> I have written a simple bash script that I want to use as a time clock for employees (work-studies) in my computer lab. The script works great.br /  1. Each work-study has two icons (two separate bash scripts) on their desktop, one to clock in and another to clock out. They both write to the same .txt file.br /  2. When they click the clock-in icon, the script writes CLOCK IN and the current date and time to a plain text file in a shared Dropbox folder (shared between me and the work-study computer).br /  3. The script pauses for five seconds so the .txt file can update on Dropbox.br / 4. The browser opens with the work-study's updated time clock log. This is done via a Dropbox share link.br /  Here is the script for clocking in. The clock out script only says CLOCK OUT instead.  precode#!/bin/bash # Write to .txt file echo " CLOCK IN - $(date '+%x - %r')"  &gt;&gt; /Users/Username/Dropbox/Joe-Time-Clock.txt  # Give Dropbox a chance to sync. sleep 5 # Open in browser so student can see clock in time. open -a Google\ Chrome "https://www.dropbox.com/s/7vbgpc9x29d0z98/Time-Clock.txt?dl=0" exit 0 /code/pre  Here is the plain text output:  precodeJoe Smith - Time Clock  CLOCK IN - 08/17/2015 - 06:00:25 PM CLOCK OUT - 08/17/2015 - 06:00:48 PM  CLOCK IN - 08/17/2015 - 06:00:52 PM CLOCK OUT - 08/17/2015 - 06:05:14 PM  CLOCK IN - 08/17/2015 - 06:14:51 PM CLOCK OUT - 08/17/2015 - 06:15:11 PM /code/pre  As of now, the student can simply open Joe-Time-Clock.txt when they are late and change the information. The work-studies are on a regular account on the Mac (10.6 Snow Leopard), and I have an admin account to which they do not have access. I would like for them to be able to execute the script on the desktop that writes to their time-clock file. However, I do not want them to be able to edit the script or edit the clock-in / clock-out log (Joe-Time-Clock.txt).   I fiddled with the permissions today. If Joe-Time-Clock.txt is synced by Dropbox and has root ownership enabled, then Dropbox, being a per user application, would not be able to sync it because it would lack the permissions. Otherwise, I would try this solution. Any ideas are welcome. Much thanks in advance.   Side note: I am much more used to working with permissions and command line in Linux. Today, when I spent a bit of time on CLI in OS X it felt a bit foreign, so the more details the better. Thanks!     <comment242306> Use a LoginHook and LogoutHook to record the time and a user's  LaunchAgent to open the browser. Link- https://developer.apple.com/library/mac/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html <comment242810> @fd0 I ended up using a web form instead to do the same thing, only it also includes the client IP address to make sure there is no clock in from a different location than in the office. Thanks for the idea though.