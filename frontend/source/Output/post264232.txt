Obtain bad URL from Safari's current tab with Applescript <body> The web site my.yahoo.com has an irritating bug (I'm surprised it works at all) where clicking on one of its links sometimes produces a URL such as the following:   precodehttp://sports.yahoo.comhttps//sports.yahoo.com/news/rested-kings-ready-host-not-rested-hurricanes-082033171--nhl.html /code/pre  In the example, you can see that "http://sports.yahoo.com" is repeated twice. I wanted to find the easiest way to correct these URLs while surfing. Sadly, I cannot even perform the emfirst/em necessary action, which is to pull the URL from the title bar of the current tab. You would think sending the following command to Safari in an Applescript would work:  precodeset thisTabUrl to the URL of the current tab in window 1 /code/pre  Sadly, apparently, if the URL is invalid, I get:  precodefile:///Applications/Safari.app/Contents/Resources/ /code/pre  Is there some other way I can coax Safari to give me the contents of the URL area of the current tab to then process in the Applescript, which will then attempt to set the current tab's URL to the correct url and open that page? I'm pretty sure I have the rest of the necessary code, to open the correct URL in that same tab.  For extra credit, what might be the most effortless way to launch this script when encountering such a bad URL while surfing in Safari?  <answer264361> I've tried numerous times to reproduce the issue, however I couldn't. So this solution was tested by manually entering a standard URL twice, via copy and paste, and going from there. I also used the bad URL you've shown in your question.   In Safari, this essentially tries to build a valid URL from of the double URL using AppleScript run as an Automator Service when pressing kbd⌘/kbdkbdB/kbd and sets the current document (window, tab) to the proper URL.  Create an Automator Service with the settings as shown in the image below and save it as:br Fix Bad URL  Then in System Preferences  Keyboard  Shortcuts  Services, scroll down to General, selectbr Fix Bad URL, click Add Shortcut and type: kbd⌘/kbdkbdB/kbd  img src="https://i.stack.imgur.com/EfQu5.png" alt="Fix Bad URL Automator Service"  hr  AppleScript emcode/em for the Automator Service:  precodeon badURL()     try         --    # Put the bad URL on the Clipboard.         tell application "Safari"             activate             delay 0.5             tell application "System Events"                 key code 37 using {command down} # ⌘L                 delay 0.5                 key code 8 using {command down} # ⌘C                 delay 0.5             end tell         end tell         --    # Retrieve the bad URL from the Clipboard.         set theBadURL to get (the clipboard)         --    # Trim the first eight characters off of 'theBadURL'.         --    # This is done because the bad URL can have an occurrence of both 'http' and 'https' in the string in either         --    # order and by trimming off, it lessens the amount of logic necessary to build a good URL from the bad URL.         --    # The good URL, after all, is going to be built from what's after the second occurrence of either one.          --    # Test first for 'https' then 'http', as that makes more sense logically to do so.                     set theBadURL to do shell script "awk 'BEGIN { print substr(\"" &amp; theBadURL &amp; "\", 9) }'"         --    # Build the good URL from the bad URL.         set theGoodURL to do shell script "awk -F 'https.*//' '{print $2}'&lt;&lt;&lt;" &amp; quoted form of theBadURL         if theGoodURL is not equal to "" then             set theGoodURL to "https://" &amp; theGoodURL         else             set theGoodURL to do shell script "awk -F 'http.*//' '{print $2}'&lt;&lt;&lt;" &amp; quoted form of theBadURL             if theGoodURL is not equal to "" then                 set theGoodURL to "http://" &amp; theGoodURL             end if         end if         return theGoodURL     on error eStr number eNum         display dialog eStr &amp; " number " &amp; eNum buttons {"OK"} default button 1 with icon caution         return     end try end badURL  on run     try         tell application "Safari"             activate             set thisTabsURL to (get URL of current tab of window 1)             --    # Check for bad URL and if found, build a good URL from it.             tell current application                 if thisTabsURL contains "file:" then                     set theGoodURL to my badURL()                     tell application "Safari" to set the URL of the front document to theGoodURL                 end if             end tell         end tell     on error eStr number eNum         display dialog eStr &amp; " number " &amp; eNum buttons {"OK"} default button 1 with icon caution         return     end try end run /code/pre  hr  Note that while I tested this under OS X 10.8.5 and macOS 10.12 and it did work under my test conditions, nonetheless it may not work properly every time under every condition and hence why the codetry/code and codeon error/code emstatements/em are being used in the emcode/em. Hopefully this will trap any error(s) with appropriate output to then enhance the emcode/em to handle any error(s) that didn't occur during my testing.  <comment331130> You should look into Safari Extensions. <comment331253> I don't know weather or not your saw the answer I posted however I've deleted it because after I wrote it I saw that the URL in your example was not just the root URL doubled but the root URL plus the linked URL (I guess is the best way to put it). So the _logic_ I was using wan't going to work properly. I'll do some more testing and if I like what I end up with I'll edit and undelete the answer. <comment331256> You said "In the example, you can see that `"http://sports.yahoo.com"` and that is not true as your example has `http://` first and then `https//`, note the `s` in the second one is not in the first and the second is missing the `:`. So if what you've posted is a typo, please edit your question posting an exact bad URL copied from Safari when you get. <comment332293> Okay, I finally got a chance to look back at this question and modify the original answer I deleted. Hopefully this will work out for you.