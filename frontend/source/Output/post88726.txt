In Mountain Lion why do remote shells via ssh do NOT inherit the environment of the launchd parent process? <body> When logging in to my Mountain Lion Mac remotely via codessh/code I do not get the same codePATH/code variable as when I open a shell locally: The local shell inherits its environment as expected from codelaunchd/code and therefore has the PATH value I set in code/etc/launchd.conf/code.   With the remote shell I hit a surprise: When I open a shell via codessh/code it does strongnot/strong inherit the environment variables set in code/etc/launchd.conf/code although the related codessh/code processes all have codelaunchd/code as their parents. Why???  A cut from a  codeps -ef/code output shows:  precodeUID   PID  PPID   C STIME   TTY           TIME CMD   0     1     0   0 Mon01PM ??         9:07.07 /sbin/launchd . . . 501   150     1   0 Mon01PM ??         0:17.99 /sbin/launchd . . . 501 39994   150   0 Thu11AM ??         0:00.72 /usr/bin/ssh-agent -l . . .   0 74002     1   0  2:08PM ??         0:00.05 /usr/sbin/sshd -i 501 74005 74002   0  2:08PM ??         0:00.00 /usr/sbin/sshd -i 501 74000  9844   0  2:08PM ttys000    0:00.02 ssh bridge@bridgethegap.local /code/pre  I can fix the issue by setting codePATH/code e.g. in code.bashrc/code, but I'm in search for a way to give the same codePATH/code to emall/em applications launched under Mountain Lion (see In Mountain Lion how do I set the PATH environment variable...).  So my question is: Why do remote shells via ssh do not inherit the launchd environment?  <answer133287> I've looked for an answer too and eventually found a related answer to this question, How to set system-wide environment variables on OS X Mavericks.  It is a security measure, particularly to ensure secure shell users with a disabled shell, where codeSHELL/code is set to code/bin/false/code, cannot gain unsolicited access.   One workaround is settting codePermitUserEnvironment/code in your ssh config; please read security caveats in above mentioned answer before doing this.  <comment157937> While this link may answer the question, it is better to include the essential parts of the answer here and provide the link for reference. Link-only answers can become invalid if the linked page changes. <comment159184> Good idea: I've just tried to add this info from the other answer in - but it needs to be peer reviewed... <comment160177> Peer-review passed - answer now more helpful. :-)