iOS: Where is /proc/? <body> Where is code/proc//code in iOS? Or rather, why is it absent from the root directory structure?br It's typically a crucial interface to the kernel of any UNIX-like operating system; what else is in place to assume this role?br FYI: Following is the main system information and root directory structure of the device in question.  precode biPhone:~ mobile$ /buname -a                        Darwin Kernel Version 14.0.0:  Wed Jun 24 00:46:37 PDT 2015; root:xnu-2784.30.7~30 RELEASE_ARM_S5L8950X iPhone5,2 N42AP                                          /code/pre  hr  precode biPhone:~ mobile$/b find / -maxdepth 1 / /.Trashes /.file /.fseventsd /.ppuntether_inst /Applications /Developer /Library /System /User /bin /boot /cores /dev /etc /lib /mnt /ppuntether /private /sbin /tmp /usr /var /code/pre  <answer277943> code/proc/code is a pseudo-structure which is available on a lot of Unix systems but not on any version of OS X/macOS or iOS.  Kernel internals accessible through code/proc/code are usually accessible by other means (either with some Terminal command or involving some ObjC/Swift coding) on Apple's iOS/watchOS/tvOS/macOS family of OS that all basically run on top of Next and then Apple's evolution of the Mach microkernel which is the XNU kernel.  <comment350214> Thats not right, it's a Unix thing (Solaris is one example). And `/proc/` is present in older releases of MacOSX; including my old MacBook Pro from 2006 (running Mountain Lion, I think), that refuses to die. Also, there are plenty of pseudo-files present in current versions of iOS & MacOS; in other directories (like `/dev/`, for instance). Just so you know. <comment350275> @tjt263 are you sure that the /proc on ML contains anything useful and is really part of the standard installation? <comment354519> I'm curious what the larger picture is. How are you going about accessing the raw filesystem on iOS and why is /proc your goal? As you know, the Mach Kernel never has had /proc for exposing kernel structures, settings or data and that kernel became OS X kernel which is now iOS kernel. <comment354520> @tjt263 [XNU](https://opensource.apple.com/source/xnu/) code are able to compile on top of linux, so my thoughts are that any /proc is leakage from that effort and not an intent to adopt `/proc` style introspection into kernel details on macOS let alone on iOS. The thought of Apple exposing kernel internals on iOS seems to go very much against the stream of designing the system services to be abstracted / sandboxed and accused only through SDK and standard calls as far as iOS developers and customers are concerned.