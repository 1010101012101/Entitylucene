Cumulative drive access per process over time? <body> I would like to isolate what processes are accessing drives the most over a given period of time with as much detail as possible as far as even seeing kernel level access.  I have thought about running codefs_usage/code or codeiosnoop/code and then passing the output through a script to process it, but I figure that there must be a better solution already floating around.    Or am I overthinking this and should I just rely on codeActivity Monitor/code - Disk tab for activity per process?  I worry that the latter won't be sufficient since I have this fear of missing out on codevm/code / drive thrashing and other possible kernel activity that will not show up here.  Any thoughts?  <comment246755> May I ask why you are trying to monitor the drive? <comment246840> In my particular case I have an interesting scenario where 10.11 is seemingly thrashing rather heavily on my manually built hybrid fusion volume.  There is so much drive activity in the aforementioned tools that it is nigh impossible to isolate what processes are really being most active.  I am thinking that I will put in another SSD to take the brunt of system activity and hopefully make things calm down a bit; at present I also believe that Apple has a faulty priority control system for prioritizing SSD placed files on the SSD and also are faulty at fragmentation control on fusion drives. <comment246976> So ultimately the goal here is to find out which applications and folders should be moved to the other SSD and symlink'd over and I need to find aggregated quantities to ascertain which would be necessary for a smaller SSD situation.