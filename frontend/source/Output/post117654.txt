Piping multiple commands <body> I would like to run the following command and pipe stout of both to TextEdit:  precodepmset -g; echo; pmset -g assertions | open -f -a TextEdit  /code/pre  This doesn't work, it only executes the latter:  How?  <answer117656> ()'s combine the commands into a single process, concatenating them to stdout:  precode(pmset -g; echo; pmset -g assertions) | open -f -a TextEdit /code/pre  <answer117657> Aahhh, codebash/code redirection :-   precode( pmset -g &amp;&amp; echo &amp;&amp; pmset -g assertions ) | open -f -a TextEdit /code/pre  That runs your commands as a single bash command (that's the effect of code&amp;&amp;/code) in a sub-shell (which is what wrapping it in the code()/code does) and redirects the output of the sub-shell into TextEdit for you. You technically don't have to use code&amp;&amp;/code instead of code;/code but the effect of changing it is that if any of the commands fail it will stop the entire chain at that point.  Note: In your example all the commands are being run (as you can prove by just running codepmset -g; echo; pmset -g assertions/code at the command line), it's just that you are applying the pipe to only the last one. That's why it needs to be run in a subshell.  Note: that you could replace the code|/code character with code&gt;/code and send the output to a file if you wish.  <comment190770> This little tip has been incredibly helpful. The ins & outs of built in commands/ special characters are scarcely documented. Thank you again.