Any way to set/add tags on a file with Applescript under Mavericks? <body> Trying to move some of my scripts over from labels to tags under Mavericks, but I can't seem to find a way to set/add tags with Applescript.  Anybody that know how to do this? As far as I can figure tags aren't actually new, just new in terms of being a more central part of the updated Finder.  <answer106824> You can use xattr. This copies the tags from file1 to file2:  precodexattr -wx com.apple.metadata:_kMDItemUserTags "$(xattr -px com.apple.metadata:_kMDItemUserTags file1)" file2 xattr -wx com.apple.FinderInfo "$(xattr -px com.apple.FinderInfo file1)" file2 /code/pre  The tags are stored in a property list as a single array of strings:  precode$ xattr -p com.apple.metadata:_kMDItemUserTags file3|xxd -r -p|plutil -convert xml1 - -o - &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;array&gt;     &lt;string&gt;Red 6&lt;/string&gt;     &lt;string&gt;aa&lt;/string&gt;     &lt;string&gt;Orange 7&lt;/string&gt;     &lt;string&gt;Yellow 5&lt;/string&gt;     &lt;string&gt;Green 2&lt;/string&gt;     &lt;string&gt;Blue 4&lt;/string&gt;     &lt;string&gt;Purple 3&lt;/string&gt;     &lt;string&gt;Gray 1&lt;/string&gt; &lt;/array&gt; &lt;/plist&gt; /code/pre  The tags for colors have values like codeRed\n6/code (where code\n/code is a linefeed).  If the kColor flag in com.apple.FinderInfo is unset, Finder doesn't show the circles for colors next to files. If the kColor flag is set to orange and the file has the red tag, Finder shows both red and orange circles. You can set the kColor flag with AppleScript:  precodedo shell script "xattr -w com.apple.metadata:_kMDItemUserTags '(\"Red\\n6\",\"new tag\")' ~/desktop/file4" tell application "Finder" to set label index of file "file4" of desktop to item 1 of {2, 1, 3, 6, 4, 5, 7} /code/pre  code'("Red\n6","new tag")'/code is old-style plist syntax for this:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;array&gt;     &lt;string&gt;Red 6&lt;/string&gt;     &lt;string&gt;new tag&lt;/string&gt; &lt;/array&gt; &lt;/plist&gt; /code/pre  codexattr -p com.apple.FinderInfo file|head -n1|cut -c28-29/code prints the value of the bits used for the kColor flag. Red is C, orange is E, yellow is A, green is 4, blue is 8, magenta is 6, and gray is 2. (The flag that would add 1 to the values is not used in OS X.)  <answer168650> The answer has been posted on the Applescript user list:  http://lists.apple.com/archives/applescript-users/2015/Jan/msg00193.html  hr  emquote from page- code written by Shane Stanley/em     You can do it easily enough with AppleScriptObjC. Here's are handlers   to retrieve tags, set tags, and add tags:   precodeuse scripting additions use framework "Foundation"  on returnTagsFor:posixPath -- get the tags     set aURL to current application's |NSURL|'s fileURLWithPath:posixPath -- make URL     set {theResult, theTags} to aURL's getResourceValue:(reference) forKey:(current application's NSURLTagNamesKey) |error|:(missing value)     if theTags = missing value then return {} -- because when there are none, it returns missing value     return theTags as list end returnTagsFor:  on setTags:tagList forPath:posixPath -- set the tags, replacing any existing tags     set aURL to current application's |NSURL|'s fileURLWithPath:posixPath -- make URL     aURL's setResourceValue:tagList forKey:(current application's NSURLTagNamesKey) |error|:(missing value) end setTags:forPath:  on addTags:tagList forPath:posixPath -- add to existing tags     set aURL to current application's |NSURL|'s fileURLWithPath:posixPath -- make URL     -- get existing tags     set {theResult, theTags} to aURL's getResourceValue:(reference) forKey:(current application's NSURLTagNamesKey) |error|:(missing value)     if theTags â‰  missing value then -- add new tags         set tagList to (theTags as list) &amp; tagList         set tagList to (current application's NSOrderedSet's orderedSetWithArray:tagList)'s allObjects() -- delete any duplicates     end if     aURL's setResourceValue:tagList forKey:(current application's NSURLTagNamesKey) |error|:(missing value) end addTags:forPath: /code/pre     If you save it them in a script library, you can also use them from   Mavericks.      --  Shane Stanley www.macosxautomation.com/applescript/apps/   <comment126020> are the "tag images" .PNGs or color-rendered graphics? couldn't find something like "C.png" on the harddisk :)