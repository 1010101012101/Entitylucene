error: There was a problem with the editor 'vi' when using it with git <body> I have this strange problem with using codevi/code as the editor for codegit commit -a/code.  Normal flow is: I type codegit commit -a/code, codevi/code appears, I enter my commit message, and then code:wq/code to save &amp; exit from codevi/code.  This works fine. However, sometimes I make a typo and instead of code:wq/code I type code:Wq/code (because I use the shift for code:/code). Then, when I correct myself and type code:wq/code again, codegit/code gives the following error:  precodeerror: There was a problem with the editor 'vi'. Please supply the message using either -m or -F option. /code/pre  How can I fix this?  <answer57868> codevi/code is existing with a non-zero status, although without additional details about your setup, it's difficult to tell why. If you're using a lot of plugins to codevim/code, you might try moving your code.vimrc/code file to code.vimrc.back/code and seeing if you can replicate. There are a few sources that discuss this problem, including at least one with a potential solution:  precodegit config --global core.editor /usr/bin/vim /code/pre  I would try removing your code.vimrc/code first, however. It seems to cause more consternation.  <answer128558> Do you use the golang vim plugins? This line is causing the vi exit value problem for me: codefiletype plugin indent off/code  Removing the whole golang plugin block in code.vimrc/code fixed the problem. Installing the golang plugin using fugitive can be as easy as: codeln -s $GOROOT/misc/vim ~/.vim/bundle/vim-golang/code  (I just documented the problem in this issue on the vim-golang github)  <answer148161> As answered here: https://stackoverflow.com/questions/22699614/git-commit-messages-lost-by-vi  The real solution is to   precodegit config --global core.editor vim -f /code/pre  According to vim documentation - code-f option should be used when Vim is executed by a program that will wait for the edit session to finish/code  <answer257928> Something is wrong with Git config I guess.    So the solution is to reset Git config and it worked for me:  precodegit config --global core.editor $(which vim) /code/pre  code$(which vim)/code is more flexible than code/usr/bin/vim/code (vim executable may not be there for some people)  <comment66447> What version of `git` and `vi`? I can't repro this with vim 7.3, git version 1.7.11.1. <comment66480> @Christopher : vi `7.3` and git `1.7.9.6 (Apple Git-31.1)`, the default ones on Mountain Lion afaik <comment66628> Thanks, `git config --global core.editor /usr/bin/vim` fixed it. <comment182407> Finally... this is the right solution.  It also fixes the problem of hitting `:W` and having git reject your commit message when you subsequently save it. <comment333648> A solution that's actually a solution and not some lame workaround! I really hope people that read the accepted answer understand the difference between their normal `vim` invocation and the hack they're using. <comment333649> @applOOb's solution is better, since it's not a hack like this one.