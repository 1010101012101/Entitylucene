How to make items copied into a folder respect its permissions? <body> I shared a folder of pictures on my OSX 10.6 MacBook with my wife, who accesses it from her 10.5 MacBook.  I created an account for her and gave her read/write permissions on the folder (via the Get Info).  However, when Image Capture dumps new images into the folder, they aren't readable or writeable by her.  I have to click 'Apply To Enclosed Items' for her to get access to them.  I want any file created or copied into that folder to be automatically readable and writeable by her.  Is there a way to set this up?  Thanks!  <answer12767> I am not familiar with OS X per se, but this is more a problem with Unix's non-ability to allow you to set default permissions.  And because OS X is based off of Unix, they have similar problems.  There are a few workarounds, but they all take a lot of setup time.  Try looking for codeinherit permissions linux/code to see some solutions.    The problem is that Unix uses umask (default permissions for files and folders) when new files/folders are created.  An article on a possible work around is here: http://bashscript.blogspot.com/2010/03/creating-user-group-and-shared.html  <answer12772> There's an option for and access control entry (the thing you created in Get Info) to be inherited, but Get Info doesn't give you the option to enable it.  Also, you'll want to make sure you have full access to items she's added/edited there, and the easiest way to do this is to create a group for the two of you, and allow access to all group members.  ol liCreate a group (in System Preferences - Accounts pane), and check the boxes to make both yourself and your wife members./li liOpen the Terminal utility, and run the command:  precodechmod +a "group:admin allow list,add_file,search,add_subdirectory,delete_child,readattr,writeattr,readextattr,writeextattr,readsecurity,file_inherit,directory_inherit" /path/to/the/folder /code/pre  (replacing /path/to/the/folder with the unix-style path to the folder you want to grant access to.  If you aren't sure what that is, just paste in the rest of the line, including the space before /path/to/the/folder, and then drag-and-drop the folder from the Finder into the Terminal window, and it'll paste in the path for you.)/li liThe access control entry you just created will be applied to new files and subfolders created inside that folder, but won't apply to the files and subfolders that're already there.  So, Get Info on the folder and use the Apply to enclosed items option to apply it to the existing items./li /ol  <comment13394> excellent answer! Thanks very much for this. I didn't know about the '*attr' stuff. Is that Spotlight metadata? <comment13397> Is her account a regular account, or a sharing-only account? Also when you do a get-info from her machine on the folder or files in question, what does it say about the level of access she has ("you can only read", etc.)? <comment13401> @boehj: Thanks. I'm not sure exactly what read/writeattr control, but read/writeextattr control a newish feature which allows arbitrarily-named attributes to be added to a file (e.g. a file downloaded with Safari will have "com.apple.quarantine" and "com.apple.metadata:kMDItemWhereFroms" xattrs, indicating it came from an untrusted source, and what that source was).  These aren't particularly related to Spotlight, which gets most of its info from looking into the file's contents (as well as some file metadata like name and modify time). <comment13413> Wow, thanks!  Reading more about chmod +a [here](http://ss64.com/osx/chmod.html), it seems like there's a few attributes you didn't include: delete, writesecurity, chown, append, execute.   Do you know if it would be useful to include any of those in your most excellent command? <comment13428> @Dean Moses: I don't think those would be needed: delete is granted implicitly if the parent folder has delete_child (it should), writesecurity & chown are only needed if you want to be able to change premissions/ownership on each other's files, and append  & execute can only be applied to individual files, not folders (and since we're setting this on a folder...) <comment13466> you da bomb