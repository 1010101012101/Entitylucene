'mdls' and 'mdimport' interaction: good practice question <body> Am I correct to assume that, in order to ensure a query in the terminal such as:  precodemdls -name kMDItemContentCreationDate /var/log/system.log /code/pre  always returns the actual creation date of said file (provided it exists), I should always force Spotlight to import this information first via:  precodemdimport -r /var/log/system.log /code/pre  ?  I am interested strictly in obtaining, from the Terminal, that specific piece of data.   This seems to be the conclusion based on another SOV post, especially since the Spotlight indexing may ignore some folders.   <answer224200> I would use codestat/code instead of codemdls/code on a system running the 64bit kernel.  precodestat -f "%B" file /code/pre  will return the creation date or birthtime in seconds since epoch (Unix/Epoch time). A human readable output can be produced with  precodestat -f "%SB" file /code/pre  You can also format the output of this command by adding the -t option (see man 3 strftime).  On a system running the 32bit kernel, you need to use codeGetFileInfo/code.  precodeGetFileInfo -d file /code/pre  The output from codeGetFileInfo/code can be converted to Epoch time by running the output though the codedate/code command.  precodecdate=$(GetFileInfo -d file) date -j -f "%m/%d/%Y %H:%M:%S" "$cdate" +%s /code/pre  <comment271748> I've never seen mdls fail to retrieve something as basic as creation date. Do you have a reproducible situation where your indexing is broken for an ongoing basis? Maybe fixing spotlight with `mddiagnose` would be easier than forcing an import for every query - but I guess if you do the query seldom, it might not be a large performance hit. <comment271755> Oh no - I didn't stumble upon such a case. All I am trying to do is to "bullet proof" my approach...by "doing the right thing". I am writing some scripts that will deploy a product on a non-trivial # of systems  and I am relying on this information (overwrite an older version of the file with a newer one). This should happen for exactly two files, when an app starts...typically once or twice a day. Thank you.