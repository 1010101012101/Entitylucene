How to update App Store application from command line? <body> I would like to force an update of App Store applications from the command line.   How can I do this?   <answer15616> Apple doesn't supply a command line helper or any scriptable cocoa classes you can latch on to for automation. Unlike the overall software update, which allows updates and installs out of the box, you can script the process of clicking buttons with a mouse using Automator.  However, the app store has been reverse engineered and released open source as well as a binary form:  ul lihttps://github.com/argon/mas/li /ul  The install is quick and it appears to be quite reliable on the current version of OS X 10.11:  precodebrew install argon/mas/mas  /code/pre  With the source released, I would expect some other implementations of this tool to pop up, perhaps even one scripted with python.  If someone is logged into the mac (windowmanager is running), you can use Automator and the "watch me do" function to automate updates and storing your store password in the script fairly insecurely.  Here are two tutorials to get you started if this meets your needs.  http://www.tuaw.com/2009/01/19/mac-automation-creating-watch-me-do-workflows/  http://automator.us/leopard/features/virtual-user.html  Once you have a working script, you can use the command line codeopen/code command to kick it off.   If the App Store app ever exposes that function to scripting you will have more options from the command line. It would be easy to use codesdef/code, codesdp/code and codegen_bridge_metadata/code to dump the entire scriptable dictionary and script things using ruby from the command line, but at present the best option would be to use the codemas/code command line tool.  <answer128150> The App Store is simply not suitable for administration. Barely a quasi-package manager, it is not nearly as useful or reliable as real package managers like pkgsrc, FreeBSD ports, aptitude, RPM, macports or even softwareupdate. In my experience, it is unpredictable and a beard for commercial developers to hock their wares. So there is really only one rational and responsible way, as a competent administrator, to work with App Store:  precode sudo launchctl unload -w /System/Library/LaunchAgents/com.apple.store_helper.plist   sudo launchctl unload -w /System/Library/LaunchAgents/com.apple.storeagent.plist   sudo mkdir /System/Library/LaunchAgents\ \(disabled\)/   sudo mv /System/Library/LaunchAgents/com.apple.store* /System/Library/LaunchAgents\ \(disabled\)/ /code/pre  And just put it out of your mind, it won't trouble you any longer. ;-)  hr  Use ARD instead, though not a package manager, it manages packages, installations, updates, and upgrades, it will do what you want, save you time, and will not let you down:  For Apple Remote Desktop 3, for 10.9:  Check out the admin guide first to convince yourself that this is the way to go:  precodecurl -Ok http://images.apple.com/ca/fr/remotedesktop/pdf/ARD3_AdminGuide.pdf      open ARD3_AdminGuide.pdf /code/pre  Then install:  precodecurl -Ok http://supportdownload.apple.com/download.info.apple.com/Apple_Support_Area/Apple_Software_Updates/Mac_OS_X/downloads/031-2845.20140313.rerft/RemoteDesktopAdmin372.dmg  hdiutil attach -quiet -noverify -nobrowse -noautoopen RemoteDesktopAdmin372.dmg  sudo installer -pkg /Volumes/Apple\ Remote\ Desktop\ 3.7.2\ Admin\ Update/RemoteDesktopAdmin372.pkg -target / /code/pre  but that might throw a funny error if not running 10.9, or if no previous version of ARD is installed, and if it does, try:  precodepkgutil --expand /Volumes/Apple\ Remote\ Desktop\ 3.7.2\ Admin\ Update/RemoteDesktopAdmin372.pkg ARDexpanded/ /code/pre  or to equal effect (either/or here, don't need to use both pkgutil and xar... I'm just being thorough):   precodemkdir ARDexpanded  cd ARDexpanded  xar -xf /Volumes/Apple\ Remote\ Desktop\ 3.7.2\ Admin\ Update/RemoteDesktopAdmin372.pkg /code/pre  And we no longer need the disk image attached, so eject it:  precodehdiutil detach -quiet /Volumes/Apple\ Remote\ Desktop\ 3.7.2\ Admin\ Update/ /code/pre  And now what you'll see if you  precodecd ARDexpanded/RemoteDesktopAdmin372.pkg/  ls /code/pre  is    precode    Bom         PackageInfo Payload     Scripts /code/pre  What's in the Payload file, which is a cpio archive compressed with gzip, is what you're after. So with a few piped commands we can get to the app bundle:  precodecat Payload | gzip -d - | cpio -id  ls /code/pre  returns:  precode    Applications Bom          Library      PackageInfo  Payload      Scripts /code/pre  And you're nearly done.  precodecp -R Applications/Remote\ Desktop.app /Applications/ /code/pre  Now you have installed Apple Remote Desktop Admin 3.7.2  So all that's left to do is purchase your license:  precodeopen http://store.apple.com/us_smb_78313/product/D6020Z/A/apple-remote-desktop-3-volume-licenses-20-seats-price-is-per-seat /code/pre  Launch /Applications/Remote\ Desktop.app and serialize. And get some work done.  hr  For 10.6 Snow Leopard, you'll need a slightly earlier version of ARD:  precodecurl -Ok http://images.apple.com/ca/fr/remotedesktop/pdf/ARD3_AdminGuide.pdf  curl -Ok http://supportdownload.apple.com/download.info.apple.com/Apple_Support_Area/Apple_Software_Updates/Mac_OS_X/downloads/041-6789.20120917.xD6TR/RemoteDesktopAdmin353.dmg  hdiutil attach -quiet -noverify -nobrowse -noautoopen RemoteDesktopAdmin353.dmg  sudo installer -pkg /Volumes/Apple\ Remote\ Desktop\ 3.5.3\ Admin\ Update/RemoteDesktopAdmin353.pkg -target / /code/pre  and if it throws back at you this:  precode    installer: Cannot install on volume / because it is disabled.     installer: This update could not find Remote Desktop on this volume. /code/pre  then try:  precodepkgutil --expand /Volumes/Apple\ Remote\ Desktop\ 3.5.3\ Admin\ Update/RemoteDesktopAdmin353.pkg ARD353  hdiutil detach -quiet /Volumes/Apple\ Remote\ Desktop\ 3.5.3\ Admin\ Update /code/pre  drill down to the Payload:  precode    cd ARD353/RemoteDesktopAdmin353.pkg/      ls /code/pre  returns:   precode    Bom         PackageInfo Payload     Scripts /code/pre  So run:  precodecat Payload | gzip -d - | cpio -id  ls /code/pre  returns:   precodeApplications Bom          Library      PackageInfo  Payload      Scripts /code/pre  And you're nearly done:  precodecp -R Applications/Remote\ Desktop.app /Applications/ /code/pre  purchase your license:  precodeopen http://store.apple.com/us_smb_78313/product/D6020Z/A/apple-remote-desktop-3-volume-licenses-20-seats-price-is-per-seat /code/pre  Launch /Applications/Remote\ Desktop.app and serialize. And get something done.  <answer201742> You can use the codesoftwareupdate/code tool.  precodesudo softwareupdate -l /code/pre  Lists all available updates.  precodesudo softwareupdate -ia /code/pre  Installs all available updates.  <comment14701> There doesn't appear to be a command line helper like the overall software update so you may be limited to launching a script that will automate the GUI commands. Would you edit the question to clarify if you expect the "working" solution to be a terminal only or if an Automator script that will key in your password when asked is what you are looking for. <comment37744> Wow, this is really annoying. The usual software updates are easily scriptable using softwareupdate(8). <comment84830> I just wanted to state for the record - It's clear Apple has consciously decided to make it hard / not provide any tool or hook or assistance for automating App Store installs and updates. The core system still has the `softwareupdate` process and it even hooks into the App Store on Mountain Lion - but it's only for non App Store apps. <comment84838> I am looking for something unattended, still if this requires the AppleID id/password I find ok to include it in the script. <comment150226> Great answer, I learned a bunch of new things I can do in the Terminal. +1 <comment279404> Also see http://apple.stackexchange.com/questions/42353/can-mac-app-store-installs-upgrades-be-automated for a solution that calls a third party app