What are the numerous incoming connections I see on public wifi for? <body> In general I have incoming connections disabled by my security software (Little Snitch). But even when I do this, on public wifi, I see numerous incoming connections for codenetbios/code and codemDNSResponder/code allowed automatically.  For example, at a recent hotel stay, I was confronted with a long list as soon as a logged on to the wifi there (listed as automatically allowed by Little Snitch)  img src="https://i.stack.imgur.com/QItx0.png" alt="enter image description here"  which quickly grew to the thousands  img src="https://i.stack.imgur.com/dY4x6.png" alt="enter image description here"  What are these incoming connections for? Why are they being automatically allowed? Are they a security threat?  hr  Note that if I explicitly block all of these connections using Little Snitch, my network access fails, but the network still seems to function when I alternatively block incoming connections using Apple's (OS X 10.9) firewall  img src="https://i.stack.imgur.com/ElboB.png" alt="enter image description here"  and enable stealth mode  img src="https://i.stack.imgur.com/ICMBa.png" alt="enter image description here"  <answer113870> I'm not sure how comfortable you are with the command line, but here goes.  codenetstat/code is a command which shows (among other things) the ports that are open.  So first I open Terminal (in Applications/Utilities) and then codenetstat/code to can see a list of established connections (22 in my case).  It tries to resolve the local and foreign addresses, so here I can see the browser connections to codestackoverflow.com/code:  precodevger.local:~(14)+&gt;- /usr/sbin/netstat -a | fgrep stackoverflow tcp4       0      0  10.1.1.80.57905        stackoverflow.co.http  ESTABLISHED tcp4       0      0  10.1.1.80.57891        stackoverflow.co.http  ESTABLISHED tcp4       0      0  10.1.1.80.52015        stackoverflow.co.http  ESTABLISHED vger.local:~(15)+&gt;-  /code/pre  (codefgrep/code is used here to filter the output to just those lines containing the string I am searching for.)  The code10.1.1.80/code is the IP of my desktop and the number after it is the TCP port.  So now I can use codelsof/code to see what program has that port open:  precodevger.local:~(15)+&gt;- /usr/sbin/lsof -i TCP:52015 COMMAND PID    USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME firefox 631 pkearns   64u  IPv4 0x552e1c664da13fcb      0t0  TCP 10.1.1.80:52015-&gt;stackoverflow.com:http (ESTABLISHED) vger.local:~(16)+&gt;- /code/pre  Firefox, no surprises there.  If you have the numbers of the ports (connections) being held open then you can use codelsof/code to see what process/programme is holding them open.  <answer119631> h1netbios/h1  You could block the codenetbios/code connections with codeLittle Snitch/code. These connections are connections attempt most usually coming from Windows sharing the same Wi-Fi network and testing which share and printers are available on your computer. This protocol behaves like a guy entering a new building and testing all door knobs, when the door opens he asks: What's your name? What do you share? Do you print? This protocol is stupid, and dangerous, but most notably for Windows. This protocol is the leading vector of malware broadcast inside LAN of companies using Windows since more than 20 years (toward the floppies era). This protocol is responsible of the largest security damages within big companies.  codenetbios/code is a strongsecurity threat/strong.  On all my Mac I tear off this service (codenetbiosd/code), during the post installation procedure (see: â€¦to disable WINS in Network settings, working on 10.7, 10.8, 10.9).  h1mDNSResponder/h1  You couldn't and shouldn't block the codemDNSResponder/code because you would break the normal working of the DNS on your Mac. I.e. you won't be able to find the IP address of codewww.microsoft.com/code.  codemDNSREsponder/code isn't a strongsecurity threat/strong (today).  h1Firewall setting/h1  Your method to block connection through the MacOS X firewall is the correct and safe one within any aggresive environment.  <comment133531> As far as I know `netbios` and `mDNSresponder` are system services that, among other things, gather information on who else is on the network such that services like file and printer sharing can work. The connections are not harmful (as far as I know). I'm not sure why Little Snitch allows them by default. <comment139543> Can you describe how to "tear off" `netbiosd `?