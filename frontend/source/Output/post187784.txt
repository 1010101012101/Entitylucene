Terminal backslash input repeated in output <body> I'm using zsh on a MacBook Pro, OS X 10.10. When I type in certain commands, such as this one:  precodecat myfile | awk -F $'\t' '{print $8, $9}' | sort | uniq -c | sort -k1,1n | awk '{if ($1 &gt; 50) sum += $1} END {print sum}' /code/pre  , then part of the command is repeated before the actual output of the command. The output in this case looks like:  precode    " '{print $8, $9}' | sort | uniq -c | sort -k1,1n | awk '{if ($1 &gt; 50) sum += $1} END {print sum}' : myusername2525 /code/pre  Does anybody know how to get of the jumbled output? It kind of looks like a format string vulnerability or something similar to me.  <answer187865> The problem is the code$/code in the first codeawk/code statement in the chain:  precodeawk -F $'\t' '{print $8, $9}' /code/pre  The code-F/code option for codeawk/code sets the record separator for your input. If you're really expecting the separator to be a dollar sign followed by a tab character you should move the dollar sign in to the single quotes like so:  precodeawk -F '$\t' '{print $8, $9}' /code/pre  Leaving the code$/code outside the single quotes means it's being interpreted by the shell as a variable reference. This is what's leading to your weird output. If you aren't expecting a dollar sign in the field separator, only a tab, change the codeawk/code call to:  precodeawk -F '\t' '{print $8, $9}' /code/pre  Based on what you've said, the above appears to be what you want.  <comment222059> The problem is the `$` in the first `awk` statement -- what are you trying to achieve with that that whole `awk -F $'\t' '{print $8, $9}'`? Are you really expecting your field separator to be a dollar sign followed by a tab character? Or are you trying to use `$` to denote the start of the line? <comment222062> I dunno, I had some problems with the escaped tab character a while ago and some people put a dollar sign before strings with escaped characters, so I thought this was standard behavior <comment222063> In any case, it's kinda strange that it just prints half the string back