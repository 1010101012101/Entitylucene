iPhoto and Python 2.6 <body> I eradicated python 2.6 from my MacBook pro. Of course I did this before realizing iPhoto was dependent on it.  How do I point iPhoto to my newly installed version of Python?  This is the relevant error:  precodeDyld Error Message:   Library not loaded: /System/Library/Frameworks/Python.framework/Versions/2.6/Python   Referenced from: /Applications/iPhoto.app/Contents/MacOS/iPhoto   Reason: image not found /code/pre  When attempting a symlink to my Python executable, I get the following:  precodeDyld Error Message:   Library not loaded: /System/Library/Frameworks/Python.framework/Versions/2.6/Python   Referenced from: /Applications/iPhoto.app/Contents/MacOS/iPhoto   Reason: no suitable image found.  Did find:     /System/Library/Frameworks/Python.framework/Versions/2.6/Python: mach-o, but wrong architecture     /System/Library/Frameworks/Python.framework/Versions/2.6/Python: mach-o, but wrong architecture /code/pre  <answer114196> The python bin is located in code/usr/bin/python/code  You should try a symlink codeln -s /your/path/to/python /usr/bin/python//code  <answer117741> What processor do you have in your machine? The error message implies that the binary you are pointing to is either a Universal binary (and it does not expect it) or that it's a PowerPC binary where you have an Intel Mac (or vice-versa).  Use the 'file' command to see what binary you have there. This is what mine looks like (vanilla Mavericks install):   precodeMacBookPro:bin $ file /usr/bin/python /usr/bin/python: Mach-O universal binary with 2 architectures /usr/bin/python (for architecture x86_64):  Mach-O 64-bit executable x86_64 /usr/bin/python (for architecture i386):    Mach-O executable i386 /code/pre  ..so that's a Universal binary with Intel 32bit and Intel 64bit inside.  It looks like Anaconda for Mac only has 64bit support:  https://store.continuum.io/cshop/anaconda  ...if this is the case and you have a 32bit processor, that's the problem.  <answer140941> I had this same issue after i uninstalled the version of Python that came with the Mac OS and installed a new version with homebrew.  I fixed it by creating a symlink from where iPhoto thought python was suppose to be and where python actually was. Since I installed python with homebrew, the relevant python directory lived here:  precode/usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/ /code/pre  I created new /Python.framework/Versions directories in /System/Library/Frameworks/ and then ran this command to create the symlink:  precodesudo ln -s /usr/local/Cellar/python/2.7.8/Frameworks/Python.framework/Versions/2.7/ /System/Library/Frameworks/Python.framework/Versions/2.6 /code/pre  <answer140942> I would reinstall the OS from the boot DVD or recovery partition. This will put the Apple python back. This is the only place where the correct python executable is anywhere else but apple supplied media will have a different python on - e.g. it will have its framework in a different place  I would not use any non apple supplied python for use in Apple tools as APIs and bugs etc could have changed.  It is relatively easy to have more than one version of python (especially if they are different version numbers) on an OSX box.  The usual general comment is not to replace Apple supplied code, leave all this as part of the OS and just install other versions elsewhere  <comment133869> I already have a link in the bin to the new path. I pasted the relevant error in the original post. <comment133883> Then maybe symlink your new 2.6 Python to `/System/Library/Frameworks/Python.framework/Versions/2.6` <comment133977> Unfortunately that did not work. See OP. <comment133979> How did you reinstall Python2.6 ? <comment133980> I didn't reinstall 2.6. I installed the Anaconda distribution and removed all other traces of Python on the system. Anaconda ships with 2.7.