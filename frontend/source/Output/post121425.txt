How can I get OSX Mavericks to notice a DNS change in `/etc/hosts`? <body> A common way to "block" a website (eg, to eliminate it as a distraction) is to edit code/etc/hosts/code and point the domain to the loopback address. Eg:  precode# Stop goofing off 127.0.0.1 youtube.com /code/pre  On Mavericks, I find that changes like this are seemingly ignored by the OS; after editing the file (with sudo) and saving, the site that should be blocked still loads.  I've tried resetting my DNS cache as follows:  precodedscacheutil -flushcache sudo killall -HUP mDNSResponder /code/pre  But the site still loads.  strongHow can I get OSX Mavericks to notice a change to code/etc/hosts/code?/strong  <answer121431> Delete your browsers cache and add code127.0.0.1  www.youtube.com/code to your host file.  codeyoutube.com/code resolves to codewww.youtube.com/code. Your browser is caching that information and redirects you to the www-page.  <answer121432> According to the the hosts(5) manual page, the code/etc/hosts/code file is used by codemDNSResponder/code. Your attempts are correctly flushing the computer wide cache but you also need to flush the browser's private cache.  After each edit of code/etc/hosts/code reset the codemDNSResponder/code cache using this Apple technical note, OS X: How to reset the DNS cache:  precodesudo dscacheutil -flushcache /code/pre  After doing this, reset your browser caches:  ul liSafari: use the menu item strongSafari/strong  strongReset Safari/strong./li liChrome: use the menu item strongChrome/strong  strongClear Browsing Data/strong./li /ul  <answer143319> In OS X 10.9 Mavericks, there are problems with trying to list multiple hostnames on the same line of /etc/hosts. I tried all of the other DNS-related tips in this post and the related post to no avail, until I stumbled on the "problems" link above.  I used to have something like this:  precode127.0.0.1 localhost host1 host2 host3 ... /code/pre  but I found that resolution of those hosts would either take forever or not work at all. Trying to access the sites via browsers would be generally OK (although sometimes very slow to resolve), but trying to ping from the command line would not work.  Changing it to the following format made everything work fine for me, and things now work great with ping, in the browser, and everywhere else:  precode127.0.0.1 localhost 127.0.0.1 host1 127.0.0.1 host2 127.0.0.1 host3 /code/pre  More details.  <answer176106> On top of Graham's answer, try chrome://net-internals/#dns (for Google Chrome) to see what is cached.  Then click Clear Host Cache to wipe it all out.  <comment141534> Could it be that it's the browser DNS cache that is not flushed? What IP does `ping youtube.com` use? <comment141545> This fixed it. Under Chrome's "Clear Browsing Data", there are checkboxes for types of data. "Empty the cache" is the relevant one. <comment184425> Side note: if you're using DNS to temporarily block sites, http://selfcontrolapp.com for OSX works nicely. It modifies the hosts file and seems to flush browser cache automatically. They also mention similar apps for other platforms: https://github.com/SelfControlApp/selfcontrol/wiki/FAQ