How can I config my Mac to don't scape characters when I copy and paste some text on the console? <body> Is there anyway to config my Mac to don't scape characters when I copy and paste some text on the console? Could anybody help me? It is driving me crazy to erase all \ characters inserted after a simple copy and paste on the console.  Many thanks, Thiago  <answer12683> If you are asking about pasting into windows of the emTerminal/em application (which is not the same as emConsole/em application; neither of which are the same as the actual “console”), then you can uncheck the strongEscape non-ASCII input/strong option in the “settings set” that you are using.  With emTerminal/em active, open the preferences: Press kbd⌘/kbd + kbd,/kbd or select the strongTerminal/strong  strongPreferences…/strong menu item.  ol liClick the strongSettings/strong icon in the tool bar of the preferences window./li liFrom the list on the left side of the preferences window,br select the “settings set” that you want to modify.  The settings set of the previously active emTerminal/em window will be initially selected./li liClick the strongAdvanced/strong tab./li liUncheck the strongEscape non-ASCII input/strong checkbox./li /ol  img src="https://i.stack.imgur.com/YaASD.png" alt="screenshot of Terminal Preferences window with mouse cursor on “Escape non-ASCII input” checkbox and numbered red arrows indicating steps to access the checkbox"  <comment13294> Do you mean "Escape"? Because scape is not a word. <comment13312> Yes, sorry, I mean escape. <comment31389> The OP mentioned backslashes, so I assume they're talking about the escaping (which should probably be called "quoting") performed by **Edit  Paste Escaped Text**, in which case the answer is to use the normal **Paste** command instead. <comment34434> “Escape non-ASCII input” does not perform backslash escaping like **Paste Escaped Text**. “Escape non-ASCII input” prefixes each non-ASCII character with a Control-V. In Bash and probably other shells, this “quotes” control characters, for example, so they aren’t interpreted as commands.