How is `cp -R` different from CTRL-C/CTRL-V? <body> My system is OS X El Capitan 10.11.5. I copied from my OS X Extended filesystem to FAT32 about 30 Gb files by kbdCtrl/kbd+kbdC/kbd / kbdCtrl/kbd+kbdV/kbd.   Now, I received a proposal to do it by codecp -R/code.   I am wondering how different it is from the kbdCtrl/kbd+kbdC/kbd and kbdCtrl/kbd+kbdV/kbd.   hr  How is codecp -R/code different from kbdCtrl/kbd+kbdC/kbd and kbdCtrl/kbd+kbdV/kbd?  <answer240063> When copying and pasting via Finder there is certain meta-data that is maintained that when usingbr codecp -R/code it's not.  An example is when copying and pasting via Finder the created/modified date/time stamp of individual files are maintained to that of the existing meta-date vs. using codecp -R/code where both the created/modified date/time stamp are set to the date/time of the copy operation.  On directories when copying and pasting via Finder the created date/time stamp is maintained to that of its current value and the modified date/time stamp is set to the date/time of the copy operation. vs. using codecp -R/code where both the created/modified date/time stamp are set to the date/time of the copy operation.  Now if you use codecp -aR/code the created date/time stamp is set to the date/time of the copy operation and the modified date/time stamp is maintained to it value it had at the time of the copy operation.  In essence copying and pasting via Finder maintains all meta-data attributes that are supported by the destination filesystem and to get the most possible meta-data attributes maintained using codecp/code then additional emoptions/em must be used.  Have a look at the codecp/code man page for additional command line emoptions/em.  FAT32 does not support all of the file attributes that HFS+ does, however copying via Finder preserves more then codecp/code regardless of the emoptions/em implemented.  <answer240074> cp and rsync have a lot of options that modify which attributes (ownership, unix permissions, POSIX ACLs, resource forks in some cases!) will be/will not be transferred/reset, and how certain types of files will be included/excluded, and how links to files or directories will be handled(copying the link vs copying what it points to). It is unlikely that just using -R will get the same behaviour as what you are doing with Finder.  Also: In Finder, you can only directly select things to copy emthat you can see/em OR which are inside a folder (or anywhere in the subfolder tree of it) that you can see and that you explicitly selected. Depending on your settings that could exclude anything prefixed with "." , and probably some other structures that Finder treats as special.  <comment294911> I do not think they are any different except one is more user-friendly than the other if one is not all that familiar with all the command line stuff; not a lot of people know how to interact with computers through shells nowadays. <comment294917> I need little more extensive answer because of the large amount of files which I copied. I want to know how similar chose two commands are. <comment294919> Is `cp -aR` equivalent to CTRL-C/CTRL-V in Finder? <comment294922> So you need at least `cp -paR` where `-p` preserves modificationTime/accessTime/fileFlags/fileMode/userID/groupID. I do not see any other option that could preserve something. <comment294924> `-a` is the same as `-pPR` actually. Also, `cp` *does not* copy any Finder comments stored in the *top* folder of the source hierarchy (which is due to the fact that comments are stored in a `.DS_Store` file in the same parent folder), Ctrl-C/V will. Both options *do* copy Finder comments on objects below the top folder. <comment294931> When copying that large amount of data, `rsync -aP` is probably better as it can be resumed if interrupted. <comment294940> You say that Finder ignores .dot files if they are not visible, but `cp -R` not. <comment294941> @patrix I want to follow symbolic links. Is `cp -paR` correct one for that? I think option `-a` is not then suitable because it includes `-P`. <comment294942> @masi Read the man page for `cp` :-) But symlinks are a tricky beast anyway if you copy whole directory hierarchies, so you probably need to fix some of them manually afterwards. <comment295066> @Masi, In Finder, _the default is to not show hidden Files/Folders_, with the default set, if you copy a Folder which contains hidden objects, all hidden objects within are copied when pasted. If you select individual files the associated hidden dot files are copied & pasted as well, however non-associated dot files and other hidden objects are not copied & pasted via Finder in the later scenario. To copy & paste non-associated hidden objects at the individual level, when not selecting a Folder, those objects must be made visible in order to be selected and thus pasted after a copy operation. <comment295427> @Masi `ls -a` will show dot files. Just FYI.