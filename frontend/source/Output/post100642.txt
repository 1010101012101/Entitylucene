How to make an existing AppleScript file to work as a service? <body> I made an AppleScript, saved it as a file in a specific folder on my hard drive. Now I want to assign a shortcut to it and looks like I have to make a Service via Automator, but the codeRun AppleScript/code asks me to put the code inside, while I want to execute the already existing .scpt file. How to do that?  <answer100644> In the script, add an codeon run/code argument:  precodeon run     -- do whatever the script does end run /code/pre  Then you can use the Automator "Run Shell Script" action, with the codeosascript/code command:  precodeosascript /path/to/script.scpt /code/pre  codeosascript/code is a command which executes AppleScript in the shell. You need the lines in the script to allow the script to be executed outside AppleScript editor.  <answer100645> Perhaps you'd want to take a look at This Service, which allows you to "create Mac OS X services from any script."  <answer100697> Yes, Automator is the best option here. To create the service follow these steps:  ol liOpen Automator and select Service:  img src="https://i.stack.imgur.com/JVkiR.png" alt="enter image description here"/li liSearch 'applescript' and drag the action to the right pane:  img src="https://i.stack.imgur.com/bKuNd.png" alt="enter image description here"/li liChange codeService receives selected text/code to codeService receives no input/code so that it always appears in the Services menu:  img src="https://i.stack.imgur.com/6ZkYm.png" alt="enter image description here"/li liReplace code(* Your script goes here *)/code with:  precodedo shell script "/usr/bin/osascript /path/to/your/script.scpt" /code/pre  if you wish to execute your existing code.scpt/code file. Note that strongosascript can't handle user interaction/strong like displaying a dialog window:  img src="https://i.stack.imgur.com/REprT.png" alt="enter image description here"  To overcome this limitation either use this workaround or simply replace code(* Your script goes here *)/code with the contents of your script./li liSave it:  img src="https://i.stack.imgur.com/IjNqz.png" alt="enter image description here"/li liIf you wish, you can assign a shortcut to your new service. Select ServicesServices Preferences in Finder (or any open application):  img src="https://i.stack.imgur.com/4oMy6.png" alt="enter image description here"/li liAssign a not so common shorcut:  img src="https://i.stack.imgur.com/YupPw.png" alt="enter image description here"/li liNow your service is accessible from any application through the shortcut you assigned in the previous step:  img src="https://i.stack.imgur.com/GWLTr.png" alt="enter image description here"/li /ol  If you ever want to get rid of the service open code~/Library/Services/code, delete the service and empty the trash:  img src="https://i.stack.imgur.com/pF9Ay.png" alt="enter image description here"  <answer100699> I wouldn't recommend creating Automator services to assign shortcuts to scripts. There is a bug in in 10.7 and 10.8 where the keyboard shortcuts for Automator services don't always work until you hover over the services menu from the menu bar. There is also a relatively long (maybe 0.1 to 1 s) delay before services are run.  See this answer for other ways to assign keyboard shortcuts to scripts. I use FastScripts and Alfred myself.  <answer100706> You can RUN the existing script with a simple automator service like this. And assign your shortcut from within the keyboard short cuts as normal. Just remember some applications may need to be relaunched before they pick the shortcuts up.  example.  sayHello script:  precodesay "hello" /code/pre  Automator service: img src="https://i.stack.imgur.com/q2Fi1.png" alt="enter image description here"  Which in this example uses:  ul listrongNo input/strong/li listrongAny application./strong/li /ul  The Action is a strongRun Shell Script/strong The code just uses the unix command strongosascript/strong and the path to the file. strongemPass input/em/strong can be strongto stdn/strong or strongto argument/strong  Thats it nothing special needs to be done to the script.  For further details on the osascript command look at the man pages for it. The man page give another example where you can pass arguments to the script.  <answer100721> To develop a Service, you need some sort of software which will create a Service such as one of the following:  ol liAutomator to  create a .workflow/li liThisService to create a .service/li liXcode to create an .app/li /ol  All of the above kinds of services are packages.  They are all folders which contain an plist that specifies the attributes of a Service.  Here is how I created a Service using Automator that uses a "Run AppleScript" Automator action to call an existing .script.  img src="https://i.stack.imgur.com/yOM2l.png" alt="Automator Service That Calls an Existing AppleScript"  <comment118488> You don't need to include an explicit run handler. All scripts have an implicit run handler. The reason why Automator's Run AppleScript action includes an explicit run handler might be because Automator uses the special `on run {input, arguments}` form, but even in Automator you can just remove the run handler. <comment118490> Can you provide an answer here rather than just a link <comment118492> I said I want to execute existing script file, not to write it again into Automator. <comment118494> I  have never experienced this need to hover? do you have more details of what you are talking about <comment118497> I thought that copy/paste would be OK, but yes, you're right, it's stated clearly in your question. Use `osascript`, as explained in other answers. <comment118597> @Nakilon I've added how to use `osascript` in Automator to run your `.scpt` file, a limitation and two workarounds. <comment118599> I'm not sure if it affects all OS X installations or all services, but I've ran into it multiple times on different installations, and it has mentioned by other people here and at Super User. Occasionally the keyboard shortcuts for all Automator services stop working (or nothing happens if you press them), but they start working again if you hover over the services menu from the menu bar, or if you for example select one service with the mouse. <comment118845> @͏͏͏ I'm wondering if this ping gets to you. Kudos on the creative name selection.