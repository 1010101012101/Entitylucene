MacBook Misidentifies Physical Layout of Built-in Keyboard <body> I have a really strange problem with my sister's MacBook Pro (Mid 2012, running El Capitan): it is incorrectly identifying the physical layout of the built-in keyboard. It isn't just a matter of mapping the buttons to characters incorrectly; the diagram shown in "Keyboard Viewer" actually shows more physical buttons than exist on the keyboard.  strongemNote: see the update at the end for the current status./em/strong  The physical keyboard appears to be the correct US English version, and it is called "U.S." in the "Input Sources" preferences pane &mdash; but here's a screenshot of what Keyboard Viewer thinks it physically looks like:  img src="https://i.stack.imgur.com/AIB4A.jpg" alt="screenshot: no keys pressed"  The problems become more obvious with Shift pressed:  img src="https://i.stack.imgur.com/2RIxM.jpg" alt="screenshot: shift pressed"  Thanks to Wikipedia-ing (and a helpful clue from the yen symbol), I emthink/em this is showing the Japanese Industrial Standard layout, but I don't actually read any East Asian alphabets, so I'm less than 100% confident.  My goal is to get the layout recognized as standard US QWERTY, either (preferably) by actually getting OS X to believe it is one, or by re-mapping the keys it believes it has. I've read Create and use your own input source, but so far without success. I think my issue may be that the characters it wants to map emfrom/em are the Japanese(?) ones rather than the ASCII ones.  Interestingly, I tried booting from a Ubuntu USB, and it recognized the keyboard with no problems. On the other hand, the layout was still incorrect when I booted from the OS X recovery partition.  Any advice on how to correct this would be very greatly appreciated!  hr  h2Update 1:/h2  Inspired by Tom Gewecke's answer below, I tried re-setting the SMC, which has changed things. Probably the fastest way to describe it is with two new screenshots (taken with the "U.S." input source):  ul liWith no keys pressed: img src="https://i.stack.imgur.com/GwP35.png" alt="Screenshot of Keyboard Viewer after resetting SMC"/li liWith Shift pressed: img src="https://i.stack.imgur.com/yCthF.png" alt="enter image description here"/li /ul  As you can see, it's not Japanese anymore, but it also still doesn't match the layout of the physical keyboard. In Keyboard Viewer:  ul liThe diagram shows a key with code§/code and code±/code to the left of the code1/code/code!/code key. but the actual keyboard has a key marked code`/code/code~/code. When I press this key, Keyboard Viewer shows it as a press to the code`/code/code~/code key between the codez/code and left codeshift/code keys (there is no physical key between codez/code and codeshift/code./li liThe diagram shows a vertical codereturn/code/codeenter/code key and an extra code\/code/code|/code key at the right-hand side of the home row, between code'/code/code"/code and codeenter/code. The actual keyboard has a horizontal codeenter/code on the home row and has the code\/code/code|/code key as the last key on the QWERTY row, to the right of code]/code/code}/code. Again, Keyboard Viewer shows a press of the physical code\/code/code|/code as a press of its misplaced key./li /ul  So, for practical purposes, this is a huge improvement, since the physical keys now all do what their keycaps say they do. On the other hand, something is clearly still wrong, since Keyboard viewer still has keys in the wrong place, keys that are the wrong shape, and one key in it's diagram (the code§/code/code±/code key) that isn't mapped to any to any physical key on the keyboard.  h2Update 2:/h2  I've tried resetting the SMC a number of times; the resulting layout is always either JIS or ISO, but never ANSI, and I've yet to find any pattern that would allow me to predict which the result will be. More concerningly, even when I get an ISO layout by resetting the SMC, it will  revert to a JIS layout at some arbitrary point while using the system.  <answer243588> You machine is mistaking the Keyboard Type.  See if this helps:  http://m10lmac.blogspot.com/2009/12/fixing-keyboard-type-problems.html  If nothing else works, try this Karabiner fix:  Change Mac Keyboard Identifier after keyboard replacement  <comment300018> Could you please add the relevant portions of that link into the answer in case said link dies and for ease of reading? <comment300361> No dice. Deleting `/Library/Preferences/com.apple.keyboardtype.plist` does nothing &mdash; the file isn't even created again when I reboot. Replacing it with the `/Library/Preferences/com.apple.keyboardtype.plist` file from a Macbook Pro that works correctly also does nothing. (Interestingly, `defaults read com.apple.keyboardtype` reports that the domain does not exist.) Keyboard Setup Assistant exits with the message `No unknown keyboard connected - terminating` at the command line &hellip; it doesn't even open a GUI window. <comment300362> Actually, the blogspot post talked about resetting the PMU, which doesn't exist on Intel-based Macs, but I've tried resetting the SMC, which has done something. I'm going to edit the main post above to explain, because it's too complicated for a comment. <comment300397> You still have a keyboard type problem.  It has switched from JIS to ISO, but it needs to go to ANSI.  Try another SMC reset. <comment300435> @LiberalArtist I have fixed the blogspot post to refer to SMC.  Sometimes in the end only the Karabiner fix seems to work for this problem. <comment309374> Thanks for the update.  Have you tried the Karabiner Option mentioned in my blog article? <comment309406> Was the keyboard of this MacBook Pro ever replaced?•• return ••Was this MacBook Pro ever opened? <comment309407> From your thorough description of problem, it looks like your keyboard firmware is sending random garbage as its model identification string on the USB bus. Please confirm this hypothesis with: `  About This Mac  System Report...  Hardware  USB  Hub  Apple Internal Keyboard / Trackpad`, and include a screen capture. <comment309729> The keyboard was definitely replaced, and this problem started basically immediately afterwords — I should have mentioned that, but must have lost track of it among the other details. I'm currently away from the MacBook in question, but I will get its model identification string as soon as I can.