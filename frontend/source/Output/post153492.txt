How to tell Messages "I'm not at home"? <body> I leave my Mac running 24/7, but I'm not always sitting at it.  Is there any way to tell the Mac, or Messages specifically, if my phone isn't on the local wifi subnet, don't take messages, leave them for my iPhone to pick up.  Currently, if for some reason I'm out of iMessage range but capable of receiving SMS, messages never arrive at my phone &amp; are not re-transmitted after failing by the sender, because the system considers that handing them to my Mac is sufficient proof I saw them.  Missing jobs I was offered 6 hours ago, just because I was afk, is not a happy sight to return home to.  One option: log out of Messages on the Mac every time I leave the house...br ...I'll never remember.br emEdit:/em Logging out of iMessage on the Mac is considerably more trouble than it's worth. It generates half a dozen messages &amp; emails to every device &amp; account...  <answer154195> First of all, you need homebrew installed on your system. If you haven't, visit http://brew.sh for instructions, or let me know and I will try to guide you.  Then you need to install codearp-scan/code. To do it, open a Terminal and type codebrew install arp-scan/code.   Next step. Save the following script, I called codecheck-iphone-available.scpt/code, but your can rename if you want.  precodeset IPHONE to do shell script "if /usr/local/bin/arp-scan -l | grep your-iphone-mac; then echo 1; else echo 0; fi" user name "your-username" password "your-password" with administrator privileges tell application "System Events"     tell process "Messages"         tell menu bar 1             tell menu bar item "Messages"                 tell menu "Messages"                     tell menu item "My Status"                         tell menu "My Status"                             if IPHONE is not equal to "0" then                                 click menu item "Available"                             else                                 click menu item "Away"                             end if                         end tell                     end tell                 end tell              end tell         end tell     end tell end tell /code/pre  Replace codeyour-username/code, codeyour-password/code and codeyour-iphone-mac/code.   ul licodeyour-username/code must be an administrator user that can sudo on your computer./li licodeyour-password/code password for that user./li licodeyour-iphone-mac/code can be obtained on your iphone, go to codeSettings/code - codeGeneral/code - codeAbout/code and copy codeWi-Fi Address/code./li /ul  Give permissions: codechmod 775 check-iphone-available.scpt/code.  The script execute as administrator the command codearp-scan/code. This command sends  ARP  packets  to  hosts on the local network and displays any responses that are received. The codegrep/code command look for your iphone on the answer receive by codearp-scan/code. If the iphone is found, then return 1, otherwise, return 0. On 1, the script do click on Available menu item in Messages, on 0, the same on Away (can be changed by codeOffline/code, codeOn the phone/code, etc).  So, let's do it automatically.  Go to folder code/Users/your-username/Library/LaunchAgents/code and save there the following plist file. I named it codecom.username.checkiphone.plist/code, but again, feel free to change it.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;com.your-username.checkiphone&lt;/string&gt;    &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;/usr/bin/osascript&lt;/string&gt;     &lt;string&gt;/Users/your-username/bin/check-iphone-available.scpt&lt;/string&gt;   &lt;/array&gt;    &lt;key&gt;Nice&lt;/key&gt;   &lt;integer&gt;1&lt;/integer&gt;    &lt;key&gt;StartInterval&lt;/key&gt;   &lt;integer&gt;60&lt;/integer&gt;    &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt;    &lt;key&gt;StandardErrorPath&lt;/key&gt;   &lt;string&gt;/tmp/com.your-username.checkiphone-available.err&lt;/string&gt;    &lt;key&gt;StandardOutPath&lt;/key&gt;   &lt;string&gt;/tmp/com.your-username.checkiphone-available.out&lt;/string&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  The file is pretty self-explanatory. We will launch the command code/usr/bin/osascript /Users/your-username/bin/check-iphone-available.scpt/code every 60 seconds, will be launched at load, will save errors on code/tmp/com.username.checkiphone-available.err/code and logs on code/tmp/com.username.checkiphone-available.out/code.  Again, replace codeyour-username/code appropriately.  Last step, tell the Mac launchd daemon to load it.  precodelaunchctl load com.your-username.checkiphone.plist /code/pre  To stop the script, just replace the word codeload/code with codeunload/code in the above sentence. When your restart your computer the script will be load again. To prevent it, move it to another folder.  <answer154884> Second solution. This time based on bluetooth.  Download Bluetooth Proximity Tasker. Sorry mate, but it's $2.99.     Run any AppleScript when a paired bluetooth device goes in and out of range. Adjust the range using signal strength.   Select your BT device and paste this script on codeIn Range Applescript/code:  precodetell application "System Events"     tell process "Messages"         tell menu bar 1             tell menu bar item "Messages"                 tell menu "Messages"                     tell menu item "My Status"                         tell menu "My Status"                                 click menu item "Available"                         end tell                     end tell                 end tell              end tell         end tell     end tell end tell /code/pre  Replace codeAvailable/code with codeAway/code in the script and paste on codeOut Of Range Applescript/code.  <answer155012> Third solution. For this to work your must have an account in ifttt.com (and ifttt app for iPhone) and also a Dropbox account.  I create a couple of recipes in ifttt, If I'm at home create a file on Dropbox and If I leave home create a file on Dropbox. You will have to modify it with your address.  ul liThe first one create a file called codeAtHome/code in the directory codeIFTTT/iOS/code on your Dropbox folder./li liSecond one create a file called codeOut/code in the directory codeIFTTT/iOS/code on your Dropbox folder./li /ul  On both recipes when your iphone enters or leaves and area you defined (your house), create one or another file in your Dropbox.  Then this is easier to tack for both files with this applescritp. The script is looking for files created and if exists, change iMessages accordingly and then delete the file. If none of those files exists it will do nothing, so, iMessages will keep the status until the next file is created.  precodeon FileExists(theFile) -- (String) as Boolean     tell application "System Events"         if exists file theFile then             return true         else             return false         end if     end tell end FileExists  set IPHONE to FileExists("/Users/username/Dropbox/IFTTT/iOS/AtHome") if IPHONE then     set CHANGESTATUS to true     do shell script "rm -rf /Users/username/Dropbox/IFTTT/iOS/AtHome" else     set CHANGESTATUS to false end if  if CHANGESTATUS is not equal to true then     set IPHONE to FileExists("/Users/username/Dropbox/IFTTT/iOS/Out")     if IPHONE then         set CHANGESTATUS to true         set IPHONE to false         do shell script "rm -rf /Users/username/Dropbox/IFTTT/iOS/Out"     end if end if  if CHANGESTATUS then     tell application "System Events"         tell process "Messages"             tell menu bar 1                 tell menu bar item "Messages"                     tell menu "Messages"                         tell menu item "My Status"                             tell menu "My Status"                                 if IPHONE then                                     click menu item "Available"                                 else                                     click menu item "Offline"                                 end if                             end tell                         end tell                     end tell                 end tell             end tell         end tell     end tell end if /code/pre  You must change code/Users/username/Dropbox/IFTTT/iOS//code to point to your real path.  After this, replace the script of my first answer with this, and should work!  <comment180672> is the do not disturb in notifications not working for you <comment180702> DND doesn't know when I'm not in the house, but the wifi does - can't see the phone, I'm out. Cannot see any way to tether those 2 rather obvious pieces of information. <comment180709> so you would like for someone to write you a script that does that ? <comment180713> I'd like for Apple to have figured out it was a reasonable requirement... but if you have a volunteer to write a script [or even actually point me in the right direction & I'll have a go myself]... ;-)) <comment180714> I did some reading, so do you have the "You can be reached by iMessages under this Phone number? <comment180715> from 'this number' & 2 email addresses, yup, all tied to the same structure <comment180719> @Buscarì›ƒ I need to be afk for the night now, but could I throw this to chat for if you have anything further - this issue & others relating to it, have been the bane of my life recently... iMsg vanishing into the ether at the slightest provocation, both send & rec <comment180720> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/18236/discussion-between-tetsujin-and-buscar). <comment180722> If I come across something will let you know, I do not have your set up so cant verify. <comment180750> Based on your description, the system is worked as designed. The iMessage is considered delivered when it reaches one of your logged-in machines, therefore it does not fallback to SMS, because it was delivered successfully. It seems like it would introduce needless complexity if there was an option for "if it doesn't reach this particular device, consider it failed and re-send as SMS". <comment180766> 'needless' complexity - hardly. More 'successful communication' I'm not here, don't send it here. The phone should be the master in this, the compy merely the slave. <comment181464> Looks nicely comprehensive, thank you. I'll have to check it out later in the week & report back [busy over the next few days] +1 for now. <comment181814> In my case, I always receive messages on both. So the thing is: why wouldn't you have access to Internet while you have to SMS? That is something Apple didn't consider. I hadn't imagined about that problem till I read your question. Some kind of a timeout on your Mac to auto-log out from Messages could be the way to go. Tell me if you'd like something more detailed. <comment182140> I've got the basic structure working... but... I'm seeing 2 potential blocking points - I cannot get arp-scan to find any iDevice on the network, though it finds all the wired hardware. If I can get past this point, I haven't yet been able to test whether setting Available or Away is going to work for iMessages [took me quite some time to figure out you can only access those options if you enable Bonjour, or some other legacy iChat-type protocol] <comment182151> I'm trying since I wrote my answer and I found one issue with arp-scan. Once you arrive at home you must use the iPhone (open a website on it for example) before can be discovered. If you are trying arp-scan from the terminal, you must sudo. To test if it works, just switch off the wifi on your phone. <comment182153> arp-scan -interface=en1 -l   can find all the other devices on the network, just not the iDevices, unless I've very recently been using any of them. If I let the phone sleep, it falls off the list. I tried manually shifting the status to Away in Messages & setting airplane mode on the phone... iMessages still turn up at the compy. My current guess is that I would have to sign out to make it stop. <comment182154> Could you please replace `/usr/local/bin/arp-scan -l` with `nmap -sP 192.169.0.0/24`? Is other way to scan network that must works. On the ip you must use your own range. <comment182176> Same, it finds all other devices except the iDevices; except it doesn't find iDevs, even when they have been recently used, which arp-scan still achieves <comment182195> Will `arp -a` show it?... <comment182199> no, same unfortunately :( <comment182200> Are you sure you have an iPhone? ;) May I ask how is your network? It appears for me with the three commands posted. <comment182202> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/18428/discussion-between-jherran-and-tetsujin). <comment182238> have a look at my ramblings over a couple of hours on the chat channel. I gave up eventually, as, even though I got your structure working perfectly using arp -a, the away status set for Bonjour is totally ignored by iMessage :( I thank you so much for your efforts & will +1 this answer too. I can't 'accept' either to award the bonus you deserve, as that would perhaps lead people to believe the solution will still work for iMessage. <comment182239> Unless there's some way to script the sign in & sign out... <comment182246> Last try. Replace `Away` with `Offline`. The script basically navigate through iMessage menus. I tell go to `Messages â†’ My Status â†’ Offline` and click there. When I did it, it works for my three accounts (jabber, bonjour and messages). And don't mind about reward, I'm using this too, and I'm curious about why isn't working on your/others computers. <comment182295> I woke this morning to find it thought I'd been Away all night, though everything was still on. I tried swapping to Offline; that worked... yet iMessages still come through to the Mac. Flipping the phone to airplane for a few mins whilst testing, then back on again then showed I was Available. So, I still have the same 2 problems, unfortunately. 1. Recognition of 'when I'm here' & 2. Actual compliance of iMessage to 'believe' when I'm Offline. It seems we're so near, yet so far.  I'm iOS8 & Mavericks, btw, Mac Pro 3,1 [so no BT LE] & in fact BT off for the Mac, if that may be different to you. <comment182367> I'm still not sure it's going to work... Even if I switch the Bonjour status manually, iMessages still arrive at the Mac. I do appreciate the enormous effort you have put into this, but I think we're stuck unless there's some way to auto- sign in & out of iMessage on the Mac. <comment182377> That three ways works on yosemite. I am not able to test this on your hardware, so, no problem at all. I'm testing in for myself and sharing the results. By the way, the most accurate form is this last one. <comment182384> Ahh... then perhaps light at the end of the tunnel. I'm holding off on Yosemite for a while [my first time ever not being an early-adopter] but I am fully prepared to work back through this when I do update. +1 again for this 3rd solution in some small recognition of your effort. Very much appreciated. <comment182580> ah, it appears that I can award the bounty without selecting the answer as 'correct'. I don't want to in any way possibly mislead, as I haven't managed to get it going yet - but the bounty is all yours, with thanks.