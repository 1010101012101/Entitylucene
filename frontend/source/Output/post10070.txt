Why doesn't ⌥ (option)+click bring up the context menu? <body> Does anyone know why kbd^ (control)/kbd+click was chosen to trigger a context menu, rather than kbd⌥ (option)/kbd+click? Is there any history surrounding this?  To me, an alternative method of clicking that brings up a menu of options seems most intuitive if triggered by kbd⌥ (option)/kbd+click, especially considering that key is also known as kbd⌥ (alt)/kbd.  <answer10071> codeOption/code-click is taken to pull up alternate menus in place of standard ones, including context menus (see for example in the Dock, where codeCtrl/code-codeOption/code-click changes "Show"/"Hide" to "Show/Hide Others" and "Quit" to "Force Quit", and adds "Relaunch" to the context menu for Finder).  Some other menus affected are:  ul liThe Power menu get an additional entry showing the current status/li liThe WiFi menu shows connection status, including the connection protocol and speed, the current channel, the BSSID of the connected AP, and the signal level/li liThe Volume slider turns into an audio input and output device selection menu/li liThe Bluetooth Menu, similarly to the WiFi menu, adds connection status — and also three interesting-looking menu items: ul liOpen Bluetooth Explorer.../li liOpen Bluetooth Diagnostics Utility.../li liOpen PacketLogger... (!)/li /ul/li liSelect All in some Edit menus (notably Finder) is replaced by Deselect All/li /ul  Poke around and you may find some other goodies.  One other thing I noted was that, if you set Parallels to replicate the Windows system tray in the OS X menu bar, some of them behave differently if codeOption/code-clicked.  <answer10083> The kbdoption/kbd key has been in use on Macintosh computers long before there was a kbdcontrol/kbd key, since the option key was always used for alternative input of characters with diacritics, like "å".  Apple always tried to force developers into not hiding away functionality into contextual menus and thus did not include more than one mouse button for quite a long time. I think it was once applications gained complexity and needed to offer contextual menus for better usability, that Apple decided to include a kbdcontrol/kbd key for the first time.   In short: The naming of the kbdcontrol/kbd and  kbdoption/kbd keys are meant quite literal: one gives you access to optional input and one gives you access to controlling the interface. 