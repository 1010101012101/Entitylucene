Should bash shells be replaced with the new patched version? <body> This question has generated a lot of downvoting on three SE sites so let me try to explain where it comes from.  emThe magnitude of the bash "shellshock" problem may turn out to be larger than anything since Y2K./em  Having been part of a complete replacement of a large data center for Y2K, I'm alarmed at the panic that's been generated over shellshock (appropo name, btw). I'm concerned that rushing in quick fixes without extensive planning and testing is going to create far greater problems than the one we think we are facing.  emFor Y2K, we learned that the date code fixes were the easy part./em  The massively more complex, error-prone, and unscheduled downtime-producing part was discovering and fixing/mitigating the failures in other software caused by the fixes. Some of these weren't discovered until the new systems had been in production for months. Despite a herculean effort, a few even resulted in organizational policy changes because they were too disruptive to fix.  emI am not suggesting that security-patching is unadvisable./em  However, in this case only, I have noticed a suspicious series of events culminating in not just another run-of-the-mill vulnerability, but one demanding massive updating of systems affecting virtually every person using a computer on the planet.  emThe vulnerability is real. But is the need for instant action?/em  It is this combination of factors that gives me pause...  strongA fact.../strong  ul li"Bash is standard on Mac OS X and many Linux systems"/li /ul  strongA timeline.../strong  ul liOct 2012 - "Apple is added to the NSA’s list of penetrated servers"/li liDec 2013 - Apple Says It Has Never Worked With NSA.../li liSep 19, 2014 - Likely that NSA has now demanded Apple's data and they are resisting/li liSep 24, 2014 - US-CERT is aware of a Bash vulnerability affecting Unix-based operating systems such as Linux and Mac OS X/li /ul  strongRamifications.../strong  ul liThe Bash shellshock "vulnerability" has been a "feature" of Bash for 22 years. You'd think in all that time, in all those high-security environments that run Unix or Linux, someone would have worried about misuse./li liNow, every installation of Bash in the world is about to be replaced./li liThough Bash is open-source, few people actually take the time to study the code of such large and complex programs./li liBash is written in C, which supports embedded assembly-language code. Code that even fewer programmers have the skills to read./li liBash is written in C, which easily supports treating any block of binary, such as something labeled as data or a small image, as code./li liThus, a skilled programmer could hide "backdoor" code in plain sight, and it probably wouldn't be discovered unless it caused an error of some kind./li /ul  strongThe claim.../strong  "US-CERT recommends users and administrators review TA14-268A, Vulnerability Note VU#252743 and the Redhat Security Blog (link is external) for additional details and to refer to their respective Linux or Unix-based OS vendor(s) for an appropriate patch."  strongThe question.../strong  Should bash shells be replaced with these new patched versions?  strongRESOURCES/strong  ul libash patching team discussion on insecure.org/li liApple: “The vast majority of OS X users are not at risk to recently reported bash vulnerabilities,"/li liRed Security Blog: Bash specially-crafted environment variables code injection attack/li /ul  <answer147222> Yes, you should. Even in the very worst case, you're trading a known-exploitable version of a program for one that is theoretically exploitable only by whoever crafted a potential back door.  Tons of people know about the current problem and can use it against you right now, but presumably few people know about this hypothetical back door that may not even exist.  The decision seems like an easy one to me...at least if you're referring to the official patch released by the vendor of your OS. As for third-party patches, it comes down to a question of trust.  Personally, I will be patching, but I will be waiting for Apple, or at the very least for a trusted repository (Homebrew etc) to release a 3.2-series version of bash with the fix.  <comment173608> Yes if you are running a server & feel that you are at risk. No if you are running Mac OS X as a client. And this is well covered on this site. Long story short: If you have no idea how to compile from source or deal with deep system components, you yourself will be the biggest risk due to the `bash` glitch. http://apple.stackexchange.com/questions/146893/are-macs-vulnerable-to-the-bash-shellshock-bug?rq=1 <comment173609> If you are running Mac OS X client the chances of this affecting you are pretty much zilch. More details here. http://apple.stackexchange.com/questions/146893/are-macs-vulnerable-to-the-bash-shellshock-bug?rq=1 <comment173614> Even if the chances are small, you still generally want to patch security vulnerabilities. The other post, for example, focuses on direct exploitation from external systems. But what about privilege escalation? Are you absolutely positive that there are no setuid executables on your system that execute anything through bash in a way that would allow their environment variables to be influenced maliciously? <comment173615> @JakeGould, you keep saying that people's chances of being affected or close to nil, but all it takes is using the Web Sharing feature to open up the system to exploit. Apache uses bash for all manner of stuff. Lots of web devs and programmers use local web hosting for development, wikis, Bugzilla instances and the like. "Pretty much zilch" is a gross oversimplification of the issue. Web Sharing while working on a public (or hacked) network and all bets are off. <comment173616> @TraneFrancks The only thing valid about the original question here specifically is that this potential “exploit” has been around for 22 years. Can you point to an instance where something like this compromised security? If I turn on web sharing on my desktop, that in & of itself won’t be vulnerable. Most modern Apache installs do not use CGI scripting. And that is the weakness. So simply enabling web sharing won’t make you a target. I stand by my statement that this is all panic with little tangible reality to back it up. <comment173617> I just reread your post. So you are basically stating that nobody should trust any update so no patches should be applied & that is that? <comment173618> @JakeGould, having a vulnerable bash would still open you up to the possibility of privilege escalation as I commented above (but admittedly forgot to at-tag you in). Do you trust that all of your setuid programs never execute anything via bash with environment variables that could be under user control? And that you will never install such programs in the future without remembering to check? (`sudo find /usr /Applications/ -perm +6000`) I agree that there's no need to *panic*, but implying that people simply should not patch seems misguided. <comment173619> @ScottDudley For the record, I saw your post. Have a great day! <comment173620> I agree with both the issue that mod_cgi is not installed by default (but that does not imply that it might not be installed and used) and that escalation is a risk. I've patched my system. Was I panicking? Heck, no. That said, I see no harm whatsoever in patching the system ahead of Apple lackadaisically rolling out its own fixes. Apple tends to be pretty slow about such matters. <comment173628> @TraneFrancks The best, sane, rational & succinct explanation of the impact of this flaw [can be found here](https://securityblog.redhat.com/2014/09/24/bash-specially-crafted-environment-variables-code-injection-attack/). And if you know anything about how web servers work—and how the Apache risk is really non-existent in modern Linux servers—then this is all a massive non-issue. And this is from RedHat! The folks who discovered it. All of my Linux servers are patched. My Mac servers don’t do anything to trigger bash on any level. And my Mac clients are just clients. I feel fine. <comment173630> "and how the Apache risk is really non-existent in modern Linux servers"  You obviously do not run a cPanel shared server on which 'CGI Center' is an expected feature by Web 1.0-oriented users. (I run a hosting company.) My CentOS servers are patched and not vulnerable. Honestly, I don't know why you think I don't feel fine. I feel wonderful. As for RH's non-issue: "Because of the pervasive use of the Bash shell, this issue is quite serious and should be treated as such." From here: https://access.redhat.com/articles/1200223 <comment173648> @TraneFrancks, it's OK, bash is only referenced by 146 executables in the standard bin directories alone (`sudo find /usr/bin /usr/sbin/ /sbin/ -type f -print0 | sudo xargs -0 egrep -l "/bin/(ba){0,1}sh" | wc -l`). The question asked was whether bash should be patched, but the argument being made here is that a heavily-used binary apparently shouldn't be patched because it's not (usually) *remotely* exploitable. I throw up my hands at this point. <comment173653> I'm kind of throwing up my hands, too, @ScottDudley. I'm soundly of the opinion that patching first is a good idea because Apple has such a poor track record of rolling fixes out in a timely manner. Patching the binaries in `/bin` gives the luxury of a secure system - both before AND after Apple gets a Round-To-It. <comment173686> @JakeGould Sorry, forgot to reply. Please see last night's edits. <comment173706> I too throw up my hands in defeat. I tried. Time will tell. Note that I've accepted @ScottDudley 's answer. Go upgrade your binaries. Let me know how it goes.