What is the 'Mac OS X Base System' disk image on my 2011 MacBook AIr? <body> On my 2011 MacBook Air with Mac OS X Lion, and I boot into Recovery mode via holding the command-R key during startup, if I go into Terminal and do a codediskutil list/code, I get a list of 12(!) logical disks.  codedisk0/code is of course the disk holding the main HD and the Recovery HD partitions (along with the GUID partition and the EFI partition).  But there is also a codedisk1/code with partitions including one titled codeMac OS X Base System/code that is approximately 1.39 GB big.  There also are 10 other disks of varying but small sizes.  What are these other logical disks (and partitions) and is there any way to reclaim their space?   Update: Here is a copy of the codediskutil list/code output: output  <answer22942> If you have broadband Internet and are ready to totally wipe the drive, you could use the emInternet Recovery/em method of Lion Recovery to free up the disk0 and partition / erase the drive.   Be sure you have verified a backup of any data you want to save as this will wipe the SSD clean and let you install Lion and the normal recovery HD as it should be.   AppleCare will certainly walk you through this for free as you are in the complimentary support window for 90 days after purchase.   <answer23081> It's rather complicated, and actually a lot of the complexity is to avoid wasting space; I don't think you can "reclaim" anything without breaking it.  Let me start at the beginning: your hard drive (/dev/disk0) has two relevant partitions: Macintosh HD (your regular startup volume), and Recovery HD.  Recovery HD is marked in the partition table with the type Apple_Boot, but is actually in the normal HFS+ format. It contains minimal booter files and kernel, and at /com.apple.recovery.boot/BaseSystem.dmg, a disk image with a stripped-down and tweaked copy of OS X. The booter mounts this volume (it attaches as /dev/disk1), and transfers to OS X running on it. This is the Mac OS X Base System.  Notice that the Recovery HD is only 650MB, but Mac OS X Base System is 1.4GB? That's because it's a emcompressed/em disk image (and I'm pretty sure that compression is the reason they bother with all this disk image trickery).  Actually, BaseSystem.dmg is compressed down to only 451MB (at least in OS X v10.7.0).  Also, the volume naming is somewhat inconsistent.  You've got /dev/disk1s3 named "Recovery HD", but for some reason it's mounted as "/Volumes/Image Volume" in recovery mode. BaseSystem.dmg has a volume named "Mac OS X Base System".  So that's disk0 and disk1; what about the rest? I'm not certain, but I'm pretty sure they are RAM disks to save temporary data in folders OS X modifies as it runs (remember that in recovery mode, you're running from a read-only disk image). Running the codemount/code command in recovery mode is informative:  precode$ mount /dev/disk1s3 on / (hfs, local, read-only) devfs on /dev (devfs, local, nobrowse) /dev/disk2 on /Volumes (hfs, local, union, nobrowse) /dev/disk3 on /private/var/tmp (hfs, local, union, nobrowse) /dev/disk4 on /private/var/run (hfs, local, union, nobrowse) /dev/disk5 on /System/Installation (hfs, local, union, nobrowse) /dev/disk6 on /private/var/db (hfs, local, union, nobrowse) /dev/disk7 on /private/var/folders (hfs, local, union, nobrowse) /dev/disk8 on /private/var/root/Library (hfs, local, union, nobrowse) /dev/disk9 on /Library/ColorSync/Profiles/Displays (hfs, local, union, nobrowse) /dev/disk10 on /Library/Preferences (hfs, local, union, nobrowse) /dev/disk11 on /Library/Preferences/SystemConfiguration (hfs, local, union, nobrowse) /dev/disk12 on /Library/Keychains (hfs, local, union, nobrowse) /dev/disk0s2 on /Volumes/Macintosh HD (hfs, local, journaled) /dev/disk0s3 on /Volumes/Image Volume (hfs, local, read-only, journaled) /code/pre  Those "union" attributes mean that things in the relevant folder in the startup volume will be visible, but anything modified gets stored in what I'm pretty sure is a RAM disk.  If you want to look at this stuff yourself, you can mount the relevant volumes from the regular OS:  precode# Mount "Recovery HD": $ diskutil mount /dev/disk0s3 # Mount "Mac OS X Base System": $ hdiutil mount /Volumes/Recovery\ HD/com.apple.recovery.boot/BaseSystem.dmg -noverify /code/pre  <comment25609> On occasion people have received macs where the factory imaging process left data not intended to ship. I'd love a peek at the exact listing out of curiosity before you nuke it. <comment25610> I have done this but this approach does not erase these other logical disks.  In fact, you can see `Mac OS X Base System` in Disk Utility (under Recovery mode of course) but Disk Utility won't let you erase it.  I'm wondering if it forms some sort of "core" of Mac OS X Lion to use during the recovery process since when doing an Internet Recovery it says "downloading **additional** components". <comment25613> If you are not booted from a network image or an external drive, **Disk Utility** _always_ prevents you from erasing a drive that is in use. Normal recovery might not have enough freedom to undo this if it's core storage or something else tricky from the factory imaging process. <comment25806> Thanks!  I think I got what I needed.  So essentially, the  whole `disk1` is nothing but a mounted realization of the disk image stored in `Recovery HD`.  It only exists if and when Recovery mode is run.  Only the `Recovery HD disk0` partition is actually taking up physical disk space.  I suppose I could merge this partition with my `Macintosh HD` partition if I really wanted to get the space back, but of course Recovery mode would not be available then. <comment25807> Yup, that's about it.