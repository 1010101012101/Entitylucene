Shutdown NOT super-user? <body> I'm trying to shutdown Macs after 24 hours of runtime with this script:  precode#!/bin/bash BOOT_TIME=$(sysctl -n kern.boottime | sed -e 's/.* sec = \([0-9]*\).*/\1/') CURR_TIME=$(date +%s) MAX_UPDAYS=1 #Days  DAYS_UP=$(( ( $CURR_TIME - $BOOT_TIME) / 86400 ))     if [ $DAYS_UP -ge ${MAX_UPDAYS} ];then         echo Mac is going to shutdown          shutdown -h now     else         echo No shutdown needed fi /code/pre  The file name is  codeShutdownUPTIME.sh/code. Now when I try to type in:  precodesudo ssh ADMIN@macxxx 'bash -s' &lt; ./documents/ShutdownUPTIME.sh /code/pre  it wants a password. I type that in and then the script runs. The only thing that pops up though is:      shutdown: NOT super-user   The user is in the sudoers file as ALL=(ALL) ALL on both Macs. Any ideas?  <answer264509> You are running codessh/code command locally as root and the remote bash (hence the whole script) as the user codeADMIN@macxxx/code (without switching to root on the remote server).  You must precede either codebash/code or codeshutdown/code with codesudo/code (provided codeADMIN/code has passwordless sudo permissions for codeshutdown/code or all commands on codemacxxx/code machine).  So either:  precodessh ADMIN@macxxx 'sudo bash -s' &lt; ./documents/ShutdownUPTIME.sh /code/pre  Or:  precode... if [ $DAYS_UP -ge ${MAX_UPDAYS} ];then     echo Mac is going to shutdown      sudo shutdown -h now else ... /code/pre  <comment331486> I only used the ssh connection. But I wanted to show my script in case something is wrong with the script. So I just use ssh ADMIN@macxxx 'sudo bash -s'  ./documents/ShutdownUPTIME.sh, but it says I am not a super user. My user is in the sudoers file as ALL=(ALL) ALL, on both the local and the remote Mac. <comment331489> From the message you cited now, `ADMIN` does not have sudo permissions on the `macxxx`. <comment331490> Users into the sudoers file still need to run `sudo shutdown` on the target machine <comment331491> Related: [how to use ssh to run shell script on a remote machine?](http://stackoverflow.com/questions/305035/how-to-use-ssh-to-run-shell-script-on-a-remote-machine). Check the comments for local scripts requiring sudo on the remote machine to execute them there. <comment331492> Yes he has. That is why I asked this question. <comment331494> So include the relevant information I the question, not in the comments to an answer. If the system refuses to change the user with `sudo`, it means the user has no permissions. In the commands you included in the question, you don't even try to use sudo on the remote machine.