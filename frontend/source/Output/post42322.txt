Text to Speech shortcuts with two languages <body> I use Mac's Text to Speech function a lot. Under Settings  Speech  Text to Speech I also have set a "Key" for quick access.   Since I also want Text to Speech to read German and OS Lion offers Voices for other languages, I would like to have a second shortcut for German.   Does anyone know where I can set this? Or is the only way to constantly change the System Voice before I want a German text to be read? (And then reset the voice to Alex for English texts)? And what about French text?   What options exist for this general problem?  <answer72708> Kind of old post and maybe you have found a solution already. One way to simplify this is with Automator.  Open Automator,  choose Service, Service receives selected text, drag action "Speak Text" to build worklow select Voice (for example: Ryan Speaking) Save  Repeat with different voices.  (The Services List can be edited/cleaned up with Service Scrubber Application and partly under System Preferences  Keyboard  Keyboard Shortcuts  Services)  Edit: Now that you have two or more Voices under the Services Menu, you can go to: System Preferences  Keyboard  Keyboard Shortcuts  Application Shortcuts and create a new Shortcut for each voice.  So far, it works like this on my machine (OS 10.6.8): Default System Voice: Ryan (Infovox) Shortcut Selected in Speech Pref to Control+S. This starts and stops English text.  The German voice I have assigned Control+Y (Yannick voice from Lion OS). Control+Y starts German voice for German selected text; which can be stopped by clicking the main start/stop shortcut twice, here Control+S+S. The reason for twice is because pressing it once starts the English voice over the German voice. That's the best I could come up so far. Make sure the shortcuts don't conflict with other shortcuts. You will notice that the additional shortcut allows you to start several voice threads, talking over each other plus the default system voice, which drives up processor activity, but no problem if one remembers to stop the speaking by double-executing of the shortcut for the default voice.  Not sure if this works system-wide, but works in my browsers, Mail, and the BookReader app I'm using.    Edit 2: I have noticed that when activating a secondary text-to-speech voice via the Automator Service the Automator Runner process drives up processor activity to above 100% with fans speeding up. Not sure if there is a solution to this.  <answer72744> As Mikofox mentioned, you can make an Automator service for speaking text:  img src="https://i.stack.imgur.com/eXXeo.png" alt=""  There is a bug in 10.8 and 10.7 where the shortcuts for Automator services don't always work until you hover over the services menu from the menu bar.br WorkflowServiceRunner can also use over 100% CPU when speaking text.  I have used FastScripts to assign a shortcut to this script:  precodetry -- if the clipboard is empty, trying to get it results in an error     set old to the clipboard as record end try try     tell application "System Events" to keystroke "c" using command down     delay 0.05     set input to the clipboard     try         set the clipboard to old     end try     say input using "Kyoko" end try /code/pre  Another option is to just run something like codepbpaste | say -v kyoko/code.  <answer197680> Using a custom service with the standard codeSpeak Text/code action to speak selected text with a specific alternative voice has one major drawback, as detailed in Mikofox's answer:  You cannot easily emstop/em playback the way you can with the built-in TTS service simply by pressing the keyboard shortcut again.  There are strongtwo solutions/strong:  supDisclosure: I created the prepackaged services and the codevoices/code CLI/sup  ul liBuild a strongcustom service with a codeRun Shell Script/code action/strong instead, in which you stronguse the codesay/code CLI/strong, which allows implementing a playback toggle (stopping speech if invoked while still speaking from previous invocation)  ul liSee below for a simple implementation that works, but it won't honor any custom speaking rates (words per minute) that you may have configured for individual voices via System Preferences./li liA solution that honors the custom speaking rates requires quite a bit more work; you can find a strongprepackaged service/strong here; or use the direct download link (will stay current)../li /ul/li liAlternatively, strongcreate a service that switches the emdefault/em voice on demand/strong, which then allows you to use the built-in TTS service with its playback toggle feature.  ul liWhile OSX offers no programmatic way to change the default voice, you can use a strongprepackaged service/strong built on the codevoices/code CLI:br Follow the instructions here or use the direct download link (will stay current)./li /ul/li /ul  hr  strongSimple implementation of a service with playback toggle/strong:  As stated, this won't honor custom speaking rates configured for the chosen voice.  ul liCreate a new service in Automator/li liLeave the defaults (service receives text in any application)/li liAdd a codeRun Shell Script/code action and paste the following:/li /ul  pre class="lang-bsh prettyprint-override"code#  ------- BEGIN: CUSTOMIZE  # Specify the voice to speak with. voice=Vicki #  ------- END: CUSTOMIZE    # If `say` is running, we assume that a previous invocation is still speaking     # and speaking should be *stopped*.   # Caveat: This will only work if either the original app from which speaking was initiated is still   #         frontmost with text selected, or, coincidentally, a now different frontmost app also has   #         text selected. Otherwise, this service won't be active. pgrep -x say &amp;&amp; { pkill -x say; exit; }    # Read the text to speak into a variable. txt=$(&lt;/dev/stdin)    # Speak, using the standard `say` CLI. say -v "$voice" "$txt" /code/pre  <answer204301> h1Say as …/h1  You can use the codesay/code command with OS X's other voices to get different languages. Use the codeThomas/code voice to get French pronunciation or codeYannick/code for German.  In this example, I will use Thomas and French as this is what I know but codeYannick/code should work as well for German text.  Try the following command in strongApplications  Utilities  Terminal.app/strong:  precodesay -v Thomas  "Bonjour. Je m'appelle Thomas." /code/pre  If this is acceptable, you can wrap the codesay/code command up in an Automator service; which we will do next.  h2Automator Service/h2  To create the Automator Service:  ol liLaunch strongAutomator.app/strong/li liCreate a new strongService/strong/li liAdd a strongRun AppleScript/strong action/li liCopy and paste in the AppleScript below:  precodeon run {input, parameters}     do shell script "say -v Thomas " &amp; (quoted form of (input as string))     return input end run /code/pre/li liSave the service as strongSpeak in French/strong/li /ol  img src="https://i.stack.imgur.com/Xtzft.png" alt="Automator say service"  To use the service:  ol liSelect text in TextEdit or Safari/li likbdControl/kbd + Click to reveal the Context Menu/li liSelect strongServices  Speak in French/strong/li /ol  Et voilà ! Other languages and voices are available.  This Automator approach allows you to keep your computer default voice set to your preferred language. While allowing selected text to be read in the alternative voice.  <answer204328> You could also set the system voice to a French one.  Go to strongSystem Preferences  Dictation &amp; Speech  Text to Speech/strong and set the system voice to codeThomas/code for example.  Then:  ol liSelect any text in any application/li likbdControl/kbd+Click to reveal the context menu/li listrongChoose Speech  Start Speaking/strong/li /ol  There is also an option to set a shortcut, so you can just select any text and press the shortcut to start speaking in French.  <answer254761> I wrote a tool for that, just go to:  https://github.com/Fredmf/polyglott  <comment84584> Can you add a screenshot of your Automator workflow? With Automator this is usually easier to understand than a textual description <comment246209> did you try the functionality already built into OS X? <comment246247> Based on my own (very subjective) evaluation as a native French speaker I would say the voice is very good. I just joined this site to upvote your answer! <comment246257> great answer! I guess it is easily generalizable to other languages as well. What would be in this case the name of the narrators? :-) <comment246280> Many [other voices & languages](http://theworklife.com/graham-miln/2015/09/04/speaking-with-a-french-accent-os-x-say/) are available; see the **Other Languages** section. <comment246368> Excellent! Thank you Graham. <comment317197> Hi, welcome to Ask Different. Please explain a little bit what your tool does and how. Thanks!