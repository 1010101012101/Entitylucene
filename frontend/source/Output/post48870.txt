Where does terminal look for its commands? <body> I've just installed pypy, and I've made a symlink from code/pypy/code to my pypy installation.  How can I turn this into a command, so that I can just type codepypy myfile.py/code instead of having to type code/pypy myfile.py/code?  <answer48871> It depends on your shell. Check your $SHELL and $PATH variables  Symlinks should be executable by default, so you might just link your pypy to a directory already in your path. /usr/local/bin is a good choice for this sort of thing unless you have more intricate needs to separate things.  <answer48872> if you are on Snow leopard or on Lion the way to do it is as follows:  go to code/etc/paths.d/code then  precodesudo touch pypy /code/pre  then edit the pypy file (with vim, nano or whatever) to include the path to codepypy/code  precode/path/to/pypy /code/pre  the restart the terminal. For instance, I installed julia (http://julialang.org/) and I added a julia file in paths.d  precode$ cd /etc/paths.d $ ls  50-X11   MacGPG2  TeX      TeXbin   git      julia $ cat julia  /usr/local/julia /code/pre  HTH  <comment55941> I've currently stored the binary next to the python framework, so I believe it's in /system/lybrary/frameworks, there I've created a directory called pypy, which now stores that. I'll look into the variables now. <comment55942> I think I should add my pypy directory to the $PATH variable, looking up how to do that now. <comment55943> I've edited my .profile file, so that it contains `export PATH=/pypy:$PATH` but that doesn't work.