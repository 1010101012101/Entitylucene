Opening new Terminal.app window/tab with a certain profile from command-line or AppleScript? <body> When I login to my Mac, I want to automatically open a new Terminal.app window with a certain profile, say codeMonitor/code, that has a startup command and several appearance settings.  I thought it would be very easy to do this from AppleScript or command-line (via codeosascript/code), so I can add a script to my login items, but it turns out this is not so trivial after several tries.  My current best way is the following AppleScript:  precodetell application "Terminal"     set origSettings to default settings     set default settings to settings set "Monitor"     activate     tell application "System Events" to keystroke "n" using command down     set default settings to origSettings end tell /code/pre  However, I want to know if there's a simpler way to do this without relying on UI scripting (with System Events) or messing around with my Terminal's codedefault settings/code.  applescript (osascript) for changing Terminal.app profile seemed promising, but it's for when there's already a Terminal window open.  I have no idea how to create a new Terminal tab or window with its codecurrent settings/code specified.  The codedo script/code command, which does create a new window, unfortunately ignores the startup command set in the profile, making me fall back to UI scripting.  I also found this script: http://blog.azizlight.me/having-fun-with-applescript-and-terminal-app/ which again relies on UI scripting.  Because some of my machines use non-English locale, I prefer sticking to keystrokes rather than menu labels.  <answer122980> Can you just run the startup command with codedo script/code?  precodetell application "Terminal"     do script "emacs"     set current settings of selected tab of window 1 to settings set "Grass" end tell /code/pre  If someone else doesn't need to run any startup command, you can use codedo script ""/code to open a new window:  precodetell application "Terminal"     do script ""     set current settings of selected tab of window 1 to settings set "Grass" end tell /code/pre  Or you could also use codedo script ""/code when changing codedefault settings/code:  precodetell application "Terminal"     set old to default settings     set default settings to settings set "Grass"     do script ""     set default settings to old     activate end tell /code/pre  <answer144207> Possible I am missing the point, but can't you Export the profile as a code.terminal/code file and add that to your Login Items?  Export:  img src="https://i.stack.imgur.com/4QdLL.png" alt="enter image description here"  Add the exported file to Login Items:  img src="https://i.stack.imgur.com/SkLon.png" alt="enter image description here"  <comment143582> The problem with `do script ""` is that it ignores the startup command already entered in the profile.  BTW because `do script` returns the tab it created, we could further shorten to something like: `set newTab to do script ...` then `set current settings of newTab to ...` <comment170009> Awesome, @beroe!  I remember opening a .terminal file used to create duplicate profile entries in the past, but apparently, such behavior has changed at least in the latest version of OS X, 10.8 Mavericks.  Although this doesn't answer how to achieve the thing in AppleScript, I'm picking this as the answer because it actually solves my original problem.  Thanks! <comment170034> Glad it helped. I think the AppleScript issue will be best addressed by the other answer linked in the comments. <comment201084> In my experience today this solution does create duplicate profile entires.    I wish I knew a way around that, but I do not.