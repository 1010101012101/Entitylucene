Applescript- I made an auto scrolling code and need to know how to stop it <body> Edit: This is the most recent code I have now... How can I get it to stop (change the value of x) when I run a separate script?   precode    set x to 0  tell application "Google Chrome"     set urlName to URL of active tab of front window end tell  if urlName is "https://www.facebook.com" then      tell application "System Events"         tell application process "Google Chrome"             set frontmost to true             repeat while x = 0                 key code 38                 delay 1             end repeat         end tell     end tell  else      tell application "System Events"         tell application process "Google Chrome"             set frontmost to true             repeat while x = 0                 key code 49                 delay 1             end repeat         end tell     end tell  end if /code/pre  <answer189210> You need to determine how many times you want to codekey code/code.  precodeset i to 3 -- This is your iterator Stop after 3 repeat until i = 0   -- do stuff    set i to i - 1 -- this will subtract from original first repeat i becomes 2 and so on. end repeat /code/pre  You may want all of this in a codetell/code block for Safari. Hope this helps.  <answer189213> I have redone the script, again. That code before was ridiculous tbh. I got a little ahead of myself... Let's try this again... Save this as a "stay open" application again, named anything. You'll just have to quit it when you want to stop scrolling, and start it up again when you want to continue. I advise putting it on your Dock for easy access:  precodeglobal script_PID on run     tell application "Google Chrome" to activate     delay 1     tell me to activate end run  on idle     tell application "Google Chrome"         tell active tab of front window             set urlName to URL             if (execute javascript "if (window.pageYOffset + window.innerHeight &gt;= document.body.clientHeight){true;}else{false;}") is false then                 execute javascript "window.scrollBy(0,window.innerHeight - 40);"             else                 tell me to quit             end if         end tell     end tell     return 1 end idle /code/pre  Tell me if you have any issues with this.  <answer189214> We can use codedefaults/code to store and read values (type codeman defaults/code in a codeTerminal.app/code window to read more about it).   Run codeScript 1/code…  strongScript 1/strong  precodeglobal x  property defaultIdentifier : "com.chrome.scroll"  -- Since we start fresh lets reset x resetX()  tell application "Google Chrome"     activate     set urlName to URL of active tab of front window end tell  if urlName is "https://www.facebook.com" then      tell application "System Events"         tell application process "Google Chrome"             repeat while x = 0                 set frontmost to true                 key code 38                 delay 1                 my getX()             end repeat         end tell     end tell  else      tell application "System Events"         tell application process "Google Chrome"             repeat while x = 0                 set frontmost to true                 key code 49                 delay 1                 my getX()             end repeat         end tell     end tell  end if  on getX()     # Reading a value that does not exists will generate an error.     # Since this script creates (at launch) the value with "resetX()", this can only happen when someone     # deletes the defaults value while the script is running. (say, with "defaults delete 'com.chrome.scroll'").     try         set y to do shell script "defaults read" &amp; space &amp; quoted form of defaultIdentifier &amp; space &amp; "x"          # Because "x" is an integer but "do shell script" returns text, we want to convert "y" into an integer.         # This will throw an error if the value isn't an integer.         set y to y as integer # if this fails, "X" is left untouched since it goes straight into the "on error" part.         set x to y      on error         # To react to it, do something here.          # beep     end try  end getX   # When writing into the defaults, we can give a hint that "x" is an integer (using "-int"). # It would also work without it. on resetX()     set x to 0     do shell script "defaults write" &amp; space &amp; quoted form of defaultIdentifier &amp; space &amp; "x" &amp; space &amp; "-int 0" end resetX /code/pre  …and stop it with codeScript 2/code:  strongScript 2/strong  precodeproperty defaultIdentifier : "com.chrome.scroll" do shell script "defaults write" &amp; space &amp; quoted form of defaultIdentifier &amp; space &amp; "x" &amp; space &amp; "-int 1" /code/pre  br You can also execute it directly in codeTerminal.app/code or use it in a codeshell script/code, like this:  precodedefaults write com.chrome.scroll x 1    # or: defaults write com.chrome.scroll x -int 1 /code/pre  hr  Notes    I put the codeset frontmost to true/code into the coderepeat/code loop since the user could activate another app while the script is running which would mess up the whole thing.  hr  We don't really need to use a codeproperty/code for codecom.chrome.scroll/code but since the code needs that data in two places and you may want to change it, I did it that way.   If you want to change it, use something unique, without special characters and spaces. codeiTunes/code, for example, uses codecom.apple.iTunes/code and Finder uses codecom.apple.Finder/code. So usually an codeapplication/code is using it's codebundle identifier/code as codedomain/code for the codedefaults/code.  <comment224274> Although this does not answer your specific scroll question, you may want to review [this article on "Repeat While" syntax for Applescript](http://alvinalexander.com/blog/post/mac-os-x/applescript-repeat-while-syntax).  Also, don't forget to close your tell block with `end tell` <comment224284> Also, why does your `else` statement do the same as your if?  It may help to write down the steps as if you were doing this all manually.  "If I see Facebook, I'll scroll down.  If not, I won't scroll."  If that is what you are trying to do with your code, you can eliminate the `else` statement.  `If` will just end if the condition is false. <comment224291> The If is for separate websites... i'm using "j" to scroll on facebook because it will scroll through each post individually and space bar on others <comment224293> Ok, I see now your key code change. Sorry I missed that. <comment224296> How can I get it to change the value of x from a separate script? <comment224297> Your code would be more verbose if you used "keystroke" instead of "key code". `keystroke "j"` (case sensitive) and `keystroke space`. key codes should be a last resort. <comment224318> What  i'm trying to do is let it run until I activate a separate script that will stop the loop... so there isn't a set amount for x... and it will only be able to run in chrome (Using Dragon Dictate) <comment224321> Okay, updated it <comment224323> I appreciate the help but I want it to continue scrolling till I give it the next voice command "Stop" and it executes a separate script to stop the loop <comment224328> it's to stop manually when there is something to read <comment224329> Ok. And how do you want to execute that stop command? Say a script application which can be launched from the Dock? What would be the nicest way you can think of? <comment224330> Well what I want to do is add a voice command to dragon dictate that will somehow end the repeat... the only thing i could think of is having the repeat go while x = 0 and then somehow changing the variable with the voice command... If you know a better way i'm down as long as I can execute it through a voice command <comment224345> I added something (see FINAL) to my answer which does that job by using defaults. <comment224446> There is just no reason to do this with two scripts. Try my method out. I understand that this is what you wanted, but it really isn't the best way to do it. Messing around with defaults is error-prone, as you can see by all the checking he does. It's best to keep things in-app as much as possible. <comment224715> I edited my answer a bit. Since we have left the stage "step by step", I made getX() a little  compacter (one try block) but added some comments. Before that, the code spoke for itself since every possible situation had it's own try block,  to make it more visible what kind of situations we need to handle, just in case. <comment224716> I edited my answer a bit. Since we have left the stage "step by step", I made getX() a little  compacter (one try block) but added some comments. Before that, the code spoke for itself since every possible situation had it's own try block,  to make it more visible what kind of situations we need to handle, just in case.