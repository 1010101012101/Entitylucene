How can I improve/replace View Source in Safari? <body> As a new convert to Safari, I am astonished by how unbearably ugly default page source view is.br The font is miserably small and unaliased, leave alone color highlighting.br img src="https://i.stack.imgur.com/uynVK.png" width="300"  strongIs there a way to enhance Safari's View Source feature or seamlessly replace it?/strong  I'm looking for:  ul lireasonable default font, customizable is better;/li libasic HTML/JS syntax highlighting;/li liworking on Lion./li /ul  Please refrain from suggesting viewing source with Web Inspector: it is nice but isn't convenient for quick source browsing.  <answer26216> Take a look at this Safari extension:  img src="https://i.stack.imgur.com/TC2If.png" alt="enter image description here"     BetterSource Safari 5 Extension      BetterSource shows the document source in a new tab, with line numbers, and colour syntax highlighting.   <answer26219> h3BetterSource/h3  img src="https://i.imgur.com/pralI.png" alt=""  It's similar to the view source in Chrome in a lot of ways:  ul liIt has syntax highlighting and line numbers/li liIt's opened in a tab instead of a window/li liUses the default monospace font specified in preferences instead of Monaco 12/li /ul  Limitations:  ul liLine numbers are included in selections/li liThe source view cannot be opened with a shortcut/li liTakes slightly longer to appear than the normal source window/li /ul  hr  h3Setting a default zoom level in a custom style sheet/h3  The custom style sheet you can specify in the Advanced tab of the preferences also affects the view source window. I don't know how to target it specifically, but this would apply a default zoom level to both it and website content:  precodebody { zoom: 125%; } /code/pre  hr  h3view source in TextMate.scpt/h3  precodetell application "Safari" to tell document 1     repeat 100 times         if (do JavaScript "document.readyState") is "complete" then exit repeat         delay 0.05     end repeat     set src to source     set u to URL end tell  try     tell application "TextMate"         open POSIX file u         activate     end tell on error     set f to do shell script "f=`echo " &amp; quoted form of u &amp; " |     sed 's|.*://||;s|/$||;s|:|-|g;s|/|-|g'`; echo \"/tmp/view-source-$f.html\""     do shell script "/bin/echo " &amp; quoted form of src &amp; " &gt; " &amp; quoted form of f     set f to POSIX file f     tell application "TextMate"         activate         open f     end tell end try /code/pre  <answer26694> You need to go to System Preferences - General and at the bottom set the minimum font size for antialiasing to 4 pixels. That way you'll get antialiasing for small fonts.  (I never understood why they have to let you select that - under 8px fonts are just not readable without antialiasing)  <answer35017> If you go to Safari's preferences  Advanced and set "Never use font sizes smaller than" to 11, it should fix the anti aliasing problem.  For color highlighting you can use a SIMBL plugin called Safari Source that will do that for you.  UPDATE: Actually, in the Safari Source settings page (SafariPreferencesSafari Source) you can set the font size for the view source page. So set it to anything above 11 and it'll antialias.  <comment29921> In fact, I just noticed **Cmd +** works in this window so it's not *that* bad. Once you zoom in, antialiasing turns on. <comment29923> Thanks. This is slightly confusing because the old View Source menu is still there and I keep choosing it. But I guess it's certainly a nice option. <comment29924> This is one hell of an answer! Thanks. <comment29925> +1 Great question! <comment30456> +1 @Dan Thanks for the Cmd+ tip! (useful especially on 13"...) <comment30461> For some reason, even after ensuring it's set to 4 pixels, I still get the source unaliased unless I zoom in. And I had 4 pixel by default on my 17' MBP. <comment30569> You're right... The culprit seems to be the Monaco font which doesn't antialias even at point size 10. Nothing about that font seems to be out of the ordinary. Some sleuthing in the .nib files seems to show that Safari might use WebKitFixedFont as a preference key - but it also has Monaco hardcoded. See `strings /Applications/Safari.app/Contents//Resources/English.lproj/HTMLSource.nib/objects.nib` and  http://www.opensource.apple.com/source/WebKit/WebKit-7534.48.3/win/WebPreferenceKeysPrivate.h