How to programmatically construct the name of application used to open directories? <body> This Emacs LISP script codereveal-in-finder.el/code allows one to quickly open a directory in Finder from an Emacs buffer which has the directory opened in it in dired mode.  But on my computer, I uses Path Finder instead of the standard Finder.  If I run codeopen /path/to/dir/code on command line, it opens the directory codedir/code in Path Finder rather than Finder.  Any idea how I can modify codereveal-in-finder.el/code to open directories in Path Finder?  <answer179155> An indirect solution I'm currently using is codeM-!/code, and type codeopen ./code in the mini-buffer, which opens the directory in the system-default application, which is Path Finder on my computer.  <comment202252> I guess you only need to change the embedded applescript * "tell application \"Finder\"\n"*(Line 100) to the right one, e.g., "Path Finder". I cannot show the exact answer since I don't use that. <comment205673> Ideally I don't need to hard code the name of the specific application.  Shouldn't there be a way to *compute* the current default application for file system exploration? <comment206803> I'm not sure whether whether there is a direct way to find the default application simply within applescript; and if it's possible, you still have to use different script for *path finder* and *finder* (at least you should read [dictionary](https://developer.apple.com/library/mac/documentation/AppleScript/Conceptual/AppleScriptX/Concepts/work_with_as.html) firstly) to make the cursor focus on the file. A workaround is to use "open /path/to/current/directory" and get the application's name, then write applescript to get the file and focus. <comment212314> Apple Script has the ability to run bash commands also, simply change lines 99-103 to: `"do shell script \"open '" revealPath "'\"" `. <comment212316> How did I miss that!!