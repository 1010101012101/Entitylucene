How can I write-protect (make read-only) a USB drive in OS X? <body> I have a USB drive with some archive data on it that I'd like to access from a Mac running Snow Leopard. However, I want to ensure that the data on the drive is preserved and no modifications are made to the drive. The drive is FAT32 formatted and does not have a write-protect switch on it. How can I make the drive read-only or otherwise write-protect it by the OS so that I can ensure nothing is modified on the drive?  <answer24120> If you leave the USB drive formatted as FAT32, you can't. I would propose a different solution: use Disk Utility to create an ISO9660 ("DVD/CD Master") disk image with your data and write it to the USB drive. Unfortunately, Disk Utility doesn't seem to be able to write an ISO9660 image to a USB drive. so you'll have to do it below:  ul liFirst, insert/mount the drive once, run codediskutil list/code from Terminal.app and take note of the device representing the drive (should be something like code/dev/diskN/code with N being any number)./li liEject the disk by running codediskutil unmountDisk /dev/diskN/code replacing N by the number noted in the first step/li liFinally input codesudo dd if=/path/to/your/image.cdr of=/dev/diskN/code/li /ul  Just wait and done.  <answer24121> strongOption 1: Mount drive read-only/strong  You can mount the USB drive read-only by using Diskutil.  ul liFirst, insert/mount the drive once, run codediskutil list/code from Terminal.app and take note of the device representing the drive (should be something like code/dev/diskN/code with N being any number)./li liEject the disk by running codediskutil unmountDisk /dev/diskN/code replacing N by the number noted in the first step/li liMount the disk read-only by running codediskutil mountDisk readOnly /dev/diskN/code/li /ul  This of course requires that you actively run these commands every time you want to use the archive stick. For an automated solution, have a look at MarcoPolo or write a launchd command (see e.g. here for inspiration).  strongOption 2: Use access control on the drive/strong  Does the drive really need to be formatted in FAT32 or do you only access it from a Mac OSX system anyway? In the later case, you can save the drive content on another drive, reformat it as a Mac OSX drive, move/copy the content back and take away any write rights from anybody.  <answer26678> If it were my data, and I really needed to not write on it, I'd put a master copy in a safe place and only ever mount a copy of that master.  <answer179433> Seems like editing the codefstab/code file would be the best solution as you don't need to unmount/manually mount the volume each time. It sounds very low level solution, so not even the system/root/spotlight would modify the drive.  http://www.macissues.com/2014/09/02/how-to-make-secondary-boot-partitions-read-only-in-os-x/  hr     ol   liOpen Disk Utility in the Applications  Utilities folder, and then select the volume in the device list on the left-hand side of the window. Now press Command-i to get information on the volume. In the window that pops up, locate the “Universal Unique Identifier” (UUID) string, which is a series of letters and numbers separated by dashes. Select the entire UUID and press Command-c to copy it./li   liOpen the Terminal utility /li   liRun the following command:br   codesudo pico /etc/fstab/code/li   liAdd the following line to the fstab file, and change the   UUID from all zeros as shown here, to the value of the copied UUID   from Disk Utility:br   codeUUID=00000000-0000-0000-0000-000000000000 none hfs ro/code/li   liPress Control-o to write the file changes, and then Control-x   to exit the editor./li   /ol   <comment30526> I've actually done that, but given the large amount of data I'm talking about, a simple write-protection safeguard would go a long way to prevent having to make another copy. <comment30549> It sounds like you need HDD with a hardware write-protect switch.  Or, will a read-only CD or DVD do?.  If you think software solution will be adequate, look at ReadOnlyMounter ( http://www.macupdate.com/app/mac/29779/readonlymounter ). "This System Preference pane is a driver and a loader to mount USB flash memory, USB HDD and FireWire HDD as read-only device. ", according to MacUpdate.com. <comment115194> I tried this with an OS X ESD, and while it boots (!), I can still write to it.  Clever thinking though. <comment130451> for final input "sudo dd..." can you explain the path and where we download image.cdr command doesnt recognize... <comment212654> What doy you suggest to remove rights the best possible way? ALC? `sudo chmod`? Ideally not even Spotlight should touch the volume. <comment212656> Just write-protect the volume in Finder. But I would go with option 1 anyway :-) <comment232234> Note: the keyboard shortcuts given here for editing `fstab` are for `emacs` and may/will differ depending on your text editor of choice. <comment329468> If you open Disk Utility before you insert the USB plug, it won't (usually) automount the volume, so you can do "Get Info" on it in Disk Utility to find out its device ID `diskN` and then use `diskutil` to mount it `readOnly` without ever mounting it read/write.