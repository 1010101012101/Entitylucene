Bluetooth Issues after Sleep in OS X Yosemite (10.10) <body> I seem to be having persistent issues with Bluetooth connectivity, especially after waking up my Macbook Pro from a long sleep.   I have a speaker that automatically turns off after a certain period of inactivity, and my use case typically is open the laptop, turn the speaker on, and when the Bluetooth driver is acting normal, they will automatically reconnect.   However, the problem seem to be that the my Bluetooth peripherals do not reconnect if my Macbook has just been woken up from a long sleep.   After searching around, I found this script to relaunch the bluetooth kernel extensions, but it didn't seem to work on Yosemite.   Here's what codesudo tail -f /var/log/system.log/code gave me after doing a codekextload/code and codekextunload/code (hostname and username redacted):   precodeNov 17 07:50:11 {redacted} sudo[8118]: username: TTY=ttys000 ; PWD=/Users/username; USER=root ; COMMAND=/sbin/kextload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport Nov 17 07:50:11 {redacted} kernel[0]: IOBluetoothUSBDFU::probe Nov 17 07:50:11 {redacted} kernel[0]: IOBluetoothUSBDFU::probe ProductID - 0x821D FirmwareVersion - 0x0147 Nov 17 07:50:11 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][start] -- completed -- result = TRUE -- 0x0800 **** Nov 17 07:50:11 {redacted} kernel[0]: **** [BroadcomBluetoothHostControllerUSBTransport][start] -- Completed -- 0x0800 **** Nov 17 07:50:11 {redacted} kernel[0]: [IOBluetoothHCIController][staticBluetoothTransportShowsUp] -- Received Bluetooth Controller register service notification -- 0x0800  Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][initHardwareWL] -- failed -- calling DoDeviceReset (kBluetoothControllerResetHub) -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][DoDeviceReset] -- thread_call_enter1 (mReEnumerateOrResetThread) -- reEnumerateOrReset (0xffffff8213ac3ae0) = 2 --  returned FALSE -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHCIController][ProcessBluetoothTransportShowsUpActionWL] -- Error!! -- Something went wrong in the setup process. Could not communicate with Bluetooth Transport successfully -- 0x0800 -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][ReEnumerateOrResetThreadEntry] -- entering -- param0 = 0xffffff806a870800, param1 = 0x2 -- 0x0800 Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][ReEnumerateOrReset] -- entering -- reEnumerateOrResetIn = 2 -- this = 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][ReEnumerateOrReset] -- in our workloop -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][ReEnumerateOrReset] -- parameter is valid -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][ReEnumerateOrReset] -- reEnumerateOrReset = 2 -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: [IOBluetoothHostControllerUSBTransport][ReEnumerateOrReset] -- calling myHub-&gt;ReEnumerateDevice() -- gEnumerateCounter = 1  Nov 17 07:50:12 {redacted} kernel[0]: [IOBluetoothHostControllerUSBTransport][ReEnumerateOrReset] -- exit; error = 0x0000 (kIOReturnSuccess) Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][ReEnumerateOrResetThreadEntry] -- exiting -- 0x0800 Nov 17 07:50:12 {redacted} kernel[0]: IOBluetoothUSBDFU::probe Nov 17 07:50:12 {redacted} kernel[0]: IOBluetoothUSBDFU::probe ProductID - 0x821D FirmwareVersion - 0x0147 Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHostControllerUSBTransport][start] -- completed -- result = TRUE -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: **** [BroadcomBluetoothHostControllerUSBTransport][start] -- Completed -- 0x0800 **** Nov 17 07:50:12 {redacted} kernel[0]: [IOBluetoothHCIController][staticBluetoothTransportShowsUp] -- Received Bluetooth Controller register service notification -- 0x0800  Nov 17 07:50:12 {redacted} kernel[0]: [IOBluetoothHCIController::setConfigState] calling registerService Nov 17 07:50:12 {redacted} kernel[0]: **** [IOBluetoothHCIController][ProcessBluetoothTransportShowsUpActionWL] -- Connected to the transport successfully -- 0xe300 -- 0x0800 -- 0x0800 **** Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.595 : SDStatusMonitor::kStatusBluetoothPowerChanged Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.617 : SDStatusMonitor::kStatusBluetoothPowerChanged Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.637 : SDStatusMonitor::kStatusBluetoothPowerChanged Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.657 : SDStatusMonitor::kStatusBluetoothPowerChanged Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.659 : BTLE scanner Powered Off Nov 17 07:50:12 --- last message repeated 2 times --- Nov 17 07:50:12 {redacted} coreaudiod[360]: 2014-11-17 07:50:12.663673 AM [AirPlay] BTLE client stopping to browse for AirPlay Solo Target Presence. Nov 17 07:50:12 {redacted} blued[62]: hciControllerOnline; HID devices? 0 Nov 17 07:50:12 {redacted} coreaudiod[360]: 2014-11-17 07:50:12.663868 AM [AirPlay] BTLE client starting to browse for AirPlay Solo Target Presence. Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.664 : Starting Handoff scanning Nov 17 07:50:12 {redacted} coreaudiod[360]: 2014-11-17 07:50:12.664336 AM [AirPlay] BTLE client stopped to browse for AirPlay Solo Target Presence. Nov 17 07:50:12 {redacted} coreaudiod[360]: 2014-11-17 07:50:12.664753 AM [AirPlay] BTLE client started to browse for AirPlay Solo Target Presence. Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.664 : Stopping Handoff advertising Nov 17 07:50:12 {redacted} sharingd[367]: 07:50:12.665 : BTLE scanner Powered On Nov 17 07:50:12 {redacted} blued[62]: hostControllerOnline - Number of Paired devices = 2, List of Paired devices = (       "00-0c-8a-dd-fd-88",       "84-38-35-ec-1c-ea"   ) Nov 17 07:50:13 {redacted} kernel[0]: AppleUSBMultitouchDriver::message - kIOUSBMessagePortHasBeenReset. Nov 17 07:50:13 {redacted} kernel[0]: AppleUSBMultitouchDriver::checkStatus - received Status Packet, Payload 2: device was reinitialized Nov 17 07:50:13 {redacted} hidd[74]: MultitouchHID: device bootloaded Nov 17 07:50:13 {redacted} kernel[0]: AppleUSBMultitouchDriver::_deviceGetReport - DeviceRequest for reportID 0xc8 returned with result 0xe000404f - retrying /code/pre  codeuname -a/code output (hostname redacted):   precode$ uname -a Darwin {redacted} 14.0.0 Darwin Kernel Version 14.0.0: Fri Sep 19 00:26:44 PDT 2014; root:xnu-2782.1.97~2/RELEASE_X86_64 x86_64 /code/pre  Has any of you seen this problem before? Any help would be appreciated.   <answer158113> I've had issues reconnecting my bluetooth keyboard &amp; trackpad since upgrading to Yosimite.  strongFirst try this: Open Terminal &amp; run 2 commands:/strong  precodesudo kextunload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport  sudo kextload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport /code/pre  I only had to run above once. If later bluetooth breaks again 2 options, simply run above again or you can create a 1-click solution with a simple app using Automator:  ol liSearch for (Spotlight search) and run Automator/li liClick "New Document" at bottom/li liChoose "Application" for new file type /li liClick on "Utilities" from list /li liDouble-Click "Run AppleScript" /li liReplace (* Your script goes here *) with:  precodedo shell script "kextunload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport;  kextload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport" with administrator privileges /code/pre/li liPress play to test (will prompt for password)/li liFile-Save to desktop or wherever/li /ol  Run the automator app whenever bluetooth devices won't connect  <answer158206> I had the same problem and I think I spotted a possible cause of the problem. My mouse was called "My Name's mouse" with the apostrophe, maybe that was causing the errors.  I have changed the name to avoid using spaces and special characters, now is called just "mymouse" and I don't seem to have the problem anymore.  <answer176014> Mikaey's solution on the apple support forum:  ol listrongTurn your WiFi off/strong/li liTry re-connecting to your bluetooth devices (emshould work/em)/li liTurn WiFi back on/li /ol  This has solved the issue for me.  <answer190689> Thanks to Tyilo from the comments on the accepted answer, I have modified his script to install sleepwatcher and append to the script some code that will not only unload the Bluetooth driver (codecom.apple.iokit.BroadcomBluetoothHostControllerUSBTransport/code), but also restart codeblued/code, Apple's Bluetooth daemon.  The script can be found here: https://gist.github.com/timgws/fc63aeca6a248bbb25ff  Running this has resolved all the issues for me.  <answer193021> After trying to run the scripts suggested by other answers, unloading and reloading both the kext and the bluetooth daemon, my bluetooth still wasn't responding.  However, I have discovered that if Yosemite sleeps with VMWare running and bluetooth doesn't work when the OS is woken up, closing VMWare rectifies the issue.  It seems that the drivers in VMWare don't always handle the sleep / wake process correctly.  <answer199088> strong-- UPDATE: This problem is emNOT/em fixed in OSX 10.11 El Capitan --/strong  The following is an alternative to the Automator solution posted by webaholic, for those who, like me, find inconvenient having to entering your password again (most likely you'll have just entered it to logon after waking your Mac up).  strongFirst, in Terminal, create a script that reloads the bluetooth subsystem:/strong  precodecat &gt; bt_restart &lt;&lt;END #!/bin/sh kextunload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport &amp;&amp; \ kextload   -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport END chmod +x bt_restart /code/pre  strongSecond, make root its owner and move it to /sbin:/strong  precodesudo chown root:wheel bt_restart sudo mv bt_restart /usr/local/sbin /code/pre  strongThird, add the command to the list of NOPASSWD commands in sudoers:/strong  precodeecho -e "\n\n# Restart bluetooth without password\n$USER ALL=(ALL) NOPASSWD: /usr/local/sbin/bt_restart" | EDITOR='tee -a' sudo visudo /code/pre  strongFinally, create a script on your desktop that calls bt_restart:/strong  precodeecho '#!/usr/bin/sudo /usr/local/sbin/bt_restart' &gt; ~/Desktop/"Restart Bluetooth" chmod +x ~/Desktop/"Restart Bluetooth" /code/pre  Done! Just double-click with your notebook's trackpad (or USB mouse) on the strongRestart Bluetooth/strong on your Desktop.  <answer211871> To summarize, here's a list of things mentioned here, in links from here, in similar threads at other sites, or even made up by me reasoning from those others. I've tried all of these, singly and in many combinations. All of them have seemed to work at least once; all have failed at least once.  ul linew mouse batteries/li liremove and re-pair mouse/li liturn off WiFi and mouse; connect Bluetooth mouse; restore WiFi/li liturn off WiFi, mouse, and VPN; connect; restore/li lidelete Bluetooth PAN; connect/li likextunload/load USBTransport; connect/li liwire kextunload to sleepwatcher; sleep; awake; connect/li lidisconnect all USB connectors (heck, strongall/strong connectors); connect/li lilog out; log in; connect/li lirestart; log in; connect/li lireset SMC (which involves "shut down"); restart; log in connect/li lishut down VM hosting (such as VMWare, Parallels, or VirtualBox)/li /ul  I choose to keep this list handy, and use "all of the above."  I think the only thing that's certain, here, is that there's a large dose of "random" involved somewhere, perhaps a race among all these drivers for networks, pseudo networks, layered networks, virtual networks, and proxy networks. In which case, it's probably not merely Apple's fault, because those drivers come from a variety of sources.   Of course, Apple's once-famous "just works" reputation was largely built on forbidding exactly this kind of colliding diversity.  <answer267484> Try clicking the mouse after your Mac wakes from sleep.   This seemed to connect my Magic Mouse 2 faster with a Mac Mini running macOS Sierra (10.12.2).  <answer276052> Aware that this is quite an old post now but was being driven nuts by the delay I was getting after sleep wake-up before the Magic Trackpad was usable.... could easily be a good 30 secs. Tried most / all of the hints and tips I could find to very little effect.  However, I just tried moving the Bluetooth icon on the Menu bar (CMD ALT Drag) from its normal position (about 7th in ) to 2nd in (as counted from the Right), i.e. next to the Spotlight menu.  So far?... problem gone !  Not 100% sure why this would be, but suspect it might be something to do with the order in which tasks from those items on the RHS Menu Bar are addressed after wake-up, i.e. those nearer RHS have higher priority?  Only takes a couple of secs to do, so if you also have this problem - might be worth a try?  (iMac 27" i7 / OS X 10.10.5)  JH  <answer291293> Most of the suggestion I've read seemed a bit complex for something as simple as this. Decided to take a noob approach:  ol liWent to System Preferences/Mouse/Set Up Bluetooth Mouse/li liScreen displayed "No Mouse found" and started searching./li liTurned my mouse off then turned it on again (Windows solution to a myriad of problems)./li liIt found my mouse./li /ol  <answer293420> I still have this issue in macOS Sierra. @Tyilo's link above to his gist gave me a starting point. But I also wanted to use homebrew to install sleepwatcher, and the plist files weren't set up properly out of the box. So I played around for a long time and came up with this script that got things working reliably for me.  precodebrew install sleepwatcher sudo touch /etc/rc.sleep sudo tee -a /etc/rc.wakeup &lt;&lt;EOF #!/bin/sh # Sleepwatcher script to get bluetooth working after the mac wakes up # Got this approach from https://gist.github.com/Tyilo/c92684d277acb62272b5 kextunload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport kextload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport EOF sudo chmod +x /etc/rc.wakeup brew services start sleepwatcher sudo tee -a /Library/LaunchAgents/de.bernhard-baehr.sleepwatcher-20compatibility-custom.plist &lt;&lt;EOF &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;de.bernhard-baehr.sleepwatcher&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/usr/local/sbin/sleepwatcher&lt;/string&gt;         &lt;string&gt;-V&lt;/string&gt;         &lt;string&gt;-s /etc/rc.sleep&lt;/string&gt;         &lt;string&gt;-w /etc/rc.wakeup&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;KeepAlive&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; EOF sudo launchctl load /Library/LaunchAgents/de.bernhard-baehr.sleepwatcher-20compatibility-custom.plist /code/pre  <comment186051> Hmm, I think that was what I tried above as the log suggests, and it didn't help. Maybe I'll try this again. <comment186053> This looks interesting. Basically rename the Bluetooth device to not contain spaces. I'll give it a shot. <comment186786> In your log, I didn't see: kextunload -b com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport, only kextload, just make sure you run unload first. I've only had to run this once (last week), previously almost daily I was having to restart whenever trying to wake my macbook pro up and connect to my bluetooth keyboard & mouse. <comment187091> It works! Thanks! Also curious to know if it happens to you randomly or after the laptop sleeps and is woken up? <comment187254> It was mostly when waking up, but it did happen sometimes when returning after taking the laptop out of range. <comment188662> Doesn't work for me. <comment188839> I have made a script to install sleepwatcher and run those to commands every time the computer wakes from sleep, which has completely eliminated the problem from me: https://gist.github.com/Tyilo/c92684d277acb62272b5 <comment201960> Try to hold mouse button for 2 secs after your Mac woke up. My MagicMouse connects after this. May be side effect of intentional design to save battery while idle or something. <comment217877> Indeed, I remember this working for me on occasions as well. And more specifically, the issue was when connected to 5GHz wifi. <comment219091> Worked for me , thanks ! <comment228156> Running the commands in terminal work, but when i try to run the Automator script, i get this error : 'kextunload: option requires an argument -- b'. Any ideas ? <comment228537> @delphirules I may have had a formatting problem, try again, should work <comment229305> @webaholik, now it worked, thanks :) <comment231824> I decided to just add this in my profile as an alias.  Works great! <comment231825> I did this when I first encountered the problem, turned everything off and back on in different sequences and it did not solve my issue.  The bluetooth device simply did not want to connect to the mac after sleep. <comment249174> I noticed the same thing. VMWare was the problem. After suspending virtual machine, bluetooth started working again. <comment249686> This solution worked for me. :) And I was using 5GHz Wifi, as @haylem. <comment256130> ...but the next time I had this issue I had to use @webaholik's solution. <comment256160> Awesome, thanks! This worked for me! <comment257232> typo when changing owner, should be `chown` not `chmod` - tried to edit myself, but no cred here and edit was below a length limit :-/ <comment257235> at least on my machine, i get a permission error when trying to modify `/etc/sudoers`, as an alternative you can edit the file directly with `sudo visudo` <comment275468> This happens to me sometimes. The other symptom is that nothing happens if I try to turn Bluetooth off. @webaholik solution fixed my Bluetooth. <comment298310> On my El Capitan (and googling suggests many others'), the `kextunload` fails (`Can't unload kext com.apple.iokit.BroadcomBluetoothHostControllerUSBTransport; classes have instances`) and leaves the Bluetooth unavailable (squiggle through the icon). <comment370178> These steps also worked for me on macOS Sierra.