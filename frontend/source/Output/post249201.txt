How do I install macOS Siri from Sierra to El Captain on my MBP Mid-2012? <body> I've gotten a MBP Mid-2012 &amp; would really love to install Siri on the same. I've also had tested macOS Sierra Beta from Apple Developers Program &amp; wanted this to be a part of more fast OS El Captain (OSX) as the current El Captain runs blazing fast on my Mid-2012 MBP.  macOS has a different architecture, which is accepted - but Siri would just be an em.app/em file. Given that it's a em.app/em file, can I know the procedure how do I go about installing only emSiri/em on emEl Captain/em?   <comment309061> You said "_macOS has a different architecture_", care to explain how it has a different architecture? <comment309062> @user3439894 the *Siri.app* won't load if you try it. OSX will report versioning problem. Every release of any OS - in this case macOS has gone changes than it's previous versions. Some are enhancement, some are replacement & others are new. <comment309063> If Siri is just a .app file then just copy it - but I don't think it is just that  and it needs Sierra to run <comment309065> @Mark that has been tried & tested. OSX would complain about version changes & a prohibition sign would be shown on the *.app* file. <comment309066> @fbara the question asks about new methods which are discoverable, it doesn't talk about copying the *.app* from macOS to OSX which's in your OP. That's another question & doesn't appear to be in context. <comment309068> The exact question in the duplicate I mentioned is "Would it work if I run Siri on OS X El Capitan by copying Siri.app from macOS Sierra to the OS X El Capitan?".  How is that different? <comment309071> @fbara that makes it a context based as in your question, you've mentioned a specific method i.e. "by copying Siri.app from MacOS Sierra to the OS El Captain" which isn't my question.  My question is to mentioned various actual methods via which the aforementioned could be successful & not limited to a specific method. <comment309073> You still haven't explained how macOS has a different architecture! Anyway, it's not unusual that an app's Info.plist file has an `Minimum system version` _key_, which causes the international no symbol over the app icon, much less the app could also be coded to actually check what version it was executed under and, wouldn't matter if one changed the aforementioned key to the lessor version in an attempt to make it run, it's not going to run under a lessor version. May also have some missing dependencies. <comment309078> @user3439894 how does one make it work is the real question. Could any hack do this? Think Different. <comment309083> I would support reopening this if someone actually did the work of hacking at the plist and then reporting what happened when they ran the app. That would be a great follow on to the linked question - even if it still didn't work or caused the app to crash or even the os to crash. I'd recommend a backup before volunteering your Mac for this test. <comment309084> @bmike thanks on the votes.