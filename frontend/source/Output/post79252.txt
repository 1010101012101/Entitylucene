How to show a notification when the iSIght webcam turns on? <body> Is it possible to get a desktop notification when my iSight turns on? It would be optimal if this could go through Growl, but I've tried HardwareGrowler and it doesn't give me a notification.  I know that the green light emalways/em turns on when the iSight turns on, but when the iSight turns on just for one second it is possible that I'm not looking at the screen and that I miss the green light, hence a notification that stays on the screen until I close it would be optimal.  I'm on a MacBook Pro 5,3 and I have Mountain Lion 10.8.3.  <answer91640> With the help of Growl's documentation about AppleScript support and a little discussion with Bart Arondson and Elliot B in the comments onto the question I've come up with the following AppleScript.  I've saved this script as an application agent which you can add to your login items in emSystem Preferences &#x2192; Users &amp; Groups &#x2192; Login Items/em.  Basically, this application works by detecting if a unique executable related to using the camera is being accessed. Whenever the executable is accessed, the application will notify about it to Growl:  img src="https://i.stack.imgur.com/v2eHf.jpg" alt="enter image description here"  h1Download/h1  It's important to know that this script monitors access to the executable...  precode/System/Library/Frameworks/CoreMediaIO.framework/Versions/A/Resources/VDC.plugin/Contents/MacOS/VDC /code/pre  h2Full script/h2  precode-- check if growl is running in order to avoid the "Choose Application" dialog tell application "System Events"     set isRunning to (count of (every process whose bundle identifier is "com.Growl.GrowlHelperApp")) &gt; 0 end tell  -- store time of last iSight access global lastopened set lastopened to do shell script "ls -lu /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/Resources/VDC.plugin/Contents/MacOS/VDC | awk '{print $6,$7,$8}'"  -- make the application ready for use with growl if isRunning then     tell application id "com.Growl.GrowlHelperApp"          -- make a list of all the notification types that this script will ever send         set the allNotificationsList to ¬             {"iSight access monitor"}          -- register the script with growl         register as application ¬             "iSight access monitor" all notifications allNotificationsList ¬             default notifications allNotificationsList ¬             icon of application "FaceTime"          -- send the first notification right after the application is started         notify with name ¬             "iSight access monitor" title ¬             "iSight access monitor" description ¬             "last iSight access:  " &amp; lastopened application name "iSight access monitor"     end tell end if  -- monitoring routine: checks every 10s if the VDC executable has been accessed on idle     tell application id "com.Growl.GrowlHelperApp"         set newopen to do shell script "ls -lu /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/Resources/VDC.plugin/Contents/MacOS/VDC | awk '{print $6,$7,$8}'"         if (newopen is not equal to lastopened) then             notify with name ¬                 "iSight access monitor" title ¬                 "iSight access monitor" description ¬                 "new iSight access:  " &amp; newopen application name "iSight access monitor"             set lastopened to newopen         end if     end tell     return 10 -- interval in seconds end idle /code/pre  <comment107565> I'm guessing the iSight driver is accessed every time. Assuming your filesystem has atime enabled (it does by default), you can check when that driver was last accessed like this: `ls -lu /System/Library/Quicktime/QuickTimeUSBVDCDigitizer.component/Contents/MacOS/QuickTimeUSBVDCDigitizer | awk '{print $6,$7,$8}'`. Write a script combining that with growlnotify and make it run in the background. Ta-daa! <comment107568> I copy pasted the line of code in terminal and got: `No such file or directory` <comment107574> @BartArondson Since it's such a long command, there are some problems with the formatting when copying it. So either navigate manually to this directory and run `ls -lu` or copy the whole command from [here](https://www.dropbox.com/s/k8afmu0w5g53b8q/42.txt?v=1mci). I'll try to get a solution working with Growl, but don't expect that to arrive today. Maybe somebody else is faster than me... <comment107576> Thank you, the dropbox link command works. However, running the command shows me a date and time at which I didn't use my iSight. Also turning on Photo Booth (so also the iSight), turning it off again and running the command does not change the displayed date. So it seems that the command is not working as expected.  A working solution would be great, but no hurry, I have asked this question in January, I could wait a little more. <comment107600> I have written an AppleScript application which will notify if a file is accessed. You can download it [here](https://www.dropbox.com/s/fm9z92bclzdhs7q/iSight%20access%20monitor.zip?v=1rc-). The interval to detect an access is 10s. However, the real problem is knowing what file is uniquely accessed when the camera is used. As long as we don't know that, this application is useless. At the moment is notifies about an access to `/System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera`. <comment107604> Thank you. Is there any way to find out what files are accessed when the iSight is turned on? Can I somehow trace that in Terminal? <comment107617> I checked for Open Files and Ports in Activity Monitor (through Inspect) and found the files that Skype (while using the iSight) and Photo Booth open. I listed them both, compared them and extracted the files that both the programs open. They're listed [here](http://pastebin.com/Uh7JhNLV). One of these files must be unique to iSight usage. I've tried the one in line 12 (..../MacOS/VDC), pasted it in your script and it seems to work. When Skype, PhotoBooth, FaceTime or a Flash web application uses the iSight I get a notification. <comment107619> The file I mentioned above is the one I need. I just tried other applications that use iSight and every time I got a Growl notification. Thanks a lot for your help, if you post an answer with my suggested modification I will accept it. <comment107629> If this is really is it, I'm very glad it worked. I'm going to post an answer soon and make a little change to the `.plist` file so that the application will run as an agent in the background (no dock icon). <comment107652> Ah, I rejoiced too soon. Citrix Viewer, a remote desktop client, also accesses the `VDC` file as it opens. It makes sense as it may need access to the camera, but this makes this solutions less perfect. <comment107660> @BartArondson That's a pity. I hope some knowledgeable mac developer stumbles upon this question an will be able to further improve the answer in the future.