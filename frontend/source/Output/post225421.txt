Cannot bind 127.0.0.123 to tcp socket python <body> I'm trying to learn TCP sockets for my project. I will be using them to transfer files between computers.  The server client combo copied from some tutorial runs fine as long, as the ip I'm trying to bound is code127.0.0.1/code. When I change it to anything less standard, like 127.0.0.123 OSX says, that I cannot bind to this address:br codesocket.error: [Errno 49] Can't assign requested address/code    I have no problems on debian tough.    Server code     precode#!/usr/bin/env python  import socket  TCP_IP = '127.0.0.123' TCP_PORT = 50050 BUFFER_SIZE = 1024  # Normally 1024, but we want fast response  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1) s.bind((TCP_IP, TCP_PORT)) s.listen(1)  conn, addr = s.accept() print 'Connection address:', addr while 1:     data = conn.recv(BUFFER_SIZE)     if not data: break     print "received data:", data     conn.send(data)  # echo conn.close() /code/pre  Client code:  precode#!/usr/bin/env python  import socket   TCP_IP = '127.0.0.123' TCP_PORT = 50050 BUFFER_SIZE = 1024 MESSAGE = "message sent from client to server"  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((TCP_IP, TCP_PORT)) s.send(MESSAGE) s.close() /code/pre  <answer225425> On a Mac the loopback interface only has the 127.0.0.1 address configured. You could always add an alias to the IP you need:  precodesudo ifconfig lo0 alias 127.0.0.123 /code/pre  Your python code worked for me then.  To delete the alias do the following:  precodesudo ifconfig lo0 -alias 127.0.0.123 /code/pre  hr  To make this persistent over reboots create emorg.local.localhost.plist/em in /Library/LaunchDaemons/.  Change the permissions with:   precodesudo chmod root:wheel /Library/LaunchDaemons/org.local.localhost.plist /code/pre  Open the file with   precodesudo nano /Library/LaunchDaemons/org.local.localhost.plist /code/pre  and add the following content:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;org.local.localhost&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/sbin/ifconfig&lt;/string&gt;         &lt;string&gt;lo0&lt;/string&gt;         &lt;string&gt;alias&lt;/string&gt;         &lt;string&gt;127.0.0.123&lt;/string&gt;         &lt;string&gt;up&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Finally load the launch daemon with:  precodesudo launchctl load /Library/LaunchDaemons/org.local.localhost.plist /code/pre  <comment273505> 127.0.0.1 is the IP address of the computer the code is running on (aka `localhost`), 127.0.0.123 usually doesn't exist. <comment273508> So why does this run fine on debian? Isn't it like loopback is /24 network for testing network apps offline? EDIT: Actually, I believe it's not only /24 but /8 <comment273511> Different network stack, `ping 127.0.0.123` doesn't work on OS X either. If I remember correctly, the standard defines /8 as reserved for loopback, it doesn't mandate that every address is reachable. <comment273513> So this alias will work the same way it does under debian? <comment273515> I don't really know what you mean. I've been able to add the alias and execute the python code, thus binding to 127.0.0.123? What does Debian do that you need? <comment273525> Debian just allows me to bind 127.0.0.123, so I think the result is same :) <comment274139> Just checked and Your solution works perfectly, thanks :)