How to restore servers signed certificates and private keys? <body> Starting fresh install of OS X Server on myserver.example.com running Mountain Lion after having saved the private key, intermediate and public certificates on another computer.    Now I want to replace the  key and certs generated by Server app setup for new incarnation of myserver.example.com with the CA-signed ones I backed up previously.   Using Keychain Access app - started from command line sudo when both exporting and importing - imports cert but not key. I don't really want to spend another Â£35 on a new CA-signed cert relating to new private key.    Key and certs all show in own keychain on backup machine.   ul liExported them as .crt file(should have exported as .p12 perhaps?); /li lisent .crt file to freshly setup server; /li liimported into system keychain before Server app setup to test process / avoid clash with generated key and self-signed cert;/li liopening .crt file imports signed cert but not key./li /ul  strongAnswer/strong:  emwill create answer when allowed by stackexchange in a few hours/em    It worked after:    ul liexporting key and certificate in .p12 file from the backup m/c's keychain em- instead of .crt file/em/li liimporting the .p12 file from the server's Keychain Access app (started from sudo command line codesudo /Applications/Utilities/Keychain\ Access.app/Contents/MacOS/Keychain\ Access/code em- instead of opening / double-clicking file in  Finder (of administrator but not root)/em/li /ul  Whether both or one of the above is required I don't know. However we now have original server's private key and related signed certificate.  Next question ... how to avoid this being overridden by Server app setup ... but that's another question!  <comment99614> Thanks this helped get me on track. Rather then opening keychain access from terminal with sudo, I believe you can import the certs normally and just make sure it is selected to go into the system keychain rather then the login keychain. That seemed to work for me and I imagine that by starting it with sudo it is probably just opening keychain access with no login keychain forcing everything into system.