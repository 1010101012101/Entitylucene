How do I change the time format used by ls command line on osx? <body> I want to make codels/code display time in codeISO/code format (military format). How can I change this behavior?  On Linux I knew that I could force ls to display time in long format by usin code--full-time/code but this doesn't work on OS X.  Update: I know that the format used by the command is based on the codelocale/code settings. The problem is that on OS X I was not able to use the trick of setting codeLC_TIME=en_DK/code.  <answer15172> You can display time in the long format by using:  pre ls -lT /pre  EDIT:  The above isn't quite what was wanted, but if you install gnu coreutils then gnu ls is available, which will do as required. If you use brew as a package manager, it's as simple as:  pre brew install coreutils /pre  <answer83915> codels -l --time-style=iso/code works fine for me.  <answer96405> OS X's built-in codels/code command does not take time formatting arguments, but the codestat/code command takes strftime format strings so you can get an approximation of what you want by doing:  precodestat -l -t '%FT%T' * /code/pre  The code%FT%T/code produces an ISO8601 local timestamp. Add a code%z/code if you want a UTC offset.  But while the timestamp is right, the rest only approximates what you'd get from ls. For instance, codels -l/code properly aligns fields into columns, can colorize output, and of course it lists directory contents rather than requiring you to pass all filenames as arguments. You can at least reproduce the proper alignment by piping the output through codetr/code to convert all spaces into tabs:  precodestat -l -t '%F%T' * | tr ' ' \\t /code/pre  Alternatively, I think it should be possible to get codels -l/code to produce an ISO8601 timestamp by defining a custom locale, but I have not seen it done.  <comment16417> Thanks, this is useful but does not solve the problem. The full format used is still not ISO-8601. <comment16418> OK - you can install gnu coreutils which includes gnu ls, which will do what you want. Easiest way is one of brew, MacPorts or Fink. I use brew - so just running 'brew install coreutils' works. You'll then have gls available. <comment16419> A non-answer, but still possibly useful: The stat(1) command is quite flexible and can be made to display time stamps in any desired format. <comment16456> gls (gnu ls) I mentioned in my answer can take a --style= flag where you can specify a +FORMAT string, so you can make the date appear whatever way you wish. <comment120233> Doesn't. Mountain Lion. <comment133107> Not on Mavericks either. <comment144392> It probably works fine for the OP, because he or she has installed a non-system `ls` without realizing it, via a package manager like brew. <comment167007> I wish I knew a way. Apple's BSD manual for `ls` seems to offer nothing for formatting datetimes, other than changing timezone and sorting by datetime rather than alpha. https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/ls.1.html <comment309508> Agree with @algal. I have `/usr/local/bin/gls` installed via `brew install coreutils`, and that supports the `--time-style` option.  The OP may have run `brew install coreutils --with-default-names` which would result in `/usr/local/bin/ls` being installed (amongst other utilities), or maybe the OP  set up a manual symlink to `gls`. <comment309509> Notably, `brew install coreutils` results in `/usr/local/bin/gls` being installed, so you need to run `gls` instead of `ls`. <comment312337> What do you see when you enter `which ls`?