Change *.txt to *.csv <body> How can I rename all *.txt in a directory to *.csv files in the terminal (Mavericks). I tried following inside the directory:  precodemv *.txt *.csv /code/pre  <answer143516> You need to loop over all files  precodefor f in *.txt; do     mv "$f" "${f%.txt}.csv" done /code/pre  If you have files with names starting with a code./code as well you might need to run  precodefor f in *.txt .*.txt; do     [[ -f "$f" ]] &amp;&amp; mv "$f" "${f%.txt}.csv" done /code/pre  <answer143925> This also works well:  precode# change to the Zsh zsh  # load the built-in zmv function autoload -U zmv  # rename the files zmv '(*).txt' '$1.csv' /code/pre  <answer222882> precodels *.txt |awk '{print "mv "$1" " substr($1,1,(index($1,".txt")))"csv"}' |sh /code/pre  strongCommand explanation:/strong  codels *.txt/code lists files ending with txt  code| awk '{print "mv "$1" " substr($1,1,(index($1,".txt")))"csv"}/code prints the command that allows to rename the previous files listed with txt to csv  code| sh/code executes the previously printed command, thus effectively renaming the files  strongNote:/strong if you want to list all files including hidden files (those starting with code./code) use codels -a *.txt/code instead  <comment169018> You can do it in the shell without calling an external program: `mv "$f" "${f%.txt}.csv"` <comment169020> This can be done nicely in AppleScript. Then AppleScript can be called with the Terminal command `osascript`. <comment169023> This skips the files starting with `.` <comment169024> @glennjackman Thanks. I always get the syntax wrong on that one, didn't want to post without having an Unix system to test it on. <comment169025> @NicolasBarbulesco True, but given the special role `.something` files play in the shell I wouldn't recommend to start file names with a dot anyway. If you really have to, you can always run `for f in .*.txt; do` instead. <comment169026> If you want to include dot files, `shopt -s dotglob` and the file expansion will pick them up. <comment169047> @patrix - But then you would handle *only the files starting with `.`*, no ? What about handling all files at once ? <comment169599> But this skips the files starting with `.` <comment270140> Care to break it apart (explain it piece by piece) for the non-technical users? <comment270172> @patrix I'd rather use `basename`. <comment270174> @MaxRied Well, why use an external utility if it can be easily avoided? <comment270175> @patrix `basename` is POSIX, you use a `bash`ism. There are WAY LESS systems with `bash` than with `basename`. <comment270180> Not with OS X :-)