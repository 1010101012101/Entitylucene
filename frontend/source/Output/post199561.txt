Take screenshot of window on Mac without using spacebar then mouse click <body> I want to take a screenshot of a window on a mac.  I'm currently using kbdshift/kbd + kbdcmd/kbd + kbd4/kbd then kbdspace/kbd then mouse click.  The process is very awkward, you got to do it in that order or you'll have to repeat it again..  I'm wanting a simple keyboard shortcut to do what kbdshift/kbd + kbdcmd/kbd + kbd3/kbd.  I want to use as simple a shortcut for taking a screenshot of a window.  Is it possible?  <answer199585> One approach would be to use the codescreencapture/code command:  precodescreencapture -w window.png /code/pre  which will capture the first window you click after you run the command, and save it as codewindow.png/code.   There are a few different ways you could bind this command to a keyboard shortcut, e.g. by creating an Automator service that runs it as a shell script, or by using a third-party launcher like Alfred. Either way, you'd probably also want to add some smarts to the process that chose a different filename each time, so you didn't keep overwriting your previous screenshot.  I don't know an easy way to always just capture the front-most window... perhaps an AppleScript guru can help with that?  <answer199682> Here's my solution, which I named strongWindow-Snapshot/strong, base on a very simple strongAppleScript/strong, either saved as an application from within the strongScript Editor/strong and or used as part of an strongAutomator Service/strong with emkeyboard shortcut/em assigned. Although as a strongService/strong it uses the third-party utility used in the strongWindow-Snapshot AppleScript/strong application's strongone* mouse-click solution/strong detailed below.  ul liNote: strongAutomator/strong used as a emService/em is, by itself, a nice feature however when used with a emglobal keyboard shortcut/em it can be problematic unless the emkeyboard shortcut/em used, is both emusable/em strongand/strong emnot in use elsewhere/em in strongOS X/strong or any opened strongApplications/strong whose window is to be captured. Which is why I've included using the strongAppleScript/strong both as an strongAppleScript Application/strong and or an strongAutomator Service/strong with emkeyboard shortcut/em assigned. While some emkeyboard shortcuts/em assigned to an strongAutomator Service/strong will work with most application windows nonetheless it may not work with some, even if that keyboard shortcut isn't assigned to that application of the window being captured. In such cases the strongWindow-Snapshot AppleScript/strong application can be used over the strongAutomator Service/strong./li /ul  h2strongAs an AppleScript Application/strong/h2  This can be setup to be either a strongtwo mouse-click solution/strong (emthe default/em) or a strongone* mouse-click solution/strong.  ul li* Note: As a strongone* mouse-click solution/strong it requires the use of a third party utility called CLICLICK. As far as I know, there is no direct emmouse/left mouse down event/em in strongAppleScript/strong and thus the use of either a third party utility or otherwise the use of additional code then what's already being presented to employ methods that use other resources, native and or third-party./li /ul  As a strongtwo mouse-click solution/strong the strongAppleScript/strong it's saved as an application, I saved it as strongWindow-Snapshot/strong in strongApplications/strong, and then placed it in the strongDock/strong by dragging and dropping the emapplication bundle/em onto the strongDock/strong where I wanted it to be.  ul liWhat I like about the strongtwo mouse-click solution/strong is when the emDock Tile/em of the strongWindow-Snapshot/strong application is clicked, it's literally like I had manually pressed kbdshift/kbd-kbdcommand/kbd-kbd4/kbd then kbdSpace bar/kbd on the keyboard and now all I have to do is emmouse-over/em the emtarget window/em I want to capture and then emmouse-click/em it. Thus a strongtwo mouse-click solution/strong! This method allows pressing the kbdesc/kbd key to abort, just as the manually pressed emkeyboard shortcut/em would have.  Also it doesn't rely on using a third party utility and a second codedelay/code command as a timer to allow positioning the mouse pointer before it times out and automatically takes the snapshot used in the strongone* mouse-click solution/strong. By itself the strongtwo mouse-click solution/strong is the easiest solution presented herein./li /ul  As a strongone* mouse-click solution/strong the strongAppleScript/strong is saved as an application and the third party utility CLICLICK is added to the application bundle and corresponding code is uncommented in the script.  ul liNote: The strongone* mouse-click solution/strong uses a second codedelay/code command to allow time in positioning the mouse pointer anywhere over the target window to be captured and doesn't matter whether or not the window is the top-most window, when the second codedelay/code command emtimes out/em whichever window the mouse is over that's the one captured in the snapshot. The capture can be aborted by pressing the kbdesc/kbd key before the second codedelay/code command emtimes out/em./li /ul  h2strongAs an Automator Service with emkeyboard shortcut/em/strong/h2  As strongAutomator Service/strong it's created using the strongApplesScript/strong code, modified slightly, and a emkeyboard shortcut/em is assigned to the strongService/strong in: strongSystem Preferences  Keyboard Shortcuts  Services/strong  ul liNote: The emkeyboard shortcut/em I assigned is kbdshift/kbd-kbdcommand/kbd-kbd5/kbd or ⇧⌘5, which seemed a logical one to use, and whichever window the mouse is over is the window that will be captured by the snapshot. The window does not need to be totally visible to be captured or be the top-most window./li /ul  h2strongWindow-Snapshot AppleScript Code/strong/h2  precodetell application "System Events"      (* Note: If used as the default two mouse-click solution then use as is, nothing else needs to be done. *)      keystroke "$" using {command down}     delay 0.25     keystroke space      (* Note: If using as the one mouse-click solution or Automator Service, uncomment the      two lines below having double-dashes in front by removing the double-dashes.      Also when using as the one mouse-click solution, set a value on the 'delay' command      below to an appropriate value which allows you the time necessary to move the mouse       over the target window before that delay command times out and the snapshot is taken.     The default of '1.5' is in this use case is a somewhat arbitrary value, set it to suite.      Note: When using as an Automator Service set the 'delay' command below to '0.25',      the same as in the first 'delay' command. *)      -- delay 1.5     -- do shell script "/Applications/Window-Snapshot.app/Contents/Resources/cliclick c:."  end tell /code/pre  ul liNote: As you can see there is a code0.25/code second value, codedelay 0.25/code, on the first codedelay/code command, this short delay is necessary as there needs to be a delay between the two codekeystroke/code commands.  If using the strongone* mouse-click solution/strong the second codedelay/code command needs to be something more realistic.  Set a value that allows you the time necessary to move the mouse over the target window before the delay command expires, e.g. code1.5/code etc./li /ul  h2strongCreating the Window-Snapshot Application/strong/h2  ol liOpen strongScript Editor/strong (or strongAppleScript Editor/strong if applicable)./li liCopy and paste the strongWindow-Snapshot AppleScript Code/strong, from above, into the strongUntitled/strong document window and then press strongCompile/strong./li liPress kbd⌘/kbdkbdS/kbd to save and set the strongFile Format:/strong to strongApplication/strong saving it in the strongApplications/strong folder./li liGive the strongWindow-Snapshot/strong application bundle a custom icon.  I used an icon of a camera found at Find Icons and used this one in particular clicking the 'Download ICNS' button.  I opened the downloaded "scanners_cameras.icns" file in strongPreview/strong and copied it and then pasted it into the strongGet Info/strong sheet of the strongWindow-Snapshot.app/strong by first selecting the little icon in the upper left corner of the strongWindow-Snapshot Info/strong sheet. (In strongApplications/strong select the strongWindow-Snapshot.app/strong and press: kbd⌘/kbdkbdI/kbd)/li liNow emdrag and drop/em the strongWindow-Snapshot/strong application bundle from the strongApplications/strong folder onto the strongDock/strong where you would like it to be./li /ol  It's now ready to be used, click the strongWindow-Snapshot/strong emDock Tile/em and then click the target window to be captured.  ul liNote: The snapshots are saved with the same naming and location settings as if ⇧⌘3 was pressed only saving just the target windows.  The emdefault/em is on the Desktop using codeScreen Shot yyyy-mm-dd at hh.mm.ss AM|PM/code or if the emdefault/em has been changed it will be to however it's currently set./li /ul  strongSetting up the Window-Snapshot.app to be a one* mouse-click solution using CLICLICK/strong  ol liDownload CLICLICK and mount the cliclick.dmg file and place a copy of the codecliclick/code executable inside the strongWindow-Snapshot.app/strong application bundle at the path show in the script.  strongCtrl-Click/strong the strongWindow-Snapshot/strong app selecting strongShow Package Contents/strong and navigate to the strongResources/strong folder placing a copy of the codecliclick/code executable there./li liUncomment the two lines below the code(* Note: If using as the one mouse-click solution or Automator Service,/code comments by removing the double-dashes, code--/code, in front of the code./li liSave the changes made to the strongAppleScript/strong./li /ol  It's now ready to be used as a strongone* mouse-click solution/strong.  h2strongCreating the Window-Snapshot Automator Service/strong/h2  ol liOpen strongAutomator/strong selecting strongService/strong./li liSet strongService receives selected/strong to strongno input/strong leaving strongin any application/strong as is. Add a strongRun AppleScript/strong and then copy and paste the strongWindow-Snapshot AppleScript Code/strong above into the strongRun AppleScript/strong window overwriting the default code./li liUncomment the two lines below the code(* Note: If using as the one mouse-click solution or Automator Service,/code comments by removing the double-dashes, code--/code, in front of the code and set the value of the second codedelay/code command to code0.25/code./li liSave the strongService/strong pressing kbd⌘/kbdkbdS/kbd naming it as strongWindow-Snapshot/strong./li liOpen strongSystem Preferences/strong and navigate to strongKeyboard   Keyboard Shortcuts  Services/strong and scroll to the bottom, then under strongGeneral/strong you'll see strongWindow-Snapshot/strong and select it.  Now click on strongadd shortcut/strong and press kbdshift/kbd-kbdcommand/kbd-kbd5/kbd or: ⇧⌘5/li /ol  It's now ready to be use as a strongService/strong using the emkeyboard shortcut/em: ⇧⌘5  ul liNote: If you only want to use it as a strongService/strong you'll need to adjust the pathname to the codecliclick/code executable to wherever you installed it. You could try putting it in the Services bundle at, e.g. code/Users/$USER/Library/Services/Window-Snapshot.workflow/Contents/code, although I did not try this as I like having it as both an strongAppleScript/strong application using it as a strongtwo mouse-click solution/strong and an strongAutomator Service/strong with emkeyboard shortcut/em assigned./li /ul  In closing, I'd like to say that this very simple strongAppleScript/strong certainly can be expounded upon to add additional functionality both as an application or a service, i.e. adding code to save the snapshot with different names and locations etc., however I'll leave that to you to modify if you so choose.  <answer260885> Why not just enable enhanced dictation commands, then create a new voice command? In the example below I created a voice command that when I say "Grab Picture" it will take a screen shot. Completely bypass the keyboard LOL  img src="https://i.stack.imgur.com/5JomU.jpg" alt="enter image description here"  <comment240327> Where did the window.png save? also with that method using terminal; still have to mouse click, it does make it easier and I'll look into automator and alfred, thankyou. <comment240330> With the command above, it will save in whatever folder you ran the command from. If you wanted to always save on the desktop, for example, you could specify that location as part of the filename, e.g. 'screencapture -w ~/Desktop/window.png'. Yes, appreciate mouse click is still required though... wasn't able to figure out a way around that so far. <comment241575> It works perfectly, ⇧⌘5 and it saves, your solution will help many people. Thank you. <comment241587> @Paul, Glad you can use it.  I use a different ver. of the AppleScript App and did not include the code here as it uses another 3rd-party executable.  The 2nd executable is called `checkModifierKeys` and does what the name implies and I have it coded so that if I press the shift key when I click the Dock Tile it toggles the `disable-shadow` key in the screencapture's .plist file so I can take snapshots without the drop shadow easily.  Both executables I built from source code the authors provided although they both provide the binaries. If you're interested, let me know I'll update the answer. <comment241635> Okay, I’d like to know.  Thank you.