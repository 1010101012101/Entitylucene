How to open a shell script in a new Terminal window and run it with administrator privileges <body> I need to programmatically open a shell script in a Terminal window and run it with administrator privileges. I'm using osascript as it displays a convenient prompt for an admin login/password.  I'm currently using this :  precodeosascript -e 'do shell script "open -a Terminal \"'"$appDir"'\"" with administrator privileges' /code/pre  The trouble is, even after entering the credentials in the OS X prompt, the newly opened script will beg for a password at the first sudo command.  How do I pass the admin credentials to the opened script?  <answer156560> I'd try writing a simple script:  precode#!/bin/bash sudo /usr/bin/id /code/pre  save this as codesomething.command/code, change its permissions to executable with codechmod +x/code, and then run this from AppleScript with  precodeosascript -e 'do shell script "open -a Terminal ./something.command"' /code/pre  Instead of code/usr/bin/id/code you can call whatever script you need to run with admin privileges then.  EDIT:  This will work:  precodeosascript -e 'do shell script "sudo /Applications/Utilities/Terminal.app/Contents/MacOS/Terminal" with administrator privileges' /code/pre  <answer156567> Remove the sudo from inside the script. You use sudo top change the user but if you are running the whole script with Administration privileges the you don't need to change   The authentication is just done by the osascript command and not in both the script and the osascript  In effect this is the same as running the whole script under sudo.   <comment184063> Can't you run the script requiring admin rights directly (instead of using Terminal as an in-between)? <comment184065> No, because running the script directly executes it in the background. I need a Terminal window for user interaction. <comment184068> Thanks, but this is similar to the current state: something.command prompts for a password, which is what I'm trying to avoid. I would like to have an OS X prompt window, which allows entering another user with admin privileges for example. Osascript offers such a functionality with 'with administrator privileges'. <comment184075> The problem here is that a terminal window opened that way does not seem to inherit admin privileges. <comment184113> Last edit contains the solution <comment184282> Thank you Brethil, your edit did the trick. I ended up using this line: `osascript -e 'do shell script "sudo /Applications/Utilities/Terminal.app/Contents/MacOS/Terminal \"'"$appDir"'\"" with administrator privileges'`. Admin privileges asked by the OS X dialog were successfully passed to the executed script.