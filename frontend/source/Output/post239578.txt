Compress without .DS_Store and __MACOSX <body> When I compress a folder or file by right click menu of Mac OS X, the archived file contains strong.DS_Store/strong and strong__MACOSX/strong folders. Because I share the archived file online for download, Windows users mistakenly trying to search the file in strong__MACOSX/strong folder.  I need to have a cleaner archive option. I do not want to include strong.DS_Store/strong and strong__MACOSX/strong folder, but only the file or folder into the archive file.  All I found is strongCleanArchiver/strong but it is GUI application. It really takes time and I have lots of files to compress. I am looking for a solution by context menu if possible.  Is there any solution that you can recommend for clean compressing?  <answer239581> Only one I've ever really used is BetterZip [$20]  It is a GUI app, but has Applescript &amp; Services support, with which you can run presets with your default settings - including omitting Mac-specific files like .DS_Store &amp; __MACOSX. Possibly worth a look.  From the BetterZip Help...     BetterZip supports two services: one for extracting and one for   creating archives. You can configure what the BetterZip services will   do with presets.      To use a service, select one or more files or folders in the Finder   and choose Compress with BetterZip or Extract with BetterZip from the   Finder  Services menu or the Services submenu in the contextual menu.      You can even set keyboard shortcuts for the BetterZip services, e.g.,   ^⌥⌘C for compressing and ^⌥⌘E for extracting. To set shortcuts for   services, go to System Preferences  Keyboard  Keyboard Shortcuts and   choose Services in the left table. In the right table, scroll to Files   and Folders, choose Compress with BetterZip and press ↩. An editable   textfield will appear. Press the desired shortcut.   One of my Save presets...  img src="https://i.stack.imgur.com/KtUyF.png" alt="enter image description here"  <answer239587> You can use zip command in Terminal to zip the files without the em.DS_Store/em, em__MACOSX/em and other .* files.   Open Terminal (search for terminal in spotlight) br Navigate to the folder you want to zip using the cd command br Paste this codezip -r dir.zip . -x ".*" -x "__MACOSX"/code  Example: Let's say you have a folder on your desktop called Folder with stuff to zip. br Open terminal and write following commands: br codecd Desktop/Folder/code br codezip -r dir.zip . -x ".*" -x "__MACOSX"/code br  Now you have a file called dir.zip without em__MACOSX/em and .* files in the folder Folder on your desktop.  <answer246577> Just some extra information ...  My understanding is that __MACOSX is a subdirectory artificially created by the Mac GUI tools to hold meta data such as extended attributes that can't be normally saved in a zip file.  If you use the Mac GUI tools to unpack the zip file, then the tools will know what to do with __MACOSX and the directory won't actually get unpacked.  The problems happen when you send your .zip file to Windows or Linux users, or just use the general-purpose codeunzip/code program to unpack them. Those tools won't know that __MACOSX is special, and will just unpack it.  The simplest option is to use codezip/code to pack up your zip file instead of the Mac built-in tool. codezip/code won't create __MACOSX and your problem is solved. (You will lose the meta data in the process, but you probably didn't want it anyway.)  precodezip -r dir.zip . /code/pre  If it's too late, and you already have a zip file with __MACOSX, you can still remove it with:  precodezip -d foo.zip __MACOSX .DS_Store /code/pre  Finally, the accepted answer is the best because if for some reason __MACOSX actually does exist in your directory (e.g. because you previously used codeunzip/code to create it), the -x option will keep it from being packed up.  <answer264924> Try Keka. It comes with an option to exclude .DS_Store  img src="https://i.stack.imgur.com/43fjG.png" alt="enter image description here"  <comment294054> +1 Can you wrap that into an automator service? <comment304128> Technically speaking, if you use `zip` to create the zip file, "__MACOSX/" won't get created in the first place, so all you really need is `zip -r dir.zip .`. However, if "__MACOSX/" somehow snuck in there, your solution will get rid of it. <comment323226> Also you can easily verify that your zip file does not have __MACOSX in it by typing in the console ``zipinfo dir.zip``