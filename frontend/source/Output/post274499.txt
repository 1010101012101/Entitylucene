Write a function in zshrc that can take a parameter and can handle flags <body> I usually need a chrome page opened to localhost:3000 when I am developing. So, I just run the following cmd: code/Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome --app=http://localhost:3000/code  Since I use this frequently and sometimes my port changes. I want to write a function in zsh where codech/code will open chrome in codelocalhost:3000/code while codech 2500/code will open chrome in codelocalhost:2500/code.  So far, this is what I have managed to do:  precodech () {     command "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" } /code/pre  This opens a new chrome window but displays an error/warning in the console: code/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-9.1.12/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 3/code  But when I add a flag:  precodech () {     command "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome --app=http://localhost:3000" } /code/pre  Nothing happens and I end up getting an error: codech:1: no such file or directory: /Applications/Google Chrome.app/Contents/MacOS/Google Chrome --app=http://localhost:3000/code  <answer274747> The reason it does not work with the added flag is that you added the flag within the double quotes, essentially telling codezsh/code that it is part of the command name. The only reason any quotes are needed is that the path to and name of codeGoogle Chrome/code contain whitespaces. Whitespaces are used by codezsh/code (and any other Unix shell) as separator between emwords/em. Quoting a string tells codezsh/code that it should be interpreted as a single word, no matter how many whitespaces (or other syntactic elements) are in it.  One way to do this correctly is:  precodech () {     "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" --app=http://localhost:${1:-3000} } /code/pre  ul liHere only the path to codeGoogle Chrome/code is quoted, while the flag is separate. /li liThe keyword codecommand/code is not necessary. It would only tell codezsh/code to use an external command instead of a function or alias of the same name, which is most likely not a risk here (The alias or function would have to be named code"/Applications/Google Chrome.app/Contents/MacOS/Google Chrome"/code)/li licode${1:-3000}/code is substituted with the first parameter (code$1/code) passed to codech/code. If it is undefined or has a null-value (e.g. code""/code) "3000" will be substituted instead. So running  precodech 2500 /code/pre  will open Chrome on codehttp://localhost:2500/code, but running  precodech /code/pre  will open Chrome on codehttp://localhost:3000/code./li /ul  <comment345514> I am still getting the error in the command prompt: `/Library/Caches/com.apple.xbs/Sources/AppleGVA/AppleGVA-9.1.12/Sources/Slices/Driver/AVD_loader.cpp: failed to get a service for display 3` <comment345552> I am not really sure about that. But if everything else works just fine, I would assume that it is more of a debug message an can be ignored. Chances are that Chrome is issuing this message even when it is started from the GUI, you just can not see it then.