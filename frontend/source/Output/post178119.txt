How to recover the name of a non-system volume containing all user folders in Mac OS X Lion? <body> I have done something stupid and need help:  I have 3 external drives attached to my Mac and in an attempt to make the partition names more meaningful, I renamed them using finder/get info. My user account was located on one of these drives, the other 2 are for TimeMachine. Now of course, I cannot access the user account because I forgot to change the path in System Preferences.  By starting in recovery mode I can see the disks, but Disk Utility does not appear to allow me to change the name. Worse still, I cannot remember what the name of my drive that contains the user account should be. I suspect it can be sorted out from the command line, but my skills do not extend that far.  Any chance someone can provide some guidance on how to rename the partition and how to ensure the user account path matches.  <answer178225> The fastest way to solve your problem is probably adjusting the path of your user directory in the yourusername.plist (assuming following current path of your user folder: "/VolumeNameContainingYourUserFolder/Users/yourusername"):  ul liBoot to Recovery Mode./li liOpen Terminal.app in the menubar (Utilities - Terminal)/li liEnter codedf/code to get the paths/names of your main system volume and the volume containing your user folder. You may have to move around with codecd/code and check the content of folders with codels/code if you don't remember the full path of your user folder./li liChange your working directory to the folder "users" deep inside /private:  precodecd /Volumes/NameOfYourMainSystemVolume/private/var/db/dslocal/nodes/Default/users/ /code/pre/li liList the content of the folder:  precodels /code/pre/li liLocate your username.plist and convert it to xml:  precodeplutil -convert xml1 yourusername.plist /code/pre/li liThen modify the file with vim* (please consult online resources how to work with vim first!)  precodevim yourusername.plist /code/pre  ul liModify the string   precode/Users/yourusername   /code/pre  or  precode/Volumes/WrongVolumeNameContainingYourUserFolder/Users/yourusername /code/pre  to  precode/Volumes/VolumeNameContainingYourUserFolder/Users/yourusername /code/pre  in the key "home" at line ~90.  /li liSave the changes and quit vim./li /ul/li liConvert the plist to the original binary format:  precodeplutil -convert binary1 yourusername.plist /code/pre/li lienter codeexit/code and quit Terminal/li liReboot to your main volume, log-in with your account./li /ul  Optional: Enable the root user temporarily. Log-out of your user account and log-in with root.br Make any necessary adjustments like renaming the volume containing your user folder (or other user folders) again and changing the path(s) to the user folder(s) of your main user (other users) in System Preferences accordingly. Log-out and log-in with your common user again. Finally disable root.  hr  *: It's much easier to use nano or pico instead of vim, which has two different modes: command mode and insert mode. While testing the solution in a Recovery HD of a virtual machine, i first tried codenano yourusername.plist/code, then  codepico yourusername.plist/code. Both commands gave me an error: Can't find nano/pico. So I decided to use vim, because I was too lazy to find out if nano or pico are present in the Recovery HD at all. You may try nano instead: Use it like an almost common text editor by moving around with the arrow keys and adding or deleting text as usual. After finishing your edit, hit kbdctrl/kbdkbdo/kbd to write the changes to disk and kbdctrl/kbdkbdx/kbd to exit nano.  <comment211100> Someone who is new to Unix should probably use `nano` instead of `vim`. <comment211102> @NobodyNada Thanx for your advice. You are right, but i tested it in a VM-Recovery HD and `nano yourusername.plist` as well.as `pico yourusername.plist` didn't work because the shell couldn't find nano/pico. So i decided to use vim. I will add a hint.