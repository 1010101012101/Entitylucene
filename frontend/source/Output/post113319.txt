Add color to custom ls alias <body> I created an alias to display permissions in octet format:  precodealias lso="ls -l | awk ' {   k=0;   for (i=0;i&lt;=8;i++)     k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));   if (k)     printf("%0o ",k);   print }' /code/pre  I also set added this code to display ls in a colored format:  precodeexport CLICOLOR=1 export LSCOLORS=GxFxCxDxBxegedabagaced /code/pre  What I am wondering, is how to make my alias display in a colored format as well? Also, if anyone could explain the syntax of the alias (after the pipe)? I copied the text and am trying to learn to be able to synthesize commands like it.  <answer113323> The default codels/code provided with OSX comes from BSD and won't allow you to do what you want.   Using CoreUtils ls (installed with macport it's available with the codegls/code command)   You'll get your colors using code--color=always/code:   precodels -l --color=always | awk ' {   k=0;   for (i=0;i&lt;=8;i++)     k+=((substr($1,i+2,1)~/[rwx]/)*2^(8-i));   if (k)     printf("%0o ",k);   print }' /code/pre  hr  About the awk part :   ul licodels/code outputs file permissions as 9 characters. That's why there's a loop. /li lithe codesubstr/code returns at each step one of the char (incremented index, 1 char-length substring) /li licode~/[rwx]/code converts the char to 1 if it's a coder/code or a codew/code or a codex/code/li lithe operation behind just does the operation the get the decimal result/li licodeprint("%0o ", k)/code just prints the octal result of the decimal value calculated before /li /ul 