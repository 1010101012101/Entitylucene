Cannot access localhost after upgrade to Mavericks but can access 127.0.0.1 <body> I ran across this question, but it wasn't resolved (and it hasn't been touched in a while). I'm not sure if my issue is the same, but I don't have enough reputation here to comment on that question.  I just upgraded from Snow Leopard (10.6.8) to Mavericks. Before the upgrade, I was able to visit codehttp://localhost/code; but now I can't. I checked my hosts file, and it looked ok (but this isn't quite my area of expertise):  precode127.0.0.1       localhost 255.255.255.255 broadcasthost ::1             localhost  fe80::1%lo0     localhost /code/pre  I am still able to visit 127.0.0.1. This wouldn't necessarily be a huge deal, but I'm trying to use Sinatra on Thin which isn't working after the OS upgrade either (it was working on my Snow Leopard setup), so I fear there may be an underlying issue that could have other negative effects. Thanks.  <answer107843> I have no such problems connecting to a web server when it's actually listening on port 80.  If you have no web server running, here is what you should get from terminal to show that name resolution is working on all network interfaces before the telnet gives up connecting to port 80:  precodemac:~ me$ telnet localhost 80 Trying ::1... telnet: connect to address ::1: Connection refused Trying 127.0.0.1... telnet: connect to address 127.0.0.1: Connection refused Trying fe80::1... telnet: connect to address fe80::1: Connection refused telnet: Unable to connect to remote host /code/pre  Should you get different results, I would use scutil to determine reachability for your network destination:  precodemac:~ me$ scutil -r localhost Reachable,Local Address mac:~ me$ scutil -r loopback Reachable mac:~ me$ scutil -r 127.0.0.1 Reachable,Local Address /code/pre  It might be worth checking if you have LittleSnitch or another firewall that has rules that are blocking network access or reboot into Safe mode to test if some kernel extensions or other conflict is preventing the default reachability and access to local ports. Also, you will most certainly want to check whatever web server you are running to ensure it's really listening to port 80:  precodemac:~ me$ sudo lsof -i :80 | egrep "PID|LISTEN" Password: COMMAND   PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME httpd    1645 root    8u  IPv6 0x513627eaa81c8205      0t0  TCP *:http (LISTEN) httpd   15851 _www    8u  IPv6 0x513627eaa81c8205      0t0  TCP *:http (LISTEN) httpd   72969 _www    8u  IPv6 0x513627eaa81c8205      0t0  TCP *:http (LISTEN) /code/pre  Also, quit all web browsers or be prepared to filter those network connections from the above codelsof/code command as it shows all connections over port 80.  <answer107861> Mavericks (OS X 10.9) uses Ruby 2.0. Not clear on what you were using under Snow Leopard (OS X 10.6.8) but perhaps a major change in version broke something?  In my experience Ruby upgrades are never easily backwards compatible and—IMHO—very frustrating to maintain from a system administrator’s point of view for reasons like this.  I would recommend reinstalling whatever Ruby gems you have in place and try again.  <answer107936> Everything seems to be working now. I can access codelocalhost/code again, and my app is running Sinatra on Thin as it was before. Thanks to bmike, I did a bit of searching on why my loopback was unreachable and came across this article. I moved my old hosts file (code/etc/hosts/code) to codehosts.old/code and made a new one in its place that simply contained:  precode## # Host Database # # localhost is used to configure the loopback interface # when the system is booting. Do not change this entry. ## 127.0.0.1           localhost 255.255.255.255     broadcasthost ::1                 localhost fe80::1%lo0         localhost /code/pre  Then, I ran codedscacheutil -flushcache/code and rebooted my computer*. After that, things appear to be working normally again. I can only guess that something weird happened with my old hosts file. I also took JakeGould's advice and blew away ruby 2.0.0 (I still had ruby 1.8.7--you cannot uninstall ruby entirely on a mac, since it uses ruby for other things) and rvm and reinstalled those; but I'm not sure that had anything to do with my success, as I still had the same issues until I followed the steps outlined above.  strongNote:/strong the above hosts file contains virtually the same thing that I say my hosts file contained before (see original question); however, there were other things in my original hosts file that I did not share in my question (I just shared what I thought was the relevant part), so perhaps something there got borked when I upgraded--I wish I knew for sure.  *Rebooting is probably not necessary. I actually had this problem after setting up a new user from a backup drive on my machine at work (which is running Mountain Lion) and (just today) followed the same steps above (minus blowing away ruby and rebooting the machine), and it worked. strongThis leads me to believe that the heart of the issue was a borked code/etc/hosts/code file./strong  <comment126474> Not an exact answer to your problem but try muffintheman.localtest.me You can replace muffintheman with anything and it will resolve.  We use this A LOT at work because we use subdomains for switching layouts and behavior. <comment126508> @dstarh, that worked. Like you said, not really a fix for my problem; but it's interesting. I might look more into how that works. <comment126509> I'm using ruby 2.0.0p247 (and was before), but I don't think that should affect the localhost thing. <comment126510> `telnet localhost 80` spits out `localhost: nodename nor servname provided, or not known`, but `telnet 127.0.0.1 80` spits out `Trying 127.0.0.1... \ Connected to localhost. \ Escape character is '^]'.` What does that tell me? <comment126512> If you installed Ruby 2.0.0p247 manually on OS X 10.6.8 & then 10.9 installs it’s own version of 10.9, chances are high that it overwrote some gems or components in a way that would bork your setup.  I recommend you simply reinstall the gems you need manually & see what happens. <comment126521> @MuffinTheMan I've edited the answer substantially. Hopefully it now covers most of the bases... <comment126585> Thanks, I tried blowing away Ruby 2.0.0 and even rvm--then reinstalled. No change :/ <comment126586> Thanks, @bmike. Results of scutil: `localhost - Reachable,Local Address` - `loopback - Not Reachable` - `127.0.0.1 - Reachable,Local Address`. So it looks like there's an issue with the loopback? <comment126612> I don't know if this is related.  At a certain point (when I left Snow Leopard, perhaps) web sharing stopped working.  So I got this small preference pane to bring it back: http://clickontyler.com/web-sharing/ <comment126937> @MuffinTheMan someone just registered the domain localtest.me and put a wildcard for *.localtest.me to point to 127.0.0.1 .  We used to have to maintain large host files for specific clients and we've switched entirely to that domain now. <comment126999> Interesting, @dstarh, thanks for the info! <comment257496> WOW.... really!? This totally fixed my problem