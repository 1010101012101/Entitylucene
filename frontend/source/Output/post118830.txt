Install gcc to mac via Terminal <body> I have installed Xcode and the command line tools from the Mac Developers website, which I have read a few times is a prerequisite. I also installed the MacPorts program. In terminal:  precodesudo port install gcc48 sudo port select -set gcc mp-gcc48 /code/pre  All the above went smoothly until I type:  codehash gcc/code  When I press enter, I get the following error message:  -bash: hash: gcc: not found  I am at a loss and do not know how to proceed to successfully install gcc on my Mac (which is running Mac OS X 10.9.1).  Much obliged to any suggestions and or alternatives to installing the gcc  <answer118834> You might be better off installing gcc from homebrew than Macports.   precoderuby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" brew doctor brew update brew search gcc /code/pre  There're are about 6 versions of gcc available from this package manager. See http://brew.sh for more details on the homebrew tools. Also this thread has more details on gcc and homebrew: How do I install GCC via Homebrew? Lastly, the gcc error in your shell is similar to this thread: I installed Xcode but I still don&#39;t have gcc in my terminal  <answer135103> I don't think your port select command did what you expected. The manual states that the select command strongselects between multiple versions of a versioned port/strong, which I believe is strongnot/strong your case here:  precodepejvan$ port help select Usage: select --list --set --show --summary &lt;arguments&gt;  Select between multiple versions of a versioned port  This allows you to choose which version, among several installed versions of a port, is to be considered primary.  What this means is which version becomes the one most would consider the default, e.g. the one run without specifying any version. /code/pre  After you successfully run the install command for gcc (here version 4.9):  codesudo port install gcc49/code  You can verify you've got the gcc binaries installed:  precodepejvan$ ls -l /opt/local/bin/gcc* -rwxr-xr-x  2 root  admin    42912  3 Jun 03:44 /opt/local/bin/gcc-ar-mp-4.9 -rwxr-xr-x  3 root  admin  1082788  3 Jun 03:44 /opt/local/bin/gcc-mp-4.9 -rwxr-xr-x  2 root  admin    42992  3 Jun 03:44 /opt/local/bin/gcc-nm-mp-4.9 -rwxr-xr-x  2 root  admin    43000  3 Jun 03:44 /opt/local/bin/gcc-ranlib-mp-4.9 /code/pre  You can then run gcc with the full path to the binaries:  precodepejvan$ gcc-mp-4.9 --version gcc-mp-4.9 (MacPorts gcc49 4.9-20140416_2) 4.9.0 20140416 (prerelease) Copyright (C) 2014 Free Software Foundation, Inc. This is free software; see the source for copying conditions.  There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. /code/pre  If you want to replace (temporarily or permanently) the clang complier by gcc, you can do it by setting the CC env var the following way for example:  codeexport CC=/opt/local/bin/gcc-mp-4.9 # set GCC as default C compiler/code  As a side note, please note that for the codeport select gccVersion/code to work, you will need to install codegcc_select/code:  precodepejvan$ port info gcc_select gcc_select @0.1_8 (sysutils)  Description:          gcc_select installs files that allow 'port select' to switch the default version of gcc. It symlinks the standard compiler executables in                       the MacPorts prefix to the selected version. /code/pre  I haven't looked at the details of the package, so I'm not sure whether it would work between clang and port installed gcc or only with several different versions of port installed gcc packages.  <answer146554> Their might be two problems. One problem is your path. You need to have /opt/local/bin in front of /usr/bin currently you have /opt/local/bin behind /usr/bin. Because of this g++ is probably still linking to clang.  The other problem is you are using the port select command wrong. The port select command automatically makes a g++ flag link to your specified compiler. In this case the specified compiler should be mp-4.8 and should be --set instead of -set. The directions are on this webpage http://dropbit.com/?p=84.  <comment138561> Any reason you need gcc specifically? clang uses the same syntax, compiles faster, and generates faster code. The major bugs have been squashed in the past few years. <comment138563> An edit would help this. If you have a package you need to compile, list that. If you just want to know how to make gcc compile for the fun of it, that's fine too but the answer to either is different. <comment143567> Why would this be better than macports? <comment143568> What does `which gcc` give? <comment160120> Did you check your path variable in your ~/.profile? It should point to the directory in which gcc is located. <comment160121> Only between gcc packages and port select should have worked <comment160122> What does ;s -l /opt/local/bin/gcc* show? <comment160126> That's what I stated in first sentence, mate. <comment160127> (BUT you need to install the gcc_select package, which does not appear to be the case here). <comment164574> → user[3239031]: please insert in your original question the output of `echo $PATH`? <comment164575> → Mark: if `hash` doesn't find `gcc`, `which` won't do any better. It is simply not found within the actual `PATH`. See: `which direction | sed 's,direction,gcc,'` :). <comment172686> @KevinChen "generates faster code"? Need reference for this. I still believe gcc will generate faster code.