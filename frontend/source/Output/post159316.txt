How to get automount and sshfs (osxfuse) working with yosemite <body> I'm currently trying to get Apple's automount working with osxfuse and sshfs. The result should be that a specified folder gets automatically mounted if it is used.  strongWhat I've done so far:/strong  ul liinstalled osxfuse and sshfs from the official packages (versions are osxfuse: 2.7.3 / sshfs 2.5.0)/li licreated a symlink code/sbin/mount_sshfs -&gt; /usr/local/bin/sshfs/code/li liappended the following config line to /etc/auto_master : code/-    auto_ssh    -nosuid/code/li licreated the /etc/auto_ssh config file:  precode/mnt -fstype=sshfs,sshfs_debug,allow_other,idmap=user,follow_symlinks,max_read=65536,rw,nodev,cache=no,IdentityFile=/Users/myUsername/.ssh/sshfs remoteUser@remoteHost:/path/to/folder /code/pre/li liafterwards reload automount via : codesudo automount -cv/code/li /ul  If I now try to codecd/code into codemnt/code i get the following error:  precodebash: cd: /mnt: Operation not permitted /code/pre  The console contains the following:   precode04/12/14 01:27:50,418 automountd[1965]: MOUNT  REQUEST: name=/mnt [] map=auto_ssh opts=nosuid path=/mnt direct=1 04/12/14 01:27:50,631 KernelEventAgent[69]: tid 54485244 received event(s) VQ_DEAD (32) 04/12/14 01:27:50,632 automountd[1965]: MOUNT  REPLY  : status=1, AUTOFS_DONE 04/12/14 01:27:50,632 automountd[1965]: mount of /mnt failed: Operation not permitted /code/pre  Does anyone have any idea how to make this work, or what to try next?  <answer205287> FWIW, if anyone else stumbles across this old question, the best guide I have found for mounting sshfs using apple's automounter is here -   http://virtuallyhyper.com/2013/07/mount-various-file-system-with-autofs-on-mac-os-x-mountain-lion/#mount-sshfs-with-autofs  <answer245009> Update 2016-08-03: I found that installing SSHFS from https://osxfuse.github.io is stabler than the homebrew version, because of some old dependency (therefore this may improve in the future).  strongCAVEAT: This connection is super fast when it works, but often has issues after terminated connects due e.g. wireless, standby./strong  hr  Assumes you have Homebrew installed (emmake your life easier and get this first/em)  h1Installation of SSHFS/h1  precodebrew install sshfs /code/pre  Check this folder to see installed file systems: codels /Library/Filesystems/code If you don't see codeosxfusefs.fs/code, you need to install it.   Get Cask  precodebrew tap caskroom/cask /code/pre  Install OSXFUSE  precodebrew cask install osxfuse /code/pre  Alternatively instead of homebrew use the download versions from https://osxfuse.github.io/  h1SSHFS + OSXFUSE Now Installed. One more step.../h1  codeautofs/code needs codemount_*/code binaries.  code/usr/local/bin/sshfs/code should be also available as codemount_sshfs/code, so:  List your codemount_*/codes with   precodecompgen -c | grep ^mount /code/pre  OR   precodels /sbin | grep mount  /code/pre  If you do not see mount_sshfs, the you need to do this step. strongThis is a critical step because it is easily forgotten and may create headaches./strong  precodesudo ln -s $(which sshfs) /sbin/mount_sshfs /code/pre  h1Add Autostart at Boot Daemon in code/Library/LaunchDaemons//code/h1  File could be called:  You need to run this at every boot for the kernel extension:  precode/bin/bash -c "/Library/Filesystems/osxfusefs.fs/Support/load_osxfusefs; /usr/sbin/sysctl -w osxfuse.tunables.allow_other=1" /code/pre  So create a new service file:   precode/Library/LaunchDaemons/load.osxfusefs.tunables.plist /code/pre  Contents:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Disabled&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;sysctl&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/bin/bash&lt;/string&gt;         &lt;string&gt;-c&lt;/string&gt;         &lt;string&gt;/Library/Filesystems/osxfusefs.fs/Support/load_osxfusefs; /usr/sbin/sysctl -w osxfuse.tunables.allow_other=1&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Load with codelaunchctl/code (launchd) for next boot, which is the Mac OS X version of codesystemctl/code (systemd)  precodelaunchctl load /Library/LaunchDaemon/load.osxfusefs.tunables.plist /code/pre  h1Setup auto_master and auto_sshfs/h1  The following assumes you can ssh into your server with a secure key (no password required).   h2/etc/auto_master/h2  precode/mnt/sshfs                auto_sshfs       -nosuid /code/pre  h2/etc/auto_sshfs/h2  You could use parameters that normally come after the code-o/code in codesshfs -o/code depending on your situation.  ul liidmap=user: default setting. since your uid and gid is probably different across operating systems, you could just map the user used in the user@ip: to your local (client) user. The group will be ignored in this case (which means folders not owned by you yet grant you read permissions on the server-side group may not be readable locally--on the client side)/li /ul  OR  ul liuid=YOURUSERID, gid=YOURGROUPID: just type id YOURUSER to get the numbers. This will just map all files from the mount to this user/group combination. This will allow you to read all files. I think any new files/folders you create will inherit the default umask settings for whichever folder you mount./li liallow-other: I use this, but is is risky because any user who browses the mount will view the mount using the credentials used when connecting./li lilist all parameters with codeman sshfs/code and read see each parameter after every code-o/code/li /ul  replace:  ul liYOURUSER with your username and /li liPRIVATEKEY to your key e.g. id_ed25519/li liip with your ip address or hostname/li /ul  Contents emImportant is the parameter codereconnect/code, otherwise whenever you loose connection (like go to sleep), Finder will crash./em   Replace   ul li$(id -u) with your actual id on client machine/li li$(id -g) with your actual group id on client machine/li /ul  emUnfortunately you cannot execute things in autofs like codeid -u/code/em  precodeNameOfMountThatGetsIgnored -fstype=sshfs,port=22,reconnect,uid=$(id -u),gid=$(id -g),follow_symlinks,allow_other,IdentityFile=/Users/YOURUSER/.ssh/PRIVATEKEY,volname="NameOfMount"     YOURUSER@ip:/path/on/server /code/pre  h1Test/h1  precodedf -Ph /path/to/mount /code/pre  List mounted filesystems  precodelsvfs /code/pre  List all mounts   precodemount /code/pre 