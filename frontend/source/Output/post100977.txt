Shell script to determine the file size in a folder recursively <body> Can anyone provide me with a shell script that I can run against various folders to see where large files are lurking?  Many thanks  <answer100978> You can just run  precodedu -sm *  /code/pre  to see the size of all folders in the current directory.   <answer100979> precodefind . -exec du -h {}\; /code/pre  is recursive and displays the size in human readable form.  Or if you're using fish or zsh:  precodedu -h ./**/* /code/pre  <answer100986> You can also use codetree --du -h ./code. code--du/code calculates the size of the contents of directories (like codedu/code) and code-h/code uses human-readable file sizes.  Or if you only want to see the sizes of the contents of directories, use just codedu/code or codedu -h/code. You can use codegsort -h/code to sort the output of codedu -h/code.  You can install codetree/code and codegsort/code with codebrew install tree sortutils/code.  <answer101453> Or, as an alternative, you could install the freeware Disk Inventory X. Shows you the largest files on your hard drive or in particular directories with a fun visual interface. And you can move items to the trash right from that interface.  <comment118888> Thanks all. +1 to both. I will mark Max's as correct, as I ended up using "du -h  filesizes" <comment118889> now I can muck around with the file in Numbers (copy and paste), sort by file size etc.. <comment118899> Is `tree` installed by default? <comment118900> bash 4.0 and later also support `**` with `shopt -s globstar`, and in bash you can use just `**` instead of `**/*`. <comment119525> Welcome to the site. The asker is looking for a shell script solution, I don't think that Disk Inventory X is scriptable. <comment119533> I appreciate the alternative :) +1 <comment141066> What's the best way to order by size `desc`? <comment141177> `du | sort -nr`