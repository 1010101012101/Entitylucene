Joining lines into a single line in TextEdit <body> In a text document, how do I join several lines into a single line? I want each paragraph to be on a single line, but keep the lines between the paragraphs.  Here is an example. I want to convert this text     Lorem ipsum dolor sit amet, consectetuerbr     adipiscing elit. Ut purus elit, vestibulum ut, placerat ac,br     adipiscing vitae, felis.      Curabitur dictum gravida mauris. Nam arcubr     libero, nonummy eget, consectetuer id, vulputate a, magna. Donecbr     vehicula augue eu neque.   to this text     Lorem ipsum dolor sit amet, consectetuer      adipiscing elit. Ut purus elit, vestibulum ut, placerat ac,      adipiscing vitae, felis.      Curabitur dictum gravida mauris. Nam arcu      libero, nonummy eget, consectetuer id, vulputate a, magna. Donec      vehicula augue eu neque.   I know how to do it in codevim/code or codefmt/code, but can I do it in TextEdit and in the builtin text boxes? I don't want to manually have to do code^D&lt;space&gt;/code at the end of each line.  <answer67272> If your paragraphs are separated by a blank line, you can do this with a two-part Find and Replace in TextEdit.  ol liOpen the strongFind and Replace/strong dialog (⌥⌘F)./li liIn the strongFind/strong field, insert the newline character by typing kbdoption/kbd-kbdreturn/kbd./li liIn the strongReplace/strong field, insert a space, then click strongAll/strong. This replaces all newlines with a space, so you'll have one long line of all your text./li liChange the strongFind/strong field to emtwo/em spaces./li liIn the strongReplace/strong field, enter two newline characters (kbdoption/kbd-kbdreturn/kbd twice)./li liClick strongAll/strong to move paragraphs to a new line./li /ol  <answer68288> I find this works best in three steps, particularly if there's some character or combination of characters not used in your document. Let's assume for a moment that code•%•/code doesn't happen to come up in your document. If it does, pick a different arbitrary short string.  ul liUse the strongFind and Replace/strong dialog to replace all double newlines (kbd⌥/kbdkbdreturn/kbd kbd⌥/kbdkbdreturn/kbd) with your arbitrary text string; replace all./li listrongFind and Replace/strong all newlines (kbd⌥/kbdkbdreturn/kbd) with a space (kbdspace/kbd)./li listrongFind and Replace/strong all instances of your arbitrary text string with a double newline./li /ul  <answer68352> You could create a service like this:  img src="https://i.stack.imgur.com/aPrKP.png" alt=""  With AppleScript you'd have to use the clipboard:  precodetry     set old to the clipboard as record end try try     tell application "System Events" to keystroke "c" using command down     delay 0.1     do shell script "export LC_CTYPE=UTF-8; pbpaste | fmt -w 99999 | pbcopy"     tell application "System Events" to keystroke "v" using command down     delay 0.1 end try try     set the clipboard to old end try /code/pre  I have also written a script like TextMate's filter through command (run shell script.scpt at http://lri.me/applescript.html).  <answer85063> Just run this workflow. This worked for me:  strongAsk for Finder items/strong  strongOpen Finder Items/strong (using TextEdit)  strongWait for Finder Items/strong  strongGet Contents of Text Edit Document/strong  strongRemove Empty Paragraphs/strong  strongGet Paragraphs of Text/strong  strongCombine Text String/strong (Select Insert Delimiter Between Combined strings, then put one space in that field)  strongNew Text File/strong  That should work. Let me know if it does.  <comment79285> I have to ask: why don't you just make such editing changes in vim and then do the rest of the editing (e.g., formatting) in Text Edit? <comment79292> Thanks, good to know. It *almost* does what I want, which is to turn paragraphs separated by empty lines into single lines. <comment79295> Maybe you could clarify this in your question a bit, perhaps post a sample and the result you expect. You want each paragraph to be on a single line, but keep the lines in between the paragraphs? <comment79299> Exactly. I've updated my question as you suggest. <comment79300> Updated it with the process to work the way you're looking for. <comment98074> I will simply go with a C++ application fast. LOL