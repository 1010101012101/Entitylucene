How do I get detailed SMART disk information on OS X (Mavericks or later) <body> I'm trying to get a detailed SMART status report on the drives in my Mac. I'm not talking about "Verified," I'm talking about the detailed report that's about 100 lines long listing all the vital statistics of the drive.  Anyone know how to do this with diskutil? If diskutil can't do it is there a different free tool I can use?  <answer135566> I recently had the same question and found a command line tool www.smartmontools.org which can be installed via brew:  precodebrew install smartmontools /code/pre  you can then run it   precodesmartctl -a disk0s3 /code/pre  for the full report where codedisk0s3/code is the disks physical backing which can be found in Disk Utility.app by getting info on the drive. (There must be a way to find this under OS X at the command line.) Here is an example of the output:  precodesmartctl 6.2 2013-07-26 r3841 [x86_64-apple-darwin13.1.0] (local build) Copyright (C) 2002-13, Bruce Allen, Christian Franke, www.smartmontools.org  === START OF INFORMATION SECTION === Model Family:     Samsung based SSDs Device Model:     Samsung SSD 840 Series Serial Number:    S14LNEAD609248A LU WWN Device Id: 5 002538 5503acd2e Firmware Version: DXT08B0Q User Capacity:    500,107,862,016 bytes [500 GB] Sector Size:      512 bytes logical/physical Rotation Rate:    Solid State Device Device is:        In smartctl database [for details use: -P show] ATA Version is:   ACS-2, ATA8-ACS T13/1699-D revision 4c SATA Version is:  SATA 3.1, 6.0 Gb/s (current: 6.0 Gb/s) Local Time is:    Thu Jun 19 16:34:10 2014 MDT SMART support is: Available - device has SMART capability. SMART support is: Enabled  === START OF READ SMART DATA SECTION === SMART overall-health self-assessment test result: PASSED  General SMART Values: Offline data collection status:  (0x00) Offline data collection activity                     was never started.                     Auto Offline Data Collection: Disabled. Self-test execution status:      (   0) The previous self-test routine completed                     without error or no self-test has ever                      been run. Total time to complete Offline  data collection:        (53956) seconds. Offline data collection capabilities:            (0x53) SMART execute Offline immediate.                     Auto Offline data collection on/off support.                     Suspend Offline collection upon new                     command.                     No Offline surface scan supported.                     Self-test supported.                     No Conveyance Self-test supported.                     Selective Self-test supported. SMART capabilities:            (0x0003) Saves SMART data before entering                     power-saving mode.                     Supports SMART auto save timer. Error logging capability:        (0x01) Error logging supported.                     General Purpose Logging supported. Short self-test routine  recommended polling time:    (   2) minutes. Extended self-test routine recommended polling time:    (  70) minutes. SCT capabilities:          (0x003d) SCT Status supported.                     SCT Error Recovery Control supported.                     SCT Feature Control supported.                     SCT Data Table supported.  SMART Attributes Data Structure revision number: 1 Vendor Specific SMART Attributes with Thresholds: ID# ATTRIBUTE_NAME          FLAG     VALUE WORST THRESH TYPE      UPDATED  WHEN_FAILED RAW_VALUE   5 Reallocated_Sector_Ct   0x0033   100   100   010    Pre-fail  Always       -       0   9 Power_On_Hours          0x0032   099   099   000    Old_age   Always       -       2379  12 Power_Cycle_Count       0x0032   098   098   000    Old_age   Always       -       1579 177 Wear_Leveling_Count     0x0013   096   096   000    Pre-fail  Always       -       38 179 Used_Rsvd_Blk_Cnt_Tot   0x0013   100   100   010    Pre-fail  Always       -       0 181 Program_Fail_Cnt_Total  0x0032   100   100   010    Old_age   Always       -       0 182 Erase_Fail_Count_Total  0x0032   100   100   010    Old_age   Always       -       0 183 Runtime_Bad_Block       0x0013   100   100   010    Pre-fail  Always       -       0 187 Uncorrectable_Error_Cnt 0x0032   100   100   000    Old_age   Always       -       0 190 Airflow_Temperature_Cel 0x0032   059   039   000    Old_age   Always       -       41 195 ECC_Error_Rate          0x001a   200   200   000    Old_age   Always       -       0 199 CRC_Error_Count         0x003e   100   100   000    Old_age   Always       -       0 235 POR_Recovery_Count      0x0012   099   099   000    Old_age   Always       -       1571 241 Total_LBAs_Written      0x0032   099   099   000    Old_age   Always       -       14090964124  SMART Error Log Version: 1 No Errors Logged  SMART Self-test log structure revision number 1 No self-tests have been logged.  [To run self-tests, use: smartctl -t]   SMART Selective self-test log data structure revision number 1  SPAN  MIN_LBA  MAX_LBA  CURRENT_TEST_STATUS     1        0        0  Not_testing     2        0        0  Not_testing     3        0        0  Not_testing     4        0        0  Not_testing     5        0        0  Not_testing   255        0    65535  Read_scanning was never started Selective self-test flags (0x0):   After scanning selected spans, do NOT read-scan remainder of disk. If Selective self-test is pending on power-up, resume after 0 minute delay. /code/pre  <answer150768> Here's two extra nuggets of knowledge that may be of assistance:  ol lithe codesmartmontools/code package is also available under MacPorts. If you have MacPorts installed, codesudo port install smartmontools/code will do the trick/li lithe codedf/code command will quickly give you an idea of what is mounted where./li /ol  <answer189463> Here is a complete guide to smartmontools on osx, including where to find it, how to install it, and how to use it, by the author Benjamin von der Weiden.  <answer260564> Extending on Lee Joramo's excellent answer you can install the GSmartControl GUI on top of codesmartmontools/code. It comes in a Homebrew tap.  So the procedure is:  precodebrew install smartmontools brew install homebrew/gui/gsmartcontrol  gsmartcontrol /code/pre  BTW: I had to activate SMART first. The GUI can do that for you. If you want to use the command line it is codesmartctl -s on -a disk0s2/code.  <answer269860> Quite new and compatible with MacOS Sierra, Yosemite and El Capitan option:  Get native precompiled package from https://sourceforge.net/projects/smartmontools/  Install it, open Terminal and run:  precode sudo /usr/local/sbin/smartctl -a /dev/disk0 /code/pre  You will get full output like this:  precodesmartctl 6.5 2016-05-07 r4318 [Darwin 16.3.0 x86_64] (sf-6.5-1) Copyright (C) 2002-16, Bruce Allen, Christian Franke, www.smartmontools.org  === START OF INFORMATION SECTION === Model Family:     Crucial/Micron MX100/MX200/M5x0/M600 Client SSDs Device Model:     Crucial_CT500MX200SSD1 Serial Number:    16151248FBA4 ... ATA Version is:   ACS-3 T13/2161-D revision 4 SATA Version is:  SATA 3.2, 6.0 Gb/s (current: 6.0 Gb/s)  SMART support is: Available - device has SMART capability. SMART support is: Enabled  === START OF READ SMART DATA SECTION === SMART overall-health self-assessment test result: PASSED ... /code/pre  and following rest of SMART information. Hope this helps to users who want simple solution.  <comment160673> Perfect! I had to use -a instead of -H to get a full report. Not sure if this is because you had a different version of smartctl or a typo.      smartctl -a disk0 <comment160675> Yes, it was suppose to be -a, I have corrected my answer <comment192516> I get in the latest OSX this error: /usr/local/bin/brew: /usr/local/Library/brew.rb: /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby: bad interpreter: No such file or directory /usr/local/bin/brew: line 21: /usr/local/Library/brew.rb: Undefined error: 0 Do you know why? <comment193056> @Masi Have you upgraded to Yosemite since you last used brew? I remember having some errors after the upgrade and search for a fix specific to my problem. <comment193121> @LeeJoramo You are right. Correct solution here to my problem http://stackoverflow.com/a/24244945/54964 <comment315402> And if you want to get SMART status from USB devices, you need to install this kernel extension: https://github.com/kasbert/OS-X-SAT-SMART-Driver (source) - https://binaryfruit.com/drivedx/usb-drive-support (signed binary)