macOS Sierra - localhost stops working when virtual host is enabled <body> I have enabled virtual hosts on my Mac running macOS Sierra.  What I did,  ol liUncommented Virtual Host line in codehttpd.conf/code/li liAdded a virtual host entry from my site in code/etc/apache2/extra/httpd-vhosts.conf/code file./li /ol  After which when I try to access http://localhost it gives me a 404.  Initially I faced a 403, so I created a codeusername.conf/code file in apache codeusers/code directory and gave codeAllowOverride All/code for code//code  Now to access localhost I need to disable vhost. Any help?   <answer255463> Probably you missed one or more modifications. To enable virtual hosts in macOS 10.12.0 (Client) do the following:  ul liedit the file /etc/apache2/httpd.conf:  uncomment line 160:  precode#LoadModule vhost_alias_module libexec/apache2/mod_vhost_alias.so /code/pre  to  precodeLoadModule vhost_alias_module libexec/apache2/mod_vhost_alias.so /code/pre  replace in line 213  precode#ServerName www.example.com:80 /code/pre  by  precodeServerName localhost /code/pre  uncomment line 509:  precode#Include /private/etc/apache2/extra/httpd-vhosts.conf /code/pre  to  precodeInclude /private/etc/apache2/extra/httpd-vhosts.conf /code/pre/li liedit the file /etc/apache2/extra/httpd-vhosts.conf and replace the content by  precode&lt;VirtualHost *:80&gt;     ServerName localhost     DocumentRoot "/path/to/localhost"      &lt;Directory "/path/to/localhost"&gt;         Options Indexes FollowSymLinks         AllowOverride All         Order allow,deny         Allow from all         Require all granted     &lt;/Directory&gt; &lt;/VirtualHost&gt; /code/pre  Your site has to reside in /path/to/localhost//li liCheck the apache config with: codesudo apachectl -S/code. The first two lines should yield:  precodeVirtualHost configuration: *:80                   localhost (/private/etc/apache2/extra/httpd-vhosts.conf:23) /code/pre/li liStart apache with codesudo apachectl start/code/li liNow – after emptying the browser caches – enter emlocalhost/em in the address bar of your browser./li /ul  <answer256170> Thanks, this works. But if you are trying to access PHP website then you have to load codelibexec/apache2/libphp5.so/code module. Just uncomment:  codeLoadModule php5_module libexec/apache2/libphp5.so/code  <answer267637> In my case, OS X Sierra install made copies of my httpd config files with suffix [filename]~previous.  Then it disabled lots of modules in httpd.conf (which is typical for some reason after a OS X upgrade).  And then Apache kept silently crashing ... totally bewildering me.  precode$ ps ax | grep http    [ no http was listed! ]  # tail -f  /var/log/system.log    [ this showed that apache2 was attempting to restart every 10 seconds ]  # apachectl    [ this showed the missing log directory error ] /code/pre  Somehow during OS X upgrade, it kept a vhost I had made directly in httpd.conf (not typically wise, better to put custom stuff extra directory), and that vhost had a non-standard logging folder.  OS X upgrade deleted that custom logging folder (odd that it would do that actually), and so upon restart it was silently failing since the log path had become invalid for the custom vhost I had in httpd.conf   I created directories to honor that non-standard logging folder.  Huzzah, within 10 seconds apache2 had restarted and normal-ness returned.  I still had to enable modules again in httpd.conf, also uncomment several lines to pull in additional configurations from extra.  But once web server is running, a quick browser check to see what sites were still unreachable (or being redirected) allowed those config lines to be restored.  <comment324591> You made my day man 3