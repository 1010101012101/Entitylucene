Go2Shell stopped working with iTerm2 <body> I am on Yosemite and have used a (seemingly older version) of Go2Shell to open Terminal windows at the current Finder location. This worked flawlessly for a long time, until something, suddenly broke with no apparent reason. When clicking the icon in Finder, a terminal would open up, but not in the current directory. I then installed the most recent Go2Shell and reinstalled iTerm 2.  ul liGo2Shell version: 2.2 /li liiTerm version: 2.1/li liGo2Shell command: codecd %PATH%;clear;ls/code/li /ul  strongSymptoms/strong  A Terminal window opens up in the home directory, displaying the string codecd/code but nothing else. The code%PATH%/code expansion does not seem to ever reach iTerm. Actually, upon experiment it can be verified that the command is cut off at the first space and never executed, only pasted. Whenever I click the Go2Shell icon, the following is logged in console:  precodeAppleEvents: Send port for process has no send right, port=( port:14135/0x3737 rcv:1,send:0,d:0 limit:5) (findOrCreate()/AEMachUtils.cp #526) com.apple.main-thread /code/pre  Go2Shell continues to work as expected with Apple Terminal.  I am in contact with Go2Shell developer's support, however they seem to be unable to reproduce it.  Has anyone experienced something like this?  <answer186792> This is likely too localized, but I had the following in my code.bash_login/code (at the very end):  precodestty werase undef bind '"\C-w": backward-kill-word' bind '"\C-j": unix-word-rubout' /code/pre  Commenting out the last line solved the problem, although of course I am missing this functionality now.  <answer283393> I had a similar issue in zsh because I generate app-specific environment variable exports with a portable microframework I wrote (generates bash, zsh, tcsh, csh, ksh environment profiles on-the-fly).  strongLong-story short:/strong iTerm + Go2Shell doesn't play well with sourcing from a subprocesses' stdin, i.e., codesomething | source /dev/stdin/code.  I rearranged it to output to a tempfile (with a codetrap/code without any race conditions) and source it from there. Go2Shell + iTerm also doesn't seem to work with sourcing via process substitution in zsh codesource &lt;(something)/code, which would've been the preferred approach.  precodeif [ -x "${ZDOTDIR:-$HOME}/bin/envrc" ] &amp;&amp; [ -z "$ENVRC_RAN" ]; then   ENVRC_TMP="$HOME/.envrc.$$"   trap 'rm -f "$ENVRC_TMP"' EXIT ERR QUIT INT TERM HUP PIPE # might be too pedantic   "${ZDOTDIR:-$HOME}/bin/envrc" &gt; "$ENVRC_TMP" &amp;&amp; source "$ENVRC_TMP"   rm -f "$ENVRC_TMP"   trap - EXIT ERR QUIT INT TERM HUP PIPE   unset ENVRC_TMP   export ENVRC_RAN=1 fi /code/pre  <comment243211> Hi - Did you ever resolve this? I have a very similar issue. Terminal is fine, iTerm2 fails with:    `24/08/15 11:35:20,557 Go2ShellHelper[32220]: AppleEvents: Send port for process has no send right, port=( port:11819/0x2e2b rcv:1,send:0,d:0 limit:5) (findOrCreate()/AEMachUtils.cp #526) com.apple.main-thread` in the console <comment243228> @wawawawa Well yes, see the answer below. It may be something in one of the files sourced by `bash`, such as `.bashrc`, `.profile`, `.bash_login`, `.bash_profile` or whatever their names are. <comment243259> Aha! I didn't grok that both the question and answer were from you!  Strange thing for me is that Go2Shell doesn't work with either bash or zsh on my system. I'll do some experimenting with clean configs and report back.