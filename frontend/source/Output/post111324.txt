How to patch a file that resides in /Applications (patch can't find file to patch at input line)? <body> I am trying to patch 5 files within an Mac application bundle using the Terminal codepatch/code command. The files to be patch are specified using an absolute file path (the file name and path start with a slash).  The output when running code$ sudo patch -i ~/custom.patch/code is:  precodecan't find file to patch at input line 3 Perhaps you should have used the -p or --strip option? The text leading up to this was: -------------------------- |--- /Applications/Xyz.app/Contents/Resources/dashboard.js |+++ /Applications/Xyz.app/Contents/Resources/dashboard.js -------------------------- File to patch: ^C /code/pre  I have verified that the file /Applications/Xyz.app/Contents/Resources/dashboard.js does exist using at the specified file path using the codels/code command.  Regression:  ol liTried to run the patch command from root folder using code$ cd //code/li liTried to run the patch command from root folder with the first slash removed, that results in an almost identical result:/li /ol  hr  precodecan't find file to patch at input line 3 Perhaps you should have used the -p or --strip option? The text leading up to this was: -------------------------- |--- Applications/Xyz.app/Contents/Resources/dashboard.js |+++ Applications/Xyz.app/Contents/Resources/dashboard.js -------------------------- File to patch: ^C /code/pre  How can multiple files within a Mac OS X Application bundle be patched using codepatch/code?  <answer111659> I think the problem is that you are not specifying the p option.  From the manual for patch:  precodeFor example, supposing the file name  in  the  patch file was    /u/howard/src/blurfl/blurfl.c  setting -p0 gives the entire file name unmodified, -p1 gives    u/howard/src/blurfl/blurfl.c  without the leading slash, -p4 gives    blurfl/blurfl.c  and  not  specifying  -p  at  all just gives you    blurfl.c.  Whatever you end up with is looked for either in the current directory, or the directory specified by the -d option. /code/pre  So the command should be something like:  precodepatch -p0 &lt;custom.patch /code/pre  or you could specify the directory to which the patch should be applied:  precodepatch -d /path/to/dir &lt;custom.patch /code/pre  <comment131029> @grgarside The difference is `/Applications/` versus `Applications/` <comment131290> `-p -d` look promising when all to be patch files are in the same folder. `-p` is not an answer, as my wish is to specify absolute path file locations from within the patch file. The wish is to patch different files  at different absolute path locations. <comment131291> for `-d`that is true. the parameter `-p` works with the file names found in the patch file. so with the `-p0` you should be able to specify absolute file paths