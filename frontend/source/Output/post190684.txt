Homebrew: how to switch between GCC versions `gcc49` and `gcc`? <body> I foolishly uninstalled GCC 4.9 after codebrew upgrade/codeing to GCC 5. However I need both versions and I need to be able to switch back and forth. I thought I could just do codebrew switch 4.9.2/code but the old version of GCC was installed to the folder codeCellar/gcc49/4.9.2/code instead of codeCellar/gcc/4.9.2/code, so Homebrew doesn't know where to find the old version.  How can I force Homebrew to install both versions in codeCellar/gcc/code?  That is, I have:  precodebrew list --versions gcc # gcc 5.1.0 brew list --versions gcc49 # gcc49 4.9.2_1 /code/pre  But I'd like to have:  precodebrew list --versions gcc # gcc 5.1.0 4.9.2_1 /code/pre  <answer196958> You can’t, those are different formulae, and Homebrew doesn’t allow you to install a previous version of a formula.  The workaround is to remove codegcc/code, then go back in Homebrew’s history (remember that it’s a Git repository), get the codegcc/code formula as it was before the 5.1.0 upgrade, install it, then upgrade codegcc/code to get the latest version.  The 5.1.0 codegcc/code upgrade was done in Homebrew commit code9cf3d4da1148c0a0d2f42c2fbe75f9a557339bab/code:  precode$ cd $(brew --prefix) $ git show -s 9cf3d4da1148c0a0d2f42c2fbe75f9a557339bab commit 9cf3d4da1148c0a0d2f42c2fbe75f9a557339bab Author: David Christenson &lt;david@the-david.com&gt; Date:   Sat May 2 18:58:17 2015 -0600      gcc 5.1.0      Update to latest stable release, add option and patch for JIT, remove CLooG dependency,     refactor language selection, add HEAD, use HTTPS mirror. /code/pre  You need to checkout the parent commit:  precode$ git checkout 9cf3d4da1148c0a0d2f42c2fbe75f9a557339bab^ /code/pre  Then get the codegcc/code formula and save it somewhere:  precode$ brew cat gcc &gt; /tmp/gcc.rb /code/pre  If you’re lazy I put this formula online here. You can now go emBack to the Future/em:  precode$ git checkout master /code/pre  Be sure you removed the current codegcc/code:  precode$ brew rm gcc /code/pre  Now install the 4.9 version, either from your local copy:  precode$ brew install /tmp/gcc.rb /code/pre  Or from my online copy:  precode$ brew install https://gist.githubusercontent.com/bfontaine/eacd18e2c413005a7526/raw/320a73fc6e1bbf0009a08e6bd90e9d32c3409007/gcc.rb /code/pre  You should now have a working GCC 4.9 install. Now, upgrade to get the 5.2:  precode$ brew upgrade gcc /code/pre  Done.  precode$ brew ls --versions gcc gcc 4.9.2_1 5.2.0 /code/pre  <answer222645> You can also install both gcc49 and gcc5 from codehomebrew/versions/code:  precodebrew tap homebrew/versions brew install gcc49 gcc5 /code/pre  You can then refer to them explicitly by codegcc-4.9/code and codegcc-5/code (or by exporting environment variables like codeCC/code, codeCXX/code etc)  <comment235409> Too bad. Is there a way to protect the old version from being removed again? <comment235433> Homebrew won’t remove it unless you tell it to. So no, there’s no way to protect it. <comment235437> I mean protect it from `brew cleanup`, which is what removed it in the first place. <comment235494> I opened an issue for this here: https://github.com/Homebrew/homebrew/issues/42039 <comment269851> I realize now that this is the only way, but I was pretty explicit in my question that I did not want to do it this way. <comment269858> I don't see that in your question. You say you need both versions and to be able to switch back and forth, which this allows (albeit not using `brew switch`; you could have a small alias to do so).