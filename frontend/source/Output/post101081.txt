Why the command line does not respect the PATH order on OS X? <body> I added an ssh command inside code~/bin/ssh/code and modified the codePATH/code to include it, before other paths.  When I do run codewhich ssh/code it will respond with code~/bin/ssh/code but when I do run codessh/code it will just execute the code/usr/bin/ssh/code instead.  I have no aliases for codessh/code.  What's the reason and how can I fix it?  <answer101082> Mistety solved, I had a function in bash_profile with this name...  Found it using: set |grep ssh  <answer115086> Do not use codewhich/code, use codetype/code. The codewhich/code command in the default shell (bash) is an external utility which doesn't know about aliases and functions. On the other hand, codetype/code is an internal utility which will tell you whether its argument is an alias, a function, a built-in utility or an external command.  The codewhich/code command is mentioned in tutorials and manuals only for historical reasons — 30 years ago the codetype/code command didn't exist everywhere, and some people have been slow to adapt.  For more details, including a discussion of historical and current shells, see Why not use “which”? What to use then?  precode$ type cp cp is aliased to `cp -i' $ type mkcd mkcd is a function mkcd () { … } $ type type type is a shell builtin $ type cat cat is /bin/cat /code/pre  In zsh, it's ok to use codewhich/code: zsh has both codetype/code and codewhich/code as built-in commands.  Also note that if you just installed or removed a program, the shell may have memorized its old location. For example, if you just installed your own version of a program in a directory that is ahead of the system directories in code$PATH/code, the shell may keep invoking the program that came with the system. This is only an issue in shells that were already running at the time of the installation or removal. To refresh the shell's memory with current data, run the command codehash -r/code or codehash COMMANDNAME/code.  <comment134738> If you find that you want a function to wrap around `ssh`, you should probably use a [configuration file](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man5/ssh_config.5.html#//apple_ref/doc/man/5/ssh_config) instead. You can define shortcuts for host names, user names and other options in `~/.ssh/config`.