Terminal $PATH error <body> I was adding a $PATH to code.bash_profile/code:  precodePATH="/Applications/MAMP/bin/php/php5.3.6/bin:$PATH" /code/pre  So I could install PEAR on MAMP. That all worked, but now I have an this error each time I start up:  precode-bash: export: `/usr/local/bin': not a valid identifier /code/pre  I tried a lot of solutions from people with similar problems, such as:  I messed up my bash configuration on mac  These are the files possibly containing the problem:  em/etc/profile/em  precode# System-wide .profile for sh(1) if [ -x /usr/libexec/path_helper ]; then eval /usr/libexec/path_helper -s` fi if [ "${BASH-no}" != "no" ]; then [ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc fi` /code/pre  em/etc/paths/em  precode/usr/bin /bin /usr/sbin /sbin /usr/local/bin /code/pre  em~/.profile/em  precodeexport PATH="/usr/bin:/bin:/usr/sbin:/sbin:$PATH" /code/pre  em~/.bash_profile/em  precode#export PATH="/usr/bin:/bin:/usr/sbin:/sbin:$PATH" /code/pre  emlaunchctl export/em  precode    PATH="/usr/bin:/bin:/usr/sbin:/sbin"; export PATH;     TMPDIR="/var/folders/9l/7n7rrkrj0d51ydll3hb3l8780000gn/T/"; export TMPDIR;     SHELL="/bin/bash"; export SHELL;     HOME="/Users/XXXXXX"; export HOME;     USER="XXXXXX"; export USER;     LOGNAME="XXXXXX"; export LOGNAME;     SSH_AUTH_SOCK="/tmp/launch-d3uaRv/Listeners"; export SSH_AUTH_SOCK;     Apple_Ubiquity_Message="/tmp/launch-YdytLh/Apple_Ubiquity_Message"; export Apple_Ubiquity_Message;     Apple_PubSub_Socket_Render="/tmp/launch-8QgJZ0/Render"; export Apple_PubSub_Socket_Render;     DISPLAY="/tmp/launch-c6nAQC/org.macosforge.xquartz:0"; export DISPLAY; /code/pre  emprintenv/em  precodeTERM_PROGRAM=Apple_Terminal TERM=xterm-256color SHELL=/bin/bash TMPDIR=/var/folders/9l/7n7rrkrj0d51ydll3hb3l8780000gn/T/ Apple_PubSub_Socket_Render=/tmp/launch-8QgJZ0/Render TERM_PROGRAM_VERSION=309 TERM_SESSION_ID=8336481B-7483-4050-919F-1268887775DE USER=XXXXXX COMMAND_MODE=unix2003 SSH_AUTH_SOCK=/tmp/launch-d3uaRv/Listeners __CF_USER_TEXT_ENCODING=0x1F5:0:0 Apple_Ubiquity_Message=/tmp/launch-YdytLh/Apple_Ubiquity_Message PATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin: PWD=/Users/XXXXXX SHLVL=1 HOME=/Users/XXXXXX LOGNAME=XXXXXX LC_CTYPE=UTF-8 DISPLAY=/tmp/launch-c6nAQC/org.macosforge.xquartz:0 _=/usr/bin/printenv OLDPWD=/Users/XXXXXX /code/pre  Files in '/etc/paths.d/':  em40-XQuartz/em  precode/opt/X11/bin /code/pre  I dont have a  codebashrc/code directory at location code/etc/bashrc/code.  I also don't have code~/.bashrc/code.  Maybe it is also useful that before I installed PEAR I added a codesymlink/code to code/usr/bin/code maybe that is part of the problem?  <answer66932> You should add to your code.bash_profile/code the following line instead of the one you reported in your question:  precodeexport PATH="$PATH:/Applications/MAMP/bin/php/php5.3.6/bin" /code/pre  <answer67194> The error message you listed is the result of using one of  precode export $VARIABLE  export /a/path/to/something  export *more or less anything which is not a syntactically correct variable name* /code/pre  instead of  precode export VARIABLE /code/pre  in one of your initialization files. To find the offending line you need to look into all the code.profile/code, code.bash_profile/code and anything sourced/called from there and grep for 'export ' to find it.  As it seams to be related to the installation of either PEAR or MAMP I would start looking at any additions done by these installations.  <comment78831> I posted a possible solution. BTW, can you please modify your question by posting your entire `.bash_profile`? You can copy and past the result of `cat ~/.bash_profile` <comment78832> Hi, Thanks for the answer! I'm still getting that error with the changes. <comment78834> Hi! That is my entire '.bash_profile'. Maybe that is the problem. <comment78837> Ok. It looks ok. Is `~/.profile` empty? Please try to comment the line you added in `~/.bash_profile` and copy and paste the result of `echo $PATH` <comment78842> That's something really strange, how you can do `echo` if your `$PATH` is empty? <comment78843> I updated and added the answer! <comment78844> `/usr/bin` should be in your `$PATH`, as well as `/bin:/usr/sbin:/sbin` <comment78845> you can try to manually add them to your `PATH` by adding to `.bash_profile` the line `export PATH=/usr/bin:/bin:/usr/sbin:/sbin:$PATH` <comment78847> That is all set now. I still get the same error. I also tried removing the file but that also didn't make any difference. <comment78850> Which file you removed? <comment78851> I did this `/bin/mv .bash_profile bash_profile_disabled` <comment78852> If you comment the line in `.bash_profile`, do you still have to do `/bin/mv` for moving a file or you can just use `mv`? If not, there is something wrong, because all the "shell commands" like `mv` are in `\bin` which should be in your `$PATH` <comment78857> When I comment `.bash_profile` I can still use `mv` or `ls` etc <comment78858> Hence your `$PATH` cannot be empty, however when you call the command `mv` from a directory different than `/bin`, it should return `-bash: mv: command not found` <comment78859> Ah, when I comment now, this is my $PATH `/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin:` <comment78863> Good, that's look something like mine when I comment all my `.profile`. Now try to add the line I put in my answer to the file `.profile` and than `echo $PATH` <comment78868> Did that, still having the same issue and `$PATH` is still returning the same thing <comment78870> I think the ordering there is correct, however I would still advise quoting the lot. <comment78871> @DannyStaple Do you mean keep the `"..."`? <comment78872> Yes. I think so - if the original path expansion included other characters (okay I cannot see unescaped spaces working in the path), then you may not be including them in the assignment. General bash defensive coding... <comment78873> @DannyStaple That's true, I updated my answer. <comment78894> Did you cut&paste the "invalid identifier" message directly from Terminal or did you type it into the question manually? <comment78909> It's a cut and paste! <comment79173> Could you post the content of `/etc/paths`, each file in `/etc/paths.d/`, `/etc/bashrc`, `~/.profile`, `~/.bash_profile`, `~/.bashrc` and the output of `launchctl export` and `printenv`? Do you use macports? <comment79189> Thanks! I updated my question. Is this what you mean with macports: http://www.macports.org/ ? <comment79195> Yes, I meant that macports. But you just seem to have X11/XQuartz installed. I forgot to ask for the content of `~/.bash_login`, if there is such a file. Right now, are there any problems? The only strange thing that I see that the PATH in printenv should be grander because of the stuff in `~/.profile`. <comment79236> The error message is clear enough. This is the correct answer, and forget all other voodoo.. Simply, you have somewhere an commands like: `VAR=/usr/local/bin ; export $VAR` (instead of `export VAR`). You can insert at the top of your .profile `set -x`, open new terminal window and see what is happening... <comment79275> Thanks! Any more ideas where would I find the culprit? I looked into all listed files in this thread and can't find any instance that has  export $VAR instead of VAR <comment79283> You also have to look in any files sourced/called from the standard files <comment79288> for some reason when I did a `cat /etc/profile` now, I got : 'export PATH=$PATH: /usr/local/bin' on the final line  Which was causing the problem. Not sure who to give the answer to now. <comment79900> @bottleboot, so just to be clear, the problem was a stray space on the line  'export PATH=$PATH: /usr/local/bin' which should have been  'export PATH=$PATH:/usr/local/bin'.  It had nothing to do with `export $VARIABLE`. <comment79928> Yes that was it! Not sure how it got there and how it happened but that fixed the problems I had. <comment79936> Good point, I've extended the answer accordingly. <comment253206> Thanks, you helped me. I gave the error because I wrote export $PATH=$PATH:path instead of export PATH=$PATH:path