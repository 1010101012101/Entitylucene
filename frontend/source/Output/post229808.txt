.bash_profile not updating until open new Terminal window <body> I am trying to create a Terminal command. I have created this so far:  precodecd ~/ &amp;&amp; touch .bash_profile &amp;&amp; echo "" &gt;&gt; .bash_profile &amp;&amp; echo "alias sendtext=\"osascript -e 'on run argv' -e 'tell application \\\"Messages\\\"' -e 'set myid to get id of first service' -e 'set address to item 1 of argv' -e 'set message to item 2 of argv' -e 'set receiver to buddy address of service id myid' -e 'send message to receiver' -e 'end tell' -e 'end run'\"" &gt;&gt; .bash_profile &amp;&amp; echo "alias sendtext-remove=\"cd ~/ &amp;&amp; grep -vwE \\\"(sendtext|sendtext-remove)\\\" .bash_profile &gt; .bash_profile &amp;&amp; . .bash_profile\"" &gt;&gt; .bash_profile &amp;&amp; . .bash_profile /code/pre  It creates two commands:  ul lisendtext [email] [message] (Sends a text message to email)/li lisendtext-remove (Removes the two lines from the .bash_profile)/li /ul  The problem is that after I run codesendtext-remove/code, I can still run codesend text/code. How can I update the .bash_profile without opening a new Terminal window?  <answer229810> You can reload the bash profile from command line or script with the following command:  precodesource ~/.bash_profile /code/pre  <answer229813> That seems like an awful lot of work for   precodealias sendtext-remove='unalias sendtext sendtext-remove' /code/pre  -- are you trying to cover your tracks in some way by editing the file?  Also note that codegrep -v foo myfile &gt; myfile/code will strongtruncate/strong "myfile" to zero bytes! That's because the redirection happens emfirst/em, and then grep has an empty file to work with. Then code. ~/.bashrc/code is sourcing an empty file and will strongmake no changes/strong to your currently running shell.  Basically, your issue is that you don't unalias the aliases in your current shell.  hr  I was going to write up some functions for install and uninstall, but I've changed my mind. I don't think you should be editing your users' dotfiles for them. If they want your sendtext function you can share it with them, and if they don't want it then they can remove it themselves. I would write it as a function though, just for readability  precodesendtext() {     osascript -e 'on run argv' \               -e 'tell application "Messages"' \               -e 'set myid to get id of first service' \               -e 'set address to item 1 of argv' \               -e 'set message to item 2 of argv' \               -e 'set receiver to buddy address of service id myid' \               -e 'send message to receiver' \               -e 'end tell' \               -e 'end run' \               "$@" }  /code/pre  <comment280402> I am basically doing that with `. .bash_profile` (I cd into ~/ already) <comment280406> That seems like a useful alias. Why are you trying to remove it? <comment280407> @glennjackman I am trying to make it uninstallable. <comment280409> In that case, I'd put your aliases (I'd use functions) into a separate file, and edit the bash profile to read it. Also, if uninstalling your code wiped out my .bash_profile, you would have a very angry customer -- take better care when removing that code (use `sed` instead) <comment280410> @glennjackman Can you give me an example of how I should use `sed`? (I want to remove the lines that contain my script) <comment280411> I'll expand my answer when I'm not in transit <comment280414> Would this work instead of `grep`? `echo $(sed '/sendtext/d' .bash_profile)  .bash_profile` <comment280418> Nope. Same problem as before: the redirection destroys the file before echo / sed start up. Also this form `echo $(some_command)` will remove any and all newlines from the output of some_command. <comment280419> sed: check your [sed man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/sed.1.html) -- an example: `sed -i ".bak" '/sendtext/d' somefile` will edit a file in-place. <comment280427> Please do not add answers directly to the question, this tends to confuse users as well as the search function. <comment280430> This is two questions 1) as per title 2) askimg for the sed - please edit so that it  is only one <comment280442> Could you clarify what is the purpose of this work? Why not use standard shell scripts? `.bash_profile` isn't conceived to be used as a shell script, moreover not at all as a *moving* shell script. Please, don't make such a clarification within comments but within your original question.