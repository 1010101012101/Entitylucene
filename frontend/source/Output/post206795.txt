Using python screws up the shell (and/or terminal?)! <body> h1The problem/h1  Simply opening and closing the Python sub-shell screws up my shell (or empossibly/em the terminal?). It seems to remove the shell's ability to print any text I enter, including newlines after I enter a command.   The problem occurs for python3.4, python2.7, and python2.6, but not for python2.5.   It hasn't ever occurred before (that I've noticed), and it doesn't happen for other software packages I've used (VIM, Emacs, etc.).   I've confirmed that it breaks using Apple's standard Terminal (Version 2.2.3 [303.2]), iTerm2 (build 2.1.1), and XTerm (269).   Interestingly, it breaks under codebash/code, but not codezsh/code or codecsh/code.   h2Example behavior/h2  To demonstrate, I do the following (code$SHELL/code is code/bin/bash/code):  ol liRun codewhich python3.4/code./li liRun codepython3.4/code./li liHit the Return key once, then enter codeexit()/code into the Python shell./li liHit Return two more times./li liEnter codepython3.4 --version/code. /li /ol  Here's what I see for a few of the primary versions of Python I have installed:   h3Python3.4 -- problematic/h3  precodemyself@localhost:~$ which python3.4 python3.4 is /opt/local/bin/python3.4 python3.4 is /opt/local/bin/python3.4 myself@localhost:~$ python3.4 Python 3.4.3 (default, Aug 24 2015, 17:25:38) [GCC 4.2.1 Compatible Apple Clang 3.0 (tags/Apple/clang-211.12)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; &gt;&gt;&gt; exit() &gt;&gt;&gt; myself@localhost:~$ myself@localhost:~$ myself@localhost:~$ Python 3.4.3 myself@localhost:~$ /code/pre  h3Python2.7 -- problematic/h3  precodemyself@localhost:~$ which python2.7 python2.7 is /opt/local/bin/python2.7 python2.7 is /usr/local/bin/python2.7 python2.7 is /usr/bin/python2.7 python2.7 is /Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7 python2.7 is /usr/bin/python2.7 python2.7 is /usr/local/bin/python2.7 python2.7 is /opt/local/bin/python2.7 myself@localhost:~$ python2.7 Python 2.7.10 (default, Aug 24 2015, 11:54:49) [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.1.00)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; &gt;&gt;&gt; exit() &gt;&gt;&gt; myself@localhost:~$ myself@localhost:~$ myself@localhost:~$ Python 2.7.10 myself@localhost:~$ /code/pre  h3Python2.6 -- problematic/h3  precodemyself@localhost:~$ which python2.6 python2.6 is /opt/local/bin/python2.6 python2.6 is /usr/bin/python2.6 python2.6 is /usr/bin/python2.6 python2.6 is /opt/local/bin/python2.6 myself@localhost:~$ python2.6 Python 2.6.9 (unknown, Aug 24 2015, 17:53:21) [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.1.00)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; &gt;&gt;&gt; exit() &gt;&gt;&gt; myself@localhost:~$ myself@localhost:~$ myself@localhost:~$ Python 2.6.9 myself@localhost:~$ /code/pre  h3Python2.5 -- It works!/h3  precodemyself@localhost:~$ which python2.5 python2.5 is /usr/bin/python2.5 python2.5 is /usr/bin/python2.5 myself@localhost:~$ python2.5 Python 2.5.6 (r256:88840, Jul 31 2011, 19:30:45) [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.15.00)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; &gt;&gt;&gt; exit() myself@localhost:~$ myself@localhost:~$ myself@localhost:~$ python2.5 --version Python 2.5.6 myself@localhost:~$ /code/pre  Running it in codezsh/code or codecsh/code seems to work just fine:  h3Zsh/h3  precodemyself@localhost:~$ zsh localhost% which python3.4 /opt/local/bin/python3.4 localhost% localhost% python3.4 Python 3.4.3 (default, Aug 24 2015, 17:25:38) [GCC 4.2.1 Compatible Apple Clang 3.0 (tags/Apple/clang-211.12)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; &gt;&gt;&gt; exit() &gt;&gt;&gt; %                                                                            ra% ra% ra% python3.4 --version Python 3.4.3 localhost% exit myself@localhost:~$ /code/pre  h3Csh/h3  precodemyself@localhost:~$ csh Running csh [localhost:~] myself% which python3.4 /opt/local/bin/python3.4 [localhost:~] myself% python3.4 Python 3.4.3 (default, Aug 24 2015, 17:25:38) [GCC 4.2.1 Compatible Apple Clang 3.0 (tags/Apple/clang-211.12)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; &gt;&gt;&gt; exit() &gt;&gt;&gt; [localhost:~] myself% [localhost:~] myself% [localhost:~] myself% python3.4 --version Python 3.4.3 [localhost:~] myself% exit exit /code/pre  h1My thinking so far:/h1  The fact that the behavior seems the same for three terminals makes me think it's not a terminal issue.  The fact that it works in Zsh and Csh but not in Bash makes me think it's a shell issue.   The fact that the versions that break (3.4, 2.7, 2.6) are all installed under code/opt/local/bin//code (MacPorts's usual install location), but the version that works (2.5) is installed under code/usr/bin//code, makes me wonder if some recent MacPorts update (pushed maybe up to 20 days before Aug. 24, 2015??) may have broken something that makes Python and Bash not work together!   <answer207171> There appears to be an issue with recent Macports builds of python see this bug   A workaround is to install pyXX-readline (py35-readline has been produced just for this bug)  Another is to install python addding the +readline variant  <comment249287> A guess - the macports pythons aren't committed with GNU readline - try installing  pyXX-readline <comment249294> Beside @Mark solution and until the issue is fixed, when you quit python with `exit() `, `quit()`, or `control D` type `reset` at the prompt (it will not be echoed back to the terminal) and wait until the prompt reappears. <comment249810> @Mark: That worked! If you write it as an answer, I'll accept it. Thanks a bunch!