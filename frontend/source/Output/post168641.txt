How to use AppleScript application with "open file -a AppleScriptApp"? <body> strongSome information about what I am trying to achieve/strong  I am using emacs inside of terminal. I know about existence of cocoa versions of emacs (like GNU Emacs for OS X, Aquamacs and Emacs Mac Port). But I prefer to code inside of terminal.   Everything is fine in my setup except the fact that sometimes I want to open file inside of emacs from Finder or any other software. So I need find running process of emacs in terminal or create new one and open the fine inside of running emacs.   So basically I need to create an code.app/code wrapper for opening files in terminal emacs.   strongTrying to get it done/strong  As far as I understand, codeopen -a my_emacs_app /path/to/file/code is the same as opening file in application from finder. So that's why I am testing codemy_emacs_app/code using codeopen/code command.  My first attempt is to create application using AppleScript. Here is the code that process passed arguments:  precodeon run argv     if (count of argv) &gt; 0 then         -- get file path from argv         -- and log to logfile for testing purposes         return "defined"     else         -- no args means no file         -- log to logfile that we can't extract file path         -- from empty arguments         return "failed"     end if end run /code/pre  And actually it works when I try to run it using  precode$ osascript my_emacs_app.scpt /path/to/file /code/pre  It opens the file and logs what expected to log file.  When I run it using  precode$ osascript my_emacs_app.scpt /code/pre  It logs to file that no arguments were passed.  So I was happy with it. But remember, I need an code.app/code wrapper. So I am exporting this script as application (and place it inside of code/Applications//code folder). And then when I try to  precode$ open -a my_emacs_app /path/to/file /code/pre  I see that application is executed for a short time and then is closed. But nothing good happens. I mean, file is not opened in emacs and nothing is logged into log file.   Does any one know, how to export such scripts?   <answer168646> From codeman open/code in EXAMPLES section:     code"open -a /Applications/TextEdit.app '/Volumes/Macintosh HD/foo.txt'" opens the document in the application specified (in this case, TextEdit)./code   So You can specify path to Your AppleScript application after code-a/code argument.  I tested this and it works for me, path does not have to be absolute.  <answer168896> After few different attempts and hacks I found good solution to solve my problem. First - implement the script. Then open the codeAutomator.app/code and create new application. Then combine codeGet Specified Finder Items/code action and codeRun AppleScript/code. So now codeopen -a my_automator_app /path/to/file/code will pass code/path/to/file//code to my script. And that's cool.  P. S. in the argv will be stored the alias to the file, not the posix file path. To convert it from alias to posix you should use  precodeset aliasPath to item 1 of item 1 of argv set filePath to (the POSIX path of aliasPath) /code/pre  Oh and don't forget that you might want to get the codequoted form of filePath/code in case it contains some special characters (like space or code~/code).  You can get more information about alias/posix paths here   <comment198142> That's why I have written: `$ open ~/some_file -a my_applescript_application`. That's exactly what I am doing. But it doesn't pass this file as argument to my apple script application. <comment198144> And btw, you don't need to specify absolute path to application in case it placed in `/Applications/` folder. <comment198145> Oh I see, so could You update Your question? I understood, that Your `*.app` was not opened, not that file was not passed to the script. <comment198316> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/20551/discussion-between-mateusz-szlosek-and-rottenbrain).