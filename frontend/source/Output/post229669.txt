Update emacs that comes with OS X <body> Is there a way to update the emacs terminal editor that comes with OS X? I could remove the binaries and install Emacs using a codedmg/code package, but the idea was to upgrade to a newer version with some command.  <answer229671> It could be done but best not to do it. Certain directories including /usr/bin are updated and controlled by Apple so any changes there will be removed when the OS is updated, also in El Capitan and above this path is locked down by SiP and so you have to go through more hoops to chnage files there.  precode$ ls -lO /usr/bin/emacs -r-xr-xr-x  1 root  wheel  restricted,compressed 35581744 Jan 13 20:12 /usr/bin/emacs /code/pre  However in practice there is no need to do this. Install a new emacs in places you have access to e.g. for command line in /usr/local/bin or ~/bin - or GUI versions in /Applications or ~/Applications. /usr/local/bin is the default path so in all cases you need to edit the path to put the directory containing emacs before /usr/bin.  <answer229672> Apple controls when / if they update codeemacs/code so most people just install a newer version of the tool and change their PATH variable so the new version is found first and runs by default.  If you like the sound of that, I recommend installing Homebrew:  precode/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" /code/pre  Then install emacs:  precodebrew install emacs /code/pre  Add a link so that it'll work as codeemacs/code in the Terminal:  precodeln -s /usr/local/Cellar/emacs/24.5/Emacs.app /Applications /code/pre  This will install the 'stable' version. As of this writing, that's 24.5:  precode» brew info emacs emacs: stable 24.5 (bottled), devel 25.0-dev, HEAD GNU Emacs text editor https://www.gnu.org/software/emacs/ /code/pre  This is significantly newer (24.5.1) than the version that came with El Capitan (22.1.1):  precode» emacs --version GNU Emacs 22.1.1 /code/pre  <answer288539> First install latest emacs using brew like so   precodebrew install emacs /code/pre  Then create a file called open_brew_emacs and move it somewhere in $PATH :  precodetouch ~/bin/open_brew_emacs chmod +x ~/bin/open_brew_emacs /code/pre  Edit open_brew_emacs in an editor and add the following :  precode#!/usr/bin/env ruby ARGV &lt;&lt; "-t /dev/tty" commands = $stdin.read.split(/ /)[0].to_s + "/bin/emacs " + ARGV.join(' ') $stdout.puts %x( #{commands} ) /code/pre  Once that is done create an alias called emacs and put it in ~/.bash_profile like this :  precodealias emacs="brew info 'emacs' | sed -n 4p | open_brew_emacs" /code/pre  clipping the 4th line in codesed/code assuming codebrew info emacs/code gives 4th line as the path of emacs installation. Do check the output of codebrew info emacs/code and change accordingly.  <comment280189> However doesn't this mean that typing emacs in Terminal will find the Apple supplied one first. Also you should explain why use Homebrew rather than a binary emacs and why you can't just copy that emacs over Apple's one <comment280192> @Mark Because it's far more convenient than... really anything else. Testing whether it'll find the HB version first. <comment280194> After testing it, there's one more command to link it. Edited, thank you. <comment280195> surely you need more than that as you emacs in Applications is not on the path <comment280196> The idea was not to install another emacs, since I've already the .app and the default one, and installing a new one would only be ridiculous...I really wanted to update the default one. <comment280197> Forgive the edit - I've made the rationale for adding a second binary to the top of this post @nbro - Short of lobbying apple to update the app, you could install this and then shove it in place of the shipping version. On 10.11 that binary is restricted by default - so you need to disable SIP and deal with weakening Apple's security model. The downside is large to messing with Apple's shipping OS. The upside to layering new tools that run instead of the shipping ones is large. <comment280198> No worries, thank you @bmike. That's said much better than I could have said it. <comment280237> You can also compile from source.  XCode has all the necessary tools.  This also gives a GUI version which is nicer than the terminal-only version supplied by Apple. <comment329265> You can use `brew linkapps` instead of creating a symlink. That way it's not version dependant.