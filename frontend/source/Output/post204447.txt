rm does not support long-form --recursive, --force on Mac? <body> This seems crazy, but I just checked in a build script that switched from coderm -rf/code to coderm --recursive --force/code, since it would be more readable. And a collaborator who uses a Mac is reporting this breaks. When I ask him to run coderm --help/code, he gets  precode5gt2:html-build annevk$ rm --help rm: illegal option -- - usage: rm [-f | -i] [-dPRrvW] file ...        unlink file  5gt2:html-build annevk$ rm --force rm: illegal option -- - usage: rm [-f | -i] [-dPRrvW] file ...        unlink file /code/pre  This seems crazy to me that such a basic thing would not be supported across different *nixes. Does anyone have a workaround, or at least an explanation?  <answer204448> coderm/code packaged with OS X is the BSD coderm/code which conforms to the POSIX standard. It looks like you were expecting GNU coderm/code.   IIRC, long options are more of a GNU thing.   <answer204449> OSX is Unix and uses the BSD tools. The extended names are a GNU extension.  You just need to use the standard parameters e.g. -r -f  (These are in the POSIX standard)  The error is in the build file using non standard Unix commands  <comment246417> FWIW, OS X users can `brew install coreutils` and then use `grm`. But portable code should just use `-rf`. <comment246418> @MathiasBynens good shout on the workaround. <comment246495> You really think `rm --recursive --force` is *more* readable than `rm -rf`? Verbosity â‰  readability, especially not when `rm -rf` is so deeply ingrained in the minds of Unix users everywhere.