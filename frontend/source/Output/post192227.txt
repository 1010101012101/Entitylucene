Make files in `/usr/local` writable for homebrew <body> I've been trying to get homebrew working nicely, but it appears everything inside code/usr/local/code isn't writable, and everything falls over.  It keeps telling me to recursively codechown/code code/usr/local/code, and I tried that. Operation denied, so I sudo'd it. It seemed to work, but with an eerie silence that I hear is considered polite in Unix. Unfortunately, any succeeding attempts at codebrew update/code meet with the same cacophony of errors.  I reran the command with code-v/code and it looks the operation is not permitted for anything inside.  As much as the answer is probably "learn UNIX" I'm just trying to comply with some job requirements here for a tutorial on Ruby, so that's a few steps above where I'm currently at.  codebrew doctor/code:  precodeWarning: /usr/local/Frameworks isn't writable.  This can happen if you "sudo make install" software that isn't managed by by Homebrew. If a formula tries to write a file to this directory, the install will fail during the link step.  You should probably `chown` /usr/local/Frameworks Warning: /usr/local/Cellar isn't writable. You should `chown` /usr/local/Cellar Warning: /usr/local/etc isn't writable.  This can happen if you "sudo make install" software that isn't managed by by Homebrew. If a formula tries to write a file to this directory, the install will fail during the link step.  You should probably `chown` /usr/local/etc Warning: /usr/local/include isn't writable.  This can happen if you "sudo make install" software that isn't managed by by Homebrew. If a formula tries to write a file to this directory, the install will fail during the link step.  You should probably `chown` /usr/local/include Warning: /usr/local/lib isn't writable.  This can happen if you "sudo make install" software that isn't managed by by Homebrew. If a formula tries to write a file to this directory, the install will fail during the link step.  You should probably `chown` /usr/local/lib Warning: /usr/local/lib/pkgconfig isn't writable.  This can happen if you "sudo make install" software that isn't managed by by Homebrew. If a formula tries to write a file to this directory, the install will fail during the link step.  You should probably `chown` /usr/local/lib/pkgconfig Warning: /usr/local/opt isn't writable. You should `chown` /usr/local/opt Warning: /usr/local/share isn't writable.  This can happen if you "sudo make install" software that isn't managed by by Homebrew. If a formula tries to write a file to this directory, the install will fail during the link step.  You should probably `chown` /usr/local/share Warning: Some directories in /usr/local/share/man aren't writable. This can happen if you "sudo make install" software that isn't managed by Homebrew. If a brew tries to add locale information to one of these directories, then the install will fail during the link step. You should probably `chown` them:      /usr/local/share/man     /usr/local/share/man/man1     /usr/local/share/man/man3     /usr/local/share/man/man5     /usr/local/share/man/man7     /usr/local/share/man/man8 Warning: /usr/local/var isn't writable.  This can happen if you "sudo make install" software that isn't managed by by Homebrew. If a formula tries to write a file to this directory, the install will fail during the link step.  You should probably `chown` /usr/local/var /code/pre  <answer192229> You have to use sudo to run the command with elevated priledges, like this:  precodesudo chown -R `whoami` /usr/local /code/pre  <answer192232> This should be solved changing the perms on that directory in the following way:  precode$ cd /usr/local $ sudo chown -R &lt;your-username&gt;:&lt;your-group-name&gt; * /code/pre  If you don't know your group, just type codeid -g/code.  <answer238428> It worked for me.  precodesudo chgrp -R admin /usr/local sudo chmod -R g+w /usr/local /code/pre  <comment228564> I did. "Operation denied, so I sudo'd it." <comment228565> Does `brew doctor` tell you anything useful? Post the output here. <comment228566> @IanC. It's a long list of everything brew-related not being writable. Is there a stackexchange pastebin utility? There's an *awful lot* of it. <comment228567> Well, that's odd. There's a lot less of it now than there was. <comment228670> The important part is the `-R` to make it recursive. And you probably have to do the `chown` using `sudo`. For the user group, I usually use `staff` on OS X. <comment228716> Interesting. Why is using the group so different from just the user? <comment228717> This solved the first problem, but now I have another one. I ask a different question for that, right? This time brew's complaining about a git .lock <comment228719> The group is just to be sure that works, may or may not be necessary. Regarding you new issue, ask a new question. <comment302865> Why is it right for /usr/local to be owned by your user? I think that is a security risk, as there are a lot of other programs that use /usr/local and could be silently taken over. Does brew really need something so drastic? <comment327668> Just FYI: I just ran `brew update` and discovered that "Homebrew no longer needs to have ownership of /usr/local." More info in this [question](http://apple.stackexchange.com/questions/253404/how-does-homebrew-no-longer-need-ownership-of-usr-local). Obviously to get to that point you'd still need to temporarily update permissions on /usr/local :) <comment329639> For fish shell users it will be `sudo chown -R (whoami) /usr/local` <comment353196> I believe this is dangerous as it selects the 'staff' group, which means every user on the OS can then alter the contents of /usr/.  You should probably switch to 'admin'.