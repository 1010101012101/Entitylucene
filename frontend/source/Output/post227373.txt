System logs backup with Time Machine <body> It seems that Time Machine does not backup system.log in /private/var/log.   Mac OS X 10.9.5/Six core Intel Xeon  Can I force that file to be backed up?  <answer227393> No, unfortunately while the standard Time Machine lets you emexclude/em directories there isn't a way to stronginclude/strong directories.  Even the command line utility isn't any help codetmutil/code - again all you can do is exclude directories.  If you really need the content of code/private/var/log/code backed up then I would suggest using a simple script to copy the directory to a location to that is backed up.  To copy the files periodically you could use Automator or simple bash script with a single codersync/code call like:  precodersync -ar --delete /private/var/log/ /Users/yourusername/Documents/logbackups/ /code/pre  emPlease note/em some sub-directories may present problems due to default permissions… like this one:  precodedrwx------   3 root    wheel    102 17 Sep 15:30 com.apple.revisiond /code/pre  From the comments by testing below, I tested the code/private/var/log' directory with/codetmutil` and we get:  precodetestac:~: tmutil isexcluded /private/var/log/ [Included]    /private/var/log/ testac:~: tmutil removeexclusion /private/var/log/ MDSetAttribute(): Removing extended attributes from '/private/var/log' failed errno: Permission denied /code/pre  So, unless, you're going to modify the files suggested by @user3439894 via the tools and standard user interface there isn't a way to do it. Given that changing core files is always a bad idea — I would copy them to an already included location. (Apart from anything else system updates or Time Machine integrity may revert your changes).  <answer227417> By default the contents of the code/private/var/log/code directory is excluded from Time Machine backups.  This can be changed to include the contents however because this is a system file it is probably more prudent to backup the excluded files you would like to have backed up by copying the files to a location that is included in Time Machine backups.  That said however, I disagree with cppl's statement em"Given that changing core files is always a bad idea"/em because when done properly and with the knowledge and understanding of what one is doing it's just not an issue!  If you really want to include code/private/var/log/code directory in your Time Machine backups then here is what you can do. To make this easier and more safe I'd recommend using this tested script.  It first backs up the bundle and plist and only removes code/private/var/log/code if it in its default location within the .plist file. Note: This script must be run using codesudo/code or as coderoot/code.  strongIn a Terminal:/strong  precodetouch modtm open modtm /code/pre  strongIn the opened modtm document:/strong  Copy and paste the code shown below into the document and save it, then close it.  strongBack in the the Terminal, make the script executable:/strong  precodechmod u+x modtm /code/pre  strongNow with the script ready to execute, in the Terminal:/strong  precodesudo ./modtm /code/pre  Enter your password, which will not show as you type it, and then press Enter.  If defaults were in play then code/private/var/log/code should have been safely removed, by virtue of first backing up, from the emStdExclusions.plist/em file.  strongCode:/strong  precode#!/bin/bash  set -ex      # Make sure script was run using 'sudo' or by 'root'.  if [[ $(id -u) != 0 ]]; then    echo "This script must be run as root." 1&gt;&amp;2    exit 1  else         # Set variables.      b="/System/Library/CoreServices/backupd.bundle"     f="/System/Library/CoreServices/backupd.bundle/Contents/Resources/StdExclusions.plist"     e="/private/var/log"          # Backup, by copy, both the bundle and plist.      [[ ! -d ${b%%.*}.ORI.${b##*.} ]] &amp;&amp; cp -aR "$b" "${b%%.*}.ORI.${b##*.}"     [[ ! -f $f.ORI ]] &amp;&amp; cp -a "$f" "$f.ORI"          # Get the value of the first element of the 'FileContentsExcluded' array.      v="$(/usr/libexec/PlistBuddy -c "Print :FileContentsExcluded:0" "$f")"      if [[ $v == $e ]]; then             # Target value matched, delete it from .plist file.         /usr/libexec/PlistBuddy -c "Delete :FileContentsExcluded:0"  "$f"         echo "$e removed from $f"     else         echo "$e not found where expected!"         exit 1     fi     exit 0 fi /code/pre  strongImage showing syntactical highlighting:/strong  img src="https://i.stack.imgur.com/pM6Dg.png" alt="enter image description here"  Note: This script cannot be run in OS X 10.11 unless SIP is temporarily disabled.  <comment276161> You said "... there isn't a way to include directories." and in this particular use case, to that I'd say you might be wrong because If a given directory is excluded by default then may be it can be included by removing the exclusion!  I haven't tried, however I certainly would thought before saying it couldn't be included.  Anyway since it would be messing with a system file, your suggestion about copying the contents to a location that gets backed up would be safer. <comment276164> Unfortunately there is no mechanism to exclude `/private` (or for that mater `/system`,  `/Library` etc) they aren't "included" or "excluded" in the first place… <comment276165> You are wrong, `/private/var/log` is explicitly excluded. On my system it is the first _element_ of the _FileContentsExcluded_ array of the _Root Dictionary_ in the _StdExclusions.plist_ of the _backupd.bundle_ is `/private/var/log` and I would surmise that removing it would therefore cause it to be included in a Time Machine backup.  I guess I'll just have to test it and see. <comment276169> Okay, I removed `/private/var/log` from the `StdExclusions.plist` and then did a Time Machine backup.  It absolutely included the contents of `/private/var/log` that had not been previously backed up.  So I no longer surmise that removing it would therefore cause it to be included, I can say with absolutely certainty, in this use case, that removing the default exclusion for `/private/var/log` causes it to backup files at that location not previously backed up by Time Machine! <comment276176> Sorry, I was talking about the using Time Machine interface I wasn't talking about hacking system files… (although I imagine if it's in the plist you could use `tmutil` to exclude the directory - let me check) <comment276177> See updated answer `tmutil` won't let you remove the exclusion… it throws an extended attributes permission error.