Multiple Java versions support on OS X and JAVA_HOME location <body> I know is possible to have multiple versions of Java on OS X but i find it difficult to understand how it works.  I upgraded to Mountain Lion and now codeecho $JAVA_HOME/code is empty.  However in code/System/Library/Frameworks/JavaVM.framework/Versions//code  precode1.4     1.5     1.6     A       CurrentJDK 1.4.2   1.5.0   1.6.0   Current /code/pre  When I go into 1.4.2 and I execute codejava - version/code or code./java -version/code      Java(TM) SE Runtime Environment (build strong1.6.0/strong_33-b03-424-11M3720)   So why all those versions are used for if they have same version of Java?  Then I downloaded the JDK 7 from Oracle and installed it.  Where a new  JDK is usually installed?   And final question : How can I choose which version should run by default by all applications?  In Win. I set codeJAVA_HOME/code to the codeC:/ProgramFiles/Java/.…/code I put in Path : location to codeJAVA_HOME/bin/code and that's it.  <answer58602> h1Paths used for installation of JDKs/h1  Run:   precodels -l /Library/Java/JavaVirtualMachines /code/pre  Other paths may be used but for the current JDK from Oracle, installed to Mountain Lion, you'll probably find the code.jdk/code bundle at that path.   <answer58604> h1Contents of /System/Library/Frameworks/JavaVM.framework/Versions/h1  For most use cases, codeCurrentJDK/code should provide the functionality of current strongand/strong past versions of the JDK.   Not all past versions, but the versions most commonly required:   precodesh-3.2$ sw_vers ProductName:    Mac OS X ProductVersion: 10.8 BuildVersion:   12A269 sh-3.2$ ls -l /System/Library/Frameworks/JavaVM.framework/Versions total 64 lrwxr-xr-x  1 root  wheel   10 17 Jul 07:47 1.4 -&gt; CurrentJDK lrwxr-xr-x  1 root  wheel   10 17 Jul 07:47 1.4.2 -&gt; CurrentJDK lrwxr-xr-x  1 root  wheel   10 17 Jul 07:47 1.5 -&gt; CurrentJDK lrwxr-xr-x  1 root  wheel   10 17 Jul 07:47 1.5.0 -&gt; CurrentJDK lrwxr-xr-x  1 root  wheel   10 17 Jul 07:47 1.6 -&gt; CurrentJDK lrwxr-xr-x  1 root  wheel   10 17 Jul 07:47 1.6.0 -&gt; CurrentJDK drwxr-xr-x  8 root  wheel  272 17 Jul 07:48 A lrwxr-xr-x  1 root  wheel    1 17 Jul 07:47 Current -&gt; A lrwxr-xr-x  1 root  wheel   59 17 Jul 07:47 CurrentJDK -&gt; /System/Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents sh-3.2$  /code/pre  <answer58605> h1Preferring a version of Java/h1  Use Java Preferences in the normal way.   Depending on what you have installed in addition to Apple's distribution of Java, the first tab of the utility may appear a little different.   An example, emwithout/em the familiar options for applets and Java Web Start:   img src="https://i.stack.imgur.com/9BOe7.png" alt="Screenshot of Java Preferences"  There is some background reading on how this works at the command line level. The command line tool strongjava_home/strong reports back this preference setting.  precode$ /usr/libexec/java_home /Library/Java/JavaVirtualMachines/1.6.0_33-b03-424.jdk/Contents/Home /code/pre  The strong/usr/bin/java/strong placeholder app makes use of these settings run the preferred version of Java.  precode$ which java /usr/bin/java  $ java -version java version "1.6.0_33" Java(TM) SE Runtime Environment (build 1.6.0_33-b03-424-11M3720) Java HotSpot(TM) 64-Bit Server VM (build 20.8-b03-424, mixed mode) /code/pre  Finally when configuring JAVA_HOME in a launch script for Tomcat or Maven you can hook into the preference system:  precodeexport JAVA_HOME=`/usr/libexec/java_home` /code/pre  Answers elsewhere note that Java may be installed at several paths –   ul li/System/Library/Java/JavaVirtualMachines/li li/Library/Java/JavaVirtualMachines/li li~/Library/Java/JavaVirtualMachines/li /ul  – but for what's currently described in the question here, the JDK from Oracle on Mountain Lion, only one path is likely.   <answer79632> Since strongMac OS X 10.8.2 Build 12C60/strong Java Preferences doesn't show anymore the older versions.  <comment67498> Thanks for the community edit, should there be a different link for the background reading? <comment81814> Maybe of interest since Oracle recently uses the term JRE to describe the Java applet plug-in alone (confusing!); and since users of OS X can now use two different versions concurrently (one version for the plug-in, a different version for apps that do not use the plug-in): [How to best manage different java versions on Mountain Lion?](http://apple.stackexchange.com/q/69086/8546) <comment91615> Java Preferences is no longer supported and is actually removed when one applies the [Java 2012-006 update](http://support.apple.com/kb/DL1572). This is part of Apple's move away from providing and supporting Java. <comment91633> @BryanH thanks – this answer was given some months before Java for OS X 2012-006 – see the linked question. Also please note that whilst Apple moves away from *distributions* of the JRE, we should **not** assume that Apple will cease to *support* Java. <comment91857> Yes, thanks. I guess I should clarify that "support" means that Apple is no longer providing or answering technical questions about the Java Virtual Machine for OSX. It is up to Oracle (or another third party) to write and maintain said JVM.