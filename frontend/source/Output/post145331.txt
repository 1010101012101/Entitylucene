Finding Private API keys on iPhone <body> I've been conducting quite a few codeMITM/code attacks as of late on my iPhone with Charles. Many of the apps that I've been yearning to get a better understanding of are easy to reverse engineer simply using codecURL/code to mimic the requests that are being sent to the server. Others however, require a signature that I'm guessing uses a secret key that is used to generate a hash of the payload. When I reverse engineered Instagram's API a while back, it went something like this  precodefunction GenerateSignature($data) {     return hash_hmac('sha256', $data, 'b4a23f5e39b5929e0666ac5de94c89d1618a2916'); }  $data = '{"device_id":"'.$device_id.'","guid":"'.$guid.'","password":"'.$pass.'","username":"'.$username.'","email":"'.$email.'","_csrftoken":"c3a1648209b1eeefd7bd8d404211be5e", "Content-Type":"application/x-www-form-urlencoded; charset=UTF-8"}';   $sig = GenerateSignature($data); $new_data = 'signed_body='.$sig.'.'.urlencode($data).'&amp;ig_sig_key_version=4'; /code/pre  And then, obviously the query string would be sent along with the request to the server. But, I can't seem to find the API key using Charles for an app that I'm really interested in. My iPhone is jailbroken, but I'm not quite sure where to look inside of the codevar/mobile/applications/code folder to find the API key? Any ideas?   <answer166862> You can use https://code.google.com/p/droidbox/ to find the key. Or use a Java disassembly tool.  There is also a webservice where you can upload an APK and scan it for malware. The report includes ADB logcat output with the key, for example see this scan-report (scroll to the bottom "Output generated by ADB logcat").  <comment195636> Btw, thanks for sharing the PHP-code on your blog @Lance