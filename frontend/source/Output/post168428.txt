Is it theoretically possible for DirectX to work on OS X natively? <body> As far as I can tell, DX as a software-component is tightly wound to Windows as for hardware-acceleration and is provided as a set of DLLs and a runtime system for applications that depend on it; however, OS X uses GPUs that support DX. The problem seems to not lie in the inability on the hardware side, but on the non-existent runtime on the software, and the inability for winding between applications and a DX runtime system.  OS X uses OpenGL only for hardware-acceleration, so if my cards are right, isn't it possible to reverse engineer DX's COM interface and re-compile it back as an Objective-C interface with static or dynamic linkage and enable the runtime to work on OS X, along with re-writing device drivers to enable mapping to GPU address space to implement the features of DirectX operations on the GPU (shading, GPGPU, etc.)? I know it sounds crazy, but I can't find any way to believe this to be impossible. Most GPUs today support DirectX.  <answer168441> It's more than theoretically possible, it's how many PC games are ported to run on OS X - using Cider from TransGaming.  This is from TransGaming's web site:     Cider works by directly loading a Windows program into memory on an   Intel Mac system and linking it to an optimized version of the Win32   APIs. TransGaming's Cider implements common multimedia Windows APIs   such as Direct3D, DirectInput, DirectSound and many others by mapping   them to Mac equivalents.   <answer168464> It is theoretically possible, and also in theory, the implementation does not have to be written by Microsoft, but be functionally identical. It is currently not available in reality, but many solutions, such as Cider, can wrap it to OpenGL.  <comment199718> I don't mean wrap; I mean call Direct X and use it directly from Cocoa/etc. <comment199719> That's not natively working and if it's being wrapped around Direct X calls, it's more like a light compatibility-layer. I mean Cocoa directly interacting with DX and a DX driver under the hood doing the work, not converting to OpenGL. <comment199723> Sorry if I confused you in any way. I was just trying to clear up the reality of it as it seemed all the answers to these types of questions are more positive or more negative than reality. In summary, the good: Yes, in theory. The bad: No one's made it yet. The ugly: Wrappers all over the floor. <comment199729> But it is possible to hook Cocoa with Direct X without a wrapper, assuming someone could interact with Objective-C and the runtime would play well? What I mean is get the program to use Direct X and not OpenGL as the final result. <comment199730> It is. But you'll need to write the whole API and driver before you can hook into it, because nobody has done it. <comment199737> I know how to write a driver for GMA 950 which supports Direct X 9. Is it possible that OS X's driver model would allow this, or do I have something wrong? <comment199738> Awesome. Now you just need the API and dependencies.