python site packages directory <body> I have for some reason two locations for python site packages.  Python itself is here:  precode&gt; $ which python &gt; /Library/Frameworks/Python.framework/Versions/2.7/bin/python /code/pre  My Path Variable is:  precode$ echo $PATH /Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/git/bin:/opt/opengeo/pgsql/9.1/bin /code/pre  xlrd is installed here and can be accessed from python  precode&gt; $ pip install xlrd &gt; Requirement already satisfied (use --upgrade to upgrade): xlrd in /Library/Python/2.7/site-packages  $ python Python 2.7.3 (v2.7.3:70274d53c1dd, Apr  9 2012, 20:52:43)  [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import xlrd &gt;&gt;&gt;  /code/pre  numpy is installed here and can not be accessed from python  precode&gt; $ pip install numpy &gt; Requirement already satisfied (use --upgrade to upgrade): numpy in /usr/local/lib/python2.7/site-packages  $ python Python 2.7.3 (v2.7.3:70274d53c1dd, Apr  9 2012, 20:52:43)  [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin Type "help", "copyright", "credits" or "license" for more information. &gt;&gt;&gt; import numpy Traceback (most recent call last):   File "&lt;stdin&gt;", line 1, in &lt;module&gt; ImportError: No module named numpy /code/pre  What do I have to do to get numpy also working with python. I am looking for the 'cleanest solution'.   <answer92887> As a short-term solution, you should be able to run  pre class="lang-bsh prettyprint-override"codecp /usr/local/lib/python2.7/site-packages/numpy* /Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/ /code/pre  as the versions of python are the same, and code/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/code is (amongst other places) where your python binary will be looking for modules.  I'm concerned that code/usr/bin/python/code doesn't exist, as this is what is shipped with OSX and is required for some system/OS stuff to run. The reason you have so many codesite-packages/code directories (you actually have more than you listed in your question) is that it seems like you've installed a python.org version (the code/Library/Frameworks/.../code one) and perhaps a third-party version from Homebrew or some other package manager (MacPorts by default installs into the code/opt/local/code directory). Your version of codepip/code was also installed from that source, so if you want to use the python.org version as your default then you'll need to install codepip/code again (make sure you use the codesetuptools/code version, as codedistribute/code is defunct). After that's all done, you can then run codepip install numpy --upgrade/code to make sure you've got the latest version, which is 1.7.1 currently.  <comment108954> Don't you have a Python in `/usr/bin/` ? and Did you change your `$path` variable ? <comment108955> Thanks for the hints. I edited my original post. <comment108956> @MatthieuRiegler: would it makes sense to delete the $path variable? <comment108958> WHat does `which pip` give? <comment108960> @Mark `$ which pip /usr/local/bin/pip` <comment108963> Do Not deleting $path (that would be an awful idea). what does `echo $PATH` give ? <comment108964> @MatthieuRiegler - it's in her question... <comment108965> How did you happen to not have `/usr/bin/python`? Did you remove it? <comment108974> I am looking for a clean solution. Is there a way to restore `/usr/bin/python` <comment109076> @user1738154 do you still have `/usr/bin/pythonw`? It is identical to the `python` binary, so a `sudo cp /usr/bin/pythonw /usr/bin/python` should do the trick. <comment109078> That is strange. After doing what you said I get `cp: /usr/bin/python and /usr/bin/pythonw are identical (not copied)` <comment109079> @user1738154 so apparently you have `/usr/bin/python` after all... so much for that problem :) <comment109082> Well there is a Unix Executable File called python. <comment109085> @MattDMo It wasn't when I asked. <comment109086> What happens when you set your $path to `/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/git/bin:/opt/opengeo/pgsql/9.1/bin` ?