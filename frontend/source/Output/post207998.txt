What is ksfetch process on Mac? <body> Sometimes I see a ksfetch process on my Mac. After a little googling I found out that it is Google software updater. However, there is no detailed answer i.e. what is ksfetch process used for? Is it really required? Can I get rid of it? Sometimes it uses my internet bandwidth so it frustrates me hence the query. Thanks.  <answer208002> Yes, you can disable it.  To do this just for you in Terminal type:  code~/Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Content/Resources/GoogleSoftwareUpdateAgent.app/Contents/Resources/install.py --uninstall/code  for all users:  code/Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Contents/Resources/GoogleSoftwareUpdateAgent.app/Contents/Resources/install.py --uninstall/code  On some machines it's codeksinstall/code instead of codeinstall.py/code.  <answer208015> h1Keystone Fetch / ksfetch/h1  The codeksfetch/code process on OS X is part of Google Chrome's update mechanism. The codeks/code prefix is an abbreviation of Keystone. The process appears to be responsible for fetching updates to Google's products. It is this role that uses your bandwidth.  Using slick's answer you can disable the corresponding process that uses codeksfetch/code.  Alternatively, it appears possible to adjust the frequency of update checks:     Entering the following code into your terminal will make it check once a week rather than every few hours:  precodedefaults write com.google.Keystone.Agent checkInterval 604800 /code/pre   To learn more about, follow the links below:  ul liLittle Snitch + Google Chrome = ksfetch issues/li liksfetch, little-snitch, the escalation of mutually fooling â€¦/li /ul  <answer230944> They have changed this command to --nuke instead of --uninstall and the path is now different as well.  So the new command for all users would be:  precode/Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Contents/Resources/GoogleSoftwareUpdateAgent.app/Contents/Resources/ksinstall --nuke /code/pre  <answer235005> You can uninstall it, type code/Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Contents/Resources/GoogleSoftwareUpdateAgent.app/Contents/Resources/ksinstall --help/code to see available options.   code--nuke/code can uninstall everything related to it, just like this: code/Library/Google/GoogleSoftwareUpdate/GoogleSoftwareUpdate.bundle/Contents/Resources/GoogleSoftwareUpdateAgent.app/Contents/Resources/ksinstall --nuke/code  <answer245785> There is an issue with Google Chrome that it creates a temp file to check for updates every x hours.  Since it's making a new temp file for some reason it sets off Little Snitch, which is quite annoying.  By entering the following code into Terminal, it will make it check once a week rather than every few hours:  precodedefaults write com.google.Keystone.Agent checkInterval 604800 /code/pre  Hopefully one of the next versions of Google Chrome they will address this, as it is very annoying having to click allow/deny every x hours.  <comment250925> Thanks. Can you also answer other parts of the question like what is this process used for? Is it required? etc. <comment281958> Welcome to Ask Different.  We like answers to stand on their own. Could you either edit this to explain the essence of the solution or perhaps edit the other answer with this update. Bonus points for identifying what version of the app needs the new command argument. <comment302967> `install.py` is called `ksinstall` on my machine. <comment302968> What's the difference between `uninstall` and `nuke`? <comment303037> Run that ksinstall --help command, you will find out. br/ `[--nuke]            Remove Keystone and all tickets.` `[--uninstall]       Remove Keystone program files but do NOT delete                      the ticket store.` <comment303045> I had already removed it with the `uninstall` command so I cannot check without reinstalling everything. Thanks! <comment332097> What I find troubling is that it tries to access a cryptic domain at gvt1.com. <comment332148> `gvt1.com` is operated by Google, see https://whois.domaintools.com/gvt1.com <comment336230> As of today, the longest possible period is 24 hours, i.e. a value of 86400 (https://support.google.com/chrome/answer/6315311?hl=en).