Is El Capitan preventing me from getting the Perl module DBD::Oracle working? <body> Let me start by saying I'm not traditionally a Mac user.  I'm still trying to transition from Gentoo, where compiling everything from source was the default state, and the system wasn't actively trying to prevent me from doing "dangerous" things.  I have a new machine running 10.11.  I've gotten codesqlplus/code 11.2.0.4 running, and am able to connect to a remote Oracle server with it.  I now want to use codeDBD::Oracle/code to connect in a Perl script.  I was able to get codeDBD::Oracle/code to compile/install by manually passing a version to codeMakefile.pl/code rather than using CPAN (or, more specifically, codecpanm/code):  precodeperl Makefile.pl -V 11.2 make make install /code/pre  However, when I run the script using the default Perl (5.18.2 located at code/usr/bin/perl/code), I get an error:  precodeERROR OCIEnvNlsCreate. Check ORACLE_HOME (Linux) env var  or PATH (Windows) and or NLS settings, permissions, etc. /code/pre  In case the issue lies with the system perl, I installed codeperlbrew/code and then installed 5.22.0 into code~/perl5/code.  Using the perlbrew Perl, I get a different error:  precodedyld: lazy symbol binding failed: Symbol not found: _OCIAttrSet   Referenced from: /Users/jrittenh/perl5/perlbrew/perls/perl-5.22.0/lib/site_perl/5.22.0/darwin-2level/auto/DBD/Oracle/Oracle.bundle   Expected in: dynamic lookup  dyld: Symbol not found: _OCIAttrSet   Referenced from: /Users/jrittenh/perl5/perlbrew/perls/perl-5.22.0/lib/site_perl/5.22.0/darwin-2level/auto/DBD/Oracle/Oracle.bundle   Expected in: dynamic lookup  Trace/BPT trap: 5 /code/pre  I've tried:  ul liboth 32-bit and 64-bit Oracle libraries/li lisymlinking libraries from the specific version (codelibclntsh.dylib.11.1 =&gt; libclntsh.dylib/code)/li lifixing hard-coded paths to code/ade/code/li licreating a 'mesg' folder and made it writeable in code$ORACLE_HOME/code/li lisetting codeORACLE_HOME/code, codeLD_LIBRARY_PATH/code, codeDYLD_LIBRARY_PATH/code, and codePATH/code to include code/usr/local/oracle_client/code from code/etc/profile/code, code/etc/bashrc//code, code~/.bashrc/code, and code~/.bash_profile/code/li /ul  Is there something else I can try?  What am I missing?  <answer227933> I am using   Mac OS X 10.11.3 El Capitan,    perlbrew 1.74 installed with cpanm &amp; App::perlbrew/0.74   Perl revision 5 version 22 subversion 1 (installed via perlbrew)   DBI -- 1.631   DBD::Oracle VERSION: 1.74   Oracle InstantClient 11.2.0.4.0 installed at /usr/local/lib/oracle/instantclient_11_2  I can confirm that the only way, so far, I have been able to get DBD::Oracle to work is by disabling SIP (http://osxdaily.com/2015/10/05/disable-rootless-system-integrity-protection-mac-os-x/). Any other way I've tried results in the error "failed: ERROR OCIEnvNlsCreate. Check ORACLE_HOME (Linux) env var ...". 