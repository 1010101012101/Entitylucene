How to reset $PATH? <body> I was trying to add something to $PATH and it went totally wrong.  I now can't run any commands such as codels/code.  I've looked at this answer  and used the following lines:  precodePATH=/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin PATH=$PATH:~/bin /code/pre  These lines fix the problem temorarily; however, when I restart terminal it seems to forget these changes.  How do I permanently reset my $PATH?  I'm running the most recent version of Mountain Lion.   <answer79960> Remove the your bash profile to restore the default code$PATH/code. Enter the following command into strongTerminal.app/strong:  precode/bin/rm ~/.bash_profile /code/pre  The change will take place with the next shell or terminal session.  <answer100303> The suggested answer of removing code.bash_profile/code is not a good idea in general. There are other things that can be set in that file besides codePATH/code definitions.  If you want to undo the effects of your experimentation, just remove or comment out that codePATH/code line with a code#/code.  You don't want to edit the codePATH/code from scratch, but append to it, as you did with your second line. The preferred method of adding something to your path would be:  precodeexport PATH=$PATH:$HOME/bin /code/pre  strongEDIT/strong Since your codePATH/code is messed up, you don't have access to the usual commands to make these changes. As a temporary fix, you can define a new minimal path emin a Terminal window/em (not in your code.bash_profile/code) by typing:  precodePATH=/bin:/usr/bin /code/pre  This will temporarily give you access to codenano ls mv vi cat/code and coderm/code -- the basic tools to check and edit your code.bash_profile/code and fix your problem...  Repeat, do not put this codePATH/code definition anywhere except for the duration of the session while you make your fixes.  <answer135346> OSX's default code$PATH/code is generated from the contents of the code/etc/paths/code file, it's fairly straight-forward to modify.  <answer155281> These methods are great! If you have this problem with zsh, remove code~/.zshrc/code This will get rid of your zsh settings though.  <answer186156> I recommend:  precodesource /etc/profile /code/pre  This is what Mac uses to set the initial path, and it will put everything back in place excepting the items that you are adding for your user.  I do a decent amount of path modification in my ~/.bash_profile, and I've placed this at the top of the file because I was having issues with reloading my profile while I'm working after I tweak an alias in there or something, and it was adding duplicate references to my path. Instead of checking to see if it's already added, I just reset my path to the scratch version and re-append the items I want.   <comment91612> Fixed it: `/bin/rm ~/.bash_profile` <comment91616> Good question. You could always put your fix in an answer. <comment91621> Also asked on [superuser](http://superuser.com/q/538400/4714) <comment91789> Realizing you already fixed your problem, users with a similar issue might also find help at `/etc/paths` <comment92232> Answering, based on original questioner's comments, to remove the question from the unanswered queue. <comment92258> Well, if you want to keep other content of your profile, a simple `/bin/mv ~/.bash_profile ~/bash_profile` might be better <comment160418> Modifying `/etc/paths` carries the risk of changes getting overwritten by the next OS X update, also this doesn't work for user-specific paths like `~/bin`. <comment160419> That's true, though I usually handle those in my .rc's later. I also haven't had my `/etc/paths` reset yet by an update (several years now since I started using `brew`). <comment160420> Currently hacking on a [boxen provisioning](https://boxen.github.com) that I hope will make me impervious to future overwriting updates. <comment333168> You would rather want to keep a copy `/bin/mv ~/.bash_profile{,.bck}`