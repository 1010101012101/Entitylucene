Is it possible to configure Internet Sharing to allow the computer to sleep? <body>    TL;DR: Internet Sharing is preventing my Mac from sleeping. I need to manually sleep the system on a regular basis. I want a way to configure Internet Sharing to stop preventing sleep.   I have an iMac at home in my bedroom too far away from my router, and I can't use wireless, also, 3G coverage here is awful, so I've enabled Internet Sharing so I can use my iPhone/iPad connected trough my iMac.  At work I am on a corporate network and wireless is somewhat lame and too restrictive, so I've enabled Internet Sharing on my MacBook Pro there too, so my iPhone can reach internal stuff.  The problem is: When I hit kbd⌘/kbd+kbd⌥/kbd+kbd⏏/kbd (or   Sleep) neither computer goes to sleep as desired; that is unless I disable Internet Sharing first.  At home I want the computer to sleep while I sleep (saves power + more silence) and at work when going home I want it to sleep too, so I don't have to close all connected apps (Adium, Colloquy, etc) and reopen again the next day.  How can I configure codepmset/code or Internet Sharing so I can sleep my computer without running into this problem?  Note: I've already used codepmset/code to check if there were other reasons and the offending codepid/code is always codecom.apple.InternetSharing/code.  strongEdit:/strong I realize that sleeping the computer will make it impossible to use Internet Sharing. I want it to sleep completely and I want Internet Sharing to be on again only when the computer awakes.  <answer48211> When your computer's power management unit makes the device sleep, it enters a low-power mode.  Your average executable code on the computer is not run in the normal manner: the computer maintains enough power to refresh the memory (if necessary) and little else.  You're not going to be able to engage in general-purpose computing while the computer sleeps.  However, there is a good alternative that you should look at.  Instead of sleeping the entire unit, check out display sleep in codeSystem Preferences -&gt; Energy Saver/code.  In my use-case, I have a hot-corner setup (which you can enable in codeSystem Preferences -&gt; Desktop &amp; Screen Saver -&gt; Screen Saver/code) so that when I'm going to lunch and need to lock my screen and/or just put the display to sleep, I move to the bottom-left corner.  Works well for me, the computer doesn't come back up from a sleep-routine and any long-running processes I've forgotten about aren't interrupted.  In your case, this means that your WiFi hotspot won't get dropped.  <answer49635> If you are running Lion, codeInternetSharing/code is explicitely locking the codeSystemSleep/code. Have a look at:  precodestrings /usr/libexec/InternetSharing | grep SystemSleep /code/pre  The output of this command:     DenySystemSleep is the proof that codeInternetSharing/code is purposefully blocking the kernel possibility to go to sleep. There is a simple explanation to this protection: once codeInternetSharing/code is fired, clients of this Mac may be using it as a router to access the Internet. A lot of thing may be automatically running on top of this Internet connexion without any knowledge of the person in front of the screen.  This connexion should only be broken by the admin of the system who started it and not any automatic system behaviour.  This is a safe behaviour.  Hence the correct method to ensure codeInternetSharing/code is off when the Mac sleep is to schedule 4 events in the following order:  precodeInternetSharing off     system sleep     system wakeup InternetSharing on /code/pre  This is the scheduling offered by codeControlPlane/code.  <answer84097> I have experimented with using ControlPlane to achieve what you want.  My preliminary result is that it will do what you want.  ControlPlane detects changes to your system called 'evidence sources'.  Changes are evaluated with 'rules' which define a change in 'context'.  Associated with each context are 'actions'.  One of the 'evidence sources' is a sleep/wake event.  So I have configured a rule so that on a sleep event (e.g. you have clicked sleep in the Apple menu), the context 'Sleepy Time' is triggered.  And for this context I have used the action 'ToggleInternetSharing' to off.  After clicking on Sleep, I get an alert saying that Internet Sharing is being turned off and after a little while (seems like forever but is probably only 10 or 20 seconds) the Mac goes to sleep.  And I have a second rule so that on a wake event the context 'Waking Up' is triggered and this has the action to set 'ToggleInternetSharing' on.  My Rules and Actions:  img src="https://i.stack.imgur.com/aA3yB.png" alt="enter image description here" img src="https://i.stack.imgur.com/cxoG3.png" alt="enter image description here"  Try it!  This is just scratching the surface of what ControlPlane can do.  <answer84110> You can use Power Manager to put your Mac to sleep after periods of inactivity. Power Manager can overrule processes and applications that block idle sleep, including Internet Sharing.  The user guide walks through how to set this up:     h2A Better Inactivity Triggered Sleep/h2      Power Manager offers an alternative. We provide an inactivity   triggered sleep. Inactivity is measured differently from idle time;   inactivity is a simpler measurement determined solely by user   activity.   Alternatively, the following recipe shows how to create a Power Manager event to put your Mac to sleep after a period of inactivity.  img src="https://i.stack.imgur.com/gn4Q8.png" alt="Power Manager: Power off after inactivity task"  Disclaimer: I work for the company who develop Power Manager.  <answer259262> h3It is not practical to have a Mac with Internet Sharing enabled be able to go to sleep./h3  The Internet Sharing feature is the software version of a router: It acts as a gateway to the internet, a DHCP server, a firewall, and a DNS forwarder.  It's functions just like the routers you can buy from your local retailer; and it's free.  However, there’s a massive downside: If the Mac that acts as the gateway is turned off or asleep, then the other machines can’t get online.  This is why Internet Sharing prevents your machine from going to sleep.  h3But I can share files/iTunes/Screen When It's Asleep/h3  Yes, you can share all those things, and more.  However, when you go to access those files your Mac emwakes up/em.  This is called strongemWake On Demand and Bonjour Sleep Proxy/em/strong.  When your Mac is asleep, it keeps the network connection somewhat "live;" it's listening on for the Bonjour "packets" to wake up the computer.  This is handled by the Airport device (the network adapter) itself; not the computer.  When it receives the "wake packet" the Mac wakes up and you can start of your sharing of resources.  Bonjoursup1/sup is a zero config  discovery service that uses multicast Domain Name Services (mDNS) which is a UDPsup2/sup protocol (it's broadcast and can't be routed) which is a small, stateless and minimal message-oriented transport.    Basically, UDP (what Bonjour is based on) is perfect to send a message to your computer to say "Wake up!"  In order to browse the Internt (use a computer behind the gateway Mac), you need the full protocol stack which is based on TCP.  It will need DHCP, NAT, firewall, etc. which means it will have to spin up all those services prior to allowing clients to browse the web.  This will introduce a great deal of latency.  And going back to a more pragmatic approach, if your Mac did go to sleep and acted as a gateway, it would either never go to sleep or would be up and down like someone with a bad case of insomnia.  hr sup1/supBonjour is Apple's implementation of zero-configuration networking (zeroconf), a group of technologies that includes service discovery, address assignment, and hostname resolution. Bonjour locates devices such as printers, other computers, and the services that those devices offer on a local network using multicast Domain Name System (mDNS) service records.  sup2/supUDP is a minimal message-oriented transport layer protocol. UDP provides no guarantees to the upper layer protocol for message delivery and the UDP layer retains no state of UDP messages once sent. It is simple, suitable for bootstrapping or other purposes without a full protocol stack, such as the DHCP and Trivial File Transfer Protocol.  <comment55462> This is indeed very useful, I use kbd^/kbd+kbd⇧/kbd+kbd⏏/kbd to do that. But it's not what I wish. I don't need Internet Sharing while the computer sleeps. I need the computer to really sleep and even turning sharing and the wifi off. Will edit my question to clarify. Thanks anyway =) <comment57465> My output to the command above is `DenySystemSleep`.  Although I found the string, I was unable to use `sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.nat` to change the behavior. Could you expand you answer a bit? <comment59642> So, for example, you want something that will turn off sharing, then sleep.  And something else that will, automatically on wake, turn on sharing. <comment60048> Exactly! This is what i need <comment96762> I believe @daniel-azuelos means to demonstration that InternetSharing is responsible. The command he suggests searches through the InternetSharing binary and finds the string related to blocking sleep. This helps confirm what is likely to be responsible for blocking sleep, but not for getting your desired behaviour. <comment96768> My output to the command above is `DenySystemSleep`.  Although I found the string, I was unable to use `sudo defaults write /Library/Preferences/SystemConfiguration/com.apple.nat` to change the behavior. Could you expand you answer a bit? <comment97420> → Graham : thank you ;). <comment99123> Amazing app! It worked like a charm! Many thanks for the detailed explanation. Also, I did check that the app is completely free and open source. For me this counts as a plus in favor of using it =) <comment99138> I have known about ControlPlane for some time, but not used it.  Your question was an excellent reason to explore its capabilities - thanks for that. <comment163495> +1 here... With `OS X Mavericks v10.9.4` and still works like a charm. Thank's <comment324247> Didn't work for me with Internet Sharing active. -1 for wasting an hour of my life. <comment324248> What did you want to achieve and what did not work for you? <comment324249> Same as the OP and your answer. I configured Inactivity Sleep, in hopes that it would 'Force Sleep' with Internet Sharing enabled in *System Preferences  Sharing*. It didn't, but it would activate sleep if Internet Sharing was disabled. <comment324250> Seems like a great application! Unfortunately, toggling Internet Sharing does not work in El Capitan for the time being (probably not in Sierra either). <comment324251> You can use [this inactivity timer script](https://www.dssw.co.uk/blog/2015-01-21-inactivity-and-idle-time/), linked at the bottom of the article, to see when your Mac is resetting the inactivity timer. It maybe the sharing process is forging user activity to keep your Mac awake. <comment324253> Given your other question, [Mac refuses to sleep: Reset PreventSystemSleep?](http://apple.stackexchange.com/questions/258759/), this appears to be a lower level problem with your Mac, rather than a problem with Power Manager. <comment324254> How so? I was having the same problem as the OP. Disabling Internet Sharing allowed the computer to natively sleep, and sleep with *Power Manager*. Having Internet Sharing enabled prevents both. Do you suggest that Power Manager *does* in fact override Internet Sharing, as your answer states? <comment324255> Power Manager issues a sleep request to macOS. If you are having problems with sleep, as the other question indicates, then the same sleep problems will also affect sleep requests issued by third party applications. Of course, I may be mistaken or simple wrong in my understanding of your situation. I hope you can find a solution. <comment324256> Disabling Internet Sharing enables the computer to sleep normally. The reason I tried *Power Manager* is because of this section in your answer to this question: ‘‘*Power Manager can overrule processes and applications that block idle sleep, including Internet Sharing.*’’ I'm assuming that the keyword here is ***idle*** sleep. My computer wouldn't sleep with Internet Sharing enabled, even if I told it to. I'm not sure if that is normal with Internet Sharing enabled, or if Internet Sharing is only supposed to block idle sleep. <comment324258> macOS will always sleep when explicitly asked to sleep – **Finder  Apple (menu)  Sleep**. Not sleeping is behaviour that suggests problems with the Mac. <comment324259> Ok, I'll take it on your word there (since I can't verify it). It does look like the OP has the same problem as me, given the description: *‘‘When I hit ⌘+⌥+⏏ (or   Sleep) neither computer goes to sleep as desired; that is unless I disable Internet Sharing first.’’* <comment324380> Allan, thanks for your insight. In my particular case, I only make use of Internet Sharing because of a MBP that I connect to my iMac via Thunderbolt Bridge to gain the advantage of Ethernet (100 Mbit instead of ~30 Mbit Wifi). I don't use Internet Sharing as a ‘router’. It would therefore be practical for me to find a way via script or automatisation to enable/disable Internet Sharing (or force sleep). <comment325339> Internet Sharing **is** turning your Mac into a router - that's the core function of what Internet sharing does. <comment325341> I understand, but I'm not speaking about it in technical terms. I make use of Internet Sharing only when connecting the MBP via Thunderbolt Bridge to the iMac, and it therefore doesn't make sense to have the iMac never go to sleep regardless if it's connected or not. Therefore looking for a workaround, perhaps involving scripting. <comment325343> Well, you're not going to overrule  Internet Sharing from preventing your MBP from going to sleep, but if you want a "workaround" look here:  http://apple.stackexchange.com/questions/2488/start-stop-internet-sharing-from-a-script <comment325355> Thanks - I've tried those answers already and haven't been able to get them to work with El Capitan (perhaps due to SIP), but will have to investigate further.