How can I obtain the Full Name of the currently logged in user via Terminal when run as root? <body> This command works great to list the Full Name out:  precodefinger $(whoami) | egrep -o 'Name: [a-zA-Z0-9 ]{1,}' | cut -d ':' -f 2 | xargs echo /code/pre  But, if you run it after a  precodesudo su /code/pre  It returns CVMS Root System Administrator  I'm wondering if there's perhaps another place to read the Full Name variable? Is there a User object somewhere that would list this out? I thought I was on to something with   precodedscacheutil -q user | grep -A 3 -B 2 -e uid:\ 5'[0-9][0-9]' /code/pre  But it doesn't look like Full Name is represented in that return data.  <answer269067> You can use dscl to read the RealName:    pre class="lang-none prettyprint-override"code$ dscl . -read /Users/grgarside RealName RealName:  George Garside /code/pre  The following will give you just what you're after. This uses ‘who am i’ to get the username, then sed to format the output.  pre class="lang-none prettyprint-override"code$ dscl . -read "/Users/$(who am i | awk '{print $1}')" RealName | sed -n 's/^ //g;2p' George Garside /code/pre  <answer269106> Needed a two-line approach:  precodeusername="$(stat -f%Su /dev/console)" realname="$(dscl . -read /Users/$username RealName | cut -d: -f2 | sed -e 's/^[ \t]*//' | grep -v "^$")" /code/pre  And then you can just echo out the realname variable.  <answer269187> Simply use codeid -P $(stat -f%Su /dev/console) | awk -F '[:]' '{print $8}'/code  codeid -P $(stat -f%Su /dev/console)/code yields:   precodeadminuser:********:501:20::0:0:AdminUser:/Users/adminuser:/bin/bash /code/pre  codeawk -F '[:]' '{print $8}'/code yields the 8th term (the "RealName") of an output separated by colons.  As proposed by fd0 you can alternatively use:  precodeid -P $(stat -f%Su /dev/console) | cut -d : -f 8 /code/pre  which is even more simple/elegant.  <comment337993> Thanks! Got me close enough that I figured it out from there! <comment337999> @Joodoo See edit, that's more streamlined. Also you should post your solutions as an actual answer rather than editing your question. <comment338007> @user ‘whoami’ returns root rather than the original user. Your awk command returns an empty line for me. <comment338009> @user Did you do ‘sudo dscl’? That doesn't run ‘whoami’ as root, only the dscl. Try ‘sudo whoami’ and it'll return root. <comment338011> @user Yup, whoami ran as the current user rather than with sudo, so you'll get the right username then, which you won't if you actually use the root user. I still only get a blank line with your awk command. <comment338046> I have added my own answer as well based on this. The edited command here does not help as whoami does not return the correct data when run as root. <comment338082> @Joodoo My edit uses ‘who am i’, not ‘whoami’. The former returns the correct username which is why I used it. <comment338139> When I run the second command in your answer at a `root# ` command prompt, it returns nothing, but `dscl . -read /Users/$(who am i | awk '{print $1}') RealName | awk '{print $2}'` reports correctly. <comment338141> @user I only get a blank line followed by "Garside" with your command. <comment338143> That's really strange! I can't explain why we are  getting different results. This part of it `dscl . -read "/Users/$(who am i | awk '{print $1}')" RealName` works but the `| sed -n 's/^ //g;2p'` part returns nothing. <comment338163> +1 for `id -P` though I would use `cut` instead of `awk` on the straight forward string. <comment338164> @fd0 Added as an alternative proposal. ;-) <comment340214> May I ask why you changed the accepted answer? Did you see the edit I had made to my answer? <comment340783> I did, but when I was working on this your edits probably weren't up yet, because I couldn't get your answer to work "out of the box." My answer is what I ended up actually implementing, so I know it works for my purposes. My original comment on your answer was "Thanks! Got me close enough that I figured it out from there!" which I stand by, since it did indeed give me the brain jumpstart I needed, so thank you very much for getting me on the right track :) <comment340788> No worries, thanks for letting me know