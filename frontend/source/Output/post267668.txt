Terminal login hangs <body> I have a strange issue on my new MacBook Pro (late-2016, touch bar).  It works fine and then, after using it for a while, opening new Terminal windows doesn't work because codelogin/code hangs. Rebooting fixes the problem.  This seems to be an issue some other people have had so I tried all of their solutions already (from [1] and [2]):  ol liRemoving code~/Library/Preferences/com.apple.Terminal.plist/code/li liSetting my default shell to another shell (from code/bin/zsh/code to code/bin/sh/code or code/bin/bash/code)/li liRemoving or cleaning my code.profile/code, code.zprofile/code, ... This does not work and I can validate that the issue occurs before the shell is even invoked, because if I codeecho HEY/code as the first line of my code.zshenv/code this is not even reached. It must be codelogin/code causing the troubles. Editing code/etc/profile/code to add an echo at the top also shows up nothing/li liChanging the codeRun command:/code setting in my Terminal config to something like codeecho foo/code also does not work (leaving codeRun inside shell/code checked or unchecked doesn't change anything)./li /ol  h3Other notes:/h3  ul liLike [2], codessh-add -K/code does not persist keys between reboots, something I never had troubles with before./li liThe console does not show any suspicious errors or warnings./li liOpening a new codeTerminal/code window does seem to create tty file (code/dev/ttys&lt;number&gt;/code)./li liWhen this occurs, it does not matter if I use Terminal.app or iTerm.app/li liI have a pretty clean install (just got my laptop, didn't restore any backups, just installed some apps with codebrew install/code and codebrew cask install/code)./li /ul  This is really hard to debug because I cannot reproduce it and often I can't open a new terminal to even try to find out what's going on.  Does anyone have any tips?  h3Update:/h3  Using iTerm, I was able to get a shell by setting the start command to code/bin/bash/code. In this shell, however, codesudo/code does not work. It hangs (without showing the prompt) and codectrl-C/code and codectrl-D/code do no work when it hangs.  Using emsome/em other programs also does not work in this shell: codenode/code or code/usr/local/bin/node/code both hang. As far as I can tell, it's programs that are incode/usr/local/bin/code.  h3Update 2:/h3  codebrew list --full-name/code results in these packages:  precodeautoconf automake blueutil boost cabal-install cairo cfssl cmake coreutils doxygen editorconfig erlang ffind ffmpeg flow fontconfig fontforge freetype gdbm gettext ghc git glib go gobject-introspection graphicsmagick harfbuzz haskell-stack highlight icu4c influxdb jemalloc jpeg keybase lame libevent libffi libpng libtermkey libtiff libtool libuv libvterm libxml2 lua mongodb msgpack nginx node openssl openssl@1.1 pango pcre pixman pkg-config postgresql protobuf python python3 rabbitmq readline reattach-to-user-namespace redis sqlite the_silver_searcher thefuck tmux unibilium unixodbc wxmac x264 xvid xz yarn z zsh josegonzalez/php/php54 neovim/neovim/neovim /code/pre  h3Update 3:/h3  These points are in correspondence with @Monomeeth's answer:  ol liWhen it happens, a codelogin/code item does show up in activity monitor. (Force) Quitting it also closes the Terminal window that was hanging. Closing the window manually does not make the codelogin/code process go away in the Activity Monitor./li liThe terminal title is codeTerminal — login — term big — ttys001 — 89x18 —  ⌘1/code, where codeterm big/code is the settings name./li liThere's no codesudo/code process showing up in the Activity Monitor. I can create a codesudo/code process by opening iTerm.app (which uses bash) and running codesudo echo ok/code there. It can not be Quit, but Force Quit works and kills it: code bash-3.2$ sudo echo ok Killed: 9 /code/li /ol  <answer269286> As I'm sure you know, troubleshooting is a process of elimination and often requires a fair bit of patience. I'd like to try a few things to try and get to the bottom of this for you.  strong1. Confirm it hangs during login/strong  If the process it's hanging at is really during emlogin/em, this implies that the process is still waiting to create a login session. Assuming this is the case, then it wouldn't have tried to start the shell yet.   To confirm this, the next time you experience this issue launch Activity Monitor to check if the shell is running or whether you only see a emlogin/em process.   Once you've had a chance to do this, report back with what you found.  strongNOTE:-/strong If you happen to have other terminals open, make sure you're checking the corresponding process. My guess is that the emhanging/em process is the one with the highest Process ID (PID) number.  strong2. What is the Terminal title?/strong  The next time you have this issue can you take a note of what the title of the Terminal window is and report back?  strong3. Kill sudo/strong  You state that rebooting your MBP always resolves this issue.  However, the next time you have this issue (maybe after doing what I described at 1 above), I'd like you to try killing sudo from Activity Monitor.   Once you've tried this, let us know what happens.  strong4. Try moving your .bash* files/strong  It is possible (for various reasons) you may have a .bash_profile file in your user directory and this is causing intermittent problems. This is something you may not even be aware of, but you can use Automator to run a script that finds and moves any .bash files.  Here is an example script for doing this:  precodecd ~  mkdir moved for F in .bash* do     mv $F moved done /code/pre  This script moves all files starting with .bash in your home folder to a newly created emmoved/em subfolder.   After running the script, check this folder and let us know if in fact you have any files in it.  strongNOTE:-/strong You can label the new subfolder anything you want. To do so, just change the two occurrences of emmoved/em in the script to whatever label you'd like to use.  strong[UPDATE]/strong  Some more things to try.  strong5. Try clearing the *.asl files/strong  If you haven't already, try clearing out the *.asl files. To do this use the following:  precodesudo rm -rf /private/var/log/asl/*.asl /code/pre  strongNOTE:-/strong This may take some time as it creates a new shell. When complete, make sure you fully quit the Terminal for the changes to take affect.  strong6. Safe Mode/strong  Do you notice any difference in behaviour when you start your MBP in Safe Mode? To boot into Safe Mode:  ol liFully shut down your Mac/li liRestart your Mac/li liImmediately press the kbdShift/kbd key and strongkeep it down/strong /li liLet go of the kbdShift/kbd key when you see the login window (NOTE: If you have FileVault enabled you may need to log in twice)./li liOnce your MBP starts up try using Terminal and see if you can still replicate the issue?/li liWhen finished, you can exit Safe Mode by restarting your MBP as normal/li /ol  strong7. Open Directory/strong  This probably doesn't apply in your case since you don't mention it, but if you're connected to an Open Directory network this could also be causing you problems. Usually this would only entail waiting for about 10 - 15 seconds, but I have seen reports of terminal logins taking five or more minutes to complete in this situation.  <answer269837> It's important to treat the real issue and not just the symptom. So try out the following suggestions and update so based on that can suggest further remedies as well.  ol listrongWhich user owns the terminal?/strong: br/My first hunch is that this can be related to how your account is set up. If terminal is trying to access the resources or directories that only the admin user can (if your's is a non admin account), then that can lead to freezing state - not allowing you to access the terminal. So go ahead and ensure when you begin a terminal session, it is local to your user and not another user. The fact that you cannot create a sudo process, is pointing me to this direction./li listrongType Control-Z/strong or Command-Z: br/ This control key sequence suspends a program that may be running and gives you a shell prompt. Now you can enter the jobs command to find the program’s name, then restart the program with fg or terminate it with kill./li listrongPress Command-C/strong: br/ This will interrupt if the terminal is trying to run a program in the background. Try it a couple of times. Note if you see any output/li listrongType Control-Q/strong: br/ If output has been stopped with Control-S, this will restart it./li listrongGet an Alternative shell/strong: br/ If you want to try out a different shell for a few days, their behaviors may sometimes help you understand the problem with Terminal given if they act in a certain way. Check these links below for alternatives/li /ol  https://git-scm.com/downloads/guisbr/ https://computers.tutsplus.com/tutorials/beyond-terminal-4-os-x-terminal-alternatives--mac-56217  Will help to know the following, if not mentioned already:  ul liHow are you initiating the terminal session? Is this via spotlight or a desktop icon or some other way?/li liWhat is the terminal doing when it hangs? Is it in the middle of executing a command (Same command each time before it hangs) or it just hangs from the moment you start a terminal session/ windows./li liWhat do you usually use your terminal for? If a majority of your use is for git related commands only, I would suggest using Something like Github for Mac as you can usually do most of the things from there./li /ul  <answer270087> This seems like a perfect fit for you exceeding the maximum processes per user (or possibly max processes).  On a stock macOS installation you get 709 per user (codeulimit -u/code) and 1064 max processes (codesysctl -a | grep maxp/code)  An easy way to bump these up is to install Server.app from the App Store and then reboot. You can also set performance mode for higher limits.  Since you didn't describe your setup (OS version and build), here are some tips - be sure to check for SIP restricting your ability to change files if you read some of the older articles on changing the limits without resorting to installing server.app:  ul liHow do I increase &quot;ulimit -u&quot; (max user processes)?/li lihttp://blog.dekstroza.io/ulimit-shenanigans-on-osx-el-capitan//li lihttps://support.apple.com/en-us/HT3854/li lihttps://support.apple.com/en-us/HT4022/li lihttps://serverfault.com/questions/15564/where-are-the-default-ulimits-specified-on-os-x-10-5/li /ul  <answer270155> I would try to do disable SIP and dtrace login to find the root cause (To disable and re-enable SIP, see http://osxdaily.com/2015/10/05/disable-rootless-system-integrity-protection-mac-os-x/)  precode$ csrutil status System Integrity Protection status: disabled. $ cp /usr/bin/login /tmp $ sudo dtruss /tmp/login /code/pre  hr  Trying to give you an example output, i just found out that things are much simpler than i thought. No need to disable SIP, just copy login.  dtuss will return the system calls and it might give a hint at where things go wrong.   precodecp /usr/bin/login . sudo ls /code/pre  give your password. Then do  precodesudo dtruss -d -e ./login 2&gt; dtruss_login.txt /code/pre  enter your username, press enter  enter your password, press enter  enter 'exit', press enter  and finally upload dtruss_login.txt to e.g. https://gist.github.com/  You can copy the contents of the file to the clipboard like this  precodecat dtruss_login.txt | pbcopy /code/pre  You can find an example login here : https://gist.github.com/wolframteetz/49c5188c9dfe68a3841fa18496679579  The second integer in each line is the time the call took.  Of course, it would be great if you could run this when the login hangs, but if I get you right, this is impossible.... maybe you or someone else has an idea on how to 'dtruss login' when the terminal hangs?  <answer285420> I have also been seeing this for several months now. Extremely frustrating. Only thing that fixes it is reboot.  ul liMid 2015 MBP (no touch bar)/li liMacOS 10.12.6 beta/li /ul  Sometimes the login hangs happen after interacting with tmux.  I have unsuccessfully tried all the recommended approaches.  Not sure if it's related, but a codelsof -p LOGIN_PID/code shows a pretty massive file code/private/var/db/dyld/dyld_shared_cache_x86_64h/code for the hung login process.  <comment338244> This might be a lame suggestion, but have you tried contacting Apple Customer Support? Your question hasn't gotten much attention since you posted it, and their support staff may have heard about this problem. My only other suggestion would be to reinstall MacOS. However, since your Mac is so new, I don't know if this would work. <comment338305> Thanks! I'm using `zsh`, and even with an empty `.zshrc`, `.zprofile`, `.profile`, etc id does not occur, plus that does not explain why other programs in `/usr/local/bin` also hang, so I think *4.* is out of the picture. I'll get back with the answer to the other questions once I get them. <comment338306> @klanomath done! <comment338465> Added an update with the answers to these questions. `login` seems to be the culprit, but it still does not explain why it does work in iTerm with `bash`. <comment338753> To figure out what login is doing, select it in Activity Monitor and choose Sample Process. The same goes for other processes that are hung. However, this level of debugging may not be appropriate for a StackExchange Q&A. It may be better to either file a bug report with Apple including the sample file, or to find someone who can offer support for diagnosing the issue at this level. See https://developer.apple.com/bug-reporting/ <comment338756> How long does it hang? Have you tried leaving it running for ten minutes? Is your machine bound to an Open Directory network? In particular, login has to fetch your user information, and if you're on an OD network with a busy/unresponsive directory server, it could take a couple of minutes to respond; other programs also fetch user information and could suffer from this issue. <comment339196> Haven't tried waiting longer, will try it next time. I'm not bound to an Open Directory network, these errors occur also when I'm not on any network. <comment339364> I've updated my answer. However, I just realised that you haven't indicated how long you've tried waiting for the Terminal login to complete? It would be good to know if it does eventually log in, or whether it just hangs indefinitely. <comment339429> Ctrl-Z and Ctrl-C both just show up on the screen as `^Z` and `^C`, Ctrl-Q does nothing. I usually open the shell using Command-N in Terminal. I'm a full-time programmer, so I use the terminal for everything basically. The terminal hangs before anything is executed (on `login`). <comment339460> @romeovs What about Pointer 1 about what is your user type? A screenshot with the issue would help as well. Thanks <comment339515> Excellent point! I hadn't even considered this. :) <comment339568> @Monomeeth your answer is awesome.  Lots of great things in it. <comment339569> Ouch. This seems like a lot of pain for something that happens hours or days after the log in starts. Can you narrow down what `dtruss` might capture and show? <comment339651> If login hangs in a system call, which is quite probable, it will show you. If it hangs between system calls, it will show you between which, and give you a hint on what's actually going on. e.g. if it hangs after it reads a certain configuration file by a system call, the error most probably occurs during parsing that configuration. You need to take a close look at it then. Might also be network related... who knows until you debug it ;) <comment339912> I'm the default user and admin on my macbook. <comment339913> The problem is I can not manually reproduce the problem until it is too late. <comment339914> @bmike Is there a way I can check the total number of processes to check that this is the case? Maybe I can even reproduce it by creating 709 processes then? <comment340236> Then execute the command in a loop "forever" and do " dtruss_login.txt 2&1" instead of "2 dtruss_login.txt". Once the error appears, you will see in in the end of the output. <comment340628> @romeovs Just wondering, did you ever resolve this issue? <comment340718> nope :( still working on it. It has started to occur a lot less though. <comment343215> I finally was able to get a dtruss log: https://gist.github.com/romeovs/6661ae0db77e57281b531676cc5dc007 Since login hangs, this never exits, so I ctrl-C'ed after about 10s. <comment343268> You didn't even enter your user name.... so you mean you never even get a login prompt? Because up to that point, everything looks perfectly normal in the dtruss... it looks like you just ctrl-c'ed when you were supposed to enter your user name. <comment347957> @user2707001 But I never need to enter my username, this is Terminal.app? <comment347970> What do you mean you never need to enter your username? When you write "login" in "Terminal.App", it sais "login: " and you need to give your user name, press cr. Then it sais "Password:", and you need to give your password. After this, you will get "Last login : ... and a prompt". If you "dtruss" it, the output will not be written to screen, so you won't see anything, but you still need to enter your username, press enter, password, press enter to complete the login process and see where it hangs. Just repeat what you did and, without seeing anything, enter username, enter, password, enter. <comment359844> Thanks a lot for adding many precise suggestions. I had the same problem, and just restarting my mac worked for me :)