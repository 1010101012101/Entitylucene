How to stop 'locate' from using databases for unmounted volumes? <body> Despite the claim made in the answer to this question:  ul liCan Spotlight show results for disconnected drives?/li /ul  This is exactly the behaviour I am seeing and I don't want it!  E.g.  precodewms:~ alan$ ls /Volumes MobileBackups   Tamandua     wms:~ alan$ locate /usr/texbin /Volumes/AlanG5Backup/Previous Systems/Previous System 1/usr/texbin /Volumes/AlanG5Backup/Previous Systems.localized/2009-07-10_1136/usr/texbin /Volumes/MacBookBackup/usr/texbin /code/pre  codeAlanG5Backup/code and codeMacBookBackup/code were partitions that I had previously mounted, but (as the output from codels /Volumes/code shows) were not mounted when I ran the codelocate/code command.  Furthermore, the current volume (Tamandua) doesn't show any codelocate/code results at all, which it should.  How do I fix this?  I'm running 10.9.  <answer111014> strongcodelocate/code is not equivalent to codeSpotlight/code/strong.   Having said that, lets look at the meat of your question:  You can try to force an update of the locate db using codesudo /usr/libexec/locate.updatedb/code which will rebuild the locates database.  I would check the codemanpage/code for locate for additional options regarding other volumes as I believe there is a flag to stay on the current filesystem from locate but it escapes me at the moment. Locate Man Page for 10.9  Having looked at it the best thing I can come up with is to use a regular expression that won't visit another filesystem or to create seperate databases for each.  Another option is to use the codefind/code command which can be told to stay on the current filesystem code-x/code on BSD, code-xdev/code in linux.  <comment130675> Thanks. Updating the database cleared up the problem, but it's still odd that it happens in the first place. <comment130689> When the locate updater run last, the external drives were attached and therefore indexed. `locate` just looks in the database for any matches and doesn't take mount/unmount status into account at all.