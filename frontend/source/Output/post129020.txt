Ejecting all network drives via Applescript/Automator/Shell? <body> I use the following script to attempt to eject all disks that aren't internal:  precodetell application "Finder"     eject (disks whose ejectable is true) end tell /code/pre  This has the advantage of skipping volumes like codeMobileBackups/code as well as several others.  Unfortunately, it doesn't eject network shares.  Is there any way to get connected network shares in applescript?  As a +1, ideally this would skip things like optical disks as well.  strongEDIT/strong: Both answers so far have shared ways to eject emspecific/em network disks. This, of course, is easy and I know how to do it. What I'm specifically asking for is a way to attempt to eject every disk other than system internal disks, regardless of their name.  <answer129027> I use Automator. I inserted 'Get Specified Finder Items', and named the target disks that I wanted to 'Get'. Only those named get chosen, but network drives do work. I then pipe this to 'Eject Disk'.   That's it.  img src="https://i.stack.imgur.com/TTHId.png" alt="enter image description here"  <answer129046> Or you could just call the shell command..  precodedo shell script "/usr/sbin/diskutil unmount /Volumes/some_network_share" /code/pre  Note that this might fail if you have open files so you can add codeforce/code as such  precodedo shell script "/usr/sbin/diskutil unmount force /Volumes/some_network_share" /code/pre  <answer129058> The command line utility code/sbin/umount/code may be another solution to what you're looking for. The Mac OS keeps an alias to each of your mounted disks in a folder /Volumes. You can use this to your advantage and amount a drive listed there:  precode$ umount /Volumes/Video /code/pre  So you might want to create a shell script that lists the contents of /Volumes and attempts to eject them all, like this one:  precodefor var in `ls /Volumes` ; do echo Ejecting /Volumes/$var umount /Volumes/$var done /code/pre  It will, however, fail to eject drives that cannot be ejected, like the current startup disk.  <answer129070> This will only eject all network volumes:  precode$ find /Volumes -maxdepth 1 -not -user root -print0 | xargs -0 umount /code/pre  <answer129250> Easily done by using the code-t/code option of the codeumount/code command. From the man page which you can read using codeman umount/code:  precode-t type              Is used to indicate the actions should only be taken on filesys-              tems of the specified type.  More than one type may be specified              in a comma separated list.  The list of filesystem types can be              prefixed with ``no'' to specify the filesystem types for which              action should not be taken.  For example, the umount command:                     umount -a -t nfs,hfs /code/pre  So,  precodedo shell script "/sbin/umount -a -t nfs,smbfs" /code/pre  should umount all NFS and Windows/Samba shares mounted.  EDIT: You may also want to use the code-f/code option to force the action. Read the man page for details.  EDIT2: Apologies, umount isn't behaving as advertised, at least on my Snow Leopard. So I'd do it like this remembering to change codemsdos/code to your desired filesystem type:  precodeset mounts to {} set mounts to paragraphs of (do shell script "mount | grep msdos | cut -d ' ' -f3")  # Umount non busy filesystems repeat with mount in mounts     set pid to (do shell script "fuser -c " &amp; mount)     if pid is equal to "" then         # We use diskutil since classic unix umount cmd needs sudo/password          do shell script "diskutil umount " &amp; mount     end if end repeat /code/pre  HTH  <answer164856> If you want an AppleScript, I adapted the script posted at: Shortcut to eject all external hard drives but not MobileBackups  to this, and it works great.  I've placed the applet for this in my dock to use right before I unplug.  precodeset exceptionsList to {"MobileBackups", "startup disk", "home", "net"} tell application "Finder"     set diskList to the disks     repeat with mountedDisk in diskList         if name of mountedDisk is not in exceptionsList then             eject mountedDisk         end if     end repeat end tell /code/pre  <comment153145> How can I find out what type of filesystem a disk was mounted with? <comment153496> The `mount` command will display all the mounted filesystems.  In the output, the first word after the bracket is the filesystem type.