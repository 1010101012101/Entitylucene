Mac OS X Terminal creates zero byte files <body> I'm a font developer. I want to merge a DSIG code into a TrueType format (TTF) font, which makes it compatible with Microsofts applications that use OpenType features. I have had this working before but have now can only produce a zero bytes font.ttf file. I'm using Adobe Font development Kit (AFDKO). as prescribed along with Terminal to make the merge. I would appreciate knowing why I get a zero bytes file?  Here is my step-by-step method, followed by the resulting Terminal window code.  ol liLaunch a new Terminal session and enter  precodewhich ttx /code/pre  A path ending in ttx means good to go./li liPaste this snippet…  precodeFLDR="${HOME}/Desktop/Dsig fldr" mkdir -p "$FLDR" cd "$FLDR" cat &gt; dsig.ttx&lt;&lt;EOF &lt;?xml version="1.0" encoding="ISO-8859-1"?&gt; &lt;ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="2.4"&gt; &lt;DSIG&gt; &lt;hexdata&gt; 00000001 00000000 &lt;/hexdata&gt; &lt;/DSIG&gt; &lt;/ttFont&gt; EOF /code/pre  then after entering the return key:  precodeopen . /code/pre/li /ol  This creates a new Folder on the Desktop entitled ‘Dsig fldr’. Inside will be a newly created file entitled ‘dsig.ttx’ for use with this routine:  ol start="3" liDrag TTX app to Terminal  (since it accepted your Dsig fldr snippet):  precode/Users/adrianshome/Downloads/fonttools-2.4/Tools/ttx /code/pre/li liType: -m (not forgetting a space after the m).  precode/Users/adrianshome/Desktop/Dsig\ fldr/SassoBooIta.ttf /Users/adrianshome/Desktop/Dsig\ fldr/dsig.ttx /code/pre/li /ol  First remove all of the dsig#.ttf files in the Dsig fldr if there are any.  Then for each font file:  ol start="5" liDrag the ttf font file to terminal (say SassoBoo.ttf)/li liDrag dsig.ttx to terminal and hit return/li /ol  That will compile only dsig.ttx, merge the DSIG into SassoBoo.ttf and produce a file named dsig.ttf in the Dsig fldr, so now…  ol start="7" liRename dsig.ttf as SassoBoo something.ttf (the original TrueType filename)/li /ol  There are much better ways to proceed using scripts.  Don't switch steps 3 and 4. You need to put the .ttf file before the .ttx file.  Notes: dsig.ttx and all your .ttf files must reside in the Dsig fldr Folder. TTX app can live anywhere, since the drag of it inserts the path each time.  hr  Here is the resulting Terminal code:  precodeLast login: Thu Mar 31 11:41:06 on ttys001 Adrians-iMac:~ adrianshome$ which ttx /Users/adrianshome/bin/FDK/Tools/osx/ttx Adrians-iMac:~ adrianshome$ FLDR="${HOME}/Desktop/Dsig fldr" Adrians-iMac:~ adrianshome$ mkdir -p "$FLDR" Adrians-iMac:~ adrianshome$ cd "$FLDR" Adrians-iMac:Dsig fldr adrianshome$ cat &gt; dsig.ttx&lt;&lt;EOF &gt; &lt;?xml version="1.0" encoding="ISO-8859-1"?&gt; &gt; &lt;ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="2.4"&gt; &gt; &lt;DSIG&gt; &gt; &lt;hexdata&gt; &gt; 00000001 00000000 &gt; &lt;/hexdata&gt; &gt; &lt;/DSIG&gt; &gt; &lt;/ttFont&gt; &gt; EOF Adrians-iMac:Dsig fldr adrianshome$ open . Adrians-iMac:Dsig fldr adrianshome$ /Applications/FDK/Tools/osx/ttx  -m /Applications/Dsig\ fldr/CUP\ Folder\ alpha/SassPenTra.ttf /Users/adrianshome/Desktop/Dsig\ fldr/dsig.ttx  Compiling "/Users/adrianshome/Desktop/Dsig fldr/dsig.ttx" to "/Users/adrianshome/Desktop/Dsig fldr/dsig.ttf"... Parsing 'DSIG' table... Traceback (most recent call last): File "/Applications/FDK/Tools/osx/../SharedData/FDKScripts/ttx.py", line 329, in &lt;module&gt; main(sys.argv[1:]) File "/Applications/FDK/Tools/osx/../SharedData/FDKScripts/ttx.py", line 309, in main process(jobs, options) File "/Applications/FDK/Tools/osx/../SharedData/FDKScripts/ttx.py", line 294, in process action(input, output, options) File "/Applications/FDK/Tools/osx/../SharedData/FDKScripts/ttx.py", line 216, in ttCompile ttf.save(output) File "/Applications/FDK/Tools/osx/Python/Current/lib/python2.7/site-packages/FontToo ls/fontTools/ttLib/__init__.py", line 214, in save self._writeTable(tag, writer, done) File "/Applications/FDK/Tools/osx/Python/Current/lib/python2.7/site-packages/FontToo ls/fontTools/ttLib/__init__.py", line 629, in _writeTable tabledata = self.getTableData(tag) File "/Applications/FDK/Tools/osx/Python/Current/lib/python2.7/site-packages/FontToo ls/fontTools/ttLib/__init__.py", line 642, in getTableData return self.tables[tag].compile(self) File "/Applications/FDK/Tools/osx/Python/Current/lib/python2.7/site-packages/FontToo ls/fontTools/ttLib/tables/D_S_I_G_.py", line 60, in compile packed = sstruct.pack(DSIG_HeaderFormat, self) File "/Applications/FDK/Tools/osx/Python/Current/lib/python2.7/site-packages/FontToo ls/fontTools/misc/sstruct.py", line 68, in pack value = obj[name] KeyError: 'ulVersion' /code/pre  <answer233235> It's not the Terminal which creates the zero byte file but a bunch of Python scripts which either don't like your ttf font or the dummy DSIG file. Or the original ttf file already contains a digital signature!  The best you can try is the following:  Dump the copied ttf file (in my example I copied the TrueType font file emAndale Mono.ttf/em to a folder named FontMod on my desktop):  precodettx /Users/user/Desktop/FontMod/Andale\ Mono.ttf /code/pre  Remove or rename the original ttf file in the working folder. Open the resulting ttx file with a decent text editor like TextWrangler, BBEdit or even nano.  If the ttx file doesn't contain a code&lt;DSIG&gt;...&lt;/DSIG&gt;/code section simply add the below snippet at the end just in front of the closing code&lt;/ttFont&gt;/code tag.  precode  &lt;DSIG&gt;     &lt;!-- note that the Digital Signature will be invalid after recompilation! --&gt;     &lt;tableHeader flag="0x1" numSigs="1" version="1"/&gt;     &lt;SignatureRecord format="1"&gt; -----BEGIN PKCS7----- 0000000100000000 -----END PKCS7-----     &lt;/SignatureRecord&gt;   &lt;/DSIG&gt; /code/pre  and save the result.  If the ttx file already contains a DSIG section you may try to replace the PKCS7 part:  precode  &lt;DSIG&gt;     &lt;!-- note that the Digital Signature will be invalid after recompilation! --&gt;     &lt;tableHeader flag="0x1" numSigs="1" version="1"/&gt;     &lt;SignatureRecord format="1"&gt; -----BEGIN PKCS7----- MIIllQYJKoZIhvcNAQcCoIIlhjCCJYICAQExCzAJBgUrDgMCGgUAMGEGCisGAQQBgjcCAQSgUzBR ... tCPnxeRQVRtMEWQXYd27Fkhu/dLhBloN2ti3CGPKPTneEW7TrcwcpUH4yvX9gyzjXQ== -----END PKCS7-----     &lt;/SignatureRecord&gt;   &lt;/DSIG&gt; /code/pre  by   precode  &lt;DSIG&gt;     &lt;!-- note that the Digital Signature will be invalid after recompilation! --&gt;     &lt;tableHeader flag="0x1" numSigs="1" version="1"/&gt;     &lt;SignatureRecord format="1"&gt; -----BEGIN PKCS7----- 0000000100000000 -----END PKCS7-----     &lt;/SignatureRecord&gt;   &lt;/DSIG&gt; /code/pre  and save the result.  In either case rebuild the font file:  precodettx /Users/user/Desktop/FontMod/Andale\ Mono.ttx /code/pre  hr  If you still need a snippet to create a disg.ttx file use something like that:  precode... cat &gt; dsig.ttx&lt;&lt;EOF &lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;ttFont sfntVersion="\x00\x01\x00\x00" ttLibVersion="3.0"&gt; &lt;DSIG&gt; &lt;!-- note that the Digital Signature will be invalid after recompilation! --&gt; &lt;tableHeader flag="0x1" numSigs="1" version="1"/&gt; &lt;SignatureRecord format="1"&gt; -----BEGIN PKCS7----- 0000000100000000 -----END PKCS7----- &lt;/SignatureRecord&gt; &lt;/DSIG&gt; &lt;/ttFont&gt; EOF /code/pre  strongPlease note that the emxml encoding/em and the emttLibVersion/em probably have to be adapted to the respective versions in the ttf file./strong  <comment285021> I'll try to edit this so the formatting is more clear - you might need to re-enter some of the details if I mess up, though... <comment285024> It looks like there were some spaces added and extra line breaks. One thing to try would be to use a text editor to check or re-do the file on the `cat` step. It looks like you have a sequence of digits then a line break before the file ends. You might try `nano` for editing that file since it doesn't encode the text and has on-screen help. Also - do you have a working example to check against the one that fails?