Check if caps lock on in terminal <body> Is there a way to query the system to tell if the caps lock is on or is off from the command line in terminal.app?  <answer210791> If you have XQuartz installed and either running or don't mind it launching, you can run: codexset -q/code  precodeKeyboard Control:   auto repeat:  on    key click percent:  0    LED mask:  00000000   XKB indicators:     00: Caps Lock:   off    01: Num Lock:    off    02: Shift Lock:  off     03: Group 2:     off    04: Mouse Keys:  off    05: Scroll Lock: off /code/pre  <answer210803> There is a great command line code written by Stefenk on Macscripter   Stefen's code allows you to detect for cmd, option, control, shift, and caps lock.  In his post he provides the code and a download zip of it.  You can either download it or build your own in Xcode using foundation project.  I just tested both ways in El Capitan and they both work.  The code if you want to build your own in Xcode.app is:  precode#import &lt;Carbon/Carbon.h&gt;  int main(int argc, const char * argv[]) {     @autoreleasepool {         unsigned int modifiers = GetCurrentKeyModifiers();         if (argc == 1)             printf("%d\n", modifiers);         else {             int i, result = 1;             for (i = 1; i &lt; argc; ++i) {                 if (0 == strcmp(argv[i], "shift"))                     result = result &amp;&amp; (modifiers &amp; shiftKey);                 else if (0 == strcmp(argv[i], "option"))                     result = result &amp;&amp; (modifiers &amp; optionKey);                 else if (0 == strcmp(argv[i], "cmd"))                     result = result &amp;&amp; (modifiers &amp; cmdKey);                 else if (0 == strcmp(argv[i], "control"))                     result = result &amp;&amp; (modifiers &amp; controlKey);                 else if (0 == strcmp(argv[i], "capslock"))                     result = result &amp;&amp; (modifiers &amp; alphaLock);             }             printf("%d\n", result);         }     }     return 0; } /code/pre  ----------( update -  If you want to compile it from Terminal.app  Put the code into a plain text file. I just used TextEdit.app and a Plain text document.  cd to the same directory as your file.  Make sure that the extension is .m ( .c will be ok also)  Then Run.  precodegcc  -framework Carbon CheckModKeys.m -o CheckModKeys /code/pre  CheckModKeys.m is your file.  CheckModKeys  is the name of the app to be outputted.  &lt;-)  hr  To detect caps lock your command would look something like:  precode/Users/UserName/MyFolder/CheckModKeys  capslock /code/pre  a 1 or 0 will be returned.  1 for on  0 for off  hr  All credit goes to Stefen. I just remembered he posted this way back in`2009. And it still works today..  <comment254421> I don't have `xset` on El Capitan using a default user account in bash. Is this part of a specific shell or something you have to install to have the command work? <comment254423> Wouldn't typing one letter show you immediately the status of the caps lock? What's the actual use of this information. Perhaps you're asking about [the XY problem](http://meta.stackexchange.com/questions/66377/what-is-the-xy-problem)? <comment254431> @bmike, `xset` is part of `X11` which is not installed by default.  You can get it here: [XQuartz](http://xquartz.macosforge.org/trac/wiki) <comment254433> @Mikey T.K., The problem IMO with using `xset` is it causes XQuartz.app to open for it (`xset) to run in a Terminal.  To me this is undesired behavior as I'd just want a CLI utility that runs like any other BSD command. <comment254438> What exactly are you trying to accomplish? There are third-party utilities that can tell you the state of the modifier keys however nothing native (installed by default) that I know of, but that doesn't mean there isn't. <comment254439> I am using the LED to indicate that the input source is Greek. I want it to be off only if input source is English and caps lock is off. <comment254448> @Lawrence Now that's a cool setup. If you wanted to add that to the question - awesome. I bet lots of people would love to know how you accomplished that modification. <comment254451> Thanks! How do I compile this? I tried `gcc -o getmod getmod.c` but that returned  `getmod.c:4:5: error: expected expression     @autoreleasepool {     ^ 1 error generated. ` <comment254452> I used Karabiner and busyloop/maclight from Github. <comment254480> @Lawrence  see updated answer <comment254484> Please add your two last interesting comments within your original question. This will save you time and answers out of spot. <comment254830> I still get: `` Undefined symbols for architecture x86_64:   "_objc_autoreleasePoolPop", referenced from:       _main in main-93f6a5.o   "_objc_autoreleasePoolPush", referenced from:       _main in main-93f6a5.o ld: symbol(s) not found for architecture x86_64 clang: error: linker command failed with exit code 1 (use -v to see invocation) `` <comment254842> what OS are you doing this on <comment254844> El Capitan. Just installed XCode for the purpose (though there was some version of gcc pr√¶sent from before). <comment254854> What do you get if you enter `gcc --version` in terminal. <comment254860> Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.11.sdk/usr/include/c++/4.2.1 Apple LLVM version 7.0.0 (clang-700.0.72) Target: x86_64-apple-darwin15.0.0 Thread model: posix <comment254861> Thats look right so it is def. picking up the right gcc. Are able to take this to a chat. and show me the code you are using. <comment254862> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/30336/discussion-between-lawrence-and-markhunte). <comment255670> Better remap Caps Lock altogether to something else, e.g. `Control`. It usually creates much confusion.