How to use logger command on Sierra? <body> I'm trying to log events/check-points from my shell-script using codelogger/code.  How to use codelogger/code or codesyslog/code utility in strongOS X (version 10.12 (16A323))/strong. I have tried   codelogger "Hello world"/code and checked code/var/log/system.log/code using Console app, the following was the log entry created     Failed to harvest strings for binary named '–Xó^H'   How to use codelogger/code in OS X ? Is there anything to be specified to create/add an entry to OS X system log ?  <answer256777> This is no real answer but a workaround and too long for a comment.  I faced the same problem in Sierra trying to log a homebrew update shell script including emlogger/em commands (which worked in El Capitan). I had to abandon emlogger/em and simply used echo, output redirection and a new log file:  precode#!/bin/bash  Brew=/usr/local/bin/brew Brewup_Log=/Users/user/Library/Logs/brewup.log  echo "$(date "+%Y.%m.%d %H:%M:%S")" &gt;&gt; $Brewup_Log 2&gt;&amp;1 $Brew update 2&gt;&amp;1 &gt;&gt;$Brewup_Log .... /code/pre  <answer257338> Because Apple's logging system changed in macOS sierra. They are moving from the Apple System Log facility to unified logging.  here's a link to the developer documentation.  The following filters the new unified log for text "Message4me"  precode$logger -is -t LogTest "Message4Me"  Oct 15 13:19:27  LogTest[51173] &lt;Notice&gt;: Message4Me  $log show --predicate 'eventMessage contains "Message4Me"' --last 3m  Skipping info and debug messages, pass --info and/or --debug to include. Filtering the log data using "eventMessage CONTAINS "Message4Me"" Timestamp                       Thread     Type        Activity             PID     2016-10-15 13:19:27.666574+0900 0x33b62c   Default     0x0                  51173  logger: Message4Me  -------------------------------------------------------------------------------------------------------------------- Log      - Default:          1, Info:                0, Debug:             0, Error:          0, Fault:          0 /code/pre  =======  If you add --info you will see the event message itself in the output as well.  In the previous OS versions the logger command would send to the /var/log/system.log  file if the priority was high enough (e.g. using -p alert) as well as to the syslog database. In Sierra the system.log is not written to when logger is used with -p alert -not in 10.12.1 anyway.  This could be a bug.  You can still use logger to send to he new logging system, but will have to use the Console app or the cli log utility or the new API to see the results.  <answer263100> I solved this issue by having a script that uses netcat to send specific logs every 10min from a launchdaemon. Edit as needed.   precode#!/bin/bash  while read line     do     #drop log entries in the log file you don't want to sent to syslog server    if [[ "$line" =~ ^.*recurring\ check-in.* || "$line" =~ ^.*Executing\ Policy\ Update\ Inventory.* ]]; then      /bin/echo "" &gt; /dev/null;    else      ## send logs to syslog server using netcat. Edit IP and UDP port as necessary      echo $line | nc -v -u -w 0 10.10.1.9 514    fi done &lt; /var/log/system.log /code/pre  <comment320314> Could you please improve your question by mentioning why you want to?  That might help people find options for you. <comment320316> I was able to successfully log an entry: $ logger "This is an log entry" $ echo $? 0  Then when I checked "All messages" in my Console, my message showed up. <comment320317> Is it coming under `System.log` ? <comment320335> Exited with status code 1, no output. I tried with lo**gg**er. <comment320338> I too see no `Hello World` in any `/var/log/*.log` file. The behaviour @SG_ is seeing, is reproducible on my Mac running macOS 10.12. Additionally, `logger -s 'Hello World'` does correctly print to the console but not to any on-disk log file. <comment320407> Not showing up in system.log for me, but if I view "all logs" in console, it does show up there.  Odd! <comment320563> I'm also getting it in the "all logs" section in console, But the `Failed to harvest strings for binary named '–Xó^H'` message is coming in `system.log`. <comment321318> This is almost a link-only and a "maybe" answer. A ~layman won't understand what your commands mean. Please add some explanation. <comment321756> The problem isn't related to SIP. There seems to be a problem between `asl` and `syslogd`. <comment321757> The `/etc/asl.conf` file which configure how `asl` writes in `/var/log/system.log`, didn't change between `Yosemite` and `Sierra`. <comment345601> Four months later, and the link is already broken. <comment359740> I think the current link is:  https://developer.apple.com/reference/os/logging