VDCAssistant seems to be causing perpetual crash reports <body> As stated above VDCAssistant seems to be causing perpetual crash reports to the point that the ReportCrash system process will use 50-100% of cpu.  Application Specific Information: Client is attempting to access a display by index (1) instead of display ID. abort() called  These crash reports also seem to disappear and reappear. (i.e. the number of crash reports in Console.app never grows but are constantly being generated). The process cannot be force quit.  I have no idea whats causing this as I don't use iSight camera and nothing else is connected to laptop (macbook pro 4,1 osx10.9.2)  Logging out does not cure it, but a restart will.  <answer123305> Opening Windows 7 through Parallels seems to be the trigger that sets the crash cascade in motion. Thrashing VDCAssistant seems to have cured it in the short term. Hopefully it does not lead to other issues down the road.  <answer123774> h1Temporary workaround found/h1  VDCAssistant kept restarting and crashing, spawning a ReportCrash process that was eating up a lot of CPU. iSight is not working. In order to keep my early 2009 iMac working (2009)  precodecd /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/Resources/VDC.plugin/Contents/Resources/  sudo mv VDCAssistant VDCAssistant.stopme /code/pre  This seems to have stopped the crash/report/respawn cycle. I don't know if it has any other effects, but my CPU load is back to normal.  <answer124465> It seems to be potentially caused by third party apps used for display mirroring or streaming. In my case it was caused by AirDisplay and removing that program solved it. Try to boot into safe mode and when the problem disappears in safe mode it is almost certainly caused by third party software.  <answer125754> Apple has changed emsomething/em that interferes with some applications/drivers using the strongwebcam/strong, strongmirroring the screen/strong (Airplay and Airplay-like) and providing strongUSB graphic cards/strong.  strongUninstalling those/strong (make sure to use Google to find what kernel extension they installed), make sure the system strongrebuilds the kext cache/strong by running  precodesudo touch /System/Library/Extensions /code/pre  and restarting solves the problem for most people posting to that list.  List of applications I found that might cause the problem, mostly out of a lengthy thread in the Apple support forum:  ul liAir Display/li liAirParrot/li liAirServer/li liDisplayLink Driver/li liiDisplay/li liParallels/li liSplashtop virtual display driver/li liScreenRecycler/li liVMWare/li /ul  Not all of this must be affected, and some are actually debated in the thread (like Parallels and VMWare). They might just do the codetouch/code mentioned above which some users probably didn't do.  Sadly this strongall didn't help me/strong, so I decided to give up the camera until Apple fixed this and strongdisabled the codeVDCAssistant/code/strong (must be repeated after each boot, when the problem still occurs, and whenever something wanted to access the webcam). Has the advantage over deleting/renaming that you don't have to remind yourself undoing that if it finally is fixed; but you realize very well if the problem still persists after a reboot...  precodesudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.cmio.VDCAssistant.plist /code/pre  <answer128676> As explained above, disabling VDCAssistant seems to resolve this issue. However, even after disabling this, there are some other errors that can appear e.g. this error logged in the console several times per second:  precodeWindowServer[432]: _CGXGLDisplayContextForDisplayDevice: No matching context for device (0x7f9c42d034c0) - disabling OpenGL /code/pre  (mentioned here)  I haven't found a workaround for this aside from rebooting and/or disabling the DisplayLink adapter (the cause of the issue for me). Hopefully this is pending a patch from Apple.  <answer216748> h1Google Chrome/h1  img src="https://i.stack.imgur.com/KDt4t.png" alt="enter image description here"  Removing the Google Chrome web browser solved the problem for me.   I was running Mountain Lion in a Parallels 11 virtual machine, and had a crash log generated repeatedly as described in the Question, with names such as codeVDCAssistant_2015-11-22-120350_localhost.crash/code. The repeated crashes started only after launching Google Chrome. Quitting Chrome does not stop the crash log creation, logs continue to appear every few seconds until a reboot.  I disabled access to the camera in the Chrome preferences. Did not help.  I deleted:  ul liGoogle Chrome app from codeApplications/code folder./li li~/Library/Google//li li~/Library/Application Support/Google//li /ul  I downloaded and re-installed Google Chrome app again. Problem emdoes/em re-appear.   Gave up on Chrome, and removed the app again. Firefox is now my secondary browser instead of Chrome.  h1Alternative - Delete .plist/h1  An alternative is described in the Answer by Jens Erat where you use the Terminal to delete a plist. Deleting the plist does indeed immediately stop the problem. However, you must delete the plist every time you reboot the Mac (or Mac VM in my case).  <answer256012> I know this is way too late, but i simply disabled camera sharing from Parallels.  <comment144099> I have this same issues, but I'm not using Parallels, though I did have it installed years ago. Any new information on this? <comment144107> Unfortunately this solves one problem but creates others. For me its not an issue as i don't use the camera but trashing VDCAssistant disables it (which could be good if you are super paranoid and don't believe gaffer tape is opaque enough!) <comment146127> What OSX version do you have? I started having the same problem right after update to 10.9.2 <comment146868> 10.9.2. Never noticed it before that but that just may be an oversight on my part. <comment147194> thank you very much. At least I  now know that there is an apple controlled light at the end of the tunnel and a few possible fixes if I feel the camera is needed again. <comment262012> Exactly how did you remove "AirDisplay"? <comment269189> That plist unload does indeed fix the problem. For me the problem occurs *inside* a Parallels VM running Mountain Lion, triggered by running Google Chrome.