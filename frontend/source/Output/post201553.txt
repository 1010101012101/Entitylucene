Preserving "hidden" attribute when copying from NTFS to HFS+? <body> I have an NTFS volume that I am copying into a new HFS+ volume. I'm using the following command to copy everything including all hidden directories and attributes:  precodesudo rsync -aAXvF --del --chmod=F-x,go-w /Volumes/NTFS/ /Volumes/HFS /code/pre  The codeF-x,go-w/code is there to fix the permissions from NTFS (which has simply coderwxrwxrwx/code on emeverything/em). code-a/code (archive), code-A/code (ACLs), and code-X/code (xattrs) force codersync/code to copy as much file metadata as possible.  However, one quirk of this copy is that Windows hidden files (e.g. code$RECYCLE.BIN/code, codeSystem Volume Information/code, etc.) emstill/em show up as visible in HFS+. Is there a flag I could pass to codersync/code or a similar command that could preserve this metadata bit?  <answer201605> I don't have a ntfs partition to test it, but my codeman rsync/code documents the code-E/code switch:    precode-E, --extended-attributes           Apple specific option to copy extended attributes, resource forks, and ACLs.           Requires at least Mac OS X 10.4 or suitably patched rsync. /code/pre   I don't know if that helps, but it's worth a try.  hr  Another thing to try would be to use the codentfs-3g/code driver to mount the partition, which includes the codehide_hid_files/code option:     Hide the hidden files and directories in directory listings, the hidden files and directories being the ones whose NTFS attribute have the hidden flag set. The hidden files will not be selected when using wildcards in commands, but all files and directories remain accessible by full name, for example you can always display the Windows trash bin directory by : "ls -ld '$RECYCLE.BIN'".   I assume codentfs-3g/code translates ntfs' hidden attribute before presenting the file to the system. codersync/code might then be able to preserve it. codentfs-3g/code can be installed via Homebrew.  hr  If that fails, too, you will likely have to hide the files yourself. To do so you may use either codechflags hidden &lt;file&gt;/code or prepend the file with a code./code. Both will hide the files in Finder. If you use the terminal frequently, you may prefer prepending the code./code, as it also hides the files from regular codels/code output (without the code-a/code switch) 