Toggle "Use all F1, F2 as standard keys" via script <body> I toggle the "Use all F1, F2 as standard keys" setting very often and would like to automate it via a script (or a keyboard shortcut). Is it possible? I've tried to Google the right arguments for codedefaults write .../code but unsuccessfully.  img src="https://i.stack.imgur.com/UVvnJ.png" alt="fn settings"  hr  strongUpdate:/strong I ended up creating https://github.com/jkbrzt/macos-fn-toggle based of the answers here.  strongUpdate II:/strong There's now also — https://github.com/Pyroh/Fluor — a really nice menubar app that allows you to automatically change the behaviour of the keyboard's fn keys depending on the active application.  <answer60495> Some AppleScript that might help: Applescript to toggle F1-F11 keys as function keys - MacRumors Forums  <answer60496> precodetell application "System Preferences"     reveal anchor "keyboardTab" of pane "com.apple.preference.keyboard" end tell tell application "System Events" to tell process "System Preferences"     click checkbox 1 of tab group 1 of window 1 end tell quit application "System Preferences" /code/pre  You could also use codedefaults write -g com.apple.keyboard.fnState -bool true/code, but I don't know any way to apply the changes without logging out and back in again.  <answer120128> I don't know about script but with some handy reverse-engineering and Googling, I made this since I didn't like the existing AppleScript GUI stuff that was out there:  https://github.com/nelsonjchen/fntoggle  Compiled binary (Toss into your PATH or if you don't know what that is then code/usr/local/bin//code): https://github.com/nelsonjchen/fntoggle/releases  Call it from anything (ControlPlane, Automator, codesh/code, etc) by running codefntoggle on/code or codefntoggle off/code.  This script does not require GUI accessibility to be turned on. It also does not require logging out and back in.  <answer128036> You can read the current state with the following. (1 for F-keys, 0 for media/brightness etc)  precodedefaults read "Apple Global Domain" "com.apple.keyboard.fnState" /code/pre  You can write it, however it won't change until you reboot. (I tried killing Dock and Finder instead, no luck)  precodedefaults write "Apple Global Domain" "com.apple.keyboard.fnState" "1" ## F1 F2 etc defaults write "Apple Global Domain" "com.apple.keyboard.fnState" "0" ## Brightness/Media /code/pre  I suspect somebody with more knowledge on what reads this plist file could write up a script to kill and restart whatever reads this plist, which should make it acknowledge the change.  <answer160119> Actually, you don`t have to run any app with spotlight or anything, the best way in my opinion is to:  ol liCreate new Service in Automator/li liDrag: "Run Apple script/li liIn the "Service recieves selected": choose no input/li liPaste this code from this other answer:  precodetell application "System Preferences" reveal anchor "keyboardTab" of pane "com.apple.preference.keyboard" end tell tell application "System Events" to tell process "System Preferences" click checkbox 1 of tab group 1 of window 1 end tell quit application "System Preferences"  /code/pre/li liSave as "yourname"/li liOpen  System Preferences → Keyboard → Shortcuts/li liIn the left menu choose: "Services"/li liIn the right, scroll all the way down to the General, and assign your service some unique hotkey, I choose cmd+shift+L/li liThats it! It's not very fast or anything, but you don't have to run any app or go to the Preferences yourself./li /ol  Addendum: With EL Capitan this works only when Automator is in focus, otherwise (eg. if you invoke the script via a keyboard shortcut) you get "The action “Run AppleScript” encountered an error" message.  <answer201574> Given all the answers I applied the following solution for Yosemite.  Using Automator, I created an app with the following code:  precodetell application "System Preferences" reveal anchor "keyboardTab" of pane "com.apple.preference.keyboard" end tell tell application "System Events" to tell process "System Preferences" click checkbox 1 of tab group 1 of window 1 end tell quit application "System Preferences" /code/pre  Save it, add it to Applications. To avoid the "AppleScript Editor is not allowed assistive access.", go to System Preferences-Security &amp; Privacy-Privacy tap-Accessibility entry and add your app.  If like me you'd like a shortcut, then in Automator create a new Apple Script with Launch App and select your app. Then go back to System Preferences-Keyboard-Shortcut tabs-Service entry and at the end of the list, assign a shortcut to your script.  <comment69613> Exactly what I was looking for, thanks. <comment69621> Welcome to Ask Different! You've posted this as an answer, which is only for things that directly answer the question asked. Answers on Ask Different need to be more than just a link. It's okay to include a link, but please summarize or excerpt it in the answer. The idea is to make the answer stand alone. Please take a look at the [FAQs](http://apple.stackexchange.com/faq) for more info. Thanks. <comment95660> I've packed this script as an app using Automator so that it can be quickly run from Spotlight: https://github.com/jkbr/macos-fn-toggle <comment119909> @jkbr Your app on github is just the sort of thing I was searching for.  Thanks! <comment119913> You can also save a script as an application from AppleScript Editor. Just paste the script to AppleScript Editor, press ⌘S, and set the format to application. <comment135567> As yet another alternative, in automator create a new "service", add the Run Applescript command and paste this in where it says (* Your script goes here *). Save, and then the services menu in all applications will include fn :) <comment139177> On Mavericks you get an error like: "AppleScript Editor is not allowed assistive access." So you have to go to "Security and Privacy" in the Privacy Tab, select Accesibility and enable your app to do that. You will have to provide admin password to open the lock. <comment150105> Thanks, that's the correct key. Changing it directly however doesn't seem to change the behaviour. <comment216384> doesn't help although rebooted <comment243957> For technical reference: com.apple.keyboard.fnState is stored in the file ~/Library/Preferences/.GlobalPreferences.plist <comment328947> Does this still work in Sierra? Not working here. <comment329093> @WarrenP This issue might be enlightening. https://github.com/nelsonjchen/fntoggle/issues/4