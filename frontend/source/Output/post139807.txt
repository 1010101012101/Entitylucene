What does update_terminal_cwd do in the terminal of OS X <body> I am puzzled by it for quite some while now. In code$PROMPT_COMMAND/code of the bash in OS X, there is a command called codeupdate_terminal_cwd/code. I am sure it's not a bash built in, and most likely only exists in OS X. But I don't know what exactly it does. Anyone knows?  <answer139808> It updates the prompt to echo the Current Working Directory (CWD) and is defined in code/etc/bashrc/code:  precodeupdate_terminal_cwd() {     # Identify the directory using a "file:" scheme URL,     # including the host name to disambiguate local vs.     # remote connections. Percent-escape spaces.     local SEARCH=' '     local REPLACE='%20'     local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"     printf '\e]7;%s\a' "$PWD_URL" } /code/pre  <answer157881> Opaque secret encoded format string, '\e]7;%s\a'. Suspect.  precodelocal PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}" /code/pre  From what I gather, "file://$HOSTNAME" is masked out so you can't see  remote protocol:host espionage.  <comment185655> ...or $HOSTNAME is a variable that changes depending on the system the script is running on. ?!? Paranoid much? If you think the code listed in the other answer can do anything other than print to the screen, you have no idea how bash scripting works. <comment186473> Didn't you get the memo ? - "ShellShock" bash vulnerability web.nvd.nist.gov/view/vuln/detail?vulnId=CVE-2014-6271 In any case 1) Unknown origin in that I didn't set that environment variable 'update_terminal_cwd' 2) On top of that, it's a function. Automatically suspect. Mass infiltration. Nobody wants that. Maybe NIST will report Apple OSX and browser Firefox/Chrome/Opera "vulnerabilities" ? <comment186530> You continue to demonstrate you have no idea what you are talking about. `update_terminal_cwd` is not an environment variable, it is the name of a function. It is defined in clear text in `/etc/bashrc` and the `printf` function does not have the ability to do anything except print formatted strings to the screen. Finally, the vuln link you posted involves executing arbitrary functions by appending text to an environment variable definition...which has nothing to do with anything that is being discussed here. And wtf do browsers have to do with shell scripting? <comment229892> It might be worth noting that the function is only defined if you're running your shell in the Apple Terminal app. If you're using iTerm, it won't be defined. <comment231581> This does not attempt to answer the question that was asked (see [here](http://meta.apple.stackexchange.com/questions/2539/conspiracy-theory-answer-flagged-disputed/2552#comment5740_2540) for detailed analysis to justify this statement).  Please reserve the answer box for answers that answer the question that was asked.  Thank you! <comment232158> Just because you don't like it, doesn't mean it's not an answer.  Its up to you offer a more enlightened answer.  That's what this forum is for.  And that's not what you have done, in my opinion.  Are you are saying that no nefarious forces have made it into the operating system ?  Today 2015, I would say that is very naive.  We now know conspiracy theory is a lot closer to fact than fiction. <comment267055> What the heck is the escape-7 for and where does it print to?  Where is that documented?  :) <comment302140> @Wildcard It's an `xterm` control code to set the title bar text. The most accessible documentation is perhaps the Linux [Bash Prompt Howto](http://www.tldp.org/HOWTO/Bash-Prompt-HOWTO/). There is real documentation in the `xterm` sources, IIRC. <comment328882> @tubedogg haha yeah, if you just do a `typeset -f` it will show all the "user defined" functions and that's how this popped up. If they were trying to do something sketchy, they wouldn't make this easily visible. <comment334861> Totally thought this was malware when I first saw it - in my head `PWD` was `PASSWD` because it showed up when I printed user defined functions... and I did not define. Good to know, thanks! <comment336359> Heh. The 'file://` bit seems to set the terminal icon to be a file-folder, and somehow sets a home-directory to be a house icon.  http://apple.stackexchange.com/questions/75751/why-does-the-folder-icon-in-my-terminal-have-a-question-mark-overlaid is somewhat related. <comment336955> This function is set in line 9 of `/etc/bashrc_Apple_Terminal` (found via a trick learned [here](http://superuser.com/questions/144772/finding-the-definition-of-a-bash-function)). But I find that inside a screen session, $PROMPT_COMMAND becomes an empty string, which means `/etc/bashrc_Apple_Terminal` is probably not executed anymore. Do you know why?