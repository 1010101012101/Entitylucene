Run applescript as a service <body> I have the following codeapplescript/code bundled as code.app/code (using Platypus) and starting on user logon (12.4 MB for each user)  precode#!/usr/bin/osascript  -- INICIO DAS FUNCOES EXTRAS set app_path to path to current application set app_name to get name of me set myPath to path to me tell application "Finder" to set myFolder to (container of myPath) as string set commonScript to load script alias ((myFolder) &amp; "FuncoesExtras.scpt") -- FIM DAS FUNCOES EXTRAS  set WhiteList to {app_name, "App Store", "iTunes", "FecharProgramas", "Finder", "Mail"}  repeat      tell application "System Events"         repeat with this_app in (get processes whose background only is false and windows is {})             set NomeDoApp to the name of this_app             if NomeDoApp is not in WhiteList then                 try                     tell NomeDoApp to quit                     log_event("App " &amp; NomeDoApp &amp; " encerrado com sucesso", app_name) of commonScript                 on error                     do shell script "killall " &amp; quoted form of NomeDoApp                     log_event("Forcando interrupcao do App " &amp; NomeDoApp, app_name) of commonScript                 end try             end if         end repeat     end tell      tell application "System Events" to set myPID to (unix id of processes whose name is app_name)     do shell script ("/usr/bin/renice 18 " &amp; myPID)      delay 60  end repeat /code/pre  How can i make it a service, so it only run 1 instance and when the system starts, not at user logon?  Any other suggestions about my code?  hr  strongEDIT/strong  Here is my current (working) code.plist/code located in code/Library/LaunchAgents/code  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Disabled&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;EnableGlobbing&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;KeepAlive&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;ram.ramon.FecharProgramas&lt;/string&gt;     &lt;key&gt;LowPriorityIO&lt;/key&gt;     &lt;true/&gt;     &lt;key&gt;Program&lt;/key&gt;     &lt;string&gt;Applications/FecharProgramas.app/Contents/MacOS/FecharProgramas&lt;/string&gt;     &lt;key&gt;RunAtLoad&lt;/key&gt;     &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  When i move it to code/Library/LaunchDaemons/code the app doesn't work anymore.    precode05/10/13 10:43:24,375 FecharProgramas[90]: 3891612: (connect_and_check) Untrusted apps are not allowed to connect to or launch Window Server before login. 05/10/13 10:43:24,376 FecharProgramas[90]: kCGErrorFailure: This user is not allowed access to the window system right now. 05/10/13 10:43:24,376 FecharProgramas[90]: _RegisterApplication(), FAILED TO establish the default connection to the WindowServer, _CGSDefaultConnection() is NULL. 05/10/13 10:43:24,382 FecharProgramas[90]: kCGErrorInvalidConnection: CGSGetEventPort: Invalid connection /code/pre  Do i need to trust my app? If so, how?  <answer104307> You can use launchd.plist or use a program like Lingon (which is easier to use to create a codelaunchd/code plist).  <answer104314> Have a look at my blog post kill-one-application-if-another-is-not-running-applescript  This will give you an idea of how to write you script saved as a text file (.applescript) and make it into a shell script.  And show you how to create your own launch agent that will run every #n seconds.  Then there is the applescript-quit-or-launch-application-script-revised post that show a way of adapting the code to run for multiple app. ( which you do already any way)  <answer104326> Save a plist like this as code/Library/LaunchAgents/some_label.plist/code:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;some_label&lt;/string&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;osascript&lt;/string&gt;     &lt;string&gt;/path/to/script.scpt&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt; &lt;!-- run at login --&gt;   &lt;key&gt;KeepAlive&lt;/key&gt;   &lt;true/&gt; &lt;!-- run the program again if it terminates --&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  You can load the plist with codelaunchctl load /Library/LaunchAgents/some_label.plist/code or by logging out and back in. See codeman launchd/code and codeman launchd.plist/code for more information.  You might also replace the AppleScript with a shell command like this:  codekill $(osascript -e 'tell application "System Events" to id of processes where frontmost is false and background only is false and windows is {} and name is not "App Store" and name is not "iTunes" and name is not "FecharProgramas" and name is not "Finder" and name is not "Mail"' | tr -d ,); renice 18 $(osascript -e 'tell application "System Events" to id of (process 1 where frontmost is true)')/code  <comment122817> Try saving the code as a Applescript TEXT file i.e foo.applescript Making sure you follow my blog posts using the chmod command to make it executable. You most likely can also take out the repeat loop that runs ever 60 seconds and use `keyStartInterval/key integer60/integer` in the Launch Agent <comment122823> Daemons are not allowed to connect to the window server. See the [Daemons and Agents](https://developer.apple.com/library/mac/technotes/tn2083/_index.html) tech note. Can't you just use an agent (or run the program at login in the Aqua session type)? <comment122837> @markhunte nice! much better than the repeat loop. <comment122841> that's what i'm currently doing. the problem is that i get 2 apps running when i switch users. my goal is to have only 1 (system wide, user independent)