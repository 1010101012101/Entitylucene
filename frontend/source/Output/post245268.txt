Why find and exec with multiple conditions doesn't work without parenthesis? <body> I have two very similar codefind/code commands only one of which works. Since it's relevant, I must mention that there are no files with code.c/code or code.hpp/code extensions.  precode# That one works find ~/src/ \( -type f -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' \) -exec echo {} \; # That one doesn't find ~/src/ -type f -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' -exec echo {} \; /code/pre  <answer245328> Well, neither work as you expect. Let's look at the one that "doesn't work" and apply the parentheses and logic that are implied.  precodefind ~/src \( -type f -a -iname '*.cpp' \) -or \( -iname '*.h' \) -or \( -iname '*.c' \) -or \( -iname '*.hpp' \) -exec echo {} \; /code/pre  No action is applied to files that end in cpp, or file system objects that end in h and c. Only file system objects that end in hpp are echoed because code-exec/code negates the default behavior of codefind/code to print. You could add code-exec echo {} \;/code or code-print/code at the end of each enclosed parentheses but that's silly.  Let's fix the "one that works"  precodefind ~/src -type f \( -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' \) -exec echo {} \; /code/pre  <comment302446> Is that behaviour of find documented somewhere? <comment302460> @assp1r1n3 Read the manual, pay attention to the `-print` option and the OPERATORS heading. <comment302479> Still, it's very unclear.