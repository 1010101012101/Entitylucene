Removing favorite styles does not work in Lion’s TextEdit <body> In TextEdit on OS X 10.7 Lion, I want to remove some custom text styles I created previously (see screenshot). I have tried the “Remove from favorites” button in the “Show Styles  Favourite Styles” dialog, however this only removes them until TextEdit is reopened. How do I delete the styles permanently?  img src="https://i.stack.imgur.com/uleBF.png" alt="TextEdit styles dropdown"  <answer29927> It looks like you have run into a bug in Lion’s version of TextEdit. For reasons unknown, the designers of TextEdit opted for storing favorite styles in the global preferences file (code~/Library/Preferences/.GlobalPreferences.plist/code) when they introduced the feature. They might have intended to create a user global stored styles system for NSText based rich text editors (not the only oddity of the system – this post has a good write-up of TextEdit’s style implementation). This has worked up to and including OS X 10.6 Snow Leopard.  In OS X 10.7 Lion however, TextEdit has been sandboxed (emsandboxing/em means, in layman’s terms: the operating system only grants an application discrete rights to access the file system, network, OS services etc. as defined by the app – so called ementitlements/em. Anything a sandboxed application tries beyond that what is covered by its entitlements will be denied and logged by the sandbox daemon codesandbox/code). A look at the log, where you will find an entry similar to this one  precode02.11.11 14:44:54,659 sandboxd: ([73342]) TextEdit(73342) deny file-write-create /Users/&lt;user&gt;/Library/Preferences/.GlobalPreferences.plist.c2n4nCb /code/pre  each time you try to store a new favorite style shows that writing to code.GlobalPreferences/code is not among TextEdit’s entitlements. strongThe result: Lion’s TextEdit can neither store new favorite styles*, nor delete ones written ether by previous versions of TextEdit (your case)./strong  To get rid of the old styles, you need to remove the codeNSFavoriteStyles/code key from the global preferences list. If you have Xcode installed, invoking  precodeopen ~/Library/Preferences/.GlobalPreferences.plist /code/pre  will open the file in Xcode’s plist Editor, where you can remove / modify it manually. If you don’t,  precodedefaults delete -g NSFavoriteStyles /code/pre  will get rid of all stored (“favorite”) styles.  hr  * it might look like it does, as these are stored in memory while TextEdit runs, and with Lion’s revamped process management, it is difficult to tell when textEdit strongreally/strong quits. Still, once it does, the favorite styles disappear.  hr  emADDENDUM: Reported as a bug to Apple (OpenRadar rdar://10385163).br According to Apple Developer Relations, this bug has been quashed as of OS X 10.8/em  <answer30098> @kopischke, nice explanation, I had been wondering about this issue for some time.  A little workaround I found useful: It seems MacJournal uses the same favorite styles as TextEdit (that's one place where those global styles are actually useful). As MacJournal is not (yet) sandboxed, I could edit (add/delete) my favorite styles from there and they were saved correctly. And after that I could use them in TextEdit also.  <answer263279> For all tweaking their Favorite Styles (aka NSFavoriteStyles) in following Mac OS's after Snow Leopard like Mountain Lion or Mavericks: The settings (NSFavoriteStyles) have been moved to:   precode~/Library/Preferences/com.apple.AppKit.TextFavorites.plist /code/pre  <comment34356> Thanks a lot, but unfortunately that's not working for me-  if I quit with cmd+alt-Q after closing the untitled doc with red button and then reopen, the styles are still there- I can make a screengrab video if you want. <comment34375> @MachineElf: um, you are right – apparently, my copy of TextEdit is truck with amnesia: it forgets all styles between starts, even favorite ones. One question: are your styles predating the upgrade to Lion? or at least the 10.7.2 update maybe? <comment34384> Haha! Yes I did create them before updating I believe, the mystery deepens ... thanks again <comment34387> @MachineElf: no, in fact, that **solves** the mystery – I’ll edit my answer as soon as I have am little more time. <comment34399> @MachineElf: Answer edited, new solution. <comment34522> Wow, thanks for the in-depth analysis!