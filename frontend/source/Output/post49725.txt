Torrent tracker for OSX? <body> Why are there no small torrent trackers for Mac? I want to share some things privately with a couple of people. I've tried a webserver, which works, but there is no indication on my end that any transfer is taking place. I'd like to be able to run a server, seed a torrent with a client so I can see upload activity, and share the torrent with select people.  uTorrent for Windows has an embedded tracker feature, but it is not present for Mac.  <answer85108> After some trial and error, I discovered a few ways to do this. The easiest solution requiring no Windows client and no external programs is option 1. The absolute easiest method is option 2, use µTorrent for Windows.  ol liShare between computers running µTorrent without a tracker  This assumes that your µTorrent machines can open their own ports in your firewall using uPNP or NAT-PMP. While this may work with other torrent clients, I've had the best luck when using µTorrent. Also, it seems to be one of the few that will allow us to manually add peers, the crucial step.  For simplicity, we'll call the machine with the file(s) to share, "server", even though bittorrent has no concept of a server.  On the server machine, select codeNew Torrent/code from the codeFile/code menu.br Settings:  ul liSelect the file or parent directory you want to share/li liMake sure the tracker list is empty/li liSelect codeStart Seeding/code/li liSelect codePrivate torrent/code/li /ul  Now, codeCreate and Save As.../code and give your torrent file a name. At this point, you need to figure out your server's internet IP address. If you don't know how, try http://whatismyip.com. With the IP in hand, you need to figure out what port µTorrent has opened in your firewall. You can find this in the preferences or by clicking on the right-most icon in the status bar at the bottom of the main µTorrent window. Send the torrent file along with the IP and Port (e-mail, instant message, etc.) to your colleague(s).  Each of them should open that torrent file with µTorrent, select the torrent in the list, and select the codePeers/code list. They may have to show the Details Pane from the View menu if not already visible. Right-click in the Peers list and choose codeAdd Peer.../code. Enter the server's IP and Port like this:  IP:Port.  The client should now connect to the server and start/resume the transfer.  Note: If the server cannot open a port in the firewall, you could add the client peers to the server's peer list, too./li liUse a Windows machine with µTorrent as a tracker  In the Preferences, under Advanced, set bt.enable_tracker to true. Now, create a new torrent as described above, but put codehttp://IP:PORT/announce/code in the tracker list using the same IP and Port described above. Once this is done, your clients will not need the codeAdd Peer.../code step. They can simply open the torrent file with µTorrent.  Note: The Windows machine running the µTorrent tracker doesn't have to be the server or the clients. If you have any Windows machine available, you could run µTorrent on it and have it serve as your tracker. (I didn't actually test this, but in theory, it should work.)/li liInstall a simple php web-server tracker  If you already have access to a webserver, the easiest tracker I found to install is BitStorm, a single-file php tracker. Simply place the php file on your server somewhere and then put codehttp://server/path/to/bitstorm.php/code in your tracker list when creating a new torrent. The clients should only need the torrent file.  Note: If I were going to leave this running for the sharing of private files, I would put it on an HTTPS server with a username and password pair to protect it. Then change the tracker url to codehttps://user:pass@server/path/to/bitstorm.php/code./li liInstall an actual compiled tracker program  I found several of these that will compile and run on OSX, but none of them seem to work properly in my testing. My tests may have been complicated by the fact that my tracker and clients all had the same IP address (my external IP). Regardless, I don't think this is the right solution because you shouldn't need to require developer tools to be installed./li /ol  Warning: I tried using Vuze, an OSX torrent client with a built-in tracker, but I couldn't get it to work. However, it seems that it installed several plugins into every single browser on my system and changed all of my default search engines. Be careful.  <comment56912> Torrents are peer to peer; a "client" is also a "server". <comment56913> I want to run a tracker on my machine, my mistake <comment56922> Transmission allows for remote access using a web interface which includes almost all of the functionality found in the desktop client. Give it a whirl: http://www.transmissionbt.com/ <comment96740> @cksum I looked at Transmission, but the web interface doesn't help. You can't download the torrent from there or even get the client IP:port. However, I did figure out that you can create and start a torrent with Transmission. Then, if you send the torrent file (e-mail, etc) to someone else, they can start it, and using uTorrent, you can manually add the Transmission IP:port in the peer list. <comment96749> @Harvey I'm not sure if you missed it, but the Transmission web client allows for the adding of torrents either via torrent file or URL. <comment96776> @cksum, being able to remote control a _client_ is not what JustinXXVII wanted. He wanted to share with others, which requires a tracker or a torrent file combined with a peer list. Also, being able to add a file to the client doesn't help him create the original torrent file. <comment96914> Harvey, would you consider answering the question with this information so I can accept and vote it up? <comment97982> Sure, I hadn't done it yet, because I was looking for a less convoluted solution. One hint until I have time is to google for `linux torrent tracker server` or some variant of that. Most of the Linux trackers will most likely compile and run on OSX. <comment98208> Bravo. The second option seems cool, I do have a windows computer in an upstairs office. Neat little workaround there. I think I'm going to go with 3, because I do have a webserver on AmazonEC2 that can run PHP. Thanks for the well laid out answer, I'm not a total newb and could do all the steps without the explanation, but that wouldn't have been such a good answer