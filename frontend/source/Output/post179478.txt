File Open/Save dialog boxes hang infinitely <body> Today for the first time I have this issue where emany/em app showing a file browser (load/save) dialog box hangs indefinitely until I kill it.  The Finder works just fine however. I can browse everything, iCloud and network locations included, there. I haven't found a common point in the traces where the apps hang, so I'm not sure what might be the cause.  Here's the relevant sample from TeXShop when I tried to save a document (before that I had to kill VLC twice after accidentally hitting Cmd-O; opening a video in a different way was no problem though. At that point I thought it might just be a VLC bug, but I've now discovered it's system-wide)  precodeThread_976321   DispatchQueue_1: com.apple.main-thread  (serial) ???  (in TeXShop)  load address 0x10d205000 + 0x2164  [0x10d207164] NSApplicationMain  (in AppKit) + 1832  [0x7fff8e730a14] -[NSApplication run]  (in AppKit) + 711  [0x7fff8e745608] ???  (in TeXShop)  load address 0x10d205000 + 0xad20d  [0x10d2b220d] -[NSApplication sendEvent:]  (in AppKit) + 3937  [0x7fff8e8b935b] -[NSApplication _handleKeyEquivalent:]  (in AppKit) + 920  [0x7fff8e935fb5] -[NSMenu performKeyEquivalent:]  (in AppKit) + 359  [0x7fff8e939a1d] _os_activity_initiate  (in libsystem_trace.dylib) + 75  [0x7fff91fe3cd7] -[NSCarbonMenuImpl performActionWithHighlightingForItemAtIndex:]  (in AppKit) + 114  [0x7fff8e93a9dc] -[NSMenuItem _corePerformAction]  (in AppKit) + 382  [0x7fff8e93acbe] -[NSApplication sendAction:to:from:]  (in AppKit) + 452  [0x7fff8e920b71] _os_activity_initiate  (in libsystem_trace.dylib) + 75  [0x7fff91fe3cd7] ???  (in TeXShop)  load address 0x10d205000 + 0x8a3dd  [0x10d28f3dd] -[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]  (in AppKit) + 128  [0x7fff8eb71b36] -[NSDocument performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:]  (in AppKit) + 179  [0x7fff8eb66978] -[NSDocument _processActivity:blockingMainThread:]  (in AppKit) + 1773  [0x7fff8eb659f8] __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke  (in AppKit) + 353  [0x7fff8eb71ca4] -[NSDocument _commitEditingWithDelegate:didSomethingSelector:contextInfo:thenContinue:]  (in AppKit) + 138  [0x7fff8eba65ad] -[NSDocument _commitEditingThenContinue:]  (in AppKit) + 495  [0x7fff8eba63fa] __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_2  (in AppKit) + 498  [0x7fff8eb71ea5] -[NSDocument continueActivityUsingBlock:]  (in AppKit) + 323  [0x7fff8eb66cda] __67-[NSDocument saveDocumentWithDelegate:didSaveSelector:contextInfo:]_block_invoke_3  (in AppKit) + 159  [0x7fff8eb720d0] ???  (in TeXShop)  load address 0x10d205000 + 0x8713d  [0x10d28c13d] -[NSDocument runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:]  (in AppKit) + 137  [0x7fff8eb74042] -[NSDocument performActivityWithSynchronousWaiting:usingBlock:cancellationHandler:]  (in AppKit) + 61  [0x7fff8eb66902] __85-[NSDocument runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:]_block_invoke  (in AppKit) + 361  [0x7fff8eb741ba] -[NSDocument _commitEditingWithDelegate:didSomethingSelector:contextInfo:thenContinue:]  (in AppKit) + 138  [0x7fff8eba65ad] -[NSDocument _commitEditingThenContinue:]  (in AppKit) + 495  [0x7fff8eba63fa] __85-[NSDocument runModalSavePanelForSaveOperation:delegate:didSaveSelector:contextInfo:]_block_invoke_2  (in AppKit) + 312  [0x7fff8eb74301] -[NSDocument _preparedSavePanelForOperation:]  (in AppKit) + 256  [0x7fff8eb73922] +[NSSavePanel _crunchyRawUnbonedPanel]  (in AppKit) + 208  [0x7fff8ecf7659] -[NSSavePanel initWithContentRect:styleMask:backing:defer:]  (in AppKit) + 631  [0x7fff8ecf817a] -[NSSavePanel _initPanelCommon]  (in AppKit) + 466  [0x7fff8ecf8e30] -[NSSavePanel(NSSavePanelLayout) _layoutViewsVerticallyAndResizeWindowToLastExpandedSize:accessoryViewHeight:]  (in AppKit) + 5147  [0x7fff8ed0dd35] -[NSBox setContentView:]  (in AppKit) + 81  [0x7fff8eab3f4a] -[NSView addSubview:]  (in AppKit) + 463  [0x7fff8e766f83] -[NSView _setWindow:]  (in AppKit) + 3174  [0x7fff8e769c33] __21-[NSView _setWindow:]_block_invoke733  (in AppKit) + 169  [0x7fff8ee5a054] -[__NSArrayM enumerateObjectsWithOptions:usingBlock:]  (in CoreFoundation) + 313  [0x7fff8de1da89] __53-[__NSArrayM enumerateObjectsWithOptions:usingBlock:]_block_invoke  (in CoreFoundation) + 133  [0x7fff8de1e385] -[NSView _setWindow:]  (in AppKit) + 257  [0x7fff8e7690ce] -[FIFinderView viewWillMoveToWindow:]  (in FinderKit) + 320  [0x7fff9244778e] -[FIFinderViewGutsController prepareToShow]  (in FinderKit) + 146  [0x7fff9243e8ff] -[FIFinderViewGutsController forceContainerToExist]  (in FinderKit) + 146  [0x7fff9243de8b] -[FIFinderViewGutsController _internalSetTargetPath:withViewStyle:]  (in FinderKit) + 912  [0x7fff9244213e] -[FI_TBrowserContainerController initWithWindowState:targetPath:containerDelegate:]  (in FinderKit) + 459  [0x7fff924b68bb] -[FI_TBrowserContainerController configureContainerWithState:]  (in FinderKit) + 41  [0x7fff924b71f5] -[FI_TBrowserContainerController configurePersistentViewsWithState:]  (in FinderKit) + 338  [0x7fff924bc12f] -[FI_TSidebarSplitterController configureSidebar:setSplitterPosition:]  (in FinderKit) + 398  [0x7fff92449e67] -[NSSplitView setPosition:ofDividerAtIndex:]  (in AppKit) + 174  [0x7fff8e8a90b1] -[NSSplitView _resultOfDividerDragToLeadingPosition:withParams:]  (in AppKit) + 420  [0x7fff8ed61c9b] -[FI_TSidebarSplitterController splitView:constrainSplitPosition:ofSubviewAt:]  (in FinderKit) + 84  [0x7fff9244ab2f] -[FI_TSidebarViewController optimalWidth]  (in FinderKit) + 31  [0x7fff9244d2c6] -[FI_TSidebarViewController optimalWidthNoScrollbar]  (in FinderKit) + 665  [0x7fff9244ce41] -[FI_TSidebarView preparedCellAtColumn:row:]  (in FinderKit) + 53  [0x7fff9245ea03] -[NSOutlineView preparedCellAtColumn:row:]  (in AppKit) + 52  [0x7fff8ea0fdff] -[NSTableView preparedCellAtColumn:row:]  (in AppKit) + 414  [0x7fff8e9ba7be] -[FI_TSidebarViewController(DataSource) outlineView:objectValueForTableColumn:byItem:]  (in FinderKit) + 68  [0x7fff92450386] -[FI_TSidebarItemCell name]  (in FinderKit) + 109  [0x7fff924549e9] TSidebarController::NameForNode(TFENode const&amp;)  (in FinderKit) + 120  [0x7fff9245b5ec] TFENode::Name() const  (in FinderKit) + 45  [0x7fff922ead9f] TFENodeFactory::GetOriginalCloudDocsNode()  (in FinderKit) + 21  [0x7fff922f607d] TLazyInitializer&lt;TFENode, TiCloudNodeFetcher&gt;::Get(TLazyInitializer&lt;TFENode, TiCloudNodeFetcher&gt;*)  (in FinderKit) + 222  [0x7fff922f6732] TiCloudNodeFetcher::Fetch()  (in FinderKit) + 122  [0x7fff922f6af8] TFENode::TFENode(__CFURL const*)  (in FinderKit) + 36  [0x7fff922e5716] NodeCopyFromURL  (in DesktopServicesPriv) + 188  [0x7fff9206f547] TNode::GetNodeFromURL(__CFURL const* const&amp;, TNodePtr&amp;, NodeRequestOptions)  (in DesktopServicesPriv) + 507  [0x7fff920a8c37] TNode::GetNodeFromPathName(TPathName const&amp;, TNodePtr&amp;, NodeRequestOptions)  (in DesktopServicesPriv) + 822  [0x7fff920a4e0c] TNode::FindChild(TUString const&amp;, bool) const  (in DesktopServicesPriv) + 811  [0x7fff9206673b] TFSInfo::Initialize(TCountedPtr&lt;TFSInfo&gt; const&amp;, TUString const&amp;)  (in DesktopServicesPriv) + 124  [0x7fff92066cbc] TFSInfo::Initialize(__CFURL const*, bool, bool)  (in DesktopServicesPriv) + 304  [0x7fff92114246] TFSInfo::FetchProperties()  (in DesktopServicesPriv) + 1700  [0x7fff92061ce8] CFURLCopyResourcePropertyForKey  (in CoreFoundation) + 123  [0x7fff8ddf806b] _FSURLCopyResourcePropertyForKeyInternal(__CFURL const*, __CFString const*, void*, void*, __CFError**, unsigned char)  (in CoreServicesInternal) + 211  [0x7fff93b910ea] prepareValuesForBitmap(__CFURL const*, __FileCache*, _FilePropertyBitmap*, __CFError**)  (in CoreServicesInternal) + 227  [0x7fff93b9374f] LSPropertyProviderPrepareValues(__CFURL const*, __FileCache*, __CFString const* const*, void const**, long, void const*, __CFError**)  (in LaunchServices) + 53  [0x7fff96c1d2e6] prepareDistinctLocalizedNameValue(__CFURL const*, __FileCache*, __CFError**)  (in LaunchServices) + 92  [0x7fff96c28284] prepareAttributeValueForKey(__CFURL const*, __FileCache*, __CFString const*, void const**, __CFError**)  (in LaunchServices) + 178  [0x7fff96c242de] _LSCopyItemAttributeForRefInfoWithOptions  (in LaunchServices) + 129  [0x7fff96c243e3] _LSCopyItemAttributesForRefInfoWithOptionsCommon(LSExtendedFSRefInfo const*, unsigned int, __CFArray const*, unsigned int, __CFDictionary const**)  (in LaunchServices) + 367  [0x7fff96c9db23] _LSCopyNodeAttributes  (in LaunchServices) + 377  [0x7fff96c9698d] _LSCopyNodeAttribute_DisplayNameIfDifferentFromFSNameWithLanguage(LSNodeAttributeStateCache*, __CFString const*)  (in LaunchServices) + 56  [0x7fff96c98096] _LSCopyBRDisplayNameForNode  (in LaunchServices) + 83  [0x7fff96c8d91c] BRCopyDisplayNameForContainerAtURL  (in CloudDocs) + 223  [0x7fff8d3ceff6] -[BRContainerCache containerByID:forURL:]  (in CloudDocs) + 225  [0x7fff8d3db7d3] -[BRXPCSyncProxy resultWithTimeout:]  (in CloudDocs) + 57  [0x7fff8d3cd9fa] _dispatch_group_wait_slow  (in libdispatch.dylib) + 218  [0x7fff9b3beb9c] semaphore_wait_trap  (in libsystem_kernel.dylib) + 10  [0x7fff92a1351a] /code/pre  Here's the sample from Numbers.app, which hangs immediately after starting (because it starts opening the file browser). Oddly there's no mention of CloudDocs here.  precodestart  (in libdyld.dylib) + 1  [0x7fff8f3235c9] NSApplicationMain  (in AppKit) + 1832  [0x7fff8e730a14] -[NSApplication run]  (in AppKit) + 594  [0x7fff8e745593] -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:]  (in AppKit) + 194  [0x7fff8e751730] _DPSNextEvent  (in AppKit) + 2665  [0x7fff8e752626] AEProcessAppleEvent  (in HIToolbox) + 56  [0x7fff93c81a2e] aeProcessAppleEvent  (in AE) + 295  [0x7fff94fa3623] dispatchEventAndSendReply(AEDesc const*, AEDesc*)  (in AE) + 31  [0x7fff94fa3719] aeDispatchAppleEvent(AEDesc const*, AEDesc*, unsigned int, unsigned char*)  (in AE) + 531  [0x7fff94fa399c] _NSAppleEventManagerGenericHandler  (in Foundation) + 102  [0x7fff93766059] -[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:]  (in Foundation) + 290  [0x7fff937661e8] -[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:]  (in AppKit) + 244  [0x7fff8e755f75] -[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:]  (in AppKit) + 561  [0x7fff8e756529] -[NSApplication _reopenWindowsAsNecessaryIncludingRestorableState:registeringAsReady:completionHandler:]  (in AppKit) + 412  [0x7fff8e7567f7] -[NSPersistentUIManager restoreAllPersistentStateRegisteringAsReadyWhenDone:completionHandler:]  (in AppKit) + 406  [0x7fff8e757551] -[NSPersistentUIRestorer restoreStateFromRecords:usingDelegate:completionHandler:]  (in AppKit) + 2118  [0x7fff8e757eec] -[NSPersistentUIRestorer finishedRestoringWindowsWithZOrder:completionHandler:]  (in AppKit) + 1745  [0x7fff8e8a6f74] -[NSDocumentController(NSInternal) _autoreopenDocumentsIgnoringExpendable:withCompletionHandler:]  (in AppKit) + 798  [0x7fff8ebb92f1] __97-[NSDocumentController(NSInternal) _autoreopenDocumentsIgnoringExpendable:withCompletionHandler:]_block_invoke_3  (in AppKit) + 124  [0x7fff8ebb98e9] -[NSDocumentController(NSInternal) _autoreopenDocumentsFromRecords:withCompletionHandler:]  (in AppKit) + 540  [0x7fff8ebb8454] __90-[NSDocumentController(NSInternal) _autoreopenDocumentsFromRecords:withCompletionHandler:]_block_invoke1716  (in AppKit) + 625  [0x7fff8ebb8886] __90-[NSDocumentController(NSInternal) _autoreopenDocumentsFromRecords:withCompletionHandler:]_block_invoke1716  (in AppKit) + 467  [0x7fff8ebb87e8] __90-[NSDocumentController(NSInternal) _autoreopenDocumentsFromRecords:withCompletionHandler:]_block_invoke  (in AppKit) + 66  [0x7fff8ebb8526] __95-[NSPersistentUIManager restoreAllPersistentStateRegisteringAsReadyWhenDone:completionHandler:]_block_invoke557  (in AppKit) + 37  [0x7fff8efd9ee0] __58-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:]_block_invoke  (in AppKit) + 252  [0x7fff8e8ae741] -[NSApplication _doOpenUntitled]  (in AppKit) + 290  [0x7fff8e9750c4] -[NSDocumentController(NSInternal) _showOpenPanel]  (in AppKit) + 63  [0x7fff8ebb9a96] ???  (in Numbers)  load address 0x10711e000 + 0x3a56e1  [0x1074c36e1] -[NSDocumentController openDocument:]  (in AppKit) + 354  [0x7fff8ebaa817] -[NSDocumentController beginOpenPanelWithCompletionHandler:]  (in AppKit) + 85  [0x7fff8ebaacbf] -[NSDocumentController _setupOpenPanel]  (in AppKit) + 37  [0x7fff8ebaa8b8] +[NSSavePanel _crunchyRawUnbonedPanel]  (in AppKit) + 74  [0x7fff8ecf75d3] +[NSSavePanel newRemotePanel]  (in AppKit) + 301  [0x7fff8ecf7541] -[NSVBSavePanel init]  (in AppKit) + 303  [0x7fff8efaac9d] -[NSRemoteViewBase bridge]  (in ViewBridge) + 207  [0x7fff95267668] -[NSRemoteViewBase viewServiceMarshalProxy:withErrorHandler:]  (in ViewBridge) + 88  [0x7fff95270fe3] -[NSWindowCentricRemoteView advanceToConfigPhase]  (in ViewBridge) + 947  [0x7fff9527ed3b] -[NSRemoteViewBase advanceToConfigPhase:awaitingWindowRights:]  (in ViewBridge) + 1277  [0x7fff952707cd] -[NSCFRunLoopSemaphore wait]  (in ViewBridge) + 429  [0x7fff952623c9] invokeRunLoopInModeUntil  (in ViewBridge) + 87  [0x7fff9528ac27] invokeUntil  (in ViewBridge) + 199  [0x7fff9528abae] __invokeRunLoopInModeUntil_block_invoke  (in ViewBridge) + 20  [0x7fff9528ac42] CFRunLoopRunSpecific  (in CoreFoundation) + 296  [0x7fff8de0c858] __CFRunLoopRun  (in CoreFoundation) + 1371  [0x7fff8de0cffb] __CFRunLoopServiceMachPort  (in CoreFoundation) + 212  [0x7fff8de0db34] mach_msg  (in libsystem_kernel.dylib) + 55  [0x7fff92a1264f] mach_msg_trap  (in libsystem_kernel.dylib) + 10  [0x7fff92a134de] /code/pre  Running 10.10.2 (14C1514)  precode$ uname -v Darwin Kernel Version 14.1.0: Thu Feb 26 19:26:47 PST 2015; root:xnu-2782.10.73~1/RELEASE_X86_64 /code/pre  Any ideas?  hr  It disappeared after restarting, but of course that doesn't mean it won't return…  <answer179506> What version of Yosemite? Am finding installing the Betas clear up these problems that are so hard to trace.  <comment212936> it's 10.10.2 14C1514, the current released version <comment214091> The usual diagnostics done? Do you own Disk Warrior? An SMC reset for your machine, a startup from the Recovery Disk (partition) & run Disk Utility from there ... but I repeat, often a reinstall solves. <comment214231> The problem is that it didn't even appear again after a reboot… so I wouldn't be able to tell if any more drastic method would fix the root cause. Updated 10.10.3 now, I'll just have to wait and see if it appears again I guess. <comment320766> I have the exact same issue on 10.11.6. It usually appears from time to time every few weeks and only a reboot solves it. Strange thing. <comment320767> I have the exact same issue on 10.11.6. It usually appears from time to time every few weeks and only a reboot solves it. Strange thing.