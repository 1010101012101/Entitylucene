Get current app from two instances with same name by Apple Script <body> How to address an active window of an active app by AppleScript when two instances of the same app are running?  The script below addresses the other app. Probably because the name and id of the app is the same and it picks just the first one from the list by name.   precodetell application (path to frontmost application as text) to tell front window... /code/pre  I use that script to maximize the current window but it does not work for the two instances of the same app:  precodetell application "Finder" to set {0, 0, dtw, dth} to bounds of window of desktop try     tell application (path to frontmost application as text) to tell front window         set bounds to {0, 0, dtw, dth}     end tell on error     tell application "System Events" to tell (process 1 where it is frontmost)         try             click (button 1 of window 1 where subrole is "AXZoomButton")         end try     end tell end try /code/pre  <answer227456> It's not possible to get the right instance of the frontmost application because these two instances have the same path and the same bundle identifier, the application will always be the first open instance.   You must use the strongfrontmost/strong codeprocess/code, like this:  precodetell application "System Events"     tell (first process whose frontmost is true) to tell front window to if exists then         set position to {0, 0}         set size to {dtw, dth}     end if end tell /code/pre  <comment275999> What app is running twice? Why not name each app differently? IF you have some more details / constraints we might be able to offer something other than parsing the process list to pick the app that started first or started last... <comment276008> It's a Chrome instance created as a standalone app to access Google Music as described here: http://apple.stackexchange.com/questions/226833/standalone-app-from-url-run-in-chrome-conflicts-with-chrome-itself <comment276245> Cool - I've plugged the tool I've seen other people use when they need web apps to get different dock names and such. It's http://fluidapp.com <comment277454> Great. It seems to work except for one detail: the former script maximizes the window to the full screen including the unused area over the hidden dock. The new script with the position/size keeps padding on the side of the screen where the dock is hidden. This script does not seem to accept the set bounds to {0, 0, dtw, dth}. Any idea how to improve it to use the real full screen size without the padding? <comment277600> I don't have this behavior on my **iMac** (**El Capitan**), dock on the side or bottom, so I have no idea how to fix it. <comment277659> If you have a hidden dock, there is a 5px gap over it. It is on all OS X versions. If you don't see it, you probably have just a dark background. The gap is not there if the dock is shown.  It is not a major issue, but it is just annoying to see the wild background through that gap or the windows below might be peeking through it, which is ugly. <comment277817> Yes, my background is dark, I tested with the yellow background and I see the gap. So, I have no solution to this issue, except to launch **Chrome** in full screen, put the `--start-fullscreen` option at the end of the `exec` command in the SH script