Getting my old Terminal back after uninstalling fish <body> Recently I got tired of the smaller kinks that the Fish Shell presented me with (undiscoverable commands etc.) so I decided I wanted to change the shell back to normal and uninstall fish.  However in the process of doing so I have done something terribly wrong.  I have set it to the normal: code/bin/bash/code  However Im represented with a series of prompts (in regards to Vagrant) and have to exit this with the CTRL+C command (cancel)  I want to get my old terminal back (with my current folder prepended etc.) but I have no clue in how to accomplish this.  I've attached two screenshots. One is the current terminal (the one with the bash code-bash-3.2$/codein front. The second is the terminal i want (the default with username appended) [source of image is found on the internet, for reference]  strongThis is the terminal I have/strong img src="https://i.stack.imgur.com/4Idy9.png" alt="The Terminal I have"  strongThis is the terminal I want/strong img src="https://i.stack.imgur.com/0KDEN.png" alt="The Terminal I want"  I've found two things:  ol liMy bash profile is deleted hence i cannot see my computer name etc. I've tried to recreate it but:/li liI need a sample .bash_profile/li li...and i need it to be persistent such that when i exit my terminal I do not fire the VVV script (that it apparently fires off when it first enters the terminal)/li /ol  <answer142359> This is the last chapter in the Fish Shell Documentation:     Should you wish to uninstall fish, first ensure fish is not set as your shell. Run   precodechsh -s /bin/bash /code/pre      if you are not sure.      Next, do the following (assuming fish was installed to /usr/local):  precodesudo rm -Rf /usr/local/etc/fish /usr/local/share/fish ~/.config/fish sudo rm /usr/local/share/man/man1/fish*.1 cd /usr/local/bin sudo rm -f fish mimedb fish_pager fishd fish_indent /code/pre   <answer142378> The simplest way to get back your default .bash_profile might be to just create a new user on your Mac. Log in and copy the desired files to that user's shared/public folder. Then log in as you and copy them to the root of your profile folder.  The added bonus of this is that you now have a virgin, virtually untouched, user that you can use when troubleshooting your Mac. Unless you are short of disk space a new user profile is not that big and can be valuable in troubleshooting.  <answer142384> First, coderm ~/.bashrc ~/.bash_profile ~/.profile/code These are not needed and don't exist by default.  Second, check to see code/etc/profile/code is there, should be:  precode# System-wide .profile for sh(1) if [ -x /usr/libexec/path_helper ]; then     eval `/usr/libexec/path_helper -s` fi if [ "${BASH-no}" != "no" ]; then     [ -r /etc/bashrc ] &amp;&amp; . /etc/bashrc fi /code/pre  Third, check code/etc/bashrc/code (this is where your prompt is defined). Should be:  precode# System-wide .bashrc file for interactive bash(1) shells. if [ -z "$PS1" ]; then    return fi PS1='\h:\W \u\$ ' # Make bash check its window size after a process completes shopt -s checkwinsize # Tell the terminal about the working directory at each prompt. if [ "$TERM_PROGRAM" == "Apple_Terminal" ] &amp;&amp; [ -z "$INSIDE_EMACS" ]; then     update_terminal_cwd() {         # Identify the directory using a "file:" scheme URL,         # including the host name to disambiguate local vs.         # remote connections. Percent-escape spaces.     local SEARCH=' '     local REPLACE='%20'     local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"     printf '\e]7;%s\a' "$PWD_URL"     }     PROMPT_COMMAND="update_terminal_cwd; $PROMPT_COMMAND" fi /code/pre  Finally, if it's still not working make sure you have /bin/bash set as your default shell using the advanced options in the User &amp; Groups System Preference. If you don't login with bash, it will bypass the configs in code/etc//code  <answer142395> Clarification: There are two default shell settings.  ul liOne is the Unix setting and can be changed with codechsh -s/code./li liThe other is the Terminal.app-specific setting, and can be changed in Terminal preferences./li /ul  hr  You can set your Terminal default shell command to code/bin/bash -l/code in the Terminal app.  img src="https://i.stack.imgur.com/NMGPF.png" alt="screenshot"  code-l/code tells Bash to read startup files. Even if you don't have any user-specific startup files, there are system-wide startup files that will, among other things, set the prompt to the one you're familiar with.  If you've properly set your Unix default shell, you should be able to select codeDefault login shell/code in Terminal preferences and this will happen automatically.  <comment167686> What do you have in ~/.bashrc ~/.bash_profile ~/.profile etc <comment167695> Yes but the OP has done this - the issue is with his bash setup <comment167700> None these are completely blank. I deleted everything... and changed the shell <comment167702> As said by Mark, I have uninstalled Fish and changed into /bin/bash shell, however I cannot see my username appended nor the folder Im currently in, within my terminal window <comment167735> This shell account could also be used to compare the dot files in both home directories. From that it might be quite easy to sort out the default contents of .bashrc .profile etc... <comment167817> With minor modifications (namely removing the backward slashes, the code (in the /etc/bashrc - file) worked!  Apparently I faulty placed the code for the VVV generation script inside of my /etc/bashrc  Everything is fixed now. Thanks dear poster. <comment167818> Its important to note that these settings should only be done within the Terminal App.  However it is REALLY good advice to use this setting, and Im considering making it my default.