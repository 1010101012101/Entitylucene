Launchd won't execute a bindfs command <body> I want to use launchd to run bindfs commands at login, as root. I have a plist in /Library/LaunchAgents/loginsftpjailmount.plist (with chmod 600) and a shell script in /usr/local/bin/loginsftpjailmount.sh.  I should start by saying it works - if I change the bash script to run  precodemkdir /Users/Me/Desktop/itworks /code/pre  then it successfully creates the directory "itworks", both on login and by running  precodesudo launchctl load /Library/launchAgents/loginsftpjailmount.plist /code/pre  And the folder created is owned by root and I have to type in my password to delete it. When I manually run the bash script from the terminal using sudo, the bindfs command works.  So to summarize - I know the script works. I know the plist works. I know they work together with launchd. But the bindfs command doesn't run! I checked the system log with  precodesudo grep com.user /var/log/system.log /code/pre  and it says it exits with error 127 (com.user is part of the label for my plist). I searched online and none of the solutions for error 127 work for me. For reference, two plists I have used are:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;com.user.loginitem&lt;/string&gt; &lt;key&gt;ProgramArguments&lt;/key&gt; &lt;array&gt;     &lt;string&gt;bash&lt;/string&gt;     &lt;string&gt;-c&lt;/string&gt;     &lt;string&gt;bash -c "bindfs /Volumes/BRIGHTRED/ServedDocuments /sftpjail/Documents"&lt;/string&gt; &lt;/array&gt; &lt;key&gt;RunAtLoad&lt;/key&gt; &lt;true/&gt; /code/pre     and also  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt;     &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;com.user.loginitem&lt;/string&gt;         &lt;key&gt;Program&lt;/key&gt;         &lt;string&gt;/usr/local/bin/loginsftpjailmount.sh&lt;/string&gt;         &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;true/&gt;     &lt;/dict&gt; &lt;/plist&gt; /code/pre  <answer277202> The bindfs process has to be started with root privileges. Launching it as agent would prevent this.  So codesudo launchctl unload .../code and codesudo launchctl remove .../code (the subcommand emremove/em removes the agent from the launchd database - the file won't get deleted!) the plist, move the plist to /Library/LaunchDaemons/ and reload it with codesudo launchctl load .../code.  A properly named and composed org.user.bindfs.sftpjail.plist would look like this:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;         &lt;key&gt;Label&lt;/key&gt;         &lt;string&gt;org.user.bindfs.sftpjail&lt;/string&gt;         &lt;key&gt;ProgramArguments&lt;/key&gt;         &lt;array&gt;                 &lt;string&gt;/opt/local/bin/bindfs&lt;/string&gt;                 &lt;string&gt;/Volumes/BRIGHTRED/ServedDocuments&lt;/string&gt;                 &lt;string&gt;/sftpjail/Documents&lt;/string&gt;         &lt;/array&gt;         &lt;key&gt;RunAtLoad&lt;/key&gt;         &lt;true/&gt;         &lt;key&gt;StandardErrorPath&lt;/key&gt;         &lt;string&gt;/tmp/org.user.bindfs.sftpjail.err&lt;/string&gt;         &lt;key&gt;StandardOutPath&lt;/key&gt;         &lt;string&gt;/tmp/org.user.bindfs.sftpjail.out&lt;/string&gt;         &lt;key&gt;WatchPaths&lt;/key&gt;         &lt;array&gt;                 &lt;string&gt;/Volumes/BRIGHTRED&lt;/string&gt;         &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  The WatchPath key is often required (it was in my case) to avoid timing problems. You may remove the keys StandardErrorPath/StandardOutPath and its strings after ensuring that everything works properly.  <comment348922> I found my own answer. The problem is that bindfs is installed under /opt/local/bin and launchd cannot find it. So by simply changing my shell script to execute the full path, it runs. My shell script is now like "/opt/local/bin/bindfs directory1 directory2" instead of simply "bindfs directory1 directory2" But I have a new problem - it runs when I do sudo load manually, but doesn't run on login. <comment349912> Thanks for the launchd tips! It works perfectly.