Setting the system-wide PATH environment variable in Mavericks <body> In previous OS versions one could set the system-wide PATH environment variable in code/etc/launchd.conf/code to make it available for all apps (not just the command line).  In Mavericks this appears to be no longer used.  Is there another technique for doing this in mavericks?  <answer106372> You may be able to set environment variables in the file code/etc/launchd-user.conf/code...  In Mavericks, I was able to configure an environment variable in the file using the line:  precodesetenv TEST test /code/pre  After a fresh boot, code$TEST/code from /etc/launchd-user.conf is set.  strongEdit/strong  It's possible that the syntax of the file at /etc/launchd.conf is invalid. Can you post the contents of that file for examination?  From what I'm seeing, setting the PATH variable in /etc/launchd.conf is working normally. However, codelaunchd/code does not perform any parameter expansion. Therefore, if you have an entry like codesetenv PATH $PATH:/usr/local/bin/code, your resulting path would be set to "code$PATH:/usr/local/bin/code" (note: not the emvalue of/em PATH, but the text "$PATH")  <answer106549> There is a much easier way. Place a text file in the folder code/etc/paths.d//code. In this text file, enter the desired path AND a newline. The best way is to create a new file for each path.  On my system, there is a file called MySQL with the text '/usr/local/mysql/bin' and a newline.  <answer106814> h2Yosemite/h2  code/etc/launchd.conf/code is no longer supported in 10.10. See codeman launchctl/code:     The /etc/launchd.conf file is no longer consulted for subcommands to run during early boot time; this functionality was removed for security considerations.   You can now for example save this plist as code~/Library/LaunchAgents/my.startup.plist/code:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;my.startup&lt;/string&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;sh&lt;/string&gt;     &lt;string&gt;-c&lt;/string&gt;     &lt;string&gt;launchctl setenv PATH /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;RunAtLoad&lt;/key&gt;   &lt;true/&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  The codelaunchctl setenv/code command is ran as the user, so it only applies to processes launched in the user domain.  This method doesn't apply to applications that are reopened at login if "Reopen windows when logging back in" is checked.  h2Mavericks and earlier/h2  In 10.9 and earlier, you can for example run  precodeecho setenv PATH /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin|sudo tee -a /etc/launchd.conf /code/pre  and then restart to apply the changes.  h2Other methods/h2  code/etc/paths/code and code/etc/paths.d//code apply only (or mainly) to shells. The lines in code/etc/paths/code and code/etc/paths.d/*/code are added to the path by path_helper, which is run from code/etc/profile/code, code/etc/zshenv/code, and code/etc/csh.login/code. I don't know any programs other than shells that would consider code/etc/paths/code or code/etc/paths.d//code.  code~/.MacOSX/environment.plist/code stopped working in 10.8.  <answer108217> on my Mavericks install , adding "setenv PATH blablabla" to /etc/launchd.conf didn't work after reboot  so i added my new path to the end of /etc/paths , which worked.  <answer108710> Simply add your 'bin' (the path that you want to add) path to /etc/paths file - reboot or relogin !!!  precodesudo vi /etc/paths  (create a file (paths file) if it does't exist, I am using 'vi' editor, you can use your own as super user ) then, add your bin directory path like below   /usr/local/mysql/bin /usr/local/apache-ant-1.9.3/bin /usr/local/gradle-1.11/bin /code/pre  save the file and relogin ... hope this helps  <answer123516> I found that setenv PATH still works for me for Terminal and applications, but broke in shell scripts, launched directly via clicking or Open With in Terminal from, say, Finder. It's very strange. Other environment variables set in code/etc/launchd.conf/code work.  In order to fix it for shell scripts launched directly, I duplicated PATH setting in code~/.bash_profile/code.  <answer131538> Editing code/etc/paths.d/code or using code.bash_profile/code didn't worked for me, however as suggested from someone else (I actually came here for upvote his answer, but I couldn't find it again?!), I edited code/etc/paths/code which works for me  In my case, I added android-tool codeadb/code and codeandroid/code to terminal commands with pointing to their sdk paths (codeadb/code has moved to another directory nowadays) which look like  precode/usr/local/bin ... /Applications/adt-bundle-mac/sdk/platform-tools  //new entries /Applications/adt-bundle-mac/sdk/tools /code/pre  <answer188241> SWEET, adding that XML to ~/Library/LaunchAgents/setenv.SVN.plist allowed BBEdit to use the subversion binaries I installed in /opt.  precode&lt;clip&gt; &lt;string&gt;launchctl setenv PATH /opt/subversion/bin:$PATH&lt;/string&gt; &lt;clip&gt; /code/pre  <comment124941> Thanks, the problem I'm having is setting the PATH, other environment variables seem to work. <comment125036> @Tom - I've provided an additional suggestion above <comment127400> Can you elaborate a bit on how to do this? Not everybody knows how to use Terminal. <comment133885> It didn't work for me. I rebooted, `/etc/paths` contains everything I want and yet Sublime still sees only the original PATH. If I run it from terminal, it works. <comment133886> Doesn't work for me; see my comment above. <comment133887> Yep; it just doesn't exist by default but creating it and setting proper entries helps <comment148433> I've just posted [a new question](http://apple.stackexchange.com/questions/126725/making-items-added-to-paths-via-paths-d-show-up-everywhere-under-mavericks) about whether there are ways to address the weakness described by @LauriRanta. <comment152577> Just an anacdote: I have used this method as well, as it is the recommended "OS X way." I have not had much luck getting the System to honor consistently the PATH files I have in /etc/paths.d, and usually end up either using the export shell command, or placing my PATHs in ~/.bash_profile, which always work, if only for my current user account and not System-wide. If PATH files in /etc/paths.d always works for you, then I am jealous that your System is better behaved than mine ;) <comment161319> is it really launch-user.conf or launch-[current_user_name].conf <comment178055> On Yosemite, I found that some programs don't seem to see PYTHONPATH, which I have set in /etc/launchd.conf and I used your command line fix (the 2nd paragraph in your answer) and it doesn't seem to work, it just gives me the launchctl error/help message. <comment179438> @Tango I edited the answer. `/etc/launchd.conf` was removed in 10.10. <comment179615> This one is new for me. Nice! <comment179860> Thank you for keeping it up to date! <comment179920> I'll add that my experience, while playing around with bash, is that, on 10.10, launchctl setenv seems to do nothing.  I've tried setting env variables, then checked the value with echo and they were still undefined. <comment179973> @Tango Quit and reopen your terminal application after running `launchctl setenv`. `launchctl setenv` has never affected existing processes. <comment180267> Much appreciated!  I had no idea and that's an important point. <comment212215> The path_helper command in my /etc/profile uses /etc/paths and /etc/paths.d to overwrite any PATH that might have been set by /etc/launchd.conf <comment212218> /etc/launchd.conf containing 'setenv TEST test' does not propagate into Terminal on my Mavericks. <comment212220> Oops: s/Mavericks/Yosemite/. <comment212437> @DaveX I think that it's recommended to use `/etc/paths` or `/etc/paths.d` to add new paths to your Terminal environment as described in the answer above (in the "Other methods" section.) <comment212608> @Eddie Kelly: If you must use /etc/paths* for terminal and /etc/launchd* for non-terminal apps, then there isn't a single place to set a global variable. <comment222826> Any idea how to determine if this file supports parameter expansion? I may have set the path so the one in /opt is the only one. And I'm thinking that it's likely it does NOT support using $PATH. How would you determine the existing path to begin with? <comment358633> Note that applications started by "Preferences - Users & Groups - Login Items" won't get the environment variables.