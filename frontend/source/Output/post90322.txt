File System seems slow/unresponsive: how to measure/test? <body> I'm running a MacBook Pro, Mid 2010 model, that I recently upgraded to Mountain Lion. Around that time, or maybe shortly after, I began noticing some problems that I can only attribute to a general slowdown in accessing files on my hard drive. I have 8GB RAM, and rarely run out, so I don't think it's just a matter of paging vs not paging.  The evidence is reasonably convincing. For example, I'm a Java programmer and use NetBeans. The app I have configured takes over a minute on this machine to run, but only 30 seconds or so on a more-or-less identical setup on a much weaker machine: a late 2008 MacBook with only 4GB RAM. And what it's mostly doing is reading and processing several hundred files of various kinds.  So far, though, the evidence is entirely anecdotal. I'm looking for some kind of test I can run that will see whether my file system/HDD is performing as expected or whether it's something else entirely. Also something I could take to the Apple Store and say, "look this thing says there's a problem." Does such a thing exist?  Edit: another interesting difference. This Mac takes just shy of three minutes to reboot (that's desktop disappearing to desktop reappearing). The older MacBook I'm comparing against (also running 10.8.3) takes just over one minute.  <answer90332> The upgrade might have corrupted your Spotlight index - which would result in the computer constantly reindexing itself (or at least, seeming to). I've heard this is a common occurrence when upgrading through OS X - it happened to me when I upgraded to Lion.  You can destroy the Spotlight index by doing the following:  ol liGo to System Preferences → Spotlight → Privacy and exclude your HD, reboot and then include it again. This emshould/em prompt Spotlight to reindex (having destroyed the old index). subSource/sub/li /ol  If that doesn't work, try deleting the Spotlight index manually. This will force it to reindex.  ol liIn terminal run codeman mdutil/code - this will allow you to verify by using the manual function that this is a command related to spotlight./li liOnce satisfied run codemdutil -i off/code, switching off the Spotlight index./li liRun codesudo rm -rf /.Spotlight-V100/code This will delete the entire Spotlight cache.  You may prefer to rename it using codesudo mv /.Spotlight-V100 /disabledspotlight/code - it will have the same effect, and gives you a backup./li liRun codemdutil -i on/code to restart indexing./li liLeave for a few hours while it does its thing./li /ol  Some references as to the safety of doing this:  ul liMacRumors Forum Thread: "Is .Spotlight-V100 safe to remove?:/li liApple Support Communities Thread: "Removing/deleting Spotlight-V100?"/li lithe Apple Genius that helped me when I was having Spotlight issues./li /ul  This could be emtotally/em off, and not your problem at all - but on the other hand, it might help.  <comment106008> What does activity monitor say? It'll let you look at your entire resource usage and figure out which one is your limiting factor. <comment106012> Oh is there a view in Activity Monitor that lets you watch all the usage at once? <comment106013> Well, you can work your way through them - it should (hopefully) be clear which one is maxed out, and it might even tell you if there is a process resource hogging. I also just had an idea for a cause that I will post as an answer (its long) <comment106014> Thanks. The thing is, CPU does spike for most of the time this is happening, but that was always the case and doesn't - alone -  explain why it got drastically slower over time.  Unless some kind of other problem is causing the CPU itself to run less efficiently or do extra work for the same operations. <comment106016> They sound to me like things that could be caused by a corrupt spotlight index. It may be something else entirely, but its as good a place to start as any. <comment106029> Rebooted. We'll see how it goes. One interesting thing is that this machine took almost three minutes to reboot (vs just one minute for the older machine)