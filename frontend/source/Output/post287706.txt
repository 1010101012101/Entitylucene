Safe to change TMPDIR? <body> I recently installed Open MPI, and it's complaining   precodePMIx has detected a temporary directory name that results in a path that is too long for the Unix domain socket: Temp dir: /var/folders/**/*****************************/T/openmpi-sessions-501@host*******************************/***** /code/pre  This question suggests setting codeTMPDIR/code to code/tmp/code. Is that safe? Will it mess up other programs?  <answer287710> There can be security flaws that result from the careless use of code/tmp/code; malicious local users may be able to delete arbitrary files or possibly even run arbitrary code under your user account, depending on how bad the code/tmp/code flaw is. A solution that remains within the codechar sun_path[104]/code limit on unix domain sockets (see code/usr/include/sys/un.h/code for the definition) is to create a temporary directory and use that for MPI:  precode$ mktemp -d /tmp/mpi-XXXXXXXX /tmp/mpi-zUN9SQo6 /code/pre  which leaves 86 characters for the socket file to use (104 minus one for the trailing codeNUL/code minus 17).  Depending on where and when you set codeTMPDIR/code other programs could easily be messed up, notably codetmux/code or codescreen/code that then may not then be able to locate their control socket. If possible, scope the custom codeTMPDIR/code setting as close to the MPI calls as possible, e.g. with a shell function or alias along the lines of  precodealias mpi4py='TMPDIR=$(mktemp -d /tmp/mpi-XXXXXXXX) mpi4py' /code/pre  This would create a unique temporary directory for each invocation; the directories in code/tmp/code are pruned automatically. If a shared or more persistent directory is needed code/var/tmp/code is typically more suitable  precode$ mkdir /var/tmp/mympi /code/pre  strongand be sure to confirm the directory did not already exist/strong in the event a far too clever local attacker has already created that directory (unlikely, but this is why codemktemp -d/code was created). Then, in your shell profile the alias might look something like  precodealias mpi4py='TMPDIR=/var/tmp/mympi mpi4py' /code/pre  This form is again more suitable if there is shared state necessary between different MPI command invocations.  <comment363297> @patrix that's going to proliferate random tmp directories for each invocation; all that is really necessary is a single unique directory safe from /tmp vulnerabilities. <comment363298> `/private/tmp` gets pruned regularly. If I just want one fixed tmp location for a specific application I would probably just create `/tmp/APPNAME_temp` and use this. <comment363299> Feel free to roll back the edit if necessary. <comment363308> Just for the sake of generalization: The method is to create a *new* temporary tempdir, use that for mpi, and then when mpi is done `TMPDIR` is back to the old value? So if I want to use `mpi4py` I can change `TMPDIR`, do whatever, and then just close that terminal? <comment363310> And should your command at the end be `alias yourmpicommand='TMPDIR=$(mktemp -d /tmp/mpi-XXXXXXXX) yourmpicommand'` like above? Or is that something different? <comment363315> You would set an appropriate `alias` in your shell configuration; the terminal would not need to be closed as the custom environment would only apply to the command with the alias. Learning the basics of e.g. `bash` may be beneficial if this all seems mysterious. <comment363327> But if I alias `mpiexec`, for example, then a new `TMPDIR` would be set every time I run `mpiexec`. That doesn't seem like what I want to do. (Or is it?) <comment363329> I showed how to either use a single unique tmp directory or how to make a new one each run. I am not familiar enough with MPI to know which if either is more suitable.