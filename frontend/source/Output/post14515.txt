How to send text with telnet in Terminal? <body> I would like to send some text to a port on my machine using codetelnet/code in the Mac OS X Terminal.  I start codetelnet/code using:  precodetelnet localhost 8080 /code/pre  Then I type some text. Is that text send automatically or do I have to do something to send the text?  <answer14518> Try using codesend/code command after you've opened connection to the destination host.  precodesend "some text" /code/pre  For more information about codesend/code see codeman telnet/code  <answer14521> The answer depends on what the remote end supports:  ol liNewer Line Mode where character processing is done locally while the remote only sends and receives control packets during typing and receives whole line when entering some end-of-line char (e.g hitting ENTER)./li liCharacter-at-a-time where each char is transmitted as it is typed./li liOld line-at-a-time - fully completed lines are transmitted./li /ol  What the remote end does with the received input, depends on the remote end. Most server processes (HTTP, SMTP, POP, IMAP) tend to wait for end-of-line (EOL, newline) char before processing input. Some others may wait for end-of-file (EOF, ^D) before starting to process the input.  <answer14523> Here's a simple Python server:  precode#!/usr/bin/env python  import socket   TCP_IP = '127.0.0.1' TCP_PORT = 5005 BUFFER_SIZE = 10  # Normally 1024, but we want fast response  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.bind((TCP_IP, TCP_PORT)) s.listen(1)  conn, addr = s.accept() print 'Connection address:', addr while 1:     data = conn.recv(BUFFER_SIZE)     if not data: break     print "received data:", data     conn.send(data)  # echo conn.close() /code/pre  Source  Save it as server.py, and run it codepython server.py/code.  Then try to connect using the terminal  precodetelnet 127.0.0.1 5005 /code/pre  Then just type anything and press kbdreturn/kbd  The server print the data in the console and send it back to you.  That way, you'll know what you have to do to send data via telnet.  <answer226902> When you typing the text in codetelnet/code, by default it operates in emLinemode/em which send the packets per line, so you just need to press kbdEnter/kbd to send the command to the remote host (since terminal character processing on the client side). This is in order to reduce network traffic and it is very useful for long delay networks while typing the command line. If you need to send packets per character typed, then you need to switch to binary mode.  hr  To test Telnet in emLinemode/em, you can run the dummy server to be listening on the local port, e.g. by using codenetcat/code (install if needed):  precodenc -vl localhost 1234 /code/pre  then in another terminal connect to your server by:  precodetelnet localhost 1234 /code/pre  or in codebash/code:  precodecat &gt; /dev/tcp/127.0.0.1/1234 /code/pre  and start entering some text to check when the data is received. Hit kbdControl/kbd-kbdC/kbd to finish.  <comment15648> I tried, but I just get a new line when I press enter after it. <comment15653> What is listening on port 8080? It is an address commonly used for web servers when the usual HTTP port 80 is unavailable. If it is a web server, you need to send a complete HTTP request, finished by two newlines (return characters, really). Normally, as explained by Laas below, a newline will trigger the sending of a line. <comment171680> The `send` command is for sending special character sequences to remote machines, not random text. See the man page: https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/telnet.1.html