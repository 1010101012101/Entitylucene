Is there a name for the common ground between Lion and iOS 5? <body> While working on the wording for another question, I wanted to refer to the parts of the Apple environment which are, by design, the same in Lion and in iOS 5.    For example, it is reasonable to expect that the available emrelationship/em types will be the same for iOS 5 strongContacts/strong and Lion strongAddress Book/strong.  It is surprising that strongSiri/strong understands emson/em, but that iOS 5 strongContacts/strong knows only emchild/em; this is attributable to strongSiri/strong's beta status.  For items that sync in iCloud, Lion and iOS 5 probably use a single canonical structure specification or separate structure specifications which are kept conformant by engineering discipline.  What is the name of the set to which these item's structures belong?  Would one write "the iCloud address book entry format", "the Mac address book entry format", "the Winesapsup1/sup address book entry format", or what?  hr  sup1/supspeculative  <answer29761> I happen to be writing a book on iCloud now, and I've had to deal with some of these issues. It's instructive to note that although the respective applications on Lion, iOS 5, and the iCloud Web site are Address Book, Contacts, and Contacts, respectively. They all are containers for one thing, which they use the same terminology: Contacts.   I do not plan to use the terms you suggest above; rather, I am saying things like "entering contacts in Address Book," "entering contacts in Contacts," "changing contacts on the iCloud Web site." It's the context that matters, since the set of data is the same, and enforced by syncing.  <comment35921> The file formats are rarely the same between iOS and Lion, however the API to access them insulate the local storage instantiations of the data from the actual data content. Could you refine this to be more specific and perhaps answerable? What problem are you trying to solve here or is this hypothetical wondering how things are engineered? <comment35951> @bmike The very-answerable question is about the _name_, not about how things are engineered.  I ask the question plainly in the first sentence of the last paragraph, and give example answers in the second sentence of the last paragraph.  The problem I am trying to solve is given in the first sentence of the question: I want to refer to the parts of the Apple environment which are, by design, the same in Lion and in iOS 5.  I see that I used the word "format" in my example answers, and the fact that this caused misunderstanding is evidence that my example answers are inadequate. <comment35952> I couldn't wrap my brain around what the bounds of "parts of the Apple environment which are, by design, the same in Lion and in iOS 5" means in practice. Good thing there are more people than me to help fielding your question. :-) I see serial numbers, network protocols, mail message formats, physical cord connectors, icon formats and much much more as design parts that are identical between iOS and OSX. It seems quite broad to me without some more bounds to frame what besides contact info you seek, but I'll sit back and see what others besides Tom come up with for an answer to your query. <comment35967> @bmike, what if the name were _Winesap_?  Then you could write something like "Winesap defines a _HumanBeing_ entity, which the user manages by Address Book, Contacts, or Contacts; the _HumanBeing.Relationship_ property can take values from an enumerated list, including _son_, _daughter_, or _child_.  Any application which deals with human beings must handle these values in order to be Winesap compliant.  Winesap does not have "second cousin once removed" as a relationship type; if your application permits this relationship, expect it to be lost when synching with iCloud, iOS 5, or Lion." <comment35970> @bmike, beyond contacts Winesap might include entities for Songs (presumably something much like the iTunes metadata), for Printer options, for a Keyring, for Locations, for Calendars (including repeating events).  At the time I'm writing this, I cannot create an every-weekday event using iOS 5's calendar, but I can with Lion.  Is iOS 5 not Winesap-compliant, or is Lion using Extended Winesap?