iOS: Disabling the Home key on a bluetooth keyboard, and binding it to another key (and the same for capslock) <body> I have a jailbroken iOS 6 iPad that I am trying to get a bluetooth keyboard set up to be capable of performing productive work. Unfortunately, both bluetooth keyboards that I have are "designed for iOS" and have the Home button (rounded square symbol) in the place where the escape button is.   This is a significant problem, for example, when using e.g. Vim in a console app. The only way to hit Escape (which is required for effective use of the editor) is with an on-screen soft-key.  I have installed Beekeyboard from Cydia which does let me configure shortcuts to trigger various useful events and commands like toggling Wifi and other rarely used functions, as well as very nice functions like the default codeAlt+Cmd+Left/Right/code to cycle through iOS apps.  However I am unable to get it to override the behavior of the codeHome/code key. I can bind it to "Toggle Mute" and it does toggle mute, but it closes my app while doing so, making this button completely useless.  In order to actually be able to Vim on this setup I have to be able to trigger the Escape key, or bind some key to perform the function of Escape. On my primary computers I have the Caps Lock key bound to F10 at the operating system wide level (in OSX and Windows), and I have Vim configured to treat F10 the same way as Escape. Now, on jailbroken iOS with a bluetooth iOS-keyboard, the Home key is dysfunctional as already described, and the caps lock key appears to work inconsistently. For instance in this Stack Exchange text entry field it functions as a Ctrl Lock key, though in most iOS text entry fields the caps lock works as normal.   I have found no way to bind caps lock to something else (and prevent it from toggling shift/ctrl lock), so currently the only way way for me to use Vim is to hit Fn+F10 to get the F10 key sent.   So I would like to know if anybody has been able to bind these keys to Escape or any other key, and to prevent their default behaviors.  <comment122760> Apparently [iOS 7 has APIs](http://blog.swilliams.me/words/2013/9/19/handling-keyboard-events-with-modifier-keys-in-ios-7) to allow apps full access to the keyboard! This is great, but does not address OS level behavior modification (nor should it). It does mean, though, that I can perhaps hope for my terminal emulator app to eventually allow me to customize the binding of these keys (but again, this seems doubtful as the Home and Caps Lock behavior are probably hardcoded in the OS) <comment123033> You could talk to the creator of Activator, [Ryan Petrich](http://rpetri.ch/), and ask him to add support for external keyboards, as this is right up his alley.