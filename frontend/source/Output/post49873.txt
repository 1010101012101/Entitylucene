What is the difference between the sudo and su command? <body> What is the difference between the codesudo/code and codesu/code command? Why does OS X handle these different than Linux?  <answer49875> OS X handles codesudo/code and codesu/code identically to Linux.  codesudo/code is a command that, without any additional options, will run a command as root. For example:  precode% touch /newfile touch: /newfile: Permission denied % ls -l /newfile ls: /newfile: No such file or directory % sudo touch /newfile % ls -l /newfile  -rw-r--r--  1 root  wheel  0 Apr 27 11:45 /newfile /code/pre  codesu/code on the other hand, will switch the current user to root (again without any extra commands). In the example below, I have to run codesudo su/code, since I don't know the root password for my system:  precode% whoami alake % sudo su $ whoami root /code/pre  The key difference between codesudo/code and codesu/code is codesudo/code runs a command as root, whereas codesu/code makes you root. Much like other command line utilities there are a number of alternative ways to use both codesudo/code and codesu/code, if you're interested you can always run codeman &lt;command&gt;/code eg. codeman sudo/code to get more information.  <comment57139> In simple language terms `sudo` can be though of as `super user and do`. As an additional point, on OS X, once you have successfully authenticated you may then use [sudo](http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man8/sudo.8.html) without a password for a short time (5 minutes by default, unless overridden in `sudoers`) after which you will have to type the password again. <comment57142> +1 @AaronLake very nice and well explained answer. <comment57150> the 'without additional options' is a pretty significant qualifier ... they'll both let you become users other than root ... eg, `sudo su -lm _www` will let you have as shell as if the webserver user (by running the command as root, as it doesn't have a valid password) <comment57152> @Joe, I considered adding that information but omitted for brevity. As you describe, `sudo` is quite a robust utility and covering even basic functionality here would ultimately confuse or overwhelm the target audience looking for a differentiation between `sudo` and `su`. <comment57179> "The key difference between sudo and su is sudo runs a command as root, whereas su makes you root" - false, `sudo -s` runs shell ("makes you root"), and `su -c command` runs command as root. <comment57181> Again for brevity's sake I omitted the many alternative methods of using `sudo`. Also, you can't do `su -c command` by default on OS X, since you don't know root's password. You can, however `sudo su`, change the password, then `su -c command`. I feel that the question was answered, and there wasn't a need to dive deeper in to alternate uses of sudo and su. However I'll update the post for the curious folks. <comment57557> If anything, Linux would handle them differently than OS X. OS X is certified Unix, which means it conforms to a certain standard of behavior. Linux is Unix-like, but is not certified Unix and doesn't necessarily conform to the Unix standard. So if there are differences (other than the root password issue noted in Aaron Lake's answer), they are non-conformance on the part of the implementers of the particular Linux distribution in question.