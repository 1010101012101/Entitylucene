How do you get a Cisco VPN connection to remember its password? <body> h1The Problem/h1  I've got a Cisco IPSEC VPN connection in my network settings on a Yosemite machine. It works fine, aside from prompting for a password on every single connection. The saved password is ignored entirely.  h1Background/h1  If I enter the password under the network settings and click connect, the saved password vanishes, and the dialog prompting for a password appears. I've verified that the password is correct (it's copy-pasted from a document).  h1Things that didn't work/h1  ul liA suggested solution to this for Snow Leopard was to save the password, open Keychain Access, locate the "Xauth" key in the system keychain, and grant code/usr/libexec/configd/code access to the key. This had no effect./li liUsual permissions repair/disk check stuff/li /ul  h1Weird stuff/h1  If I watch keychain access while hitting the connect button, the saved password strongvanishes outright/strong from the keychain right when the dialog appears.  h1Overall Question/h1  How do I get the password correctly saved so I don't have to rekey it on every connection?  <answer224888> From reading your question I get the impression that you're doing everything correctly and the Cisco VPN Server has the option to allow saving of passwords client-side set to codedisallow/code.  I know for certain that such a setting exists.  <answer260928> I guess you are using anyconnect to connect to the Cisco VPN server. AnyConnect can also be used from Terminal. This works on macOS Sierra and AnyConnect 3.1.14018. Create a bash script with the following command:  precode/opt/cisco/anyconnect/bin/vpn connect your-vpn.server.here -s &lt;.credentials /code/pre  And put the login details in the file .credentials with the following three lines:  precode0 your-username your-password /code/pre  Don't forget to put reasonable permissions on the files.  <answer272909> Both answers here as I write this have the right of it, but the existence of the codevpn/code command line means that we can get around this user-hostile design with codeexpect/code. Thanks go to the previous answerers, GhostLyrics for revealing the existence of the server side option that turns off password saving, and Hans for revealing the codevpn/code command line client.  Create a file that looks like this:  precode#!/usr/bin/expect -- set timeout 10 set addr ""  # VPN Host set user ""  # Username set pass ""  # Password (ensure that special characters are escaped) set group "" # Group NUMBER shown in connect prompt   spawn /opt/cisco/anyconnect/bin/vpn connect $addr expect "\r\nGroup:*" send -- "$group\r" expect "\r\nUsername:*" send -- "$user\r" expect "Password: " send -- "$pass\r" expect eof /code/pre  Fill out the codeset/code fields as normal. If your VPN is like mine, you're given a list of "groups" when you run the codevpn connect/code. Run this once by hand, and note which number corresponds to the group you want to connect with. It won't change between runs unless the admins add/remove groups. You can't use the name here, the program expects a number.  Once everything is filled in, codechmod +x/code this script and run it. I am now able to connect to my VPN, hands free!  <comment238076> hmm. I also get weird authentication issues on Yosemite especially in the Network dialogue. Wouldn't be surprised if there is a bug involved. <comment238338> Are you sure it doesn't depends on remote VPN policies (now allowing password saving)? <comment253144> That.. would explain why it straight-up disappears from the keychain if explicitly saved. Will have to have a chat with the network admins! <comment304702> It's still annoying that the OS X client _allows_ this `disallow` setting. Much like compiling okular without DRM support in order to copy a sentence from a peer-reviewed journal, it seems that this is a fundamentally user unfriendly setting. <comment329862> User states "I've got a Cisco IPSEC VPN connection in my network settings on a Yosemite machine". This choice of words led me to conclude with rather high certainty that they are using the build-in VPN solution inside System Preferences/Network/+ <comment329949> can you pass that file through somehow with the usernames &/or passwords encrypted? like with the passwords file on linux