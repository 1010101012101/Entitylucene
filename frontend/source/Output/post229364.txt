Why is Time Machine backing up to .sparsebundle file? <body> In the past, I had used only an external hard drive for my backups. It worked great, and it backed up to folders, in a way that I could go to individual files in the backup. I decided that since I was on a laptop, I should be backing up wirelessly (so I don't have to keep it plugged in). After my first painfully long backup to my old Time Capsule, I realized the file was not a folder but a .sparsebundle file. What is this? How do I change it back?  <answer229365> I'm pretty sure you can't, and you wouldn't want to. The OS only bypasses the bundle for locally attached backup destinations.  ul liDirect attached storage (DAS) uses the HFS+ filesystem and /Backups.backupsdb folder structure/li liNetwork attached storage (NAS) uses the sparse bundle format to embed a HFS+ filesystem on whatever filesystem that the NAS uses natively./li /ul  Time Machine's backup format plays some very interesting tricks with the Mac OS Extended filesystem that aren't really possible over a generic network storage volume. It's also optimized to minimize network traffic when files change. This speeds both backup, browsing and restore operations and minimizes the volume of data file changes on the NAS for small changes on the source disk.  In order to get TM to work over a network connection, it stores a disk image (in sparse bundle format) on the network server, and mounts that locally on the client. Since it's mounted locally, the client has full access to the filesystem and can play all of the necessary tricks.  So, without the .sparsebundle, you wouldn't be able to back up over the network since it optimizes the amount of data sent to the Time Capsule when a file changes as well as reduces the load on the Time Capsule to handle easier IO to the disk.  You can still mount the sparse bundle image on any OS X machine and navigate to files. The only drawback might be if you are using an OS that doesn't have a filesystem plug in for sparse bundle storage format.  <answer229374> A Sparsebundle is a disk image format introduced by Apple in OSX 10.5 as a method of effectively using space for backups on a disk. This is an expandable/retractable disk that will only take up as much room as the data inside of it up to a predefined limit (in the case of TM, the size of the partition). This also allows for incremental backups in which parts of a file can be layered on top of one another so you can perform a revisional history instead of replacing a file with a full new copy each and every time.  Source  As for why, Apple reserves the right to have their proprietary backup tool save data under whichever format they think would work best. As such, they developed their own. At this time, there is no way to make Time Machine use a different format - you will have to use a different backup utility to achieve that.  <answer229415> I'm pretty sure Time Machine uses the .sparsebundle format only if you encrypt your backup.  You have two options if you want to be able to browse the contents of your backups. The first is to deselect the option to encrypt your backups. The second option, which I would recommend is to just double click on the .sparsebundle and let OS X mount it as a drive (you'll need the encryption password). That little bit of effort will get you what you want—you'll be able to browse the backups—without sacrificing security.   <comment279781> It would be much more informative if you'd provide actual facts about the reason Time Machine is using a sparse bundle and explaining what these "_tricks_" are, then saying things like... "_Time Machine's backup format plays some very interesting tricks with the Mac OS Extended filesystem that aren't really possible over a network connection._"  and "_... and can play all of the necessary tricks._", which really doesn't effectively answer the question. <comment279783> A blurb from the [Time Machine](https://en.wikipedia.org/wiki/Time_Machine_(OS_X)) Wikipedia article expresses a reason as to why it uses a sparse bundle with network storage devices in better detail then Gordon Davisson's answer.  "The significant difference is that when using remote storage, Time Machine uses sparse bundles; this acts as an isolation layer, which makes the storage neutral to the actual file system used by the network server, and also allows to replicate the backup from one storage to another. <comment279784> Sparse bundles are mounted by OS X like any devices, presenting their content as a HFS+ formatted volume, functionally similar to a local storage." <comment279796> @user3439894 You might want to add that an an answer, that's pretty good. <comment279853> @user3439894 Unfortunately, I'm not entirely sure what the details are. I *think* the biggest "trick" is hard links. When TM sees a file (or folder) that hasn't changed since the last backup, it doesn't store a new copy in the current backup, it uses a hard link to include the already-backed-up copy in the current backup folder. I'm pretty sure the AFP file sharing protocol doesn't support hard links. But since I'm not totally sure (and this may not be the only thing), I didn't want to include this in my answer. <comment282872> Thank you! This is exactly what I was looking for. One thing though: You say that a sparse bundle image can be mounted on any OS X machine. While this may be because of my slow connection, I cannot mount the sparse bundle image. It just says, "Resource temporarily unavaible". Thanks! <comment282875> @SamMagid This error appears to be due to the image not being properly dismounted. I see a lot of discussion of it on the net, with a variety of possible solutions -- see [this c|net article](http://www.cnet.com/news/sparse-bundle-resources-temporarily-unavailable/) and [this Apple Discussions thread](https://discussions.apple.com/thread/6605743?tstart=0). <comment303515> Encryption happens with FileVault whether you have a DAS volume (USB or direct connect drive) or NAS (network attached storage) like Time Capsule or a file share appliance or server. The sparse bundle format is for all NAS destinations regardless of encryption status. <comment303533> @GordonDavisson, hard links is definitely the biggest thing. Specifically, hard links to directories, which are unsupported in other filesystems because they can create directory loops.