Using TextMate, how can I wrap everything in PHP tags? <body> A question about TextMate. For example, I just typed codevar_dump($codes);/code, and I forgot to write code&lt;?php ?&gt;/code. So, now I want to highlight the area that I want to wrap the php tags around. How can I do this?  <answer22974> You could select the line your PHP command is on and do a Search and Replace operation with a regular expression. Search for  precode^(.*)$ /code/pre  and replace it with  precode&lt;?php $1 ?&gt; /code/pre  as seen in the screen shot. The regular expression will match everything on the line and wrap the PHP tag around it.  img src="https://i.stack.imgur.com/YnvWP.png" alt="TextMate Screenshot"  <answer22980> The HTML bundle has a command to wrap in code&lt;?= ?&gt;/code:  img src="https://i.stack.imgur.com/AGW2V.png" alt=""  You could assign a keyboard shortcut to this from the Bundle Editor, and if you're so inclined you could even add a new command for code&lt;?php ?&gt;/code.  <answer22981> Simply add a new command called for ex 'Wrap in ' in your php bundle editor (Bundles-Bundle Editors-Show Bundle Editor)   In the Activation choose: Key Equivalent and hit: codeCMD+SHIFT+W/code (or whatever you'd like that's not already taken).  Leave the scope selector to codesource.php/code  In the snippet window write:  precode&lt;?php  $TM_SELECTED_TEXT ?&gt; /code/pre  Now select anything and hit codeCMD+SHIFT+W/code and you're done  Sorry I couldn't upload an image to show you I've just signed up.  strongEDIT/strong I now have enough reputation to upload the image:  img src="https://i.stack.imgur.com/4nn9D.png" alt="enter image description here"  <comment25778> Is this fast, especially with big files? <comment26675> That I don't know, I'm a BBEdit user myself :) I did download a TextMate demo to figure out that one. <comment26686> I was asking because sometimes Textmate is really really slow with regexes, and this looks like it might make it choke. <comment26831> That's very possible. I'm kind of a Unix person, so my approach was a little Unix-ish. The other mentioned solutions are obviously better suited for this particular problem.