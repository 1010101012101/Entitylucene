Where are all of the command line tools installed? <body> I was playing around to set up a prober working/development environment.  I installed command line tools such as:  ul liNodeJS/li liNPM/li liGrunt/li liBower/li /ul  strongWhere/strong can I strongfind/strong those tools and stronghow/strong can I strongdelete/strong them? Is there any routine?  <answer114068> Since they're all command line tools, you can find them using codewhereis &lt;tool&gt;/code or codewhere &lt;tool&gt;/code. Many command line tools can be removed simply by deleting the file found at this location, however they may leave configuration files at various locations about your system. You can usually find a full guide on uninstalling a command line tool and its associated files by searching the website of the tool that you wish to uninstall.  <answer114080> The codewhereis/code command only looks in the standard executable paths. Try codewhich bower/code instead. Here's an example from my machine. I used "git" because I don't have "bower" installed.  precode~ 506 whereis git /usr/bin/git ~ 507 which git /opt/local/bin/git /code/pre  codewhereis/code returned the path of the system-installed version of "git". codewhich/code returned the path of the version that actually runs when I type "git" at the command line.  <comment133738> it returns nothing... no path or sth! of course i installed commands which i forget about, is there a way of find them? any standard-directory? <comment133739> @2DD8847 Are you typing the exact name of the tool equal to what you type in Terminal to use the tool? <comment133757> When i type 'bower' for example, i'm getting an info page of the how-to-using, when i tyoe 'whereis bower', i get nothing... <comment133759> bash command not found <comment133760> 'whereis ls' works... <comment133762> @2DD8847 You might have to resort to Googling each individual tool to find where it is, but I've probably overlooked somethingâ€¦ <comment133775> The default of all reasonable command line tools is under /usr/local. If you use a package manager then in that package manager's directory (comment re reasonable is that there are some badly behaved ones e.g. mono)