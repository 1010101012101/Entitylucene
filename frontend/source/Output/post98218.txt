Using Redsocks on Mountain Lion <body> I'm trying to use redsocks on Mountain Lion for system wide SOCKS proxy. How can I configure the iptables on OSX to redirect tcp traffic to redsocks.  The redsocks documentation mentions the following rules -:  precode# Create new chain root# iptables -t nat -N REDSOCKS  # Ignore LANs and some other reserved addresses. # See Wikipedia and RFC5735 for full list of reserved networks. root# iptables -t nat -A REDSOCKS -d 0.0.0.0/8 -j RETURN root# iptables -t nat -A REDSOCKS -d 10.0.0.0/8 -j RETURN root# iptables -t nat -A REDSOCKS -d 127.0.0.0/8 -j RETURN root# iptables -t nat -A REDSOCKS -d 169.254.0.0/16 -j RETURN root# iptables -t nat -A REDSOCKS -d 172.16.0.0/12 -j RETURN root# iptables -t nat -A REDSOCKS -d 192.168.0.0/16 -j RETURN root# iptables -t nat -A REDSOCKS -d 224.0.0.0/4 -j RETURN root# iptables -t nat -A REDSOCKS -d 240.0.0.0/4 -j RETURN  # Anything else should be redirected to port 12345 root# iptables -t nat -A REDSOCKS -p tcp -j REDIRECT --to-ports 12345  # Any tcp connection made by `luser' should be redirected. root# iptables -t nat -A OUTPUT -p tcp -m owner --uid-owner luser -j REDSOCKS /code/pre  <answer100627> Before 10.7, Mac OS X used IPFW, but it is now deprecated for ipfilter (pfctl) from OpenBSD.  The bug that causes sshuttle to have occasional kernel panics is not with sshuttle, but with IPFW on OSX 10.7 and 10.8, so redsocks will have the exact same issue.  Unfortunately, I don't know enough ipfilter to get it working with redsocks, but if I ever figure it out, I'll definitely share it.  <answer104480> You can set up redsocks on OS X Mountain Lion using ipfw using commands similar to the one below (assuming your redsocks is set to listen on port 12345 and that you want to redirect all TCP connections to ports other than 22). I use redsocks on Mountain Lion on a mid 2011 Mac Mini and it works great  codesudo ipfw add fwd 127.0.0.1,12345 tcp from me to not me not dst-port 22/code  AFAIK this won't actually work without setting the scopedroute flag to 0. Read more details here (you don't actually need to do the SSL certificate stuff, just set the scopedroute flag): http://lucumr.pocoo.org/2013/1/6/osx-wifi-proxy/  Disclaimer: I am not the author of the linked post  <comment115324> Note OSX is nased on FreeBSD and so does not use iprables but does have ipfw so you will need to wait for it to be tested. The docs say  "Test OpenBSD (pf) and FreeBSD (ipfw) .... <comment115327> Thanks, didn't read that. Can you recommend any alternatives for OSX? I tried sshuttle, but it gives kernel panic occasionally.