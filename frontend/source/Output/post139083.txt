When can they use ESC to close windows? <body> So, I coincidentally noticed the following behavior:  Some windows can be closed by pressing the kbdesc/kbd key, like the Preference window in any app or the 'Safari help' window or the 'Fonts' window in TextExit for example.  Other windows can not be closed by pressing the kbdesc/kbd key, like the Safari browser window or the 'Special Characters' window.  The default kbdcmd/kbd kbdw/kbd always seems to work.  What is the rule for keystrokes on closing windows? When are we allowed to use kbdesc/kbd ?  <answer139086> Using the codeesc/code key to close a modal dialog is usually the same as pressing the Cancel button for the dialog. This is similar to how pressing the codeReturn/code or codeEnter/code keys confirms the action for the button that is highlighted.  This has been in Apple's Human Interface Guidelines for Macintosh since the very beginning and is not new to OS X. The guideline can be found here under the "Dismissing Dialogs" heading:  https://developer.apple.com/library/mac/documentation/userexperience/conceptual/applehiguidelines/Windows/Windows.html#//apple_ref/doc/uid/20000961-TPXREF56  Search for "escape" on that page. The match is about 3/4 of the way down the page and is explicit about this behavior.  From the Human Interface Guidelines:     In general, include a Cancel button. The Cancel button returns the   computer to the state it was in before the dialog appeared. It means   “forget I mentioned it.” Also, strongmake sure that the keyboard shortcut   Command-period and the Esc (Escape) key are mapped to the Cancel   button./strong   Another useful behavior, is if a dialog accepts codeReturn/code or codeEnter/code as part of a text field, very often pressing codeCommand/code-codeReturn/code will press the default button.  <answer139107> What you're seeing, namely, the behavior where the Escape key closes the window, is automatically built in to the codeNSPanel/code class, which is a subclass of codeNSWindow/code.  From codeWindow Programming Guide &gt; How Panels Work/code:     A panel is a special kind of window, typically serving an auxiliary   function in an application. The codeNSPanel/code subclass of codeNSWindow/code adds   a few special behaviors to windows in support of the role panels play:      ...      • strongIf a panel is the key window and has a close button, it closes itself/strong   strongwhen the user presses the codeEscape/code key/strong.   The preferences window (or panel) in many applications is implemented as an codeNSPanel/code: for example, Safari, Preview, Terminal, Console. The Fonts panel in Cocoa apps is implemented as an codeNSPanel/code. When you choose Safari  Safari Help, it actually launches an invisible background application, HelpViewer.app (/System/Library/CoreServices/HelpViewer.app), whose main window is implemented as a floating codeNSPanel/code. For these reasons, those panels will respond to the Escape key by closing the window. Standard general windows, which are instances of codeNSWindow/code, don't automatically get this behavior, as only panels are meant to behave that way.  <comment164054> IMHO it's probably a dev choice to bind esc to the closing action. <comment164055> @MatthieuRiegler Apple has some strict User Interface Guidelines. I hoped someone knows if this keybinding is noted in the guidelines somewere so I can predict this behaviour. <comment164067> This is the answer I am looking for, but I am still not completely satisfied yet ;) So kbdesc/kbd is to close a model dialog and the guideline also states that command period should do the same. And command period does work in TextEdit's Font window, but it does not in Safari's Help window. Strange. <comment164068> So if I interpreted the Font window as a dialog, than the esc or command period should close the window and return my program to the previous state. Therefor the help window (in the OP) is not a dialog. But why does esc work in the help window... From the guidelines: "The Cancel button returns the computer to the state it was in before the dialog appeared" <comment164072> These are just guidelines. The developer can choose to ignore or extend them. You can find plenty of examples and counter examples in Apple's own apps. <comment164086> The examples the OP gave, namely most preferences windows in apps, the Fonts panel, Help Viewer.app's main window, aren't implemented as modal dialogs; rather, they are instances of `NSPanel`, which automatically receive this "Escape key causes panel to close" behavior. <comment164121> thank you for this answer. It makes sense now. This also explains why cmd-period does not work in Safari's help window. 'Accepted' <comment164618> Apps that don't obey one or the other, are terrible. Apps that obey neither, are worse. Literally rage-inducing.