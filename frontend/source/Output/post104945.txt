Uninstall OSX-gcc-installer without first installing Xcode <body> Is there a way that I can uninstall codeosx-gcc-installer/code without first having to install Xcode, then run codesudo /Developer/Library/uninstall-devtools â€”mode=all/code ?  I installed it on Mountain Lion, and I want to get rid of it so my codeCLI/code tools will work to install Octopress.  Is there a script or command that will help me totally remove codeosx-gcc-installer/code from my system?  <answer105023> From what I'm seeing in the developer's scripts here, it looks like he is recommending that you install Xcode over the top of his "osx-gcc-installer" to be able to uninstall...At that point, you can run the uninstall-devtools script...  From the developer:     If something doesn't work as expected, feel free to install Xcode over this installation.      Once installed, you can remove Xcode completely with the following:  precodesudo /Developer/Library/uninstall-devtools -mode=all /code/pre   Alternately, you can copy and paste the actual script content into a blank text document (maybe named "uninstall-devtools"), make it editable (codechmod 755 uninstall-devtools/code), and then execute it (codesudo ./uninstall-devtools -mode=all/code):  precode#!/usr/bin/perl #################################################################################################### # # Copyright (c) 2002-2011 Apple, Inc. # Xcode 4.2 # # NAME #     uninstall-devtools -- Meta-script for running the various devtools uninstaller scripts. # # SYNOPSIS #     sudo /Developer/Library/uninstall-devtools --mode=all #     sudo /Developer/Library/uninstall-devtools --mode=xcodedir #     sudo /Developer/Library/uninstall-devtools --mode=unixdev #     sudo /Developer/Library/uninstall-devtools --mode=systemsupport # # Where the specified 'mode' value invokes the following devtools uninstaller scripts: # #     all: #         /Library/Developer/Shared/uninstall-devtools #         /Library/Developer/4.2/uninstall-devtools #         /Developer/Library/uninstall-developer-folder # #     xcodedir: #         /Developer/Library/uninstall-developer-folder # #     unixdev: #         /Library/Developer/Shared/uninstall-devtools # #     systemsupport: #         /Library/Developer/Shared/uninstall-devtools #         /Library/Developer/4.2/uninstall-devtools # # The default value for 'mode' is 'all'. # # DESCRIPTION #     This command runs the appropriate devtools uninstaller scripts according to the usage #     specified on the command line. ####################################################################################################  my $do_nothing     = 0; my $verbose        = 0; my $warning        = 0; my $debug          = 0; my $help           = 0; my $mode           = '';  get_options(     'do-nothing' =&gt; \$do_nothing,     'verbose' =&gt; \$verbose,     'warning' =&gt; \$warning,     'debug' =&gt; \$debug,     'help' =&gt; \$help,     'mode' =&gt; \$mode, );  ####################################################################################################  if ($help == 1) {     print("Usage: $0 --mode=&lt;all|xcodedir|unixdev|systemsupport&gt;\n"); print &lt;&lt;"END"; This is a meta-script which invokes one or more of the devtools uninstaller scripts, depending on which mode you select.  The recognized modes are: all:     /Library/Developer/Shared/uninstall-devtools     /Library/Developer/4.2/uninstall-devtools     /Developer/Library/uninstall-developer-folder  xcodedir:     /Developer/Library/uninstall-developer-folder  unixdev:     /Library/Developer/Shared/uninstall-devtools  systemsupport:     /Library/Developer/Shared/uninstall-devtools     /Library/Developer/4.2/uninstall-devtools  The default value for 'mode' is 'all'. END     exit(0); }  #################################################################################################### # Determine if we are authorized to uninstall the devtools packages. ####################################################################################################  $| = 1; if (($do_nothing == 0) &amp;&amp; ($&lt; != 0)) {     die("ERROR: Must be run with root permissions -- prefix command with 'sudo'.\n"); }  ####################################################################################################  my $uninstaller_script = $0; my ($uninstaller_dir,$uninstaller_script_basename) = parse_name($uninstaller_script); if ($uninstaller_dir eq '.') {     die("ERROR: Must change to another directory before running this script, since the current directory is about to be deleted.\n"); } my ($developer_dir,$developer_dir_basename) = parse_name($uninstaller_dir);  ####################################################################################################  my @flags = (); if ($do_nothing == 1) {     push(@flags,'--do-nothing'); } if ($verbose == 1) {     push(@flags,'--verbose'); } if ($warning == 1) {     push(@flags,'--warning'); } if ($debug == 1) {     push(@flags,'--debug'); }  if (($mode eq '') || ($mode eq 'all')) {     run_uninstaller_script("/Library/Developer/4.2/uninstall-devtools",\@flags);     run_uninstaller_script("/Library/Developer/Shared/uninstall-devtools",\@flags);     run_uninstaller_script("$developer_dir/Library/uninstall-developer-folder",\@flags); } elsif ($mode eq 'xcodedir') {     run_uninstaller_script("$developer_dir/Library/uninstall-developer-folder",\@flags); } elsif ($mode eq 'unixdev') {     run_uninstaller_script("/Library/Developer/Shared/uninstall-devtools",\@flags); } elsif ($mode eq 'systemsupport') {     run_uninstaller_script("/Library/Developer/4.2/uninstall-devtools",\@flags);     run_uninstaller_script("/Library/Developer/Shared/uninstall-devtools",\@flags); } else {     die("Usage: $0 --mode=&lt;all|xcodedir|shared|systemsupport&gt;\n"); } print("IMPORTANT: If you are going to install a previous version of the Developer Tools, be sure to restart the machine after installing.\n");  ####################################################################################################  sub get_options {     while (@_) {     my $option_name = shift(@_);     my $option_pointer = shift(@_);      foreach my $arg (@ARGV) {         if ($arg =~ /^--$option_name/) {         my ($arg_name,$arg_value) = split(/=/,$arg);                 $arg_value = 1 if (!$arg_value);         $$option_pointer = $arg_value;         }     }     } }  ####################################################################################################  sub parse_name {    my $name = shift;    my ($dir_name,$base_name) = ($name =~ m{^(.*/)?(.*)}s);    $dir_name =~ s|(.*)/$|$1|s;    return ($dir_name,$base_name); }  ####################################################################################################  sub run_uninstaller_script {     my $script = shift;     my $flagsref = shift;      if (-x $script) {         my @args = ();         push(@args,$script);         foreach my $flag (@$flagsref) {             push(@args,$flag);         }          system({$args[0]} @args);     } }  #################################################################################################### /code/pre  <answer176218> Unfortunately, osx-gcc-installer has overwritten some system files which are actually 'shims', so even if you run that script to delete those files it overwrote, you will need to restore the original system files.  First, run the script suggested in the other answer. Then:  Either you can download and reinstall your OSX again, from the App Store. Or you could download the OSX Mavericks shims from this torrent, and copy them into your /usr/bin folder, overwriting those that are there:  https://archive.org/details/completely_uninstall_osx-gcc-installer  Note: This was the solution I found for OSX Mavericks (10.9) but it might work for you as well. Be careful in using these Mavericks /usr/bin files in your Mountain Lion. So you might want to download Mountain Lion again and use a procedure such as this: http://magnemg.tumblr.com/post/113260971290/how-to-extract-only-the-necessary-usr-bin-files  PS: This answer should include everything you need to know, but if you still need more details, see: http://magnemg.tumblr.com/post/113251602430/how-to-completely-uninstall-osx-gcc-installer  <comment208010> Please provide an answer here (not only link), because it might be broken in the future. <comment208012> Ok, done. I updated the answer with all the necessary info. I had to write it pretty high level, so as to not basically copy-paste my entire blog post into it.