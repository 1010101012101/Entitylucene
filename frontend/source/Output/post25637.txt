How to clean ._AppleDouble files from unix packages? <body> h2Introduction/h2  Here's my problem. On occasion, I create the odd deb package using strongdpkg-deb/strong (codee.g., dpkg-deb --build "folder" file.deb/code). The problem is that any file with an extended attribute, carries along an ._AppleDouble file to the package. So when the user installs the bit of software, their system is littered with ._AppleDouble files.  For example,   precode-rw-r--r--@  1 cksum  staff      18305  9 Sep 22:42 ScreenShot.png /code/pre  would carry with it a ._ScreenShot.png file.  h2Current Method of Coping/h2  Currently, I'm using the incredibly agonizing strongxattr/strong command to list the extended attribute and then strip them. For example, the above would be carrying the following as shown by strongxattr/strong,  precodecom.apple.FinderInfo com.apple.metadata:kMDItemIsScreenCapture com.apple.metadata:kMDItemScreenCaptureType /code/pre  In this case, I would have to strip the resources one at a time, again using strongxattr/strong,  precodexattr -d com.apple.FinderInfo ScreenShot.png xattr -d com.apple.metadata:kMDItemIsScreenCapture ScreenShot.png xattr -d com.apple.metadata:kMDItemScreenCaptureType ScreenShot.png /code/pre  This is quite arduous when you sometimes have dozens of files and has become far too much of a pain.  I'm aware of the utility BlueHarvest, but I'm not keen on paying for something I won't use all that much. Additionally, I've trialed the software and have noticed that unfortunately, it sometimes fails to remove them all. Lastly, it is more suited for the management of disks used by different operating systems than it is for local folders.  h2Ideal Solution/h2  An ideal solution would be to continue using xattr (as it is the most reliable) but having the process automated. It is important that I remove the ._AppleDouble files embefore/em I package them. This, however, is not the emonly/em solution and I am certainly open to all manner of ideas. But I am hoping that I can accomplish my goal without the need to install additional programs or rely on daemons.  <answer25645> I need to learn proper xattr usage.  Apparently, strongxattr/strong has a "clear" (-c) command that can be applied using a wildcard (*), as follows,  precodexattr -cr * /code/pre  This results in a recursive removal of all ._AppleDouble files from the current folder on down (the -r flag does recursive, while the -c flag clears them), thus making the process a trivial one line command.  This does not however clear out the .DS_Store files. For that, you can employ the good old "find" command:  precodefind . -type f -name .DS_Store -delete /code/pre  This will find and delete any .DS_Store files from the current directory on down (recursively).  Lastly, we can bring it all together in the form of an alias that is called upon by simply typing "xat" (put the following in your .bash_profile):  precodealias xat='find . -type f -name .DS_Store -delete &amp;&amp; xattr -cr *' /code/pre  Now just run "xat" on any directory and it'll strip those pesky resource forks and remove those irritating .DS_Store files from anything inside of it.  <answer25647> There are many ways you can do this; Here are a couple that I've used:  precodedot_clean /path/folder /code/pre  merges dot-underscore files with their parent files.  http://developer.apple.com/library/mac/#documentation/Darwin/Reference/ManPages/man1/dot_clean.1.html  If you want to specifically target the .AppleDouble files you can use:  precodefind / -name ".AppleDouble" -depth -exec rm -Rf {} \; /code/pre  which will simply find them and delete them.  There are ways you can also setup the process ahead of time for SMB shares, etc. when creating dpkgs. This may or may not apply to you, so I just wanted to mention it also.  http://support.apple.com/kb/HT4017  <comment29069> Use makefiles? Perhaps putting `find . -type f -name ._.\* -delete` in some target could help.  IIRC OS X's find has -delete. if it doesn't you can do the good 'ole fashioned `-exec rm -fv {} \;`. <comment29072> @VxJasonxV That would work but only on the target system. I'd like to remove the AppleDouble files *before* I package them (I'll make that clearer in my question). Thanks for the suggestion. <comment29080> Nice, I didn't know about that one. Thanks! <comment29085> @VxJasonxV - FYI `find` on OS X supports `-delete` (at least with 10.5, 10.6, 10.7, not certain about earlier versions.) <comment29088> My point was to run the cleanup before you package the files. <comment29092> Thanks ioi. I've tried dot_clean before and it never worked for me. I suspect extended attributes are different. In any case, I did find the solution :) <comment29114> @VxJasonxV I tried that, didn't work. I suspect the extended attributed work differently. I've read about removing resource forks with some suggesting the same procedure, but I don't think AppleDouble files are the same thing. But thank you :) <comment29162> Hmm. I could swear I've done that before, but perhaps that was on a non-HFS filesystem, where the files appeared as normal files instead of resource forks. <comment31520> I was curious to know if disabling named streams might work with this.  BTW â€” Congrats on answering your 100th question; I feel privileged to be the only person to have answered your only question ;-) <comment31575> @ioi I think named streams are deprecated in Lion as they took out SMB. I could actually turn xattr and a find and delete of .DS_Store into an alias tho and just run that on anything in my "iOS app" folder. I just don't really make that many debs tho. And thanks btw :) <comment96738> There is no -c flag in OSX 10.6.8, but dot_clean does work