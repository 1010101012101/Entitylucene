Shell Script Synchronise Folder with External HDD <body> I have a Back-Up HDD (not TimeMachine) with only very important data backed-up there. Every once in a while, I connect the external hard disk and sync the files per hand. As the files I am syncing are always the same, it came to my mind that I could automate the whole process as a shell script.  However, I could not find a helpful command that compares A to B (which will then ask me to sync if sync is necessary). I have found rsync but the documentations did not explain how to synchronise a single directory.  I also haven't figured out how to change directory to an external HDD connected via USB.  <answer293495> This is easy to accomplish using rsync.  The easiest route is to open terminal and type codersync -r/code and that drag the source folder to the window, followed by the source folder. code-r/code stands for recursive, so it will look inside the folder. I just synced a folder on my desktop and a mounted USB drive with this command:   precodersync -r /Users/My-User/Desktop/Test_folder /Volumes/My-USB-Drive/Test_on_USB /code/pre  It actually creates the codeTest_folder/code inside the codeTest_on_USB/code folder.  I'm not an expert on all the options, but you can find them here: http://everythinglinux.org/rsync/   Let me know if that accomplishes what you're after.   <comment370353> Thank you. I've decided to go with another form of rsync suggested in another [question on SuperUser](https://superuser.com/a/1235892/756319) because it fits my bash script better. <comment370367> Excellent. Out of curiosity: can you tell me why you would use diff first? As rsync can compare the folders for you and do all the syncing as well. <comment370368> Because it's cool to be able to state that everything is up-to-date, and this information might be useful. I won't run into a cpu or time problem by including this line, so I just left it in for the fun :P