How can I start Bluetooth tethering using the command line? <body> I'd like a quick way to start tethering using my iPhone, hopefully just using the keyboard. Using the bluetooth menu, I can choose the Connect to Network option in the submenu for my device, but is it possible to automate this?  Ultimately I want to assign this to a shortcut in (the very awesome) Alfred.app, but anything using the command line or AppleScript will work.   Is this possible? Thanks!!  <answer45573> It doesn't look like there is a direct AppleScript dictionary for working with Bluetooth this way.   You could use GUI scripting though, which basically uses the accessibility feature of the Mac OS to select menu items, etc.   A great writeup on how to start with GUI AppleScript is available on MacOSAutomation.com.   GUI automation can be difficult if you have a constantly changing list of things, but if you commonly have a list of bluetooth items connected that stays the same you should be ok.  You could then call this AppleScript through Alfred.   <answer84628> I would recommend using automator for this, you can call it from Alfred to make it easy :)  My current automator workflow does this:  precodeClick the "bluetooth" menu bar item. Connect to Network /code/pre  Using this method you can automate almost anything within a minute  <answer167437> http://macscripter.net/viewtopic.php?id=38559  In the above link there's a very nice script I've just updated a bit. Note that it uses blueutil [ git repo ]  [ website/binaries ].  strongEnable Bluetooth:/strong  precode-- Enable Bluetooth and Connect to iPhone  property blueutilPath : "/opt/local/bin/blueutil"  -- Turn on bluetooth. if execBlueutil("status") contains "Status: off" then     execBlueutil("on")      connectDevice()      doGrowl()  end if  on execBlueutil(command)     set res to do shell script blueutilPath &amp; " " &amp; command     if res contains "Error" then         display dialog res         quit     end if     return res end execBlueutil  -- Connect Device on connectDevice()     tell application "System Preferences"         activate         set AppleScript's text item delimiters to "."         set current pane to pane "com.apple.preference.network"         set winNetwork to "Network"         set btooth to "Bluetooth"          tell application "System Events" to tell process "System Preferences"             set theRow to row 1 of table 1 of scroll area 1 of window winNetwork whose value of static text 1 contains btooth             select theRow --clicks the bluetooth row             --If Bluetooth is already connected, the button will say Disconnect, so we don't want to turn it off:             try                 click (button 1 of group 1 of window winNetwork whose title is "Connect")             end try         end tell         tell application "System Preferences"             quit         end tell     end tell end connectDevice  on doGrowl()     tell application "System Events"         set isRunning to (count of (every process whose bundle identifier is "com.Growl.GrowlHelperApp")) &gt; 0     end tell     if isRunning then         tell application id "com.Growl.GrowlHelperApp"             set the allNotificationsList to ¬                 {"Bluetooth Setting"}             set the enabledNotificationsList to ¬                 {"Bluetooth Setting"}             register as application ¬                 "AppleScript - Bluetooth" all notifications allNotificationsList ¬                 default notifications enabledNotificationsList              notify with name ¬                 "Bluetooth Setting" title ¬                 "Bluetooth is On &amp; iPhone Connected" description ¬                 "Bluetooth has been enabled with iPhone tethered." application name "AppleScript - Bluetooth" icon of file (path to me)         end tell     end if end doGrowl /code/pre  strongDisable bluetooth:/strong  precodeproperty blueutilPath : "/opt/local/bin/blueutil"  -- Turn off Bluetooth. if execBlueutil("status") contains "Status: on" then     execBlueutil("off")      doGrowl() end if on execBlueutil(command)     set res to do shell script blueutilPath &amp; " " &amp; command     if res contains "Error" then         display dialog res         quit     end if     return res end execBlueutil  on doGrowl()     tell application "System Events"         set isRunning to (count of (every process whose bundle identifier is "com.Growl.GrowlHelperApp")) &gt; 0     end tell     if isRunning then         tell application id "com.Growl.GrowlHelperApp"             set the allNotificationsList to ¬                 {"Bluetooth Setting"}             set the enabledNotificationsList to ¬                 {"Bluetooth Setting"}             register as application ¬                 "AppleScript - Bluetooth" all notifications allNotificationsList ¬                 default notifications enabledNotificationsList              notify with name ¬                 "Bluetooth Setting" title ¬                 "Bluetooth Off" description ¬                 "Bluetooth has been disabled." application name "AppleScript - Bluetooth" icon of file (path to me)         end tell     end if end doGrowl /code/pre 