Use incomplete file path in terminal <body> In terminal is there a way for Terminal to guess a file based on an incomplete file path?  For example: Instead of code/Users/me/foo1/foo2/foo3/foo4/TargetFile/code, is there a way to just do code/foo3/foo4/TargetFile/code?  I want to be able to access the file no matter where it is.  Thanks.  <answer295671> There's a couple of things you can do:  Use the code~/code  In the example you cited, you can use the tilde as a shortcut to your home directory  code~/foo1/foo2/foo3/foo4/TargetFile/code  If you want to access a file "no matter where it is"  create a symlink and make sure it's in your path  precodePATH=$PATH:/Users/me export $PATH ln -s /Users/me/foo1/foo2/foo3/foo4/TargetFile /User/me/TargetFile` /code/pre  (You can put the first line in your code.bash_profile/code so it's available in every session)  Your path can be anywhere you like - I'm just using your home directory as an example.  <answer295676> If you know the target file is in the user's $PATH, you can say  precodetarget=$(which TargetFile) "$target" arg ... /code/pre  Otherwise, you can find the file with  precodewhile IFS= read -r possible_target; do     if is_this possible_target_the_one_you_want; then         target=$possible_target         break     fi done &lt; &lt;(locate '*/TargetFile') "$target" arg ... /code/pre  <answer295719> If the file's path is relative to the current working directory your could use:  precodefind . -name targetfile /code/pre  You could wrap this in a shell function:  precodemylocate () {     find . -name "$1" }  # Usage mylocate targetfile /code/pre  In codezsh/code you can use the globstar feature:  precodeprintf '%s\n' **/targetfile /code/pre  In ksh:  precodeset -G printf '%s\n' **/targetfile /code/pre  In bash4:  precodeshopt -s globstar printf '%s\n' **/targetfile /code/pre  <comment373411> You can create a environmental variable for that file on the .bash_profile. Something like: myFile="$HOME/foo1/foo2/foo3/foo4/TargetFile . After that, access to the file with $myFile <comment373413> Would this work on any computer, or just my own?  I need it to be universal. <comment373414> Only in your own. In other Macs or Linux you have to manually type the variable the first time. <comment373415> My issue is that I want it to be accessible on any computer, where I would only know the location of the file within nested folders which I know the names of.  This means that I might not know where the user put the file. <comment373416> Environment variables, aliases, paths, etc. are different for each user.  You would have to put it each profile and in the skeleton profile so it propagates to new users. <comment373417> Not sure what your use case is. If you are using a script, place it in the same or a related folder. Then you can use relative paths - just drop the first / or use ../ for folders above your current level. <comment373418> @Araho Would you mind explaining what you mean by that and what a related folder is? <comment373419> Related = my way of saying that you know where the folder is relative to your _current working directory_ - where the command is run from. Say that you have a terminal in foo2 - you can just use "foo3/foo4/TargetFile" instead of the full path. But this doesn't help in finding where foo3 is in the system, unfortunately. <comment373421> What do you mean by that?  Would you mind explaining? <comment373422> Your shell has an "environment" which has a number of settings.  Type `printenv` in Terminal to get a list of what's set.  This environment will change for each user.  This means, if you want it to be "universal" across all users/machines, you need to set it for everyone.  It sounds like UNIX admin is new for you.  I suggest starting here:  http://www.tutorialspoint.com/unix/ <comment373479> Looking at your comments here and below the answers given so far I'm not sure it's clear to everybody which problem you are trying to solve here, or what exactly you are trying to accomplish? Can you please elaborate a bit on a specific scenario where a solution would be helpful? <comment373521> @patrix I want to be able to locate a file based off of the knowledge that the file is in a folder, which could be in another folder, but not know anything else.  In a way, the computer searches the computer until it finds a path that ends the same way as the partial one I have. <comment373525> Once you've found the file what are you gonna do with it? Why is it not in the same place on all computers involved? If you could add a specific example to the question this would help to find a good answer. <comment373546> I often use `nullglob` with `globstar` -- that way you do not get the literal string "**/targetfile" if there is no such file.