Workflow/tools for installing command line application on OS X (Yosemite or later) <body> I maintain a set of command line bioinformatics tools which we distribute as source and binaries for Linux, Windows, and OS X. Currently the binary distribution for OS X is just a zip file containing directories for the binaries and the documentation. Our install guide directs the user to unzip the archive, copy the binaries to the desired location, and update their PATH to point to the binaries. That's fine for the command line savvy users, but some users have never  heard of /usr/local/bin let alone PATH. We'd love to have an installer that's in more of the OS X idiom.  Creating an application bundle doesn't seem to do the trick because our tools are strictly command line and they'll need a terminal session to use them. It seems like we could have used PackageMaker to create an installer, but that's now deprecated.  Is there a current standard installer for command line tools on OS X, preferably one with CPACK support?  <answer234983> The standard package format is the "pkg" format. It's not often used for applications, but it's fine for a terminal-only utility.  ul liMy go-to tool for creating packages is called Packages./li liI haven't used it myself, but it looks like CMake supports PackageMaker, which is a third party tool for creating OS X packages./li liThere's also the built-in pkgbuild utility. /li /ul  Just make sure you don't touch anything outside the standard paths (code/Library/code, code/Applications/code, or code/usr/local//code) and you'll be fine.  <answer239033> You may want to have a look at strongEPM/strong, the Easy Package Manager.  It can package Mac OS X codepkg/code as well as RedHat codeRPM/code, Debian codedeb/code and then some more package formats -- all from the same source files, immediately after the build step.  It was originally written by Michael Sweet, the author of CUPS (who now works for Apple), and is still maintained by him.  The documentation is here:  ul lihttp://www.msweet.org/documentation/project2/EPM.html/li /ul  EPM is available via MacPorts (albeit in an older version, v4.1, whereas the current one is v4.3).  To use it in your Makefile, it is as easy as adding an additional target like this:  precodeosx:     epm -f osx -v -s doc/epmlogo.tif $(MY_PROJECT)  /code/pre  hr  Of course, you can also use it standalone (not from the Makefile) to package your software.   It requires you to create a list of files with their paths, permissions and some other meta info which should be packaged.  <comment287352> Sorry, I had I typo in my question, I meant PakageMaker not PackageManger. Yes, CMake supports PackageMaker, but PackageMaker is deprecated since Yosemite. Thanks for pointing me to pkgbuild. I may have to create my own CMake scripts to use pkgbuild. <comment287353> Another possibility: http://stackoverflow.com/a/33043862/2454476 (creating .pkg files on linux). <comment289608> Or you could write a script, Applescript would be good for user input, but shell script could suffice.