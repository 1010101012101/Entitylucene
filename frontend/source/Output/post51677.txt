How to set PATH for Finder-launched applications <body> Apps launched via Finder seem to not respect the PATH as set in code.bash_profile/code.  So when I try to run code from an IDE (Intellij) I no longer have access to programs in code/usr/local/bin/code, which is normally added to my path in the Terminal.  Apparently code.MacOSX/environment.plist/code used to be the way to do this, but it no longer works in Lion.  How can I set the codePATH/code for Finder-launched applications?  <answer51678> If you are on 10.7 and not 10.8, the solution below works well:  I had the same problem with eclipse, but now I've added e.g. the following to my code.bash_profile/code and then it worked.  precodeexport PATH=some_path:another_path launchctl setenv PATH $PATH /code/pre  In case you want to leave the original path intact use  precodep=$(launchctl getenv PATH) launchctl setenv PATH /my/new/path:$p /code/pre  instead (or just codelaunchctl setenv PATH /my/new/path:$(launchctl getenv PATH)/code).  strongNote:/strong Changing the launchctl PATH will not take effect until the Dock is "restarted".  A new Dock process will automatically start after the current one is killed with the command:  precodekillall Dock /code/pre  <answer51737> To answer you question to your 'new' problem, I've decided to write another answer - because it is easier to explain with samples.  One way to load the environment variables on startup of your tool (IDE) of choice is like it can be done with eclipse - I think there must be a similar structure in your tool (IDE) too.  How it can be done in eclipse - https://stackoverflow.com/questions/829749/launch-mac-eclipse-with-environment-variables-set  em(slightly re-written about the environment variables)/em  Create an empty text file called "eclipse.sh" in the Eclipse application bundle directory code/Applications/eclipse/Eclipse.app/Contents/MacOS/code  Open the eclipse.sh in a text editor and enter the following contents:  precode#!/bin/sh  . ~/.bash_profile  logger "`dirname \"$0\"`/eclipse"  exec "`dirname \"$0\"`/eclipse" $@ /code/pre  In the Terminal set the executable flag of the shell script eclipse.sh, i.e.:  codechmod +x /Applications/eclipse/Eclipse.app/Contents/MacOS/eclipse.sh/code  Open the Eclipse.app Info.plist and change the value for the key CFBundleExecutable from eclipse to eclipse.sh.  MacOS X does not automatically detect that the Eclipse.app's Info.plist has changed. Therefore you need to force update the LaunchService database in the Terminal by using the lsregister command:  code/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -v -f /Applications/eclipse/Eclipse.app/code  The next time you launch Eclipse.app from the Dock or from the Finder the environment variables should be set.  <answer79845> On Mountain Lion all the code/etc/paths/code and code/etc/launchd.conf/code editing doesn't take any effect!  Apple's Developer Forums say:     "Change the Info.plist of the .app itself to contain an "LSEnvironment"   dictionary with the environment variables you want.      ~/.MacOSX/environment.plist is no longer supported."   So I directly edited the app's codeInfo.plist/code (right click on "AppName.app" (in this case SourceTree) and then "codeShow package contents/code")   img src="https://i.stack.imgur.com/Z6ZHP.png" alt="Show Package Contents"  and added a new key/dict pair called:  precode&lt;key&gt;LSEnvironment&lt;/key&gt; &lt;dict&gt;      &lt;key&gt;PATH&lt;/key&gt;      &lt;string&gt;/Users/flori/.rvm/gems/ruby-1.9.3-p362/bin:/Users/flori/.rvm/gems/ruby-1.9.3-p362@global/bin:/Users/flori/.rvm/rubies/ruby-1.9.3-p326/bin:/Users/flori/.rvm/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:&lt;/string&gt; &lt;/dict&gt; /code/pre  (see: LaunchServicesKeys Documentation at Apple)  img src="https://i.stack.imgur.com/oiwcE.png" alt="enter image description here"  now the App (in my case SourceTree) uses the given path and works with git 1.9.3 :-)  PS: Of course you have to adjust the Path entry to your specific path needs.  <answer94972> On Mountain Lion (10.8.4), code$PATH/code is treated specially somehow. codelaunchctl setenv PATH /your/path:/here/code does not have any effect on the code$PATH/code in Terminal.app or Emacs.app instances subsequently launched from the Dock or from the Finder (whereas codelaunchctl setenv SPONG foo/code works fine).  Also code$HOME/.launchd.conf/code doesn't work. code/etc/launchd.conf/code is the only way I have found to get PATH set correctly everywhere.  Unfortunately, one cannot use envars such as code$HOME/code there, so all the users on my laptop have code/Users/nb/bin/code on their code$PATH/code. That's only me, so I don't care.  <answer96473> On Mac OS X 10.8.4, Mountain Lion, the path environment incorporates the paths listed in this file:  precode/etc/paths /code/pre  You can edit this file using a command line tool, such as codevim/code using the following command:  precodesudo vim /etc/paths /code/pre  <answer198282> On OS X 10.10 Yosemite, I used this command:  precodesudo launchctl config user path &lt;my path setting&gt; /code/pre  Be aware that his sets the launchtl PATH for emall users/em.  This worked well for my use case.  <answer212273> Try setting path in your ~/.profile or ~/.bash_profile or ~/.zprofile (for zsh).  This worked for me with VimR -- it wasn't reading the PATH when launched from the dock, but it worked when launched from the terminal.  I was running on OSX 10.11 by the way.  I don't have a good enough handle on this to give you a great explanation of why it works, there are plenty of explanations online about the different config files and what they do: https://stackoverflow.com/questions/415403/whats-the-difference-between-bashrc-bash-profile-and-environment  Also, see a similar discussion here: https://stackoverflow.com/questions/3344704/path-variable-not-properly-set-in-gvim-macvim-when-it-is-opened-from-the-finder/24542893#24542893  <comment59120> I ended up using: "launchctl setenv PATH $PATH". Appending the existing launchctl path via "$p" ends up repeating the path each time you open a shell. <comment59121> Also worth noting- until you have started up a shell (via Terminal) launchctl will have the default path, and the customized path will not be available. This drove me a little batty trying to debug things until I figured out what was going on. If I started Intellij before opening a shell, the path would be wrong. Seems like the real solution here is to configure launchctl on a system-wide basis, and not via login shell by some user. <comment73626> This **does not work on OS X 10.8** - tried with Eclipse and IntelliJ - running `set|grep PATH` from them will always return `PATH=/usr/bin:/bin:/usr/sbin:/sbin` <comment73628> Are you sure that your accepted solution works on 10.8? <comment73696> It is still working for me on OS X 10.8 with eclipse, so I don't know what you are doing wrong ?? <comment73723> Doesn't work for my either (10.8.1) <comment74152> And you have set your IDE up as my second answer ?? So far I haven't had any problems with any of the 10.8 versions (10.8.0, 10.8.1 and 10.8.2), and I use the setup I've described. <comment82320> You might try restarting the dock after running `launchctl`: `osascript -e 'tell app "Dock" to quit'`.  That seemed to fix it for me. <comment83361> This technique also works for Rubymine once you adjust the path. I found it didn't at first, but then realised that my settings were in .profile, not .bash_profile. <comment93299> Is this true? I see lots of posts with contradictory information, some of which are clearly old, but some of which seems recent. I don't even have (on 10.8.2) a `/etc/launchd.conf` anyway. Presumably,  even if the rules not state that apps *should* use their Info.plist files for paths, they could still be using other files -- `/etc/launchd.conf`, `/etc/paths/`, or `/etc/paths.d/*`, or `~/.MacOSX/environment.plist. Is it safe to say then that, *in practice*, paths for GUI apps in Mountain Lion could be set in any of these files? <comment108200> @SorinSbarnea (I know this is old, but) I can verify that [the currently-accepted answer](http://apple.stackexchange.com/a/51678/12592) works for me on OS X 10.8.3, when I also use the [suggested dock restart hack](http://apple.stackexchange.com/questions/51677/how-to-set-path-for-finder-launched-applications?lq=1#comment82320_51678). (I'm setting a different environment variable though, not `$PATH` in case that matters.) <comment151864> This Info.plist was the only thing what worked for me, after trying lauchd.conf, etc/paths etc with my Maverics and eclipse. Actually this did not work immediately also, you need to remember two things: 1. run `/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -v -f /Applications/eclipse/Eclipse.app` as given in another answer, after changing plist and 2. add **full path** there, you cannot use existing PATH as in your profile scripts. <comment168737> Did not work for me on 10.9 even after telling dock to restart. Editing /etc/launchd.conf and rebooting did work for me. http://serverfault.com/questions/16355/how-to-set-global-path-on-os-x/277034#277034 <comment168757> I can only speak for my self, but the described is still working for me on 10.9 - and it also working on the upcoming 10.10 <comment177808> +5000 for the `lsregister` reference. <comment236943> launchctl setenv PATH does not work for me on 10.10.4, with or without restarting the dock. Interestingly launchctl getenv PATH is empty before setting it. <comment256305> The question asks how to do it for apps launched from Doc which is the same as launch from Finder which you say your answer does not work for - and we can exactly explain why it does/does not work <comment284680> see also http://stackoverflow.com/questions/829749/launch-mac-eclipse-with-environment-variables-set/36282543#36282543. It is pretty much a duplicate. <comment288468> You should find that the Terminal process picks up the `PATH` value you set, but: when you create a new terminal it starts a login shell, which—if you're using bash—executes `/etc/profile`, which initializes `PATH` to the value returned from `/usr/libexec/path_helper`. If you choose **Shell  New Command…** and run `env` (not in a shell) you should find that `PATH` is the value you set via launchd. <comment302287> This doesn't seem to have an effect on the PATH environment variable of applications that are reopened at login (that were open when shutting down). <comment330863> This answer worked for me.  Specifically, to access Brew-managed executable, I had to `sudo launchctl config user path /usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin` and reboot. <comment333498> Great! It works like a charm in OS X 10.9.5 :) <comment338517> This works for me in 10.12, but only as a one off. After restarting the machine the effects are lost. <comment340934> This works on Sierra (10.12). But it is still necessary to run the `lsregister` command, as noted by @JaakL. <comment347431> @Dover8 I'm seeing the same thing on 10.12.3  This answer works, but after restart the solution breaks. <comment370781> I think you guys need to run the commands again (ideally automatically) after restarting in order for it to continue to work.