How to set different rules for different keyboards in Karabiner Element? <body> ul liI am using MBP with external PC keyboard. I've swapped codealt/code and codecmd/code keys for the external keyboard in system preferences (on PC keyboards, codealt/code key is sitting next to space)./li liI am using codecaps lock/code to switch keyboard layout (EN/HU): I was using Karabiner, to define codecaps lock/code as keyboard layout switcher hotkey. (codeCaps lock/code has been re-mapped as codeF19/code, then I set system prefs to use codeF19/code as layout switch.)/li /ul  I've upgraded to Sierra and emKarabiner Elements/em.  The problem is that I can't figure out how to swap codecmd/code and codealt/code only on my external keyboard.  ul liAFAIK emKarabiner Elements/em has no separate settings for keyboards, so if I define codecmd/code-codealt/code swap, it will be applied on both the internal and the external keyboard./li liemKarabiner Elements/em has an option to turn off all settings for individual keyboards, so I can turn off re-mappings for the internal keyboard, but If I do so, codecaps lock/code layout switch will not work on it./li liThe shift remapping in emSystem Preferences/em sets different mappings for different keyboards, but it has no effect when emKarabiner Elements/em runs./li /ul  Is there any solution to use different emKarabiner Elements/em configurations for different keyboards?  I've made a workaround, I've made different config files to Karabiner, and wrote a dummy shell script:  precode#!/bin/bash  cd ~/.karabiner.d/configuration mv karabiner.json tmp.json mv spare.json karabiner.json mv tmp.json spare.json /code/pre  So when I change keyboard, I launch this script.  <comment372026> Karabiner Elements as of a few days ago (0.91.12) [supports separate settings per keyboard](https://github.com/tekezo/Karabiner-Elements/commit/3134493bb567a9fe0e1f25babcb455f6d8d0ea41). It's awkward but it's possible — [example file](https://github.com/pqrs-org/KE-complex_modifications/blob/master/src/json/example_device.json.erb). From the changelog since then it looks like there's a GUI being built for this.