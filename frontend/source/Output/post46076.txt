What are the afconvert settings for the iTunes Plus AAC encoding setting? <body> h2The challenge/h2  I would like to convert a large collection of WAV files to AAC using the "iTunes Plus" setting in iTunes. iTunes describes this setting as:     128 kbps (mono) / 256 kbps (stereo), 44.100 kHz, VBR, optimized for MMX/SSE2.   I would like to automate this import process.  h2Trial and error/h2  The codeafconvert/code command line tool can convert between audio file formats. I've tried a few settings and the closest I could get is:  codeafconvert -v -d aac -b 256000 -f m4af -q 127 -s 2 --soundcheck-generate input.wav output.m4a/code  So: be verbose (code-v/code), use the AAC data format (code-d aac/code), encode at 256 kbps (code-b 256000/code), store in the Apple MPEG-4 Audio file format (code-f m4af/code), use the highest quality (code-q 127/code), use VBR constrained (code-s 2/code) and add SoundCheck data to the file.  I've also created an codem4a/code file using the iTunes Plus setting.  The codem4a/code file created by codeafconvert/code is about the same size as the iTunes file; just 65536 bytes smaller.  h2Results/h2  Using the codeafinfo/code tool, I compared the file generated by iTunes to the file generated by codeafconvert/code. There are two differences in the codeafinfo/code output:  ol liThe file generated by iTunes has an codeaudio data file offset/code of 131072, the one by codeafconvert/code 65536. This explains the difference in file size/li liSomehow the file generated by iTunes has different codesound check/code values than the one converted by codeafconvert/code:  ul liiTunes file:  precodesc ave perceived power coeff             343 407 sc max perceived power coeff             6873 8940 sc peak amplitude msec                   154389 194861 sc max perceived power msec              194025 194025 sc peak amplitude                        31129 30928 /code/pre/li licodeafconvert/code file:  precodesc ave perceived power coeff             341 388 sc max perceived power coeff             6087 4157 sc peak amplitude msec                   212509 152323 sc max perceived power msec              215481 185017 sc peak amplitude                        31024 29857 /code/pre/li /ul  Especially the codesc peak amplitude msec/code and codesc max perceived power msec/code values differ quite a lot. These are the exact same input files, what could cause this difference?/li /ol  h2Question/h2  Is there a way to get results even closer to the "iTunes Plus" setting?  <answer50324> I had the exact same obsession, and ended up creating a FLAC-to-iTunes importer that decodes FLAC files to WAV and imports them into iTunes using iTunes' own encoder: https://github.com/cbguder/FLAC2iTunes  It should be easy enough to modify FLAC2iTunes to support direct WAV input.  As for the soundcheck values, I compared iTunes, XLD and afconvert by encoding WAV files to AAC and decoding them back to WAV and comparing the decoded audio data. I also compared afinfo outputs for the encoded files. While the souncheck values are different for each file, the decoded WAVs are exactly the same, so even if you use XLD or afconvert, the chances are the resulting files will sound exactly the same.  For afconvert, I used the parameters suggested by Apple in the "Mastered for iTunes" guide, with an intermediate CAF file:  precodeafconvert source.wav intermediate.caf -d 0 -f caff --soundcheck-generate afconvert intermediate.caf -d aac -f m4af -u pgcm 2 --soundcheck-read -b 256000 -q 127 -s 2 final.m4a /code/pre  For XLD, I used these settings:  precodeFormat: MPEG-4 AAC Mode: VBR (Constrained) Encoder Quality: Max Sample Rate: Auto Target bitrate: 256 kbps Add gapless information for iTunes: checked Write accurate bitrate information: checked /code/pre  <answer268264> You can use the "Mastering For iTunes" droplet available on apple's website.   http://www.apple.com/itunes/mastered-for-itunes/  I did need to modify the script to run on Yosemite/ El Capitan, but it's fairly trivial:  ul liShow the package contents of the app in Finder (Applications/ Utilities/ Master for iTunes Droplet).  /li liNavigate to Contents/ Resources/ Scripts/li liOpen main.scpt/li liUpdate system version compare lines to "10.10" (there are two lines that need this change):      codeif systemVersion is less than "10.10" then/code /li liSave main.scpt/li /ul  strongNow you can simply drag and drop your FLAC or WAV files onto the droplet and it will create an intermediate CAFF file followed by the iTunes Plus AAC file./strong  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  For those interested, it looks like the afconvert subroutines use the following commands (note these are pulled out of context of the code and will not run as-is):  ul liWAV/FLAC to CAFF:  ul liif the sampleRate is greater than "44100":/li /ul     codeafconvert -d LEF32@44100 -f caff --soundcheck-generate --src-complexity bats -r 127/code   ul lielse/li /ul     codeafconvert -d 0 -f caff --soundcheck-generate/code /li liCAFF to AAC     codeafconvert -d aac -f m4af -u pgcm 2  --soundcheck-read -b 256000 -q 127 -s 2/code /li /ul  <comment57841> Thanks, I had not tried decompressing the two AAC files and comparing the two decoded files. I'm still not sure why the `sound check` values would be different, and what they actually mean. I'll accept your answer. (And: I actually have a lot of FLAC files too ;-))