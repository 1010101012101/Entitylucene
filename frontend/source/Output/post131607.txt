Shell scripting: Why does only the "-" hyphen throw an error? <body> h2Goal: Cleaning up/h2  Selectively truncate filenames in my nvALT notes folder. I tried using a productivity blogger's suggestion (which eludes me after a thorough search) to prepend code^ &gt; - +/code to filenames, but it's not working for me. It's time to clean house! However, I need to make sure I don't lop off any alpha characters on filenames that do emnot/em use those prefixes. Plus I'm learning scripting and think it's fun!   h2Shell script/h2  Here's what I've got:  precode#!/bin/bash  cd ~/dropbox/notes_test  for f in *; do   FILENAME=$(basename "$f")   DIRNAME=$(dirname "$f")   if [[ "$f" == \^\ * ]]; then     mv "$f" "${DIRNAME}/${FILENAME:2}"   fi   if [[ "$f" == \+\ * ]]; then     mv "$f" "${DIRNAME}/${FILENAME:2}"   fi   if [[ "$f" == \&gt;\ * ]]; then     mv "$f" "${DIRNAME}/${FILENAME:2}"   fi   if [[ "$f" == \-\ * ]]; then     mv "$f" "${DIRNAME}/${FILENAME:2}"   fi done /code/pre  h2Problem: The hyphen/h2  Here's the command line input and error message. I get one of these for each filename beginning with "- ".  precodeDEV0041:scripts n$ ./truncate.sh basename: illegal option --   usage: basename string [suffix]        basename [-a] [-s suffix] string [...] dirname: illegal option --   usage: dirname path mv: illegal option --   usage: mv [-f | -i | -n] [-v] source target        mv [-f | -i | -n] [-v] source ... directory /code/pre  h2Question: Why does the hyphen—and emonly/em the hyphen—throw an error?/h2  And how to work around this issue?  <answer131609> From the man page for codemv/code, the first (and possibly second) argument on the command line, if it begins with a code-/code, is an option and not a file. Only code-f | -i | -n/code are allowed options.  Simplest way is not to use code-/code in a file name—it will confuse other command line programs—given that prepending code-/code is a workaround for something else I would just not use that character.  If this is not an option, you can rewrite the codemv/code commands like this  precodemv ./"$f" "${DIRNAME}/${FILENAME:2}" /code/pre  or (a bit more generic because it then also works for absolute paths)  precodemv -- "$f" "${DIRNAME}/${FILENAME:2}" /code/pre  Another option (and is what I would do for any bash script longer than a few lines) is write in a scripting language like perl or python - in this case they solve the problem by their move functions not passing the filenames to codemv/code  <comment154821> It is not an option in this case because I've already created the files. But I am noting your precaution for the future. <comment154823> I couldn't find it, so I made the attribution generic @Mark <comment154835> Note that filenames that begin with "-" are likely to confuse other scripts as well as your own, and "" will cause the file contents to be overwritten if you ever forget to quote/escape it on the command line. I'd pick different conventions, or you're likely to have ongoing problems. <comment154875> Certainly, @GordonDavisson. Thanks for the warning. <comment159282> I'm having an issue where it deletes filenames beginning with hyphens, e.g., `- runnx - IDEAS.txt` @Mark <comment159284> It's also deleting files that don't begin with "-"... I'm going to follow your advice and seek a solution using a different language. <comment159285> I am keeping this answer as valid because of the good explanation of why the hyphen is a problem. It answers my questions in spite of not solving my problem. But that just means I need to ask a different question to get to the heart of my problem.