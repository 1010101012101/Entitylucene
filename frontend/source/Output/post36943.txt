How do I automate a key press in AppleScript? <body> Is it possible to automate the key press of a key (such as "a" or "&lt;") in Mozilla Firefox, Google Chrome or Safari (in this order)? I'd like to automate the key press of "a" for example in Mozilla Firefox for 100 times every codex/code seconds. With codex/code being a value between 1 second and 10 seconds chosen randomly at every key press. What Applescript could make the trick?  Also, where can I find a list of all codes for each key of the keyboard?  <answer36947> Run a script like this in AppleScript Editor:  precodeactivate application "Firefox" repeat 100 times     tell application "System Events" to keystroke "a" using command down     delay (random number from 0.5 to 5) end repeat /code/pre  More examples:  precodetell application "System Events"     key code 123 using {shift down, command down} -- shift-command-left end /code/pre    precodeset old to (path to frontmost application as text) tell application "Notes"     reopen     activate end tell tell application "System Events" to keystroke "f" using {control down, command down} delay 1 activate application old /code/pre    precodedelay 0.5 -- time to release modifier keys if for example the script is run with command-R tell application "System Events" to tell process "Notification Center"     try         key down option         delay 0.1         click menu bar item 1 of menu bar 1     end try     key up option end tell /code/pre  See codeEvents.h/code for a list of key codes.     $ grep '^ *kVK' /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/Headers/Events.h|tr -d ,|while read x y z;do printf '%d %s %s\n' $z $z ${x#kVK_};done|sort -nbr   0 0x00 ANSI_Abr   1 0x01 ANSI_Sbr   2 0x02 ANSI_Dbr   3 0x03 ANSI_Fbr   4 0x04 ANSI_Hbr   5 0x05 ANSI_Gbr   6 0x06 ANSI_Zbr   7 0x07 ANSI_Xbr   8 0x08 ANSI_Cbr   9 0x09 ANSI_Vbr   10 0x0A ISO_Sectionbr   11 0x0B ANSI_Bbr   12 0x0C ANSI_Qbr   13 0x0D ANSI_Wbr   14 0x0E ANSI_Ebr   15 0x0F ANSI_Rbr   16 0x10 ANSI_Ybr   17 0x11 ANSI_Tbr   18 0x12 ANSI_1br   19 0x13 ANSI_2br   20 0x14 ANSI_3br   21 0x15 ANSI_4br   22 0x16 ANSI_6br   23 0x17 ANSI_5br   24 0x18 ANSI_Equalbr   25 0x19 ANSI_9br   26 0x1A ANSI_7br   27 0x1B ANSI_Minusbr   28 0x1C ANSI_8br   29 0x1D ANSI_0br   30 0x1E ANSI_RightBracketbr   31 0x1F ANSI_Obr   32 0x20 ANSI_Ubr   33 0x21 ANSI_LeftBracketbr   34 0x22 ANSI_Ibr   35 0x23 ANSI_Pbr   36 0x24 Returnbr   37 0x25 ANSI_Lbr   38 0x26 ANSI_Jbr   39 0x27 ANSI_Quotebr   40 0x28 ANSI_Kbr   41 0x29 ANSI_Semicolonbr   42 0x2A ANSI_Backslashbr   43 0x2B ANSI_Commabr   44 0x2C ANSI_Slashbr   45 0x2D ANSI_Nbr   46 0x2E ANSI_Mbr   47 0x2F ANSI_Periodbr   48 0x30 Tabbr   49 0x31 Spacebr   50 0x32 ANSI_Gravebr   51 0x33 Deletebr   53 0x35 Escapebr   55 0x37 Commandbr   56 0x38 Shiftbr   57 0x39 CapsLockbr   58 0x3A Optionbr   59 0x3B Controlbr   60 0x3C RightShiftbr   61 0x3D RightOptionbr   62 0x3E RightControlbr   63 0x3F Functionbr   64 0x40 F17br   65 0x41 ANSI_KeypadDecimalbr   67 0x43 ANSI_KeypadMultiplybr   69 0x45 ANSI_KeypadPlusbr   71 0x47 ANSI_KeypadClearbr   72 0x48 VolumeUpbr   73 0x49 VolumeDownbr   74 0x4A Mutebr   75 0x4B ANSI_KeypadDividebr   76 0x4C ANSI_KeypadEnterbr   78 0x4E ANSI_KeypadMinusbr   79 0x4F F18br   80 0x50 F19br   81 0x51 ANSI_KeypadEqualsbr   82 0x52 ANSI_Keypad0br   83 0x53 ANSI_Keypad1br   84 0x54 ANSI_Keypad2br   85 0x55 ANSI_Keypad3br   86 0x56 ANSI_Keypad4br   87 0x57 ANSI_Keypad5br   88 0x58 ANSI_Keypad6br   89 0x59 ANSI_Keypad7br   90 0x5A F20br   91 0x5B ANSI_Keypad8br   92 0x5C ANSI_Keypad9br   93 0x5D JIS_Yenbr   94 0x5E JIS_Underscorebr   95 0x5F JIS_KeypadCommabr   96 0x60 F5br   97 0x61 F6br   98 0x62 F7br   99 0x63 F3br   100 0x64 F8br   101 0x65 F9br   102 0x66 JIS_Eisubr   103 0x67 F11br   104 0x68 JIS_Kanabr   105 0x69 F13br   106 0x6A F16br   107 0x6B F14br   109 0x6D F10br   111 0x6F F12br   113 0x71 F15br   114 0x72 Helpbr   115 0x73 Homebr   116 0x74 PageUpbr   117 0x75 ForwardDeletebr   118 0x76 F4br   119 0x77 Endbr   120 0x78 F2br   121 0x79 PageDownbr   122 0x7A F1br   123 0x7B LeftArrowbr   124 0x7C RightArrowbr   125 0x7D DownArrowbr   126 0x7E UpArrow   You can also use AppleScript to click menu items:  precodetell application "System Events" to tell (process 1 where frontmost is true)     click menu item "Minimize" of menu 1 of menu bar item "Window" of menu bar 1 end tell /code/pre    precodetell application "System Events" to tell process "Finder"     set frontmost to true     tell menu bar item 3 of menu bar 1         click         click menu item "Open With" of menu 1     end tell end tell /code/pre  <comment150302> Any examples using Automator? <comment224200> I don't understand the part "chosen randomly at every key press". <comment227641> If you just want to type keys without a modifier, just delete `using command down` from that line. <comment248120> How can this be done for multiple keys with a modifier? Example: Command + Option +H+M <comment248372> @Mort Just do multiple `key down key` statements <comment248464> @daviesgeek So I'm unclear. How would I simulate option, command, H, M being pressed as the same time? I understand key down for the modifiers but how do I intiate the pressing of H and M? <comment256243> WARNING: make sure you have all your code in try blocks and safety key ups after the blocks! I got stuck with my `control` key down for a while due to an uncaught exception and was quite frustrated. <comment256551> This combined with BetterTouchTool basically saves me from buying Keyboard Maestro. Nice. <comment300857> this answer is awesome :)