Escaped path in AppleScript adds leading / <body> I have the following AppleScript that I am trying to debug:  precodetell application "System Events"      set theResult to (do shell script "sqlite3 ~/Library/Application\\ Support/Dock/desktoppicture.db \"SELECT data.value FROM data WHERE data.ROWID = 2\"") &amp; "/" &amp; (do shell script "sqlite3 ~/Library/Application\\ Support/Dock/desktoppicture.db \"SELECT data.value FROM preferences JOIN data on preferences.key = 16 AND preferences.picture_id = 1 AND preferences.data_id=data.ROWID\"")      do shell script "open -b \"com.adobe.Photoshop\" " &amp; quoted form of theResult  end tell /code/pre  Basically what this script does is it fetches the path of the currently displayed wallpaper on my computer and passes that as an argument to Photoshop.  The path that is fetched is in the form code~/PATH/TO/IMAGE/code.  This path has spaces in it which is why I used the codequoted form of/code command to escape the string.  However, in doing so the path to the image changes to code/~/PATH/TO/IMAGE/code and I'm very puzzled as to why it adds the extra "/" to the beginning of the string.  Because of this, the script does not run as expected.  How can I escape the path but keep it from adding the extra "/".  Is there a way to convert the path to a fully qualified path or a different way of escaping the string?  strongUpdated version of script with correction:/strong  precodetell application "System Events"      set currentWallpaperPath to (do shell script "sqlite3 ~/Library/Application\\ Support/Dock/desktoppicture.db \"SELECT data.value FROM data WHERE data.ROWID = 2\"") &amp; "/" &amp; (do shell script "sqlite3 ~/Library/Application\\ Support/Dock/desktoppicture.db \"SELECT data.value FROM preferences JOIN data on preferences.key = 16 AND preferences.picture_id = 1 AND preferences.data_id=data.ROWID\"")      if currentWallpaperPath starts with "~/" then set currentWallpaperPath to (system attribute "HOME") &amp; text 2 thru -1 of currentWallpaperPath      do shell script "open -b \"com.adobe.Photoshop\" " &amp; quoted form of currentWallpaperPath  end tell /code/pre  Also wanted to add that this script is only relevant to OS X Mavericks (10.9) as the wallpaper information has now moved to the database file rather than being referenced in the com.apple.Desktop.plist file as it was in previous versions of OS X.  Also, my computer is set to randomly display wallpaper from a specific folder on my machine.  The script may need to be tweaked depending on your computers configuration.  <answer112126> codequoted form of/code also escapes the tilde. codequoted form of "~/Pictures"/code returns code'~/Pictures'/code. codeopen/code interprets code'~/Pictures/'/code as a relative path, and the default working directory for codedo shell script/code is code//code.  I couldn't get the sqlite commands to work, but try something like this:  codepath=$(sqlite3 ~/Library/Application\ Support/Dock/desktoppicture.db 'select data.value from data'|tail -n1);open -b com.adobe.Photoshop "${path/#~/$HOME}"/code  Or remove the tilde with AppleScript:  precodeset p to "~/Pictures" if p starts with "~/" then set p to (system attribute "HOME") &amp; text 2 thru -1 of p /code/pre  You can also get the desktop picture of the current space with System Events:  precodetell application "System Events" to picture of current desktop /code/pre  <answer112130> Here is another way to create the path:  precodeset databasePath to (POSIX path of (path to library folder from user domain as text)) &amp; "Application Support/Dock/desktoppicture.db" set theResult to (do shell script "sqlite3 " &amp; quoted form of databasePath &amp; " \"SELECT data.value FROM …… ; \"") /code/pre  <comment131712> Thank you for the suggestion, the line `if p starts with "~/" then set p to (system attribute "HOME") & text 2 thru -1 of p` is all I needed to get this to work!  I simply added this line before I make the `do shell script` call.