Is there any not-scary explanation for Finder's memory usage? <body> OS X El Capitan 10.11.6. MacBook Pro (Retina, 13-inch, Early 2015).  img src="https://i.stack.imgur.com/7nSua.png" alt="enter image description here"  <answer260941> I wouldn't worry about any memory issue until there's pressure or a problem.  The system is designed to use all the memory it can since memory access is faster than network or storage access. Self-managed systems can reduce the allocations once you have other needs. What your snapshot shows is nothing else needs RAM, so the system is using it all for other tasks.   You could dig into Finder's allocations or try removing Dropbox to see if there are leaks. Even if Finder is leaking, it's not causing any harm (perhaps yet). You can also log out and log back in. If you watch the EMA usage each hour for several hours, you can quickly determine if Finder indeed is leaking memory or if you just have a usage pattern where it allocates a lot of RAM.   <answer260942> I see two explanations for the usage:  Either you have loaded something into Finder that takes up a lot of memory (I have no idea what that should be), or you have triggered a bug in Finder so that it leaks memory.  If you believe the memory usage is due to an error, you can always just quit Finder so that it restarts - the memory usage should go down immediately.  <comment326684> That's actually not correct. The kernel does not communicate with Finder.app in that respect to let Finder release RAM when the system is under pressure, nor is it the job of Finder.app to cache files. <comment326701> @jksoegaard I suppose `sysdiagnose Finder` or equivalent would answer your comment. Are you disagreeing that there isn't a problem until memory pressure arises? Or just concerned with oversimplification. I'd bet Dropbox is leaking, but I disagree that the situation is "scary" with green pressure. <comment326706> No, sygdiagnose won't answer it - it wasn't a question I asked, I take it as a fact that it is not Finder's job to cache files for the system, nor to have a sort of memory ballooning feature. I'm not disagreeing with you as regards to whether it is a "problem" - but that's not what was asked here. psoft asked for an explanation as to why, not whether it is a problem or not. It's completely okay to do simplified explanations - but they still have to have an essence of truth. I.e. "in general this is what happens, but a lot of specifics left out" - your explanation does not do that. <comment326709> sounds good - feel free to edit whatever "wrong" you think is in the answer if you can improve it. <comment326710> Thanks, I've removed the parts that are incorrect. Finder is not responsible for caching files, nor will a high memory usage by Finder indicate that this is used for speeding up things compared to disk or network access. Also Finder's memory allocation are not automatically reduced when memory is sparse. I'm sorry if you find it aggressive or offensive - I'm just coming at it from a computer science perspective and want the facts to be correct. There's so much misunderstanding and "myth" about memory usage and Activity Monitor in general. <comment326712> Please add `heap Finder`/`heap -sumObjectFields -showSizes Finder` or `heap $pid` with $pid: pid of Finder (in the example above that's 261). Xcode/Xcode cl tools have to be installed though! Activity Monitor isn't very helpful here. <comment326718> Thanks. I took a more surgical approach and expanded on "may" - older OS had more simple allocation strategies - http://apple.stackexchange.com/questions/67031/isnt-inactive-memory-a-waste-of-resources - do you know for a fact that the current finder won't purge or are you assuming or going on past experience? <comment326721> The discussion you link is about something different. It's talks about for example "Inactive memory", but in general it talks about the memory managed by the kernel itself. This question was about the memory allocated by Finder.app itself. When Finder.app allocates memory, the kernel cannot know per se what it is going to use it for - and thus it cannot know whether it can retract that memory allocation without causing harm to the program. This is why programs needs to give the memory allocations back to the operating system themselves, and why leaks happen when they forget to do so. <comment326722> And yes, I know for a fact that the current Finder.app does not "purge". You're confusing two different types of memory allocations there. "Purge" is about taking back memory that the kernel has used for disk caching. That kind of memory is allocated by the kernel itself - it is not allocated by a program like Finder.app, and thus would not show up in it is listing in Activity Monitor. So you cannot in general "purge" a program. <comment326723> Very few, specialized programs, do offer the ability to give back memory on request. This is a technique that is known as "ballooning" (and other names). On OS X it is implemented in for example VMware Fusion - but not in Finder.app. Normally you would find such features only in very specialized programs such as database servers and the like. I.e. programs that assume that the user wants them to use all available system resources as they are the most prominent program running. <comment326737> Does this issue persist after reboot? Is it always at 6 GB or does it start normal and then go up? <comment326866> Indeed I did reboot immediately after posting this question, and the problem has not reappeared. This is also the reason that I haven't posted any output from `heap`, as @klanomath suggests, though I did run the program and am peeved at myself that I never knew it existed. I'll advise more if the problem pops up again, but for now I'm not sure what I can do.