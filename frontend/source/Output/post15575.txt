Find logged on user and network home directory with a bash script <body> I am trying to use a script to find the username and home directory of the user that is currently logged on to a Mac. This is what I have, and it works, but is there a better (i.e. simpler) way to do it?  precodeuser=`logname` userHome="eval echo ~`echo $user`" userHome=`$userHome` /code/pre  The script will almost definitely not be run by the logged on user.  This is Mac OS X 10.6, joined to an Active Directory, and a network user is logged on. So the username does not appear in code/etc/passwd/code.  <answer15577> The user is stored in a variable USER, and the home is in HOME:  precodeecho user name: $USER, user home: $HOME /code/pre  This is done automatically. You don't have to write any script to get them.  <answer15580> Assuming codelogname/code works, then you can get the home directory like this:  precodeuser=$(logname) userHome=$(awk -F: -v u=$user '$1 == u {print $6}' /etc/passwd) /code/pre  <answer15581> From this Advanced Bash-Scripting Guide I learned that     The $(...) form has superseded backticks for command substitution.      The $(...) form of command substitution permits nesting.   Now I am using:  precodeuser=$(logname) userHome=$(eval echo ~$(echo $user)) /code/pre  <answer15590> This script:  precode#!/bin/bash w -h | sort -u -t' ' -k1,1 | while read user etc do   homedir=$(dscl . -read /Users/$user NFSHomeDirectory | cut -d' ' -f2)   echo =$user= =$homedir= done /code/pre  will do the following:  ul lifind all users logged in (via ssh too!) codew -h/code or can use the codewho/code command too/li lisort and find unique users codesort -u -t' ' -k1,1/code/li lifor each logged user ul liread username/li lifind his home directory from the DirectoryService daemon via the command  codedscl/code/li liprint out username and his home directory/li /ul/li /ul  <answer190117> Not sure if all the other complications are needed.  precodeecho $USER echo ~ /code/pre  <comment16951> This will only tell me the username and home of the user that runs the script. I want the user that is logged on to the GUI, the script is running as a different user. <comment16954> The user does not appear in `/etc/passwd/`. I updated the question. <comment16974> Good old `dscl` ... don't know why I didn't think of that! <comment16975> That is cleaner than userHome=$(dscl . -read /Users/`logname` NFSHomeDirectory | awk '{print $2}) ; user=$(basename $userHome) - nicely done <comment17036> I see. I misunderstood the question. <comment225618> From the post "The script will almost definitely not be run by the logged on user." -- your answer won't work to _discover_ other users on the system.