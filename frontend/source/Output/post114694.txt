TrueCrypt and OSX Fuse <body> I installed OSX Fuse via Brew, as installing it via official installer causes codebrew doctor/code to go all crazy. Mavericks, 10.9.1  I followed the instructions after the installation:  precodebrew install osxfuse ==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/osxfuse-2.6.2.mavericks.bottle.tar.gz Already downloaded: /Library/Caches/Homebrew/osxfuse-2.6.2.mavericks.bottle.tar.gz ==&gt; Pouring osxfuse-2.6.2.mavericks.bottle.tar.gz ==&gt; Caveats If upgrading from a previous version of osxfuse, the previous kernel extension will need to be unloaded before installing the new version. First, check that no FUSE-based file systems are running:    mount -t osxfusefs  Unmount all FUSE file systems and then unload the kernel extension:    sudo kextunload -b com.github.osxfuse.filesystems.osxfusefs  The new osxfuse file system bundle needs to be installed by the root user:    sudo /bin/cp -RfX /usr/local/Cellar/osxfuse/2.6.2/Library/Filesystems/osxfusefs.fs /Library/Filesystems   sudo chmod +s /Library/Filesystems/osxfusefs.fs/Support/load_osxfusefs ==&gt; Summary   /usr/local/Cellar/osxfuse/2.6.2: 84 files, 5.0M /code/pre  Now, when I try to lunch TrueCrypt, I still get an error:  precode/Applications/TrueCrypt.app/Contents/MacOS/TrueCrypt  dyld: Library not loaded: /usr/local/lib/libfuse.2.dylib   Referenced from: /Applications/TrueCrypt.app/Contents/MacOS/TrueCrypt   Reason: image not found fish: Job 1, '/Applications/TrueCrypt.app/Contents/MacOS/TrueCrypt ' terminated by signal SIGTRAP (Trace or breakpoint trap) /code/pre  My research indicates I need MacFuse compatibility layer with my OSXFuse install. How do I get that with brew?  <answer116761> I run into this emtype/em of problem frequently. I use a strict umask (0077) in my shell.  Usually, when codebrew/code is done installing, the dynamic libraries will have the same restrictive mask and the software I just installed doesn't work as a different user. Check the permissions on code/usr/local/lib/libfuse.2.dylib/code. It might be accessible only by the brewer, which could explain why TrueCrypt can't find it.  Since HomeBrew symlinks everything, you may have to change the permissions on the symlink itself, and the file to which it is pointing. For the symlink, use the code-h/code option:  precodechmod -h a+rX /usr/local/lib/libfuse.2.dylib /code/pre  While you're at it, check to see if other files have the same problems.  Finally, codesudo/code inherits the umask of the sudo-er. If umask is the culprit here, you might want to also check the permissions for the file-system bundle that you copied as an admin. If those are a problem, use  precodesudo chmod -R a+rX /Library/Filesystems/osxfusefs.fs /code/pre  Hope this helps.  <comment134725> The MacFuse compatibility layer is probably also necessary for an unpatched [Macfusion](http://macfusionapp.org/) to work. I would also be interested in suggestions on how to install OSXFuse via Homebrew with the compatibility layer (or how to patch Macfusion to work without it). <comment134750> As an interim solution you can install OSXFuse with the [package installer](http://osxfuse.github.io/) making sure MacFuse compatibility layer option is checked, then remove the annoying warnings that `brew doctor` shows by following [this posting](http://www.yihangho.com/homebrew-and-truecrypt/) and then `brew install osxfuse` and `brew link --overwrite osxfuse`. This worked for me with Macfusion, so maybe it works for Truecrypt too. Yes, I know know this an ugly approach, but at least the doctor is happy that way :) <comment150116> I needed to change ownership of the OSXFuse files prior to the 'brew link' - they were owned by root and Brew didn't cut its teeth to them. However, I'm still unable to actually access an ext4 partition, which was what I intended to do.