Ejecting USB drive via AppleScript does not make drive power down <body> On startup, I eject my external USB disks with the following AppleScript:  precodetry     do shell script "diskutil eject \"/Volumes/USB Backup\"" end try /code/pre  This works as expected: the drive powers down. However, when my MacBook wakes from sleep (through not being used), the drive spins up - no partitions are mounted, but the drive is nonetheless on and humming. If I check the Disk Utility app, I see that the USB drives are all greyed out. If I right click one of the partitions and select "Eject Partition" (even though they are gray and thus symbolize that they are ejected) then the drive powers down.   It is however a little anoying to constantly have to go into Disk Utility, so I made though I could just re-execute my logon script. But that doesn't work. Even if I modify it to work with the DeviceIdentifier  precodedo shell script "diskutil unmountDisk disk1" /code/pre  or  precodedo shell script "diskutil eject disk1" /code/pre  it doesn't work. Does anyone have a tip for me how I can power down the drive, so that this horrible humming stops?  Later Addition: I noticed something interesting. It has nothing to do with the laptop's sleep mode itself, but rather when my Cinema Display goes to sleep (after 1 min.). The USB drive is connected to the Cinema Display and every time the display "wakes up", the drive motor spins up. I have now tried to connect the USB drive to the MacBook Pro itself  (who's sleep timer is at 30 min.) maybe this will solve the problem half-way.   <answer48897> For starters, the greyed-out appearance in Disk Utility means the disk is emunmounted/em, not emejected/em. An ejected disk does not appear at all.   The reason it shows up is that when the Cinema Display wakes, the computer sees the drive show up just as if you'd plugged it in. (Honestly, I'm surprised it doesn't mount all the way and show up on the Desktop.)  One thing that can help (particularly in the case of your second script) is to use the internal disk identifier instead of the disk name. You can find the identifier by going into Disk Utility, selecting the disk (or partition) in question, and pressing the Info button (or hit kbdâŒ˜/kbd+kbdI/kbd). In that window, look at the label next to "Disk Identifier:". A disk (whole hard drive) would look like "disk0" or "disk2", a partition looks like "disk0s0", "disk0s2", or "disk2s1". Instead of using codediskutil eject DriveName/code, use codediskutil eject /dev/disk2s0/code.   <comment56054> that seems to have done the trick...