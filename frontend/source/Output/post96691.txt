How can I make OS X's bash expand $PWD to be case sensitive? <body> I am running OS X 10.8 on a MBP 2011. I use some bash-scripts for tasks like backups of remote servers. One of the scripts contains this snippet:  precode#!/bin/bash if [ "$PWD" != /Users/myuser/Documents/Backup ] then     echo "Wrong path: $PWD"     exit 0 fi /code/pre  When I execute this script in code/Users/myuser/Documents/Backup/code (note the upper case B), I get this response:   precodeWrong path: /Users/myuser/Documents/backup /code/pre  For some reason, the code$PWD/code gets expanded to a lower case name. How can I alleviate this? My filesystem is not case sensitive: both codecd Backup/code and codecd backup/code work.  <answer96692> You have two choices really: convert code$PWD/code to a consistent case before comparing to your other string (which should also have consistent case). Or drop case-sensitive comparisons.  Converting it to lower case before comparing:  precode#!/bin/bash if [ `echo $PWD | tr [:upper:] [:lower:]` != /users/myuser/documents/backup ] then     echo "Wrong path: $PWD"     exit 0 fi /code/pre  Dropping case sensitive comparisons:  precode#!/bin/bash shopt -s nocasematch if [[ "$PWD" != /Users/myuser/Documents/Backup ]] then     echo "Wrong path: $PWD"     exit 0 fi /code/pre  <comment113537> I used the second option. Hower I needed to use the [[ ]] syntax for it to work. <comment113569> I fixed the syntax. Good catch.