Protect hosts file <body> I am under the impression that there is no real way to protect the hosts file completely without creating a none-admin user account on my Mac and setting the password of the admin account to one that I won't remember.  So therefore I would like to make editing of my hosts file emdifficult/em as a next-best alternative.  I have read that it is possible to set a strongsystem immutable flag/strong on specific files which would need to be disabled before the files are able to be edited.  So of course it would still be possible to edit the hosts file, but it would at least make it a bit trickier.  Is this a recommended approach? or is there a better way to achieve it?  <answer282341> Protecting with ‘schg’, the system immutable flag, is a potential solution, depending on how much protection you need. You can set the schg flag using  precodesudo chflags schg /etc/hosts /code/pre  Removal of the protection depends on your kernel security level. Run codesysctl kern.securelevel/code:  ul li1 means you need to boot to single-user mode to run codechflags noschg /etc/hosts/code,/li li0 means you can simply codesudo chflags noschg /etc/hosts/code./li /ul  hr  Instead of schg, you can use System Integrity Protection's restricted flag in El Capitan and later. You can boot to the Recovery HD to set the flag using codechflags restricted /etc/hosts/code.  This protects the file from modification whilst SIP is enabled, which is enabled by default and can only be disabled by booting to the Recovery HD and running codecsrutil disable/code.  Check the status of SIP by running codecsrutil status/code: if it is enabled, any files with the restricted flag cannot be modified without disabling SIP from Recovery first or by installers signed with Apple's Software Update certificate (even root cannot modify the file).  <comment355566> thanks! I am running Yosemite so looks like `schg` is the only option then... my kernel security also appears to be set to `0`, is there a way to increase this? <comment355567> also I've tried running `sudo chflags schg /etc/hosts` in Terminal but I am still able to access the hosts file with `sudo nano /etc/hosts`... is this normal? <comment355568> @pealo86 Unfortunately I have no experience with modifying the security level, perhaps someone else will be able to help with explaining any impacts this may have. As for opening with nano, this doesn't prevent access to the file, only modifications — try writing out with nano to the file? <comment355569> ah I see what you mean about not being able to make modifications actually! it now gives me an error when I try to write-out the hosts file... that should do nicely then. Im struggling to undo the `sudo chflags schg` command however, if I run it again I am still unable to modify hosts? <comment355570> If you want to prevent yourself from wasting time on Facebook et all while working there are applications for this :-) <comment355573> @pealo86 By “previous command” I meant the noschg command I mention after — run `sudo chflags noschg /etc/hosts` to remove the protection. <comment355575> ah I see! this works nicely thanks :D <comment358019> @grgarside Thanks. So this csrutil trick helps you prevent modification but an attacker can still read the file right ? Can this pose a threat with a normal non custom hosts file? <comment358021> @grgarside Also can this protection using csrutil cause some apps or services to bug ? <comment358022> @Espressotron Restricted files can still be read, SIP doesn't protect against reading the file as that's not its purpose. I'm not sure I understand what you mean by threat — many processes read the hosts file and they shouldn't be prevented from doing so, but writing is a different thing and rarely needs to be performed. Apps shouldn't be writing to hosts except in very rare circumstances, so having an error or other caught exception is part of the protection. Should Apple ever wish to edit the file in a macOS update, their SU certificate bypasses SIP as designed, so this is not an issue. <comment358028> @grgarside ok great, thanks a lot for taking time to answer my questions. Is there an official hosts file to check against to see what the regular hosts file should look like ? <comment358029> @grgarside when we do the `csrutil` technique you mentioned, is there a way to verify the protection on that file has been activated like when verifying permissions for a folder or file for example ? <comment358032> @grgarside when I check the manual for `chflags` they don't mention the `restricted` option, is there a way to get a more detailed command manual than the BSD General Commands Manual widely used online (including the Apple Developer Site) ?