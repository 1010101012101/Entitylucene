What's the best way to extract audio from a video file? <body> I am a huge fan of HandBrake. It is the epitome of simple. Select a video file (or DVD), select a preset, select an output path, click Start. A certain amount of time later relative to the size/quality of the content, and you have yourself a pretty much perfect video file suitable for the medium of your choice.  I've been looking for similar qualities in an Audio Converter, and more preferably, an Audio Extractor (from a given video file). I would love to be able to drag a video file into an application, specify that I want the Audio File in AAC at a given bitrate, click Start, and let the app do the rest.  I am not averse to using Handbrake to suffice the conversion aspect of this, so long as the audio extraction after the fact is a simple process. The point is to take as few steps as possible.  Any tips? Apps? Ideas?  <answer13223> I would drag the movie into GarageBand.  GarageBand will split the file into audio and video, at which time you can delete the video track (leaving you with just the audio track).  You can then click the Send Song To iTunes option in the Share menu (see pic).  This will then come up with the various formats you want to export to.  img src="https://i.stack.imgur.com/5vFf2.png" alt="enter image description here"  Best of all, this is free :)  as all Macs come with GarageBand.  Plus it also allows you to adjust aspects of the audio such as speed and volume.  Having said that, if you want a truly automatic solution, and are comfortable in the command line with Terminal, let me know in the comments and I'll come up with a script to allow you to do this.  <answer13277> Quicktime 7 will do the work really easily.  Just open the video, and go to strongFile/strong  strongExport/strong  strongSound to AIFF/AU/Wave/strong  select your path and you're done! :)  <answer35586> I finally found the exact combination I needed, and I found it in ffmpeg.  I will expand on the question a bit and spell out the fact that I was already working with mp4 contained video/audio, so MP4 Video (.m4v) and AAC Audio (.m4a). I absolutely wanted an as-is version of the audio extracted from the video.  First off, it's pretty easy to install things like ffmpeg, mplayer, things built off them, and similar open source packages nowadays. Between Rudix, Homebrew, MacPorts, and Fink (does anyone even use fink anymore?), third party software is a snap to install.  So, after installing ffmpeg, and having the codeffmpeg/code accessible at the command line, I ran a command like this:  precodeffmpeg -i videofile.mp4 -vn -acodec copy audiotrack.m4a /code/pre  emffmpeg/em: The command.  em-i videofile.mp4/em: The source video file.  em-vn/em: Do not record (do not consider) video data.  em-acodec copy/em: Copy the audio source as-is, here's where all the magic is. ffmpeg will write the audio data out as various supported codecs, but specifying copy leads a bit-for-bit exact copy of the stream. Coupled with disabling video via -vn leaves you with a lone audio track inside an mp4 container.  emaudiotrack.m4a/em: The output filename.  I can't believe something like this was so difficult and hidden for so long.  Since I always intend to rip aac audio data out of an mp4 container/video, I wrote a quick little script to do it.  precode#!/bin/bash  INFILE="$1" TMPOUTFILE="${INFILE%.*}" OUTFILE="${TMPOUTFILE##*/}.m4a"  ffmpeg -i "${INFILE}" -vn -acodec copy "${OUTFILE}" /code/pre  Now, I simply invoke coderip_m4a_from_mp4 somevideofile.mp4/code and I am left with an audio only version with the same filename, ending in m4a instead.  Simple! For me anyways. No GUIs, lightning fast, this is just one of those things that the command line does better.  <answer37204> You can do this directly in the Finder, starting with Mac OS X 10.7 (Lion), as described at OSX Daily.  The short answer is, select the file or files in the Finder, then kbdctrl/kbd-click and choose strongServices - Encode Selected Video Files/strong.   Note that you may need to enable this service in the Keyboard preference pane.  img src="https://i.stack.imgur.com/1hvYI.png" alt="enter image description here"  <answer228044> I simply open the video file with audacity and then export the audio. I can set the exported audio file parameters during the export.  <answer264383> QuickTime Player 10 is able to export audio, too. Select strongFile  Export  Audio Onlyâ€¦/strong  Tested on macOS 10.12 Sierra with QuickTime Player 10.4.  <comment13941> Fission is a good utility for extracting Audio Data from a Video FIle, and I was getting ready to do it the old fashioned way, track by track, manually. Not my preference.  I had the idea afterward to Applescript it, but unfortunately it appears that Fission does not have an AS Dictionary. <comment13942> @Jason considered some UI scripting to talk to Fission? <comment13943> Is that generally primitive Applescript when a given app doesn't have a dictionary?  Click the menu named "File". Click the menu item named "Save".  Stuff more or less like that? <comment13944> @Jason yep. But may be better than doing it by hand, depending on how many of these you plan on chugging through. <comment14004> I don't intend to do this for one reason (unless I'm wrong, please feel free to correct me): Recompression. The video files already have significantly compressed audio data, and I wish to preserve the original audio data as much as possible. Fission's killer feature is "lossless editing and reexporting".  Not to even mention that GarageBand is really really slow for tasks like this :/.  However, this is a wonderful solution for a task that fulfills the subject, so I've +1'ed you for that aspect. <comment14031> Looks like I may need to find my Snow Leopard disc... <comment14033> @vxjasonxv you don't have to. You may downloaded via the provided link.. <comment14055> Oh, thanks! I didn't really think the link would actually be substantive in that manner. <comment15212> Does the same pitfall I added to Rob's answer apply here? I can "save a wave" of the audio, but it's already compressed, and in theory in order to use it I'd have to recompress it again, which I'd rather not do. <comment31176> I stumbled across an entry on [Handbrake's FAQ](https://trac.handbrake.fr/wiki/SupportFAQ#just-audio) today: `I just want audio, not video. Can I do that?   Not with HandBrake, no. You could just encode the video at a low resolution with a fast low quality encoder like ffmpeg, then extract the audio track.  Or you could use` [OSEx](http://www.macupdate.com/app/mac/9830/osex).   Unfortunately, it's PPC only. Booooo! <comment40767> Feasibly, you could replace `m4a` on line 5 with `$2` and specify the new extension on the command line. That way if you're working with something else, and know what the audio is, you could specify it. I may do this myself and change the script name to 'rip_audio_from_video'. Generic! <comment183011> To get started. `ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"` then `brew install ffmpeg`. Now follow the instructions above. <comment183207> Homebrew's homepage is http://brew.sh/ . After following the instructions on that page (just in case they change), `brew install ffmpeg`. And then yes, then you can follow my steps. <comment266267> If you *do* want to re-encode the audio into another format, `ffmpeg` can do that in the same command.  For example: `ffmpeg -i source_video.avi -vn -ar 44100 -ac 2 -ab 192 -f mp3 sound.mp3` (http://www.catswhocode.com/blog/19-ffmpeg-commands-for-all-needs) <comment305442> @alexw make sure you specify 192k, not 192. Otherwise it will fall back to a 128kbit/s encode. <comment310999> Wow! Very convenient! Another reason to use a Mac! <comment331281> But does that re-encode the audio? <comment331391> @JasonSalaz No, just extract. This is IMHO a better option. It is pretty quick and preserves quality. Moreover, you can re-encode it any time later. <comment331395> Setting audio file parameters means re-encoding the audio. Does Audacity have a pass through (unchanged extraction) option? <comment331396> Awesome. My ffmpeg answer is also extract only so it probably only takes as much time as QuickTime. The benefit of ffmpeg is it doesn't have the inherent UI load weight, so it is undoubtedly faster at 1 file, and exponentially faster at many files. But this is a great answer for someone versed in Automator / Applescripting, and perhaps not as comfortable at the command line or with shell scripting.