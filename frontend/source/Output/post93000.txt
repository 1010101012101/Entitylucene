Writing to plist file multiple preferences same time <body> I need to write about 50 preferences to a .plist file. Is there any way to write just once to plist file? My current code has 50 defaults write lines.  precodedo shell script "defaults write testing.testing mypref " &amp; "Kjlk" do shell script "defaults write testing.testing otherpref " &amp; "something" do shell script "defaults write testing.testing thirdpref " &amp; "whateva" ... /code/pre  <answer93005> Mac's codedefault/code command is not designed to work like that.    You will see a substantial speedup by having Applescript make (or call) one shell script to issue all 50 commands. You can wrap both versions of the script in a codedate/code call or use the codetime/code function to time the shell script if you are not sure where the delay lies on your Mac.  The vast majority of the delay will likely be Applescript looping and then forking each an environment for each script to be executed. By writing one script, not only will the startup be reduced to 1/50 of the time, it will likely execute far faster overall.  If you really wanted to, you could write yourself a function to parse multiple inputs; but it's probably easier for you just to have 50 lines of shell script.  <answer93031>    If you really wanted to, you could write yourself a function to parse multiple inputs   Thanks. I think i will create one shell script.  I have no idea what above quote means.  <answer93086> As demure's answer mentioned, a single do shell script commmand would be faster:  precodedo shell script "defaults write testing.testing mypref Kjlk defaults write testing.testing otherpref something defaults write testing.testing thirdpref whateva" /code/pre  You can also use System Events to edit plists:  precodetell application "System Events" to tell contents of property list file "/tmp/test.plist"     make new property list item at end with properties {kind:string, name:"key", value:"value"}     make new property list item at end with properties {kind:string, name:"key2", value:"value2"}     set value of property list item "key2" to "value3" end tell /code/pre  Both took about 0.5 seconds adding 100 new keys. Multiple do shell script commands took about 2 seconds.   <comment109144> @bmike very good point <comment109145> I think you made all the real points (or had them in mind) but I did try to flesh things out and re-arrange the order a bit. <comment109152> This does not yet fully answer your own question. But if you come back to add the shell script to this afterwards, this would help future visitors on this site.