View Keychain from encrypted IOS 8.2 backup? <body> Is there any way to access the keychain from an Iphone 5 IOS 8.2 backup?  Here are the hard facts:  ul liencrypted backup where I KNOW the password/li lidevice is lost/li /ul  So far I could restore all the (important) files just fine, however I am stuck on how to view my saved passwords. Apple support sites only show me how to restore a backup, but not how to read it. After searching for quite some time I found two possibilities:  ol liDecrypting the iPhone keychain from backups/li /ol  This requires me to have not only any iPhone (like the Apple support pages) but even the original one, which I have the backup of. So that's not possible.  ol start="2" liElcomsoft Phone Breaker/li /ol  This seems to work. I downloaded the demo version, which shows which passwords are saved on the backups, but not what they are. However, the cheapest version for OS X is 199â‚¬.  Isn't there any other way to access my data for free?   <answer224661> Try this tutorial - how to decrypt keychain   http://www.securitylearn.net/2012/05/03/decrypting-the-iphone-keychain-from-backups/  <answer233655> I had the same problem and found a great article that helped me decrypt the keychain from my iOS 9 backup: Recovering Google Authenticator Keys from iOS Backups.  Here are the steps for El Capitan:  ul liInstall pip: codesudo easy_install pip/code/li liInstall m2crypto (see answer to Trouble installing m2crypto with pip on El Capitan)  ul liFirst, install openssl and swig with Homebrew: codebrew install openssl swig/code/li liThen install m2crypto using pip:  precodeenv LDFLAGS="-L$(brew --prefix openssl)/lib" \ CFLAGS="-I$(brew --prefix openssl)/include" \ SWIG_FEATURES="-cpperraswarn -includeall -I$(brew --prefix openssl)/include" \ pip install --user m2crypto /code/pre/li /ul/li liInstall some more Python packages:   precodepip install --user construct progressbar pycrypto pyasn1 /code/pre/li liDownload the iPhone Data Protection Tools/li liExtract your backup: codepython backup_tool.py PATH_TO_BACKUP/code/li liAnd finally, decrypt your keychain:  precodepython keychain_tool.py -d "PATH_TO_extract/KeychainDomain/keychain-backup.plist" "PATH_TO_extract/Manifest.plist" /code/pre/li /ul  <comment272478> Hi Bleeder, user1068464 already mentioned this in his answer and link only answers are not welcome either. [Take a look here](http://apple.stackexchange.com/help/deleted-answers)