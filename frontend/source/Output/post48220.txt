What tools exist to recover a file I clobbered using cpp in terminal? <body> I accidentally typed codecpp Scriptname.py DestinationDirectory/code, intending to copy the Python script into the folder.  I realized afterward that I should have used codecp/code, but now my Python script is completely gone. I have tried the codelocate/code command, but it says that it's still present in my user directory. When I type codels/code in my user directory, it is nowhere to be found.    What are my options here for recovery? I'm asking the cpp angle on the unix site in case that tool saves a copy of files before it clobbers them, but what Mac tools exist to get my original file back?  hr  Here is an exact replica of what I did, showing how the script 'MYSCRIPT.py' disappears from the home directory.  precodevav7:~ tuc40953$ ls  Desktop            Dropbox         Movies         New.java               Public         scripts Documents       Library         Music           Peptoids      Theultimatescript.py Downloads       MYSCRIPT.py     New.class       Pictures        rename.py vav7:~ tuc40953$ clear  vav7:~ tuc40953$ cpp MYSCRIPT.py Desktop/Peptoids/Final-Structures/MyScript/ cc1: fatal error: opening output file Desktop/Peptoids/Final-Structures/MyScript/: Is a directory compilation terminated. vav7:~ tuc40953$ cpp Desktop/Peptoids/Final-Structures/MyScript/ MYSCRIPT.py  cc1: error: Desktop/Peptoids/Final-Structures/MyScript/: No such file or directory  vav7:~ tuc40953$ ls Desktop         Dropbox         Music           Peptoids          Theultimatescript.py Documents       Library         New.class       Pictures            rename.py  Downloads      Movies          New.java        Public             scripts /code/pre  <answer48222> If it is truly still in your user directory, perhaps it is marked as hidden. Use codels -a/code to see all files in your home directory, including hidden ones.  <answer50461> Here are a few options to recover a file from user error of this type:  ol liTimeMachine - your best hope. /li liDropbox also keeps deleted files and versions if you stored that file in a folder that synced. /li licodemdfind MYSCRIPT.py/code #better than locate and searches inside files, not just file names/li liCheck your repositories if you use code control software like git or mercurial or svn or other tools/li liGeneral undelete software like Data Rescue/li /ol  As you're now aware, the terminal is unforgiving and doesn't have an "are you sure you meant to clobber that file?" design mentality. It gets worse when you realize recursive commands and the fact that everything is a file (directories, disks, disk images, etc...) and errant commands can delete vast amounts of work in the blink of an eye.   <answer60289> Sleuth Kit works well and is free but takes sometime to learn.  http://www.sleuthkit.org/sleuthkit/desc.php  <comment55237> `locate` works on a pre-computed index (rebuilt on a weekly basis), use `find / -name Scriptname.py -print` instead. But cpp is just a preprocessor which should have left the input intact (especially with a directory as the second argument), did you do something else with the file as well? <comment55249> Useful trick, but no dice ;( <comment55254> Sorry to say, but the second `cpp`(with the directory first and the script second) deleted MYSCRIPT.PY (as I've just verified with some dummy file). Unless you have a backup there is no easy way to get the file back. <comment55265> @patrix Ah sugarplums... Alright, thanks for your help <comment55296> [Also posted on Unix & Linux](http://unix.stackexchange.com/questions/36161/is-there-a-way-to-undo-the-cpp-command-in-terminal). [Please do not post the same question on multiple Stack Exchange sites](http://meta.stackexchange.com/questions/64068/is-it-possible-to-post-questions-across-a-couple-of-the-sites-because-its-debata/64073#64073). <comment55297> No, there is absolutely no chance that the file was magically renamed to a name beginning with a dot. <comment55298> That second call to `cpp` deleted the files. You need to restore from a backup, or to try to recover the data from the deleted script (but that won't be easy) as indicated on U&L. If you want to try recovering, stop writing to the disk immediately. <comment55337> Files can be marked with the hidden attribute without being named with a dot. <comment57867> @gilles - thanks so much for the heads up. I think this can be tweaked and usefully kept here by focusing on Mac recovery options. <comment69437> Can you explain it bit more about how this would help in the situation described in the question? <comment69482> There is also no chance that copying will hide the file using meta data.