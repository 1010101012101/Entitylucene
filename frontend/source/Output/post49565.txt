How can I expand the number of special characters I can type using my keyboard? <body> I am aware that when I press kbd⌥/kbd or kbd⇧/kbdkbd⌥/kbd on my Mac, I can type a variety of special characters. I also know that I can insert special characters using the character palette. Is there a way to expand the number of special characters I can type while using the keyboard? I am particularly interested in solutions that work in Lion and Mountain Lion.  <answer49571> If you enable the "Unicode Hex Input" keyboard, you can enter any special character, knowing their Unicode code.  For example, if I press kbd⌥/kbd, and I click on kbd2/kbd, kbd2/kbd, kbd0/kbd, and kbd0/kbd, while keeping kbd⌥/kbd pressed, I get ∀ (the emFOR ALL/em Unicode character).  img src="https://i.stack.imgur.com/BhAFi.png" alt="screenshot"  <answer49575> h1Custom text entry key bindings/h1  OS X has a very nice text editing system, which you can extend using Key Bindings. You can, for instance:  ul liSet up special characters to be entered when you press a certain key command./li liInsert more than one character at once./li liInclude navigation commands and change the selection./li liUse multi-stroke key bindings — this is how I type the ⌃⌥⇧⌘ characters./li /ul  To set this up, you just create the file code~/Library/KeyBindings/DefaultKeyBinding.dict/code and put your customizations there. This article describes the steps in detail.  Here's a list of the default key bindings, and here's Apple's official guide to the text system and key bindings.  h1Diacritics/h1  If you're just looking to be able to type more diacritics, and you use a U.S. keyboard, consider using the  strongU.S. Extended keyboard layout/strong:  img src="https://i.stack.imgur.com/9GHSr.png" alt=""  This allows you to type such characters as oòôȯóöơōṯțőo̊ɵỏọţǒŏõǫȏṵṷȍ. You can enable it from the Input Sources section of the Language &amp; Text system preferences.  h1"Press and hold"/h1  In Lion, you can type many special characters by strongholding down a similar key/strong on your keyboard:  img src="https://i.stack.imgur.com/nUahY.png" alt=""  (It turns out this can be customized, if you're up to the task! All it takes is to edit a codeplist/code file.)  h1Arbitrary text substitutions/h1  If you have specific phrases or characters you'd like to use, you can also set up strongcustom substitutions/strong for them in the Text section of Language &amp; Text preferences:  img src="https://i.stack.imgur.com/pli58.png" alt=""  h1Character palette/h1  I guess you already know this, but I'll include it for completeness. If you enable "Keyboard &amp; Character Viewer" in the Input Sources section of the Language &amp; Text prefs, you can open the strongCharacter Viewer/strong and browse through the entire Unicode character set (and you can also browse characters by category):  img src="https://i.stack.imgur.com/rxUIE.png" alt=""  This window is easily accessible in most applications with kbd⌃/kbd+kbd⌘/kbd+kbdspace/kbd (in older versions of OS X, the shortcut was kbd⌥/kbd+kbd⌘/kbd+kbdT/kbd).  <answer49587> You can design a custom keyboard layout, which will appear in the input source list next to U.S. and Dvorak and Turkish and all that. You can arbitrarily change what character(s) are produced for any key with any combination of modifiers, and multi-character combinations (which in this context are known as “dead keys”, such as kbdOption/kbdkbde/kbd which makes acute accents, but can be much more general than that).  Ukelele is a free program for editing keyboard layouts. I use a keyboard layout of my own design, which notably adds dead keys for typing mathematical symbols and Greek letters (without switching to a Greek keyboard layout).  <answer49659> In addition to simply using the press-and-hold method included in @jtbandes answer, it is also possible to customise the list of options that you are presented with when you hold down a key.  In the example below I configured the "Q" key to show a list of special character codes corresponding to the Mac keyboard:  img src="https://i.stack.imgur.com/qSKqI.png" alt="enter image description here"  To do this, you need to be comfortable editing a plist file.  If you are not sure what a plist file is, this may not be a suitable procedure to follow, just in case you hit problems.  I used TextWranger, but if you have Xcode you can use Plist Editor, or any other tool that can open and read the plist formatted files.  The first step is to navigate to the following location.  You may need to make your Library folder available depending on how you choose to get there:  precode/System/Library/Input Methods/PressAndHold.app/ /code/pre  Right click on this file, and select codeshow package contents/code, and head on over to code./Contents/Resources/Keyboard-en.plist/code - choose the keyboard file relevant to your locale if you are using a different keyboard layout.  I took a copy of this file and dragged it over to my desktop for editing.  Also, for sanity, take a copy of the entire press-and-hold.app bundle in case you ruin everything.  Editing the file, you can see a series of statements that look similar to the following:  precode&lt;key&gt;Roman-Accent-a&lt;/key&gt; &lt;dict&gt;     &lt;key&gt;Direction&lt;/key&gt;     &lt;string&gt;right&lt;/string&gt;     &lt;key&gt;Keycaps&lt;/key&gt;     &lt;string&gt;a b á â ä æ ã å ā&lt;/string&gt;     &lt;key&gt;Strings&lt;/key&gt;     &lt;string&gt;a b á â ä æ ã å ā&lt;/string&gt; &lt;/dict&gt; /code/pre  In the example above, when holding down the lower case 'a' key, you will get the following alternatives.  I included 'b' in the list also.  After making the changes and saving the file, I dragged the file back into the press-and-hold bundle into the correct place, and authorised as administrator to allow the copy to complete.  To make this available, you need to log out/in to reload the plist.  Now just press and hold the key(s) you modified, to see your new list.  You can put anything you like in the alternatives list, just leave a space between each one, and don't bother going above 9 entries if you are a keyboard shortcut junkie, as you cannot select one of the alternatives by typing '10' without just getting '1' instead, even though the numbers above 9 still get listed...  Note that as per the above image, you can include unicode characters, emoji, and indeed anything that you can find in the special character palette that is also included in @jtbandes answer  precode    &lt;key&gt;Roman-Accent-Q&lt;/key&gt; &lt;dict&gt;     &lt;key&gt;Direction&lt;/key&gt;     &lt;string&gt;right&lt;/string&gt;     &lt;key&gt;Keycaps&lt;/key&gt;     &lt;string&gt;Q ⌃ ⌥ ⇧ ⌘ ⎋ ⏏ ⌫ ↑ ⇡ ↖ ⇞ ⇥&lt;/string&gt;     &lt;key&gt;Strings&lt;/key&gt;     &lt;string&gt;Q ⌃ ⌥ ⇧ ⌘ ⎋ ⏏ ⌫ ↑ ⇡ ↖ ⇞ ⇥&lt;/string&gt; &lt;/dict&gt; /code/pre  For preference, rather than ammend existing entries, I simply tested keys for ones that had no existing alternatives and made a fresh statement in the plist file for those keys as per above.  But be careful to check for duplicate statements for the same letter, as likely only 1 will work.  Try to keep them in alphabetical order for sanity.  Keys codeq/Q/z/Z/code are good options for fiddling with, having no pre-existing alternatives for that particular locale/keyboard that I used.  This can give you up to 36 'slots' for  creating custom shortcuts to unusual characters.  You can have a set of Emoji, a set of Keyboard characters etc etc on any key you like.  Likely other characters are also currently free of alternatives, and perhaps using a non-alphanumerix key like ` or @ or ¬ or ~ would be a good choice if you are filling the alternatives list with more non alphanumeric characters, but I don't know currently how you would identify them in the plist - would code&lt;key&gt;Roman-Accent-~&lt;/key&gt;/code work?  I have no idea, I didn't test that.  Note, take a copy of the plist somewhere, I have no idea if this will be overwritten on subsequent OS updates etc, and it would be a pain to remember what you did and repeat it next month when 10.7.4 is out etc.  It's possible that you can replace with more than a single character also.  I didn't try this either.  But is anyone fancies adding this code&lt;kbd&gt;&lt;/kbd&gt;/code to the k assignment, I'd be interested to see what happens :)  <answer49664> I incorporated Stuffe's excellent pop-up key solution into my own workflow (adjusted to include the keys strongI/strong care about)and am extremely pleased with it.   Seeking similar functionality on iOS, I also created a set of TextExpander snippets which I can access from my iOS devices or any Mac to which I sync my TextExpander settings. (I currently use DropBox to do so.) This is arguably faster than editing the plist file when I first "take control" of a new machine, and is less intrusive on Macs that I'm just emborrowing/em.   Below is my list of snippet shortcuts followed by the character (or entity) that it expands to:  precode,,via   ᔥ ,,ht    ↬ ,,kb   &lt;kbd&gt;%|&lt;/kbd&gt; ,,cmd   ⌘ ,,alt   ⌥ ,,opt   ⌥ ,,ctl   ⌃ ,,esc   ⎋ /code/pre  <answer90031> There are some important gotchas with the other solutions posted here. I’ll explain them, and offer an alternate solution that avoids these issues.  For one, symbol and text substitution entries only work in Cocoa apps. If you want a truly system-wide solution that works in all applications, this is not an option.  Also, apps like KeyRemap4MacBook are great, but relying on them means you have to keep the app running in the background all the time, which may not be what you want.  h2Custom keyboard layouts to the rescue/h2  Luckily, remapping keys can be done in a way that will work for any type of application, and without any additional software!  Mac OS X has supported code.keylayout/code files since version 10.2 (Jaguar). You can create your own keyboard layout, or rather, tweak the default one you’re using right now. Simply remap a keyboard combination you never use (for me, there are plenty of those) to the code²/code and code³/code symbols, and that’s it.   In my custom QWERTY keyboard layout, I can simply press code⌥/code + code⇧/code + code2/code to enter code²/code, and code⌥/code + code⇧/code + code3/code to enter code3/code. (My custom AZERTY layout has these mappings, too.)  h2How to create a custom keyboard layout/h2  To create new keyboard layouts or modify existing ones, I’d recommend Ukelele.app. It has an option to create a new keyboard layout based on the one that’s currently in use.  After you’ve created your custom layout, there’s no need for the application anymore — you certainly don’t need to keep it running in the background.  h2How to install a custom keyboard layout/h2  ol liCopy the code.keylayout/code file to the codeKeyboard Layouts/code folder within code~/Library/code (if you want to install it only for the current user) or code/Library/code (if you want to install the layout system-wide)./li liReboot (if you installed the layout system-wide), or log out and log in again (if you installed it for the current user only)./li liEnable the new keyboard layout via emSystem Preferences/em › emLanguage &amp; Text/em › emInput Sources/em./li /ol  h2How to make a custom keyboard layout the system default/h2  Optionally, you could make the custom keyboard layout the system default by running the Setup Assistant with root privileges. This way, it will be used for the login screen, and any new user accounts you create will default to this layout as well. Note that this can only be done for keyboard layouts in code/Library/Keyboard Layouts/code (i.e., layouts that have been installed system-wide).  precodesudo rm /var/db/.AppleSetupDone; sudo "/System/Library/CoreServices/Setup Assistant.app/Contents/MacOS/Setup Assistant" /code/pre  You will have to create a new user account in order to complete the Setup Assistant — but don’t worry, you can delete the new account afterwards.  h2Adding a custom icon to the keyboard layout/h2  OS X will use the following default icon for your custom keyboard layout:  img src="https://i.imgur.com/62qgL.png" alt="Screenshot"  This icon will show up in the preference pane, and in the “Input menu” in the menu bar.  To replace this with your own icon, create a 16×16px image, and save it in code.icns/code format in the same directory as the keyboard layout itself, using the same file name (only the extension differs). For example, my custom QWERTY layout is named codeqwerty.keylayout/code, so if I wanted to use a custom icon, it’d have to be named codeqwerty.icns/code.  <comment56803> Can you give us specific examples of the actual "special characters" you need to use? There are many keyboard layouts available to type many different languages or groups of languages. Which ones are you concerned with? <comment56880> @WheatWilliams ones like ⌘⌥⌃⇧⎋⏏⌫↑⇡ <comment56956> beautifully comprehensive <comment57112> This answer needs more upvotes! That custom list is awesome. <comment57117> I like that this is a short, general question that aims at a canonical answer as opposed to a one hit - "How do I get a  (bug eye emoticon) to replace the ® (option R) key" <comment57191> I was wondering how you did this before!  Thanks for posting this! Also, I was wondering if you could post a link to the .plist file that you used in the example picture above?  Thanks! <comment57298> @ruddfawcett I pasted my stanza straight into the answer, you should be able to copy the whole block and drop it into your plist. <comment57299> In your character palette screenshot, I do not have the options for the bottom 4 sections from Cyrillic downwards.  I can see why I might not have the language ones if I do not have them as an input options, but how do you get Musical and Technical symbols? <comment57304> @stuffe Cool, thanks.  I totally missed that. <comment57311> @stuffe You have to go the gear wheel at the top left and select Customize where you can add all kinds of categories. <comment57317> You can also put combining diacritics in the .plist, which opens new options for creating accented characters in general.  http://m10lmac.blogspot.com/2012/04/new-way-to-make-custom-keyboard-layouts.html <comment144643> Please remove your link "This article describes the steps in detail", and include the information here or find another source. The source you're using currently won't show the content unless the user shares personally identifiable information with the site and Google. <comment144729> @TheodoreMurdock I can't really reproduce that problem. I don't want to clutter my answer with that information, but if you'd like to find another source, you're welcome to. <comment145041> @jtbandes I can't find another source because I can't see the information to compare it against other sources. To see the issue, try going to the page from the computer of someone who hasn't registered with that site; it will require you to answer a survey question before displaying the contents. <comment170442> Do you know if something like keyRoman-Accent-=/key can be made workable or keyRoman-Accent-1/key? It doesn't work for me, but it would be cool if there is some trick to do that as well. <comment250714> At least in Yosemite (possibly before), this UI is found in Language and Region - Keyboard Preferences - Input Sources - (+ Button lower left) - Other - Unicode Hex Input.  Naturally it'll probably be somewhere else in El Capitan.