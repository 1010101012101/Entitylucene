Launchd Applescript Timeout Error <body> On Yosemite 10.10.5, I have an Apples Script application that runs and completes as desired under 2 of 3 conditions. The application is set to launch, by launchd plist 3 times per day at 7:05am, 3:05pm and 9:05pm.   ol liCompletes - when run from Script Editor/li liCompletes - when running under launchd at 7:05am/li liApplescript timeout warning - when running under launchd after ~7:21am and when the monitor is black/li /ol  It may be important to the #2 success that the Energy Saver  Scheduled  Start up or wake = 7:00am, everyday.  Sleep = 11pm everyday. Also, Computer Sleep = Never and Display Sleep = 15 min.   The error message is codeSafari got an error: AppleEvent timed out. (-1712)/code  The 1st arrow below points to the line of code where timeout occurs. The hack is displayed at the 2nd arrow, allowing the script to 'gracefully' continue:  precodeon waitForPageToLoad(repeatCount, myLogFile, theTabInUse)     set interval to 1     set currentCount to 0      repeat repeatCount times         set currentCount to currentCount + 1         delay interval         try             tell application "Safari" --&gt;             set docReady to do JavaScript "document.readyState" in theTabInUse             end tell         on error errstr --&gt;         display dialog "  waitForPageToLoad error: " &amp; errstr giving up after 10             set docReady to "complete"         end try     end repeat end waitForPageToLoad /code/pre  If I should wake up the screen within 2 minutes of the 1st arrow's code being sent, the script will continue fine.   Nothing related is in the Console system log. I am thinking this is a bug.  strongEDIT/strong - I am trying to track down if the correct tab &amp; window has been passed into the handler. It is possible the do JavaScript is not targeted correctly.  Does anyone have any ideas of how to troubleshoot or solve this?   <comment244942> @klanomath In essence, yes. (edited #3) <comment244944> You may add some lines at the beginning like "tell application "System Events"    tell process "Finder"        keystroke return    end tell end tell " or something similar to wake your monitor first. <comment244952> Good idea. You suggestion does feel like a hack. It is interesting that line which times out is the 5th `do JavaScript` following `make new document with properties {URL:"https:// ..."}` of the script. I can't see why that would timeout and not the previous 4. The code above executes perfectly prior to these 4. <comment244975> @klanomath The tell block did not work. The script still hangs on the do JavaScript line <comment244977> May I just run the Apple Script in a VM or do I need any additional components, a special website/web-application or anything else? <comment244979> @klanomath If you are asking to try running the script, it conducts a foreign bank login. The do JavaScript commands fill input values. The script is all in one file, so I don't think it requires any other components, but is to a 'specific' website. <comment244980> Do you have or do you have the option to create a dummy website including the JavaScript commands just entering one arbitrary value? <comment244981> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/27706/discussion-between-david-c-and-klanomath). <comment244990> You may want to put some "with timeout of..." "end timeout" statements in there, I can see the tell application "Safari" code getting run several times before an error actually occurs. Default timeout is IIRC 600 seconds. That's long with respect to your once a second for two minutes time scale.  https://developer.apple.com/library/mac/documentation/AppleScript/Conceptual/AppleScriptLangGuide/reference/ASLR_control_statements.html <comment245059> @WayfaringStranger  Tried the `with timeout` previously. No effect. Write output confirms the script is processing linear. When it reaches the 5th do JavaScript, it waits for reply ~120 sec before displaying the timeout dialog. <comment245067> @DavidC OK, figured it was worth a shot. Sometimes AppleScript execution timing is weird enough to make it a problem.