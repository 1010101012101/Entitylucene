Scheduling cronjobs at specified time <body> I have scheduled some jobs in strongcrontab/strong which are to be run one by one, at some specific time. My script for crontab is :  precode15 10 * * * /Users/sri/files/BatchFF.sh 45 11 * * * /Users/sri/files/BatchGC.sh 15 13 * * * /Users/sri/files/Batch_GUI_FF.sh 45 14 * * * /Users/sri/files/Batch_GUI_GC.sh 15 16 * * * /Users/sri/files/Batch_Sim_FF.sh 45 17 * * * /Users/sri/files/Batch_Sim_GC.sh /code/pre  These scripts ideally should start at 10:15, 11:45, 13:15, 14:45, and so on. But the scripts are not starting as expected, rather they start at 10:15, 10:15, 10:16, 10:16, 10:17, 10:17. These scripts are writing some log files also. I am running it in Apple McBook Air, with OS X 12.4.0 Darwin  <answer96873> Can I suggest you look into using LaunchD. Cron is officially deprecated on OSX. LaunchD has a lot of really nice features too.  The plist files can be a pain at first, but you get used to them.  Something like this can help:  http://blog.mattbrock.co.uk/2010/02/25/moving-from-cron-to-launchd-on-mac-os-x-server/  It can be as simple as this:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;Label&lt;/key&gt;     &lt;string&gt;BatchFF&lt;/string&gt;     &lt;key&gt;ProgramArguments&lt;/key&gt;     &lt;array&gt;         &lt;string&gt;/Users/sri/files/BatchFF.sh&lt;/string&gt;     &lt;/array&gt;     &lt;key&gt;StartCalendarInterval&lt;/key&gt;     &lt;dict&gt;         &lt;key&gt;Hour&lt;/key&gt;         &lt;integer&gt;15&lt;/integer&gt;         &lt;key&gt;Minute&lt;/key&gt;         &lt;integer&gt;10&lt;/integer&gt;     &lt;/dict&gt; &lt;/dict&gt; /code/pre  Save the file as batchFF.plist in ~/Library/LaunchAgents  <comment113479> The crontab syntax is correct. Are the scripts executable (rwx-r-xr-x)? Does `/Users/sri/files/BatchFF.sh` start other scripts (run `grep Batch /Users/sri/files/BatchFF.sh`? I'd suggest that you add to the beginning of each script a line like `echo "$(date): $(basename $0) started"  /tmp/debug.txt` to keep track when the are started in `/tmp/debug.txt`. <comment113486> Yes, the scripts are executable, and also have logging support as the script gets completed a report is being generated. This script is calling a java application to run in a browser and log of which is stored in a folder. the folder is being created with the date and time when the process is started, thus, bcz of which I was able to detect the time they started.