File location of kernel extensions? <body> Is there an easy way to make the mapping from kernel extension to the file it came from?  I can get the list of currently loaded kernel extension via codekextstat/code. This gives me the bundle names, like codecom.AmbrosiaSW.AudioSupport/code or codejp.plentycom.driver.SteerMouse/code. But how can I then find the actual file locations of these bundles? For example, the Ambrosia bundle is codeAmbrosiaAudioSupport.kext/code, and I can only find the bundle name in the codeInfo.plist/code inside that bundle. I could grep the code/System/Library/Extensions//code directory, but this does not necessarily contain extensions loaded after booting, and I assume there is a better way to do it?  <answer6210> See kextfind  <answer295853> You can use codekextfind -b &lt;bundlename&gt;/code to find the file defining a kext you only know the bundle name of.  For example:  precodekextfind -b com.AmbrosiaSW.AudioSupport /code/pre  <comment6519> `kextfind` is interesting, but it seems it only searched in the standard `/System/Library/Extensions/` folder. Is there a way to find the location of bundles that were not loaded from this folder? Something that remembers the `-r` parameter of `kextutil`?