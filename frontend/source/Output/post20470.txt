.rvmrc and mac osx lion "restore" issue <body> Just switched to lion a couple of days back, and juts noticed that when you quit Terminal while in a folder, when you open it, it should be back in that folder(along with your other tabs).  This is a good feature indeed, but the problem is, it doesn't "refresh" your paths. meaning even if you had a .rvmrc file in your app folder, it won't set the ruby and gemset again. you'll have to actually cd out and get back in again, which defeats the purpose of having an rvmrc.  Is this a known bug and are there an fixes/patches for it already?  strongEDIT/strong Following Chris Page's advice, I added codecd "$PWD"/code in the last line of my .bashrc (which is loaded by my .bash_profile)  This in turn "loads" the rvmrc as expected :  precodeLast login: Tue Aug  9 11:29:09 on ttys003 Using /Users/eumir/.rvm/gems/ruby-1.9.2-p180 with gemset mygemset  eumir$ gem list /Users/eumir/.rvm/rubies/ruby-1.9.2-p180/bin/gem:12:in `require': no such file to load -- rubygems (LoadError) from /Users/eumir/.rvm/rubies/ruby-1.9.2-p180/bin/gem:12  eumir$ ruby -v ruby 1.8.7 (2009-06-12 patchlevel 174) [i686-darwin10.2.0] /code/pre  As you can see, it did load the gemset(printed out by "Using /Users...") but trying to do gem list and showing the ruby version says that it still didn't load it. (the ruby version should be 1.9.2)  strongEDIT 2/strong   I updated my rvm and now any of the fixes aren't working!  It prints out that it IS using the gemset in my rvm but when I do a gem env, i get this:  precodeeumir$ gem env RubyGems Environment:   - RUBYGEMS VERSION: 1.3.6   - RUBY VERSION: 1.8.7 (2010-01-10 patchlevel 249) [universal-darwin11.0]   - INSTALLATION DIRECTORY: /Users/eumir/.rvm/gems/ruby-1.8.7-p174@awetest   - RUBY EXECUTABLE: /System/Library/Frameworks/Ruby.framework/Versions/1.8/usr/bin/ruby   - EXECUTABLE DIRECTORY: /Users/eumir/.rvm/gems/ruby-1.8.7-p174@awetest/bin   - RUBYGEMS PLATFORMS:     - ruby     - universal-darwin-11   - GEM PATHS:      - /Users/eumir/.rvm/gems/ruby-1.8.7-p174@mygemset      - /Users/eumir/.rvm/gems/ruby-1.8.7-p174@global   - GEM CONFIGURATION:      - :update_sources =&gt; true      - :verbose =&gt; true      - :benchmark =&gt; false      - :backtrace =&gt; false      - :bulk_threshold =&gt; 1000      - :sources =&gt; ["http://rubygems.org/", "http://gemcutter.org"]      - "gem" =&gt; "--no-ri --no-rdoc"   - REMOTE SOURCES:      - http://rubygems.org/      - http://gemcutter.org /code/pre  doing codecd ..//code and then codecd myfolder/code and then gem env results with this:  precodeeumir$ gem env RubyGems Environment:   - RUBYGEMS VERSION: 1.7.2   - RUBY VERSION: 1.8.7 (2009-06-12 patchlevel 174) [i686-darwin10.4.0]   - INSTALLATION DIRECTORY: /Users/eumir/.rvm/gems/ruby-1.8.7-p174@awetest   - RUBY EXECUTABLE: /Users/eumir/.rvm/rubies/ruby-1.8.7-p174/bin/ruby   - EXECUTABLE DIRECTORY: /Users/eumir/.rvm/gems/ruby-1.8.7-p174@awetest/bin   - RUBYGEMS PLATFORMS:     - ruby     - x86-darwin-10   - GEM PATHS:      - /Users/eumir/.rvm/gems/ruby-1.8.7-p174@mygemset      - /Users/eumir/.rvm/gems/ruby-1.8.7-p174@global   - GEM CONFIGURATION:      - :update_sources =&gt; true      - :verbose =&gt; true      - :benchmark =&gt; false      - :backtrace =&gt; false      - :bulk_threshold =&gt; 1000      - :sources =&gt; ["http://rubygems.org/", "http://gemcutter.org"]      - "gem" =&gt; "--no-ri --no-rdoc"   - REMOTE SOURCES:      - http://rubygems.org/      - http://gemcutter.org /code/pre  which is the correct environment. As you can see, the gemset was loaded correctly(along with the gems) but it is still using the system ruby instead of the rvmrc ruby.  <answer20471> I know its not a "fix", but you can exit the terminal with command+option+q it will quit without saving the path information.  Or you can use iTerm2 ( http://www.iterm2.com/ ), it have a few better things than default terminal .  <answer21009> Lion Terminal selects/restores the working directory by setting it with chdir() before the shell starts. If you want to automatically perform some sort of additional work related to the working directory, you should customize the shell with a startup script that performs some command with $PWD.  Assuming you're using bash (the default), what you apparently would want to do is add something like this in ~/.bashrc:  precodecd "$PWD" /code/pre  I'm not familiar with rvmc, but I assume it must use the shell startup script to customize the "cd" command, so be sure to issue this command after that. Also, if you don't already have shell startup scripts, you'll usually want to create ~/.bash_profile and have it run ~/.bashrc if it exists (look around on StackExchange or use Google to find this common idiom).  <answer21036> Fix 1: Okay found the better solution. So I created a script named code.loadrvmrc/code and which only contained "cd ./" (also chmod +x it)  I then loaded it in my .bash_profile, BUT take note that it should be loaded in order.  First, load your .bashrc:  precodesource ~/.bashrc /code/pre  then your path(which loads rvm:  precodeexport PATH=/usr/local/mysql/bin:/usr/local/bin:/usr/local/sbin:/Users/eumir/.rvm/bin:$PATH /code/pre  and THEN the .loadrvmrc script:  precodesource ~/.loadrvmrc /code/pre  Voila! You can close your terminal and open it with all your tabs and all their respective .rvmrcs.  =========== Fix 2: (non-programmatic)  I have fixed it for now. Maybe it's a timing issue for rvm or bashrc, so I'm not sure. If someone can post a better fix/answer for this one please do so and I'll change the accepted answer for this question.  Anyway in the default Terminal, I just changed codeTerminal &gt; Preferences &gt; Settings/code and then checked Startup and added codecd .//code as the startup script.  This is still ugly for me as starting the terminal will result with   precodeLast login: Tue Aug  9 11:43:06 on ttys003 eumir$ cd ./ Using /Users/eumir/.rvm/gems/ruby-1.9.2-p180 with gemset mygemset eumir$  /code/pre  which is kinda acceptable(until a better solution comes along).  <answer21042> Try upgrading your installation of RVM if you are running something older than 1.6.10 (check your active version with codervm --version/code).  In some shell:  precodervm get latest /code/pre  Then, either restart your other, existing shells, or run codervm reload/code in them.  Note: Another problem the OP faced was PATH manipulation after RVM was loaded into the shell. This created the “right gemset selected, but wrong installation of ruby” effect that disappeared after “cd out, cd in” (since RVM would have reasserted its position in the PATH at that point). When a shell is started in a directory that contains an code.rvmrc/code it is vital that RVM be the last thing to emprepend/em elements to the PATH (at least any PATH elements that might contain a coderuby/code (etc.) so that the Ruby installation selected in the code.rvmrc/code will be effective).  hr  RVM arranges to source code.rvmrc/code files by “hooking” your shell’s codecd/code command (a codecd/code shell function in embash/em, an entry in codechpwd_functions/code for emzsh/em). Normally this lets it catch any “normal” codecd/code command that you type it or run via a sourced script after loading RVM.  I do not have Lion to test with, but I suspect the way it works is that emTerminal/em forks, calls emchdir(2)/em, then execs your shell to establish your new shell’s initial working directory. This means that the directory is already established by the time RVM is loaded in your shell initialization file.  The history seems a bit muddy, but RVM has had some support for sourcing the code.rvmrc/code file in the shell’s initial working directory when it is first loaded. It looks like maybe it was intended to be emscreen/em-specific, but in RVM commit cb649ba (Always load the .rvmrc if in an interactive shell (open new tab in same dir)., 2011-05-14) relaxed the requirement so that it should source code.rvmrc/code files for any interactive shell when RVM is first loaded. This commit was first present in the 1.6.10 release of RVM. The code has changed a bit since then, but it still works in (more or less) the same way in the latest versions.  <comment22592> You can just `source path/to/.rvmrc`... <comment22593> where? do i have to do this every time? i accidentally mistyped a cd command and apparently, `cd ./` will refresh the directory and reload your rvmrc. im looking for a solution though that wont need me to type anything else <comment22594> that would still make me cd into the directory i need to. what i was thinking of was if lion opened it to the directory(or directories) i was in when i exited, it should automatically load the rvmrc <comment23036> Have you tried adding cd ./ to your .bash_profile? <comment23062> I added the cd thing in my bashrc and it almost worked. I'll update the question so you can see what i mean <comment23064> Are you using a version of RVM older than 1.6.10? That release included [cb649ba](https://github.com/wayneeseguin/rvm/commit/cb649baafa9a59e9f62a1d52b018b5c2466f) (Always load the .rvmrc if in an interactive shell (open new tab in same dir)., 2011-05-14)]. That change, which (more, or less) exists in the latest versions, should let it load `.rvmrc` files even for the initial, inherited current working directory (i.e. *Terminal* did a *chdir(2)* before starting the shell instead of having the shell do a `cd` itself (where RVM could notice it)). <comment23065> hmmm upon checking, yes i was using rvm 1.6.5. so i guess ill just have to upgrade and take away my fix? I'll try to do that in awhile and check. If you could also post this as an answer I can accept that once i confirm this. Thanks! <comment23076> actually i just checked and though it does load the gems, it doesn't load my commands like rails, spork and cucumber? it throws and error: /Users/eumir/.rvm/gems/ruby-1.9.2-p180@evolux/bin/spork:9:in `require': no such file to load -- rubygems (LoadError)  from /Users/eumir/.rvm/gems/ruby-1.9.2-p180@evolux/bin/spork:9 <comment23077> but doing gem list and gem env shows it loaded the correct gemset..maybe the paths are mucked up? i had to cd out and cd back in to make it work again... <comment23079> okay i just checked, it loads the correct gemset but the wrong ruby. ruby -v gives me 1.8.7 when it SHOULD BE 1.9.2. do you know why this happens? <comment23085> I do not understand what you mean when you say “it doesn’t load my commands like rails, spork and cucumber”. Are you using your `.rvmrc` to run those commands? Exactly what lines are in your `.rvmrc`? (I usually just put `rvm use ruby-1.9.2-head@mygemset` in there.) <comment23088> ah when i try "rails s" to start my server or "spork cuc", it says rubygems is not loaded. when I cd out of my directory and cd in "spork cuc" or "rails s" works <comment23089> basically, my gems that have commands all aren't working <comment23098> Are you modifying your PATH in your `.bashrc` **after** sourcing RVM into the shell (or in `.bash_profile` / `.bash_login` **after** sourcing `.bashrc`)? My current guess is that you are putting a directory with Ruby 1.8.7 in front of the directories that RVM adds to the front of your PATH when it loads. This is not a problem for `cd`-triggered runs of `.rvmrc` because they always happen after your shell has finished running its initialization files, but your shell initialization files still have a chance to subvert the modifications RVM makes after it first loads itself into the shell. <comment23103> i updated my question. I modify the path after .bashrc as said in my answer below. <comment23106> You need to avoid modifying the PATH after RVM is loaded into the shell. <comment23107> @corroded let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/1033/discussion-between-chris-johnsen-and-corroded)