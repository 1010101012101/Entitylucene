set PATH in terminal OS X 10.11.3 <body> I need to set path /usr/local/gnupg-2.1/bin to the command line.  I tried to enter code"export PATH=/usr/local/gnupg-2.1/bin:$PATH"/code in the command line, but it works until the terminal session ends.  I tried to create code.bash_profile/code, but I don't know how to create hidden file, where to put it, and what it should contain?  <answer226633> Open your terminal an paste de following command:  precodeecho "export PATH=/usr/local/gnupg-2.1/bin:$PATH" &gt;&gt; ~/.bash_profile /code/pre  This will create the file .bash_profile if does not exists and append your command at the end if the file exists.  To create a hidden file you just need to prepend a dot (.) in the file name when you save it (profile - .profile). That's all you need.  <answer226635> .bash_profile resides in your user folder. To create a file (hidden or visible) simply enter emtouch/em:  precodetouch ~/.bash_profile /code/pre  A dot prepending the file name makes the file invisible.  Then open the file with nano and add the line:  precodenano ~/.bash_profile /code/pre  Save the content with kbdctrl/kbdkbdO/kbd to disk and exit nano with kbdctrl/kbdkbdX/kbd  Afterwards you have to source the modified or new .bash_profile file to immediately reflect the changes:  precodesource ~/.bash_profile /code/pre  A different method (and a one-liner) is:  precodeecho "export PATH=/usr/local/gnupg-2.1/bin:$PATH" &gt; ~/.bash_profile &amp;&amp; source ~/.bash_profile /code/pre  This will overwrite any content in .bash_profile  To append a line in an already existing .bash_profile file use  precodeecho "export PATH=/usr/local/gnupg-2.1/bin:$PATH" &gt;&gt; ~/.bash.profile &amp;&amp; source ~/.bash_profile /code/pre 