Automatically typing a password into terminal <body> I want to be able to change the password of a disk image, but fully automated. Is there a way to enter a string as a password instead of plain text? Or can I have a .txt file with nothing but the password, and somehow import that into the password field? Thanks very much.  <answer19295> The codeexpect/code command can watch and type for you. Whatever you want is possible, storing ssh hashes, scripting the keychain, variables. You can be as tricky or transparent as you are creative.   <answer19311> You did not mention what tool you are using to effect the change of passphrase, but from a shell command line, emhdiutil/em probably makes the most sense.  Its codechpass/code subcommand will let you change the passphrase of an encrypted disk image. It can be told to read the old and new passphrases from stdin. However, it requires that the passphrases be presented in a “NUL terminated” format, which is difficult to accomplish when typing them directly. You can use the emprintf/em command to create the required format though:  precodeprintf '%s\0' '01d Pa55w0rD' 'n3w p4ssWoRd' |    hdiutil chpass /path/to/encrypted.dmg -oldstdinpass -newstdinpass /code/pre  The passphrases should be given in the same order as the code-oldstdinpass/code and code-newstdinpass/code parameters (in the example above, the code-oldstdinpass/code parameter and the old passphrase itself come first in their respective contexts).  hr  Note: If you are in a multi-user environment there is a chance that another user could spot your passphrases by watching the list of processes and their associated command lines (e.g. the emprintf/em command and its argument (thus your passphrases) might show up in the output of codeps -ef/code). This is less likely if you are using a shell where emprintf/em is a built into the shell itself (e.g. emksh/em, embash/em, emzsh/em do not require using a separate process for the external emprintf/em command).  <comment21176> where's a good place to learn to do this?