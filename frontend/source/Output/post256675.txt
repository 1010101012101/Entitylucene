How can I simulate light to heavy disk access and light to heavy CPU usage? <body> I have a Mac Mini server that seems to exhibit various issues while there's either a medium to heavy CPU load or disk access. I'd like to test this out by intentionally triggering varying degrees of CPU usage and different kinds and intensities of disk access. Are there any tools or techniques out there that can:  ol liLoad the CPU to a certain percentage, i.e. peg one or more cores of the CPU at 50%, 75%, 100%, etc./li liSimulate medium or heavy disk access of varying kinds, including situations like lots of random seeks or continuous reads / writes/li /ol  <answer256864> The best configurable tool I've found to simulate light to heavy disk access for testing purposes is filebench.  I didn't get filebench-1.5-alpha3 to compile properly. So download an older installer package (filebench 1.4.4) from FileBench ported to Mac OS X or direct link.  Install the app. You may have to disable SIP and - in Sierra - Gatekeeper to do so. The package will be installed to /opt/filebench.  To start the app in interactive mode enter in Terminal.app:  precode/opt/filebench/bin/go_filebench /code/pre  Now choose a workload at the prompt - preconfigured workloads can be found in /opt/filebench/config (e.g. fileserver.conf):  precodefilebench&gt; load fileserver /code/pre  Set a working directory and other variables (most have default values):  precodeset $dir=/tmp set $filesize=612458 /code/pre  and a run time in seconds:  precoderun 600 /code/pre  To create your own workloads visit filebench Wiki and check the WML link.  To "simulate" CPU-load install prime95 and configure it.  hr  In my virtual environment (Sierra - 2 CPUs/4 GB memory) running emgo_filebench/em alone already creates a total CPU-load of 70% (go_filebench: ~140%). So I don't have to start prime95 additionally. In your environment you may have to start it though.  <comment320213> Did you already try *[iozone](http://www.iozone.org/)*  and *[bonnie++](http://www.coker.com.au/bonnie++/readme.html)* (install with *homebrew*!). Both are benchmarking tools but can be used to some extent as disk load simulators also. CPU load can be done with prime95. I think it can be configured to use to a min/maxload. <comment320438> I hadn't tried these before, so just gave them a whirl. prime95 seems great for hitting the CPU, and does seem to allow me to control how much hard it's being hit. However I wasn't able to get iozone or bonnie++ to hit the disk the same way some of my apps are, nor could I get them to do it continuously while I tested. <comment320502> These seem to do the trick! One comment: when trying out filebench I noticed that it didn't actually delete the temporary files it created after it finished running and exited normally. In one case I told it to create a 1 GB file and it just left it there. Not sure if I was doing something wrong, but for anyone else thinking of using it, be aware it may do that. <comment320504> @GuyGizmo Older tmp files will be removed before creating a new temp file set in go_filebench preparing a new run. I don't know if the set will be removed while restarting the system.