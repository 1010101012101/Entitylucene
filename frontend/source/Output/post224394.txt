How to make a Mac OS X .app with a shell script? <body> I tried following a few tutorials, but I get this: img src="https://i.stack.imgur.com/01ozB.png" alt="PowerPC Error"  How can I fix this? I added in a info.plist (I just copied and pasted another app's file, and changed around a few things.)  Also, I used codechmod +x myApp/code to make the script executable.  P.S. I am using El Capitan  <answer224507> If it is a simple shell script, then you don't need to wrap it in an application bundle; you can double-click the script itself. However, you won't get the ability to have a custom icon or other things like that.  I think there are a few helpers out there that can wrap simple scripts, but the only one that I have experience with is Platypus which allows you to make shell/python/perl/ruby/etc scripts run like regular applications with icons, I/O redirections, etc.  <answer269045> Well, it's been years I use this simple trick to have bash scripts in application (and really really don't understand why all people try so complicated solutions as creating "Contents" folders, info.plist or use Automator or Platypus or so... ????) : Create a folder named "YourApplication.app". Put your bash script file directly in this folder the way that suites you the best (Finder, terminal etc). The bash script must be executable of course (use chmod +x if you need). No need for other folders or file (until you need to call other scripts or executable from within your script of course) The trick is to name your script with exactly the same name as the application folder but without extension. In the case described here the script file must be named "YourApplication". That's all ! It works on Mac os x since Snow Leopard to Mavericks. If anybody can try on newer OS versions and tell me.  strongNote:/strong The emscript/em must be at least 28 bytes in size, otherwise it will not execute. It may be padded with blank lines to achieve minimum size. Also, the first line of the script must be a shebang; e.g. code#!/bin/bash/code or code#!/bin/perl/code.  <comment272140> We can't guess what you did before getting the error message. Which tutorials did you follow, after which step did you get stuck? <comment272142> I created a folder called myApp.app, then a sub folder called Contents, then MacOS, then a myApp shell script that contains `#!/bin/bash ; say "Hi" ; exit 0` (With each of the commands on different lines, and w/o the semicolon). <comment272256> A bash script that has it execute bit set doesn't necessarily need to be placed in a bundle to be executed, simple double-click it if just in Finder or run it from Terminal.  If you really want an application bundle then create it using AppleScript or Automator, the latter of which is easy.  Add a Run Shell Script action and place your code in it. <comment272334> @user3439894 I tried automater in the method you described before posting this, but the app would not run on the target computer. <comment272337> Platypus looks good, but it would be great to know how to do it manually. <comment272340> @user3439894 Well, for some reason I can't edit my previous comment. The error was something like 'This type of application is not supported on this computer.' <comment272378> Is the target computer the one the Automator app was created on and if not why can't you just create it on the target computer?  Why does it need to be an application bundle, why can't the script just be executed as mentioned in the first sentence of my first comment? <comment272379> @user3439894 I do not have access to the target computer, since it is my friends. Also, I need it to open at startup. <comment272380> What version of OS X is on the target computer? <comment272382> @user3439894 Yosemite or El Capitan... not sure which. <comment272383> Tested out Platypus, works exactly how I wanted! Thanks for the suggestion. <comment272384> Let us [continue this discussion in chat](http://chat.stackexchange.com/rooms/34738/discussion-between-flare-cat-and-user3439894). <comment337959> Try to add some more lines, it gives you the message you had if there is not enough lines in your script. <comment337963> I've edited your answer to include the critical missing piece of information and up-voted it. <comment337964> OK thanks for correction and upvoting... I've been using this since too long time and forgot about the need for 28 bytes... I don't have any script that small of course :D <comment337965> I just tested this under macOS Sierra and it works there too. <comment337966> Ok cool. Cheers <comment339477> Wow! That works! Cannot believe it. Thank you so much. Edit: Tested on macOS Sierra <comment339934> Well, I couldn't believe nobody has tried this so simple solution before... I'm glad it worked for you. <comment342421> To anyone trying this, make sure the first line is `#!/bin/bash` <comment342692> @FlareCat In fact, I just checked and I guess any shebang with an existing interpreter will do (tried with perl). If you tried other languages, just tell ;). <comment355162> Anyone know how to get the script to change the working directory to the .app folder? <comment355171> @bugloaf Found my answer: http://stackoverflow.com/a/246128/214070 <comment355174> To give it a custom icon, do Get Info, select the icon in the upper-left, then paste a 512x512 image. <comment358659> @bugloaf : most of the time I use this scripting trick to kind of "encapsulate" other applications in a process (mount disks, manage devices, agents, deamons or make synchs before launching an app for instance) so I simply use the subsituted application icon by dragging the icon from the source application "Get Info" panel bottom big size icon to target application "Get Info" panel up left little size icon (the plus sign should appear when the mouse is over the little icon and so you can paste at this point).