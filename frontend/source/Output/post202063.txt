How do I run a java application that wants to bind to ports 80 and 443? <body> Okay, so I turn on my laptop, sign in to my regular codeuser/code account and proceed to open/run a Java-based, HTTP-proxying application called codeburp/code via codeTerminal.app/code. It executes normally but refuses to bind with ports code80:http/code &amp; code443:https/code. I assume the error is privilege related so I..  precodeuser@MacBook-Pro:~$login login:root Password:******** /code/pre  ..successfuly log in as the coderoot/code user and..  precoderoot@MacBook-Pro:~#open /Users/user/Downloads/burpsuite_free_v1.6.01.jar /code/pre  ..returns the following error:  precodeLSOpenURLsWithRole() failed with error -10810 for the file /Users/user/Downloads/burpsuite_free_v1.6.01.jar.` /code/pre  However, I don't observe this error when signed in as a regular codeuser/code; nor do I observe this error when signed in as coderoot/code via OS X's graphical user interface.  I'm not sure why codeburp/code refuses bind to ports code80:http/code &amp; code443:https/code. If it's merely an error due to (codechown/code) ownership and (codechmod/code) permissions; i would have thought having coderoot/code access was supposed to transcend such limitations.  Based on this question and answer I can see what the codeLSOpenURLsWithRole()/code &amp; codeerror -10810/code mean. I'm getting this error because the code.jar/code file isn't a runnable application.  But how do I fix this and get this working on my machine?  <answer206864> You cannot, normally, run a code.jar/code file (which is a Java ARchive file) using the codeopen/code command on OS X. It's not a executable file, it doesn't give the system any hints about how it should be run normally, so codeopen/code is giving you the codeLSOpenURLsWithRole()/code error you see above.  First, you'll need to install Java on your Mac. The easiest way to do this is to open a codeTerminal.app/code window and type:  precodejava -version /code/pre  If that returns a java version like this:  precodeIanCsiMac:~ |ruby-2.1.5| &gt; java -version java version "1.8.0_20" Java(TM) SE Runtime Environment (build 1.8.0_20-b26) Java HotSpot(TM) 64-Bit Server VM (build 25.20-b23, mixed mode) /code/pre  You're done. Java is ready to be used. If java isn't present on your system, running that command will pop up a window asking if you want to install it. Follow the prompts and when you're done, codejava -version/code will show you something like what you see above. The version may be different, but the command will now work.  Now you need to run your code.jar/code file using the codejava/code command. You need to provide three options to the codejava/code command in order for this to work:  ol liThe code-jar/code option which tells codejava/code you're running the contents of a Java ARchive file;/li liA memory option for the Java Virtual Machine in the form code-Xmx1024m/code; and finally/li liThe path to the code.jar/code file on disk./li /ol  For your download it's all going to look like this:  precodejava -jar -Xmx1024m /Users/user/Downloads/burpsuite_free_v1.6.01.jar /code/pre  That will start the program HOWEVER it still won't be able to bind to ports 80 and 443. Those are protected ports. Ports &lt;1024 on any Mac OS X machine can only be bound to be processes started as coderoot/code.  The correct way to run programs as coderoot/code is to use the sudo command, not to codelogin/code as the coderoot/code user. This provides a level of control and indirection to your actions so you don't do something accidentally silly like coderm -rf //code without a prompt asking you if you're sure you want to do such a silly thing.  So, the final form of your command will be:  precodesudo java -jar -Xmx1024m /Users/user/Downloads/burpsuite_free_v1.6.01.jar /code/pre  You'll be prompted for your password and, assuming nothing else is already bound to ports 80 and 443, your application will start and being listening on those ports.  If it fails because it cannot bind to 80 and 443, you'll need to find out what's bound there already and shut it down. You can use the lsof command to figure this out.  For port 80 the call is:  precodesudo lsof -iTCP:80 -sTCP:LISTEN -n -P /code/pre  For 443 it's:  precodesudo lsof -iTCP:443 -sTCP:LISTEN -n -P /code/pre  The output from that command, assuming something is listening on the port, will look something like this:  precode&gt; sudo lsof -iTCP:80 -sTCP:LISTEN -n -P COMMAND PID USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME nginx    50 root    9u  IPv6 0x8978b255ac4ef0b7      0t0  TCP *:80 (LISTEN) /code/pre  As you can see, I have a process named codenginx/code listening port 80. It has process ID 50.  I can kill that process with:  precodesudo pkill nginx /code/pre  That doesn't necessarily guarantee it won't try and come back, but how to deal with this fully and completely is best stated as entirely separate question on the site altogether.  <comment243716> LSOpenURLsWithRole() failed with error -10810  would imply the executable isn't actually executable, so yes, a perms issue, though idk why it wouldn't work with root in that case. <comment243723> Thanks for your comment. It's an odd situation; seems to obey no logic. Are there any details i should add? It's my first time submitting a question. I tried to be as thorough as possible. <comment243738> I found this - but I'm not really familiar with java - http://apple.stackexchange.com/questions/130587/lsopenurlswithrole-failed-with-error-10810-downloaded-app-does-not-start <comment244557> Let's either split this into three questions or clean it up to say which one question needs answering - perhaps by wrapping the other two questions into what you don't get and why it's making progress on this issue hard. If you just want a burp that works, edit this to ask that. I think you're in a bit of an XY problem - asking about what you think will fix the issue instead of just stating the problem. <comment244584> No, mike. I considered dividing it into 3 separate questions when writing it but I suspect all three symptoms to be caused by one mechanism. After weighing the pros & cons of my options, I decided that this best represents my issue & subsequent query. I'd actually appreciate if you would stop trying so pedantically to dictate my every contribution.. If I post something in an odd or unusual manner (or with unconventional formatting), I'm generally aware of it upon submission.. I'll only go ahead in spite of this if/when I believe it's somehow necessary, prudent or otherwise beneficial to do so. <comment244598> I gave you more latitude than most by not closing this question. All opinions on pedantry aside, the site rules are explicit about asking too broad of a question. See [help] **if your question has many valid answers, it's probably too broad for our format.** There's no reason why #3 and #1 have the same answer. If you count the ? you have loaded 5 questions here. <comment249359> [The Q&A here](http://apple.stackexchange.com/a/130692/292) answers your questions "What exactly are LSOpenURLsWithRole() & error -10810? / Why am i getting this error?" I'm editing this down to just "How do I fix this?" as that's the real heart of what you want to know right now. <comment249379> I don't think so. Java is present and up to date on the system. Also; if I login as root via GUI all ports work fine. But if I login as my regular account via GUI the ports have issues, even with sudo. I only get the `LSOpenURLsWithRole() & error -10810` message if I log in as a regular user via GUI and then login as root via CLI (Originally, I only did this only out of curiosity and for troubleshooting) . In all these cases; the `open` command was sufficient to execute the _.jar_ & in all these cases; there's actually nothing yet bound to either of the ports in question. That's why it's odd.