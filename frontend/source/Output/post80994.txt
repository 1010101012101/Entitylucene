Can iOS apps be distributed in a closed app store without requiring a jailbreak on each device? <body> I have an application available to all comers on the App Store and I would like to restrict access to the application. The app is free and because of this, some people download it then find they can't use it and leave bad feedback. Although the description clearly says you need to be an existing customer obviously not everyone is reading it and the bad comments put off our actual clients.  I've looked into the Enterprise account but from what I understand you can only distribute to in-house staff. These are our clients so do not fall under this category.  Can Apple's code signing requirements used to allow select customers to see certain apps?  <answer80995> Give your users an account for the app (maybe you already have it). In the description add a line on the very top:  strongOnly for XYZ users!/strong  Then people that download it will be prompted for username/pwd they don't have.  <answer80997> Solving this problem could go down three routes (and I'll initially answer it generally to be of most use to everyone reading this):  ol liUsing a development license and signing apps for a limited pool if iOS devices (currently, you get only 100 test slots as any iOS developer). This avoids the App Store entirely/li liSetting up an enterprise account with Apple so that that entity could sign apps for effectively an unlimited amount of devices. You would then let the company that has the enterprise account sign the apps for the devices it wants to run them and pull or modify the app from the public App Store./li liHave the developer and the clients sign up for the Volume Purchase Program from Apple. This puts the app on the App Store, but the developer can control whether all VPP buyers can see the app or only white list certain clients to purchase./li /ol  From an experience standpoint, option 3 is far superior for most situations. Abusing the developer program to distribute apps commercially is against the terms of service, and there are technical issues and undue hassle with implementing that potential around the code signing barrier.  Removing the app and only selling to clients might work for your case - using option 2. Only the clients need to sign up, but you get total control about issuing fixes, builds and there is no delay (or benefit) to submitting the app to Apple for review. It doesn't mean you couldn't still submit the same build and price it high enough that people don't buy it, but then refund those customers when they are done evaluating your app, want to get a direct build they can sign.  The last option means you, the developer, need to list your app under VPP (which hides that app from most users of the App Store) and your clients also need to enroll in VPP, but this is Apple's solution to the dilemma you find yourself in.  ul liThe client gets access to special pricing, special access and still has Apple reviewing apps and providing the store front, code signing, etc.../li liThe seller gets access to special pricing, explicit permission from Apple to sign related contracts directly with the clients to stipulate anything you wish (minimum purchase, pricing, availability, custom design) - but they only review the apps - Apple doesn't arbitrate, facilitate or handle agreements or disputes between the seller and the buyer./li liThe seller can price the app differently for each client or use the same pricing for all./li /ul  Both parties need to have a company and jump through some filing paperwork to enter VPP, but it's really the optimal solution for most cases where you don't want to price your app for free on the public store.  <comment93389> Interesting question, I'm going to be needing to deal with something similar too. AFAIK you have to distribute via the AppStore and as you've already learned - an enterprise account won't really help. Have you considered providing 'redeem codes' for your app to clients? (This still doesn't get around the requirement to have the app listed publicly). <comment93391> Contrary to what was suggested on StackOverflow, questions about development and listing your app on the App Store are off-topic for this site. <comment93394> @gerry - This could be answered in a way to be totally off topic, but it also could be answered in a way that explains how Apple's iOS App Store and code signing work. That is clearly on topic - even if a developer is asking for clear intent to develop. We actively discourage code level problems as off-topic, but understanding how code signing and jailbreaking works is very much on topic. <comment93395> That is the approach we have taken so far, yet people still purchase it and complain. <comment93396> @gerry I believe this is on-topic, it's not so much a code issue as how to utilize the Apple tools & infrastructure. <comment93397> @macaco We started out charging however the nature of the app meant people had to then ask their employer for the money and it put them off. Seems like there would be demand for a 'push' based controlled installation. I'd be interested to hear more of your experience & thoughts given we seem to have the same core issue. <comment93400> Thank you for your assistance bmike - this is very helpful indeed. <comment93403> Thanks for the understanding on the edits. Folks on Stack Overflow have a great deal of expertise on the exact mechanics, and although we discourage questions about some of the details on iOS dev program, this high level discussion seems something that the community of users, developers and buyers could find of great use in thinking about deploying apps in business. <comment93426> No worries, I appreciate all your input. It's people like you who make this site (and the other sites) such a great resource. I hope this is of some benifit to someone in the future. <comment93464> I have an iOS app installed which I downloaded directly from my employer's website, not the AppStore.  It asks the user for special permission before installation and installs a certificate.  So it's possible, but I have no idea how it's set up. <comment93510> I think you may find this interesting. You can use something called itms-services protocol to push apps to users. They go to a website and hit a link, it brings the app down for them, sans AppStore. http://jeffreysambells.com/2010/06/22/ios-wireless-app-distribution