Change Command Prompt - Variables are literal, and changes to .bashrc or .bash_profile not making a difference <body> Trying to change my command prompt in OS X 10.8 / Mountain Lion. Changes to ~/.bashrc and ~/.bash_profile do not make any difference. Like:  precodeexport PS1="\W \$" /code/pre  It defaults to the host name ("\h\%"). Even if I try to set PS1 in the terminal, it changes but displays the variables literally, as below:  precodews10% PS1="\W \$" \W $ /code/pre  (with ws10 being the host name)  My ~/.bashrc file:  precodeexport PS1="\W \$ " /code/pre  Any ideas? I keep getting lost when I cd up and down the directory structure! Thanks a lot.   <answer61068> Typically on Mac OS X, only code.bash_profile/code is executing when starting a new terminal. A common solution is to source one file into the other, for example in code~/.bashrc/code:  precode[ -r ~/.bash_profile ] &amp;&amp; source ~/.bash_profile /code/pre  Apart from that, your example works perfectly fine for me when put in .bash_profile. If you still experience problems, maybe you are overlooking something else?  <answer61070> My .bashrc reads:  precodePS1="\[\e[0;32m\]\u@monkey:\w\$ \[\e[0m\]"  /code/pre  i.e. no 'export' in front of the PS1 setting.  Does it help?  I surely get the prompt I have specified.  In addition this line  precodesource ~/.bashrc /code/pre  in .bash_profile should also help is you set the prompt in .bashrc.  <answer74572> I copied my .bashrc and .profile from an old mac and was seeing this issue.  It came down to the fact that .bashrc was checking for a specific terminal emulation name "xterm-color".  In Mountain Lion, xterm-color was renamed to xterm-16color and a new xterm-256color emulator was added:  check to see if your .bashrc has this check:  precodecase "$TERM" in     xterm-color) color_prompt=yes;; esac /code/pre  and add the new term names, so it looks like this:  precodecase "$TERM" in     xterm-color)    color_prompt=yes;;     xterm-16color)  color_prompt=yes;;     xterm-256color) color_prompt=yes;; esac /code/pre  <answer99196> In strong.bash_profile/strong add at the end following line:  precode[ -r ~/.profile ] &amp;&amp; source ~/.profile /code/pre  That made it work again for me under Mountain Lion.  <comment70412> But default value for `PS1` in Mac OS is set in `/etc/bashrc`. It's done conditionally--i.e if `PS1` exists (it's a login shell) then `PS1` is assigned a value.  All that happens in `bashrc`. <comment70413> @ephsmith, my point is ~/.bashrc is typically not executed when starting a new shell. <comment70416> try moving your `profile` or `bash_profile` to `bashrc` and see what happens.  It is sourced for all shells--not just login shells. <comment70417> @ephsmith, I am talking about ~/.bashrc, not /etc/bashrc <comment70419> Also, /etc/bashrc is sourced in /etc/profile, that's why it is executed for all shells. <comment70421> I've never had this issue before... On my previous machine, I changed ~/.bashrc or ~/.bash_profile and voila. Could it have something to do with homebrew or rvm? Any way to debug the loading of the terminal or to say "which profile"? It's got to reading `PS1="\h%"` somewhere. <comment70422> For sure. That explains why. <comment70424> @JohnHarper, then likely one was already sourcing the other. <comment70426> `PS1="\[\e[0;32m\]\u@monkey:\w\$ \[\e[0m\]"` gives me a new command prompt of `\[\e[0;32m\]\u@monkey:\w$ \[\e[0m\]` ... just copied/pasted that from my terminal <comment70427> The only difference would be that without the export, your prompt will not be set in child processes (for example when executing `/bin/bash` to start a new shell). <comment70428> Not fixed yet... I meant that on my old machine I had no issues with changing bashrc or bash_profile. Still can't crack this one. <comment70429> is your prompt definition after: if [ "$PS1" ]; then /prompt/ fi? <comment70430> @JohnHarper, which part is not fixed? Can you confirm you are editing ~/.bash_profile now? What terminal are you using? <comment70431> Clearly the `bashrc` in your home directory is getting sourced since you're seeing the changes to your prompt.  At this point, I'd recommend copying the system `bashrc` from `/etc` and starting fresh. Edit the `PS1` variable after copying it over. <comment70434> I don't think bashrc is getting sourced... the changes to bashrc don't show up in the terminal at all. The change above was from literally typing PS1 at the command prompt <comment70435> Using OS X's built in Terminal (v 2.3). My ~/.bashrc is `export PS1='\W \$ '`, my ~/.bash_profile is `export PS1='\W \$ '`, and my /etc/bashrc looks to be the default. Still getting the equivalent of `PS1='\h\%'` <comment70436> Then by all means, ~/.bash_profile should be sourced when launching a new terminal. Try doing an echo in .bash_profile. <comment70437> /etc/bashrc starts with: if [ -z "$PS1" ]; then    return fi  PS1='\h:\W \u\$ ' <comment70438> why is fi in front of the PS1 definition?  also, what about the -z? <comment70439> Okay.  That's a potentially different problem.  `~/.profile` really is a good place for this. Regardless, you should see the update if you export `PS1` at the commandline.  Strange. <comment70440> There's a reason that changing the bash settings wasn't working... My terminal uses zsh, unbeknownst to me. Thanks to everybody for responding so quickly and thoroughly. I'm sure the next person that comes along looking for BASH help will find this dialogue really helpful. <comment130912> Or just move the contents of ~/.profile to ~/.bash_profile. If both ~/.bash_profile and ~/.profile exist, bash only reads ~/.bash_profile when it is invoked as an interactive login shell.