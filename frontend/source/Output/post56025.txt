Change owner for all files owned by x <body> I copyied files from my MacBook, mainly files from /usr. The one and only user on my computer is called 'Julian' (like on my MacBook). A lot of the copied files are now owned by '501' (id of "Julian" from the MB).   precodedrwxrwxr-x@  28 501     admin   952  8 Jul 23:02 man/ /code/pre  Is there a way to change the owner of all files owned by '501' to 'Julian'?  <answer56026> Not sure if this will break things in OS X if the files are system related. But to change the owner of the files do a  codesudo chown -R Julian &lt;directory&gt;/code  code-R/code means the owner is changed for all files recusivly in the current dir. So be careful.  codeman chown/code should give you some additional details.   <answer56027> Sure, with the near-magical find command. The simplest way is like this:  precodefind . -user 501 -exec chown Julian {} + /code/pre  The "find" command is explained in the manpage, and in a number of tutorials and howtos like this one, nut the short idea is "find everything that matches these criteria, and do this command with each one".  ul licode./code means to look in (and beneath) the current working directory./li licode-user 501/code means to only find files owned by user 501. ul liNote that this is BSD-specific; in some other POSIX systems, user takes a username, and a separate uid flag takes numeric user IDs./li /ul/li licode-exec … {} +/code means to run whatever's in the "…" (in this case, "chown Julian") repeatedly, passing it as many of the found files as possible. ul liSo, if there are 5000 files, it may end up calling chown 4 times (on the first 1203, then on the next 1888, and so on). /li liNote that this is a BSD extension (although GNU has a similar extension); there is a portable equivalent with code;/code instead of code+/code, but this will call chown once for each file, which will generally take a lot longer. (The standard solution is to use -print0 and pipe the result to xargs -0. But, since you're doing this on a BSD system, you don't have to do that.) /li liNote that if you're typing this in the shell, some shells will require you to escape the braces, but bash (the default shell on modern Macs) does not./li /ul/li /ul  <answer56028> This will do what you want:  precodefind . -type f -uid 501 -print0 | xargs -0 sudo chown Julian /code/pre  Explanation:  ul liThe code./code starts the search from the current directory./li liThe code-type f/code requires only files to match, not directories.  (Omit this if you want to change directories too.)/li liThe code-uid 501/code requires all matches to be owned by this user./li liThe code-print0/code separates matches by nulls instead of spaces so that any path containing spaces is not misinterpreted./li liThe codexargs -0/code ensures that codexargs/code input looks for null delimiters instead of spaces.  Since codechown/code can accept multiple files, codexargs/code is used to ensure that codesudo chown/code is run only as often as needed to affect every listed file.  (In this respect it is much faster than an equivalent codefind ... -exec/code.)/li /ul  <comment64313> A file not owned by me placed within a folder owned by me would be broken afterwards (in regards of correct ownership). <comment64314> Bash doesn't care about empty braces. <comment64315> @DennisWilliamson: Thanks; edited. <comment64316> This works, but not idiomatic in BSD, and overly complex. "-uid" is a "for-compatibility-with-GNU-only" switch in BSD find, and print0/xargs -0 is unnecessary because BSD find has the "exec … +" formats. <comment64368> I suggest `chown Julian:` in order to update group ownership to Julian's default group as well. It's technically unnecessary when you own the files, but you never know how it can affect you down the road. <comment64378> And you probably need to through a `sudo` into the command somewhere, ideally in the front (before the `find`).