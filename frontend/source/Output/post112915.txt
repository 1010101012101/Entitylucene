How can I compile and run C in Xcode? <body> Our teacher is teaching use some Data Structures algorithms that are being implemented in C. He uses Visual Studio in class, but I want to be able to run simple programs that we write on Xcode?  I've tried to run the code but in XCode 5 the options to do so are greyed out. Besides just insalling XCode, what steps need to be taken so that I can run simple C programs on my mac?  <answer112916> ul liOpen Xcode/li liSelect OS X - Command line tool/li liChoose C as type/li liFill out the name and the other relevant wizards parts you need/li liclick the main.c file to select it/li /ul  And you should be good to go  <answer193789> In Xcode 6 &amp; 7, you can do the following steps:  strongCreating the File/strong  ol liSelect File  New  Project  OS X/li liSelect Command Line Tool/li liClick Next/li liInput your Product Name and choose C as the language/li liClick Next/li liChoose where to save your project. /li liClick Create/li /ol  strongRunning the Code/strong  ol liSelect Product  Run/li liCheck the console to check result./li /ol  That's it!  Check your the codemain.c/code file and you'll find a pre-filled 'Hello World' code in the editor. Good luck!  <answer236429> Hope my experience will help, cause I've just went from confusion like you had to enjoying coding C on my MacBook in the past month.  Need to give all the credits to the online resource where I learnt everything about setup the environment. http://c.learncodethehardway.org/book/index.html  It taught me to just use the shell command through the Terminal instead of a IDE.  Here are the steps as I summarized:  ol liInstall Xcode, which you've already done/li liInstall a text editor (optional): this is for you to edit your code, NOT for compiling or running.  I personally like Atom now, but there are Emacs and Vim etc./li liStart Terminal from the Utilities folder in Applications.  I use iTerm2, same function as Terminal with more features./li liNavigate to the folder containing the source code.  Like codecd ~/Documents/C//code, in which there is your codemain.c/code file for example./li liUse your text editor to create a plain text file called codeMakefile/code, no extension.  It contains:  precodeCFLAGS=-Wall -g main: main.c clean:    rm -f main /code/pre/li liThen compile source code, from the Terminal, type and see  precode$ make clean rm -f ex1 $ make ex1 cc -Wall -g    ex1.c   -o ex1 /code/pre  codemake clean/code delete the last compiled file if you want to re-compile./li liThen run the compiled file, type  precode./main /code/pre  Then you should see the results of the code like you saw from your class.  Keep in mind there very likely are some differences between C compilers in Visual C++ and GCC in Xcode.  But so far I like very much coding by shell commands./li /ol  <comment132532> Did you create a Command Line Tool project? <comment132533> By Default XCode compile C code since Obj-c is a super-set of C. <comment132534> Thanks, this works for the default "hello world" code that is given. Anything else that I try to run gives me an error saying: "linker command failed with exit code 1 (use -v to see invocation)" <comment132535> Can you post some code? Sounds like you need to link a library to your code. <comment132554> For code-level questions please ask a new question on StackOverflow. <comment132556> Search for Xcode C project on google for many tutorials and SO questions including [this](http://stackoverflow.com/questions/7911076/how-do-i-run-a-c-program-in-xcode-4) <comment132558> and Apple's [documentation](https://developer.apple.com/library/mac/recipes/xcode_help-general/Recipe.html#//apple_ref/doc/uid/TP40010548-CH9-SW1) also available from the help menu on Xcode <comment132559> @patrix This would probably be closed on SO as not showing enough research <comment132590> @Mark Nevertheless AD is not the right place to ask code-level questions. Question as it currently stands is ok though <comment204625> You REALLY ought to mark this as answered. <comment289314> This is a way but not the best - how do you debug the code (and why use make there are several better build systems) - this might be a way if the instructor was using Unix but he his using Visual Studio so most of these steps would not be doable on Windows - just use the IDE i.e. Xcode as the instructor uses VS <comment353610> You're missing a step, at least for Version 8. After opening Xcode, you have to make a new project. And there's no option for "OS X"; now it's "macOS".