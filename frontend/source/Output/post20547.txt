How do I find my IP Address from the command line? <body> I know you can do codeifconfig | grep inet/code, but that shows you several IPv4 addresses. How do I get the specific one for SSHing et al?  <answer20553> Use codeipconfig getifaddr en1/code for wireless, or codeipconfig getifaddr en0/code for ethernet.  <answer134403> You can do the following:  Type codeifconfig/code or codeifconfig -a/code. This command shows you the list of interfaces along with their IP and MAC addresses (the latter one only if applicable). You can also type codeifconfig en0/code or codeifconfig en1/code for the configuration of a particular interface only (as someone said in their answers, en0 is typically the wired Ethernet while en1 is the WiFi interface).   As an alternative, codenetstat -i/code will list all interfaces and will show you the IP addresses you have assigned to each of them.   Typically, when you have SSH daemon running on a box, it will listen on all available interfaces, ie. you can use any IP address that's configured on your machine to connect to that machine via SSH (this, obviously, subject to Firewall rules). If you're after what the OS calls a Primary interface and primary IP address, you can use the codescutil/code command like this:   precodeMacBook:~ scutil &gt; show State:/Network/Global/IPv4 &lt;dictionary&gt; {   PrimaryInterface : en0   PrimaryService : C0550F84-5C07-484F-8D62-C8B90DC977D8   Router : 10.103.4.1 } &gt; show State:/Network/Interface/en0/IPv4 &lt;dictionary&gt; {   Addresses : &lt;array&gt; {     0 : 10.103.4.234   }   BroadcastAddresses : &lt;array&gt; {     0 : 10.103.4.255   }   SubnetMasks : &lt;array&gt; {     0 : 255.255.255.0   } } /code/pre  Please note, that the above, even though is a command-line command, is also interactive (so you run codescutil/code and then enter its own commands into it). The first codeshow/code command tells you the name of the primary interface for the OS (i.e. this will be the one on top of the list in your System Preferences / Network Preferences window), as well as the IP address of your default router. The second codeshow/code command takes codeState:/Network/Interface/&lt;ifname&gt;/IPv4/code argument (in this case, codeen0/code) and gives you the IP addresses assigned to it. You're looking for the address in the Addresses array, the other two entries are broadcast addresses and the netmasks.   Hope that helps, but if anything is not clear, let me know.   <answer143850> Just type codecurl ifconfig.me/code in the terminal.  <answer143892> To get the IP address of your computer facing the Internet, here is a working receipe:  precodeif=`netstat -nr | awk '{ if ($1 ~/default/) { print $6} }'` ifconfig ${if} | awk '{ if ($1 ~/inet/) { print $2} }' /code/pre  It should work even when you have multiple interfaces active, even when you have interfaces you don't know which one is actually the default gateway.  <answer147777> The following works for me on 10.8 and on 10.10 Yosemite.  precodeifconfig | grep "inet " | grep -Fv 127.0.0.1 | awk '{print $2}'  /code/pre  <answer147784> I've got this set up in a .aliases dotfile for frequent ip lookup:  precodealias ip="dig +short myip.opendns.com @resolver1.opendns.com" alias localip="ipconfig getifaddr en0" /code/pre  <comment174212> Why the downvote? Although it is an outside IP, the command is valid and works for my ssh logins. <comment174223> In a terminal window, after the $ sign, do: curl ipecho.net/plain; echo <comment196206> Thanks for this answer. I wrote a quick script to get the IP your primary interface: `echo "show State:/Network/Interface/$(echo 'show State:/Network/Global/IPv4' | scutil | grep 'PrimaryInterface ' | sed 's/  PrimaryInterface : //')/IPv4" | scutil | pcregrep -Mo1 " Addresses :  {\n    0 : ([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})"` <comment218331> This gets the internal network IP address (eg: `192.168.0.*)`, not the external one exposed to the internet. <comment218343> Thank you for this feedback. Could you tell me on which version of the OS you are? Could you provide me the output of `netstat -nr | grep default` ? <comment219329> This shows my internal (to my router) IP address (e.g. 192.168.1.xxx), not the external IP address. (As do most of the other answers below.) <comment253369> This is public IP address and what I was looking for.  ``ipconfig getifaddr en0`` is for local IP. <comment291920> Didn't work for me :( <comment302108> `ifconfig` shows all of the interfaces and their IPs <comment309655> echo External IP: `curl -s http://checkip.dyndns.org/ | sed 's/[a-zA-Z/ :]//g'` <comment340762> It has changed for years, 'ipconfig getifaddr en0' is default for wifi interface <comment353485> This is the only one that actually works <comment354393> This is the correct answer <comment361748> The should be the accepted answer in my opinion since it doesn't require any wired vs. wireless specification. <comment361750> @ErikNomitch except it gives me 2 with this answer <comment361805> @ZachLysobey - this may give you more if you're using something like VirtualBox too.... <comment361826> Ah, I retract then. @ZachLysobey <comment363092> @JShoe mentioned ipconfig. So i guess he's not on windows. Linux or mac maybe? Did you mean ifconfig? Anyway, this didn't work for me.