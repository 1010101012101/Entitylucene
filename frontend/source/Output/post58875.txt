Open an app in fullscreen via Terminal <body> I wonder if it's possible to open a program in Lion fullscreen mode via the Terminal. I want to write a short script which starts a bunch of programs in fullscreen mode, so that I only have to click once to start my working environment.  <answer58962> Here it is:     /usr/bin/osascript -e 'tell application "Safari"' -e "activate" -e 'tell application "System Events"' -e 'keystroke "f" using {control down, command down}' -e "end tell" -e "end tell"   Here it is in a clearer form (but you can't run it this way):  precode/usr/bin/osascript -e "tell application \"Safari\""  -e "activate" -e "tell application \"System Events\"" -e "keystroke \"f\" using {control down, command down}" -e "end tell" -e "end tell" /code/pre  And this is it as formatted AppleScript:  precodetell application "Safari"     activate     tell application "System Events"         keystroke "f" using {control down, command down}     end tell end tell /code/pre  It works by first opening a Safari window if one is not currently open. Then it simulates the kbdControl ⌃/kbd-kbdCommand ⌘/kbd-kbdF/kbd keystroke which tells the Safari window to become full screen.  If you want to make the window the max-size it can be without becoming full screen (i.e. taking up all the space below the menu bar at the top):  precodetell application "Finder"     set desktopSize to bounds of window of desktop end tell  tell application "Safari"     activate     set bounds of window 1 to desktopSize end tell /code/pre  Which would become this in Terminal:     /usr/bin/osascript -e "tell application \"Finder\"" -e "set desktopSize to bounds of window of desktop" -e "end tell" -e "tell application \"Safari\"" -e "activate" -e "set bounds of window 1 to desktopSize" -e "end tell"   For Chrome, do this:  precodetell application "Google Chrome"     activate     make new window     tell application "System Events"         keystroke "f" using {control down, command down}     end tell end tell /code/pre  So it would be this in Terminal:     /usr/bin/osascript -e "tell application \"Google Chrome\"" -e "activate" -e "make new window" -e "tell application \"System Events\"" -e "keystroke \"f\" using {control down, command down}" -e "end tell" -e "end tell"   Hope this helps!  <answer58964> This won't work with applications that don't use native full screen windows, but should work with some that don't use the standard shortcut for entering full screen. A few applications have different process names and application names.  precodeset a to "Notes" set bid to id of application a tell application a     reopen -- open a new default window if there are no windows     activate -- make frontmost end tell tell application "System Events" to tell (process 1 where bundle identifier is bid)     click (button 1 of window 1 where subrole is "AXFullScreenButton") end tell /code/pre  <answer63492> Here's instructions for Google Chrome. (This will open an Incognito window to full-screen.)  Go to code/Applications/Google Chrome.app/Content/MacOS//code. Rename the Google Chrome binary to something else (like codechrome-bin/code) and create an executable bash script in its place (name the script codeGoogle Chrome/code just like the original executable file).  precode#!/bin/bash open chrome-bin --new --args -incognito  osascript -e "tell application \"Google Chrome\"" -e "tell application \"System Events\"" -e "keystroke \"f\" using {control down, command down}" -e "end tell" -e "end tell" /code/pre  Now, every time you launch Google Chrome it will launch full screen in Incognito mode. I use Incognito mode, but if you don't want that, just delete the code-incognito/code flag.  <answer130067> you can use browse to open arbitrary apps in full-screen mode.. It installs six convenience commands, four of which strongopen the most common browsers in full-screen/strong:   Launch Chrome Canary in Presentation Mode:  precode$ ca /code/pre  Launch Chrome in Presentation Mode:  precode$ ch /code/pre  Launch Firefox in full-screen Mode:  precode$ ff /code/pre  Launch Safari in full-screen Mode:  precode$ sf /code/pre  To stronglaunch anything in full-screen/strong, run the command codeccf/code (an applescript sending the CMD+CTRL+f keystroke) after a regular codeopen/code to switch it to full-screen mode:   precode$ open -a Calendar; ccf /code/pre  Should an app have an additional full-screen mode shortcutted by CMD+Shift+f (as Chrome does), use:   precode$ open -a "Google Chrome"; csf /code/pre  strongTip/strong. If an app is slow to load, give it chance to load fully by inserting a pause before running the keyboard shortcut:   precode$ open -a "Google Chrome"; sleep 3; csf /code/pre  <answer243988> Here's an addition to @pasawaya's excellent answer. If you want to execute your applescript from the command line, you don't need to enter every line separately with the code-e/code option.  codeosascript -e 'multi-line-applescript here'/code will work also. Example:  pre class="lang-bash prettyprint-override"codeosascript -e 'tell application "Safari" activate   tell application "System Events"     keystroke "f" using {control down, command down}   end tell end tell' /code/pre  <comment67837> Is this the Lion / MTN Lion Full Screen Mode, or a window "zoomed"? <comment67847> the lion fullscreen <comment67931> tryed this, and it helped a bit. it opens the app, but the fullscreen won't work - jsut gives me an error sound. have to run the script twice to go to fullscreen <comment67934> @ABLX You need to change the keystroke for whatever app you want to fullscreen - what apps are you working with? <comment67935> @qegal I believe entire screen - he mentioned Lion fullscreen in the question comments. <comment67936> evernote and chrome. it should be lion fullscreen <comment67937> aww my fault. evernotes want ^ + command + f. <comment67939> @ABLX - So it works now? <comment67940> @ABLX - I fixed it for Chrome. I'll download Evernote and test it out. <comment67941> hehe "^" means control :) worked finde with 2 "activate" commands. <comment75454> The OP doesn't mention anything about Google Chrome. <comment75455> Also, Incognito mode won't help one whit when it comes to malicious code - it just doesn't store or allow access to cookies and other local (browser-controlled) persistence schemes. In fact, plugins (like Flash) can store and access their own cookies even in Incognito mode. <comment76809> +1 for the nice hack even if Chrome was not asked for in the question <comment266351> This solution was effective to force Polycom RealPresence Desktop on full screen at login on an OS X 10.10.5 system, thanks !