HFS+ journaled and encrypted flash drive does not accept password <body> I have almost exactly the same issue as it was discussed here: my encrypted flash dongle does not accept the password that I KNOW goes to it (besides, typing a wrong password makes the dialog do the usual wrong-password shake animation, while entering the correct password makes the dialog freeze for a while, like this:  img src="https://i.stack.imgur.com/6K9fX.png" alt="enter image description here"  However, the provided solution (launch Disk Utility, try to verify/repair until Disk Utility will mount the disk) doesn't really work: there doesn't seem to be a slightest moment when Disk Utility could mount it – instead, it verifies the disk, says it must be repaired, I press the Repair button, it checks/waits a bit, asks for password, freezes after it was entered, and then simply denies the password (and I will repeat, the password is correct, the keyboard layout is right, no caps lock is on, no additional spaces get pasted, whatsoever) – and the whole routine just goes on, and on, and on.  Thus, I'd be really grateful for any advice or hint. Should I try Disk Utility in the Single-user mode, is it worth it? Or may be there are any additional software? Or some other HOWTOs?  EDIT: codediskutil verifyDisk my_flash_drive/code added:  precodeStarted partition map verification on disk3 Checking prerequisites Checking the partition list Checking for an EFI system partition Checking the EFI system partition's size Checking the EFI system partition's file system Checking all HFS data partition loader spaces Checking Core Storage Physical Volume partitions Checking storage system Checking volume disk3s2: Scan for Volume Headers disk3s2: Scan for Disk Labels Logical Volume Group 68B8A739-E9E3-427C-B1EC-F1B212724E03 on 1 device disk3s2: Scan for Metadata Volume Logical Volume Group has a 16 MB Metadata Volume with double redundancy Start scanning metadata for a valid checkpoint Load and verify Segment Headers Load and verify Checkpoint Payload Load and verify Transaction Segment Load and verify Transaction Segment Load and verify Transaction Segment Load and verify Transaction Segment Load and verify Transaction Segment Incorporate 4 newer non-checkpoint transactions Load and verify Virtual Address Table Load and verify Segment Usage Table Load and verify Metadata Superblock Load and verify Logical Volumes B-Trees Logical Volume Group contains 1 Logical Volume Load and verify 79E1E068-7A8D-4163-AF05-1D5738ECE2FD Load and verify 6E8D5D22-DAC4-43AF-BB63-9C1FD525C7A2 Load and verify Freespace Summary Load and verify Block Accounting Load and verify Live Virtual Addresses Newest transaction commit checkpoint is valid Load and verify Segment Cleaning The volume 68B8A739-E9E3-427C-B1EC-F1B212724E03 appears to be OK The partition map appears to be OK Finished partition map verification on disk3 /code/pre  <comment373874> Best guess is the drive itself has failed. They're not worth fighting once they start to play up. Bin it & use another. <comment373876> I thought so... But if it still manages to ask for password, then it certainly did not completely fail. Also, I need info, not drive. <comment373880> Please add the output of `diskutil verifyDisk diskX` with diskX=dev identifier of the flash drive (e.g. disk2). What's the meaning of your comment **"Also, I need info, not drive."**? <comment373888> @klanomath - rough translation... "I need info, not drive" == "I have no backup." ;) <comment373894> @klanomath, added.