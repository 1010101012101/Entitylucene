How do I copy a partition of an Image to a partition of a physical disk? <body> I finally had a bootable usb key working with a windows 7 install ready to go, when I realized that once the Language selection came up, my Macbook Pro's keyboard and trackpad no longer functioned and I had no way to actually proceed with the install.  I decided to setup a VirtualBox Windows 7 x64, install the keyboard and trackpad drivers from Bootcamp Support Software package, and shutdown the VM.  I used codeVBoxManage internalcommands converttoraw .../code to turn the virtual disk into an .img . For those unfamiliar with virtualbox, it creates a full image of the virtual harddrive as if it were a physical harddrive, and works just the same.  I used fdisk to view the image:  precodesh-3.2# fdisk WINDOWS7.img  Disk: WINDOWS7.img  geometry: 2610/255/63 [41943040 sectors] Signature: 0xAA55      Starting       Ending #: id  cyl  hd sec -  cyl  hd sec [     start -       size] ------------------------------------------------------------------------ *1: 07    0  32  33 -   12 223  19 [      2048 -     204800] HPFS/QNX/AUX 2: 07   12 223  20 - 1023 254  63 [    206848 -   41734144] HPFS/QNX/AUX 3: 00    0   0   0 -    0   0   0 [         0 -          0] unused       4: 00    0   0   0 -    0   0   0 [         0 -          0] unused /code/pre  I then used the following in an attempt to skip the System Reserved partition and just copy the windows data partition to the designated slice of my Macintosh HD:  codesh-3.2# dd if=WINDOWS7.img of=/dev/disk0s4 skip=206848 bs=65535/code  Leaving me with the following:  precodesh-3.2# fdisk /dev/disk0 Disk: /dev/disk0    geometry: 60821/255/63 [977105060 sectors] Signature: 0xAA55          Starting       Ending #: id  cyl  hd sec -  cyl  hd sec [     start -       size] ------------------------------------------------------------------------ 1: EE 1023 254  63 - 1023 254  63 [         1 -     409639] &lt;Unknown ID&gt; 2: AC 1023 254  63 - 1023 254  63 [    409640 -  684395032] &lt;Unknown ID&gt; 3: AB 1023 254  63 - 1023 254  63 [ 684804672 -    1269536] Darwin Boot  4: 0B 1023 254  63 - 1023 254  63 [ 686074208 -  290768672] Win95 FAT-32 /code/pre  Which seems correct, but leaves me with an Uninitialize-able disk that I can't mount or access with disk utility, when I click mount, nothing happens, even if I try codemount -t ntfs /dev/disk0s4 /Volumes/Temp-Dir-Made-With-mkdir/code  img src="https://i.imgur.com/dJs6RDc.png" alt="disk utility"  What could be the problem? Am I doing something wrong? Is this impossible?  Does slice 4 of disk0 not inherit the filesystem of the partition I wrote to it?  Thanks in advance for any insight!  strongemEdit 1:/em/strong  @David It's a codeMacbookPro11,3/code which should tell you everything you need to know about it. As far as bootcamp I downloaded it directly to windows from the following Apple Support Document kbDL1720  @klanomath (Comment 1)True, but it's good information to know! Out of curiosity, why is 65535 a bad block size? I thought the block size specification only had to do with the number of blocks that were processed and dumped to the drive/image at a time, basically allowing you to DD faster with more RAM (with the law of diminishing returns coming into effect at some point of course.) Am I just completely wrong in my understanding of the codebs=/code parameter?  @user3439894 I thought about that, shouldn't need the MBR if I'm using a different bootloader, but I did neglect the System Reserved partition. The problem here is that I already have 4 partitions on the hard drive... I forget what partition 0 is (not in front of my mac), partition 1 is Mac, partition 2 is mac recovery partition, and partition 3 is the one I made for windows. Maybe I'm going about this all wrong... Boot camp has turned into quite the nightmare, would have been nice if it just took my image and did the job for me, but I digress.  <answer244050> The proper command to codedd/code a part of a raw file to a partition in your case is:  precodedd if=WINDOWS7.img of=/dev/disk0s4 skip=206848 bs=512 count=41527296 /code/pre  The embs/em in the codedd/code command can be interpreted as an artificial block size of the input and the output "file". For historical and technical reasons the default block size of codedd/code is 512 Byte.  The reason to use 512 (or an appropriate integer^2 multiple/divider) as embs/em is the block size of your image and the partition disk0s4 – which is either 512 or 4096.  The (logical) block size of disk0 can be calculated (even without knowing if fdisk works with 512 or 4096 Byte internally): 977105060 * 512 = 500 GB or 977105060 * 4096 = 4 TB. A 4 TB SSD still doesn't exist for MacBook Pro's therefore the block size has to be 512 byte. The same is valid for your img file.  Now you may take speed reasons into account: the bigger the embs/em is, the faster the image will be copied.  So one valid dd command in your case may be:  precodedd if=WINDOWS7.img of=/dev/disk0s4 skip=X bs=2 count=Y /code/pre  Since embs/em is 2 Byte only, you have to modify emskip/em (skips X blocks à bs of if) and emcount/em (Y blocks à bs are "written"). Since skip is 206848*512, X is 206848*512/2 and count is 41527296*512, Y is 41527296*512/2 and the above command is:  precodedd if=WINDOWS7.img of=/dev/disk0s4 skip=52953088 bs=2 count=10630987776 /code/pre  A quick test reveals:  precodedd if=/dev/zero of=~/Desktop/output.file bs=1 count=1048576 1048576 bytes transferred in 1.593527 secs (658022 bytes/sec) dd if=/dev/zero of=~/Desktop/output.file bs=2 count=524288 1048576 bytes transferred in 0.800444 secs (1309993 bytes/sec) dd if=/dev/zero of=~/Desktop/output.file bs=4 count=262144 1048576 bytes transferred in 0.384188 secs (2729331 bytes/sec) dd if=/dev/zero of=~/Desktop/output.file bs=1024 count=1024 1048576 bytes transferred in 0.001932 secs (542700705 bytes/sec) /code/pre  The larger embs/em is, the faster the codedd/code command is executed.  emBTW: The largest codebs/code working for you is 1048576 (the greatest common divisor) because 105906176(=skip-size in Byte)/1048576=101 (and 21261975552(=count-size in Byte)/1048576=20277). 101 is prime!/em  hr  So far all embs/em values are multiples of 2. If embs/em is uneven this may collide with the (block-)sizes of emif/of/em. At least in your case emif/em and emof/em have even Byte sizes because they are multiples of 512.  Now it should be obvious why using bs=65535 fails: skip and count block numbers are determined by bs and strongnot/strong by the natural block size of your image or partition. A proper command may be   precodedd if=WINDOWS7.img of=/dev/disk0s4 skip=1616.024... bs=65535 count=324436.950... /code/pre  At least for me this fails because 1616.024... is an illegal numeric value. So one may assume that all numbers have to be integer values!  A embs/em of 65535 only works if the total size of emif/of/em strongand/strong any skip or seek "boundaries" are multiples of 65535 Byte.  If your codedd/code command strongdoesn't contain any skip/seek/count part/strong you may use arbitrary bs sizes though.  hr  Though the codedd/code command at the beginning of answer will work, you probably won't be able to boot to the Windows To Go (or Windows Installer Ready-To-Go?) partition. The MBR of disk0 won't contain the necessary boot entry.  <comment300583> The bs is completely wrong. It should be 512. Using 65535 skips the first 206848x65535 Bytes of the image! Use a count of  (41734144 -206848) - `dd if=WINDOWS7.img of=/dev/disk0s4 skip=206848 bs=512 count=41527296` Also create a properly sized (41527296x512 Bytes) & correct marked partition disk0s4 with gpt first. And make a backup first! <comment300584> What is the model/year of you Mac? Did the "Boot Camp Support Software" get correctly copied to the USB key? As for your above procedure, you are hopelessly lost. Virtually, every step you have given has a flaw. In addition, you have left out more steps than you have included in your posted question. <comment300586> Additionally: though my comment may answer your question correctly, I can't guarantee that you get the desired result: a bootable "Windows 7 ready to go" partition! <comment300624> @DeeJayh, Even with klanomath's corrected `dd` command Windows 7 will not be functional as it will be missing the information required to boot in the partition you're skipping in the WINDOWS7.img file. I'd suggest fixing the original issue that sent you on this convoluted path to begin with! <comment300652> @ALL Question updated with an edit <comment300681> Part of the procedure of creating the USB key, needed to install Windows, is to copy the "Boot Camp Support Software" to this key. If this was done properly, then some of the Apple supplied drivers can be read and installed during the process of installing Windows. So my question is: Was step 11 of the procedure ["Perform a new install of Windows 7"](https://support.apple.com/en-us/HT205016) followed correctly? <comment300682> Also, you are using the wrong version of the "Boot Camp Support Software". The correct version can be found at ["Boot Camp Support Software 5.1.5640"](https://support.apple.com/kb/DL1721?locale=en_US). <comment300685> Apple supports running 64 bit Windows 7 on your model Mac. You have made some sort of mistake in installing Windows. The answer to your problem does not involve inventing a complex procedure such as you have posted. <comment300687> @David Fantastic! If that was the question I had asked, you'd be getting "Best Answer" for sure. Clear and concise, nice work! Mac is not my fortay, I'm a Windoze/*nix user and said Mac is actually my friends. So all I simply need to do then is take my working windows7 bootable USB and extract the bootcamp contents to the root of that drive (%Winpesomething, autounattended.xml, and Bootcamp) and the keyboard and mouse should be working? <comment300688> Amazing, this isn't the solution to my issue, but it IS the answer to question I technically asked. This will likely be my choice for best answer. Thank you so much for clarifying! I truly have a better understanding now, and I foresee that helping me in the future! <comment300689> I already selected it as best answer, could you clarify the last paragraph with a solution? You say "The MBR of disk0 won't contain the necessary boot entry." but couldn't I simply install something like GRUB2 at that point and be up and running? Thanks again for the awesome answer! <comment300691> @DeeJayh [David Anderson](http://apple.stackexchange.com/users/107222/david-anderson) provides a lot of excellent answers to the topic. In my setup (at home) I can't install Windows 7 (and Bootcamp doesn't allow an installation of Windows in a Parallels OS X VM because it crashes) so I can't really answer the question properly. You may be fine by installing rEFInd. <comment300695> I do not know if I have covered all the mistakes you may have made in trying to install Windows. As a last resort, have you considered the following? Would it be possible for you to purchase a cheap USB keyboard and mouse? Once Windows 7 is installed and working with the internal hardware, would you be able to return the purchased keyboard and mouse for a full refund? <comment300700> @DAVID We tried connecting a wireless usb keyboard AND a *wired* usb mouse, neither worked once we got to language selection. I assumed it's the USB3.0 drivers, which win7 doesnt not support by default, meaning I need the bootcamp files present to remedy that (I hope) going to try it now <comment300708> When @DeeJayh installed Windows in VirtualBox, he choose the default partitioning. By default, Windows creates two partitions. (The Boot Camp Assistant creates a single partition which works, but is not the default configuration.) The first partition is the smaller "System Reserved" NTFS volume. This is the active partition containing **all** the code needed to boot Windows. This includes the Volume Boot Record (VBR) and the hidden system boot files including the BCD file. The `dd` command is skipping all of this required software. Installing rEFInd will not remedy this situation. <comment300709> @DeeJayh Probably the best is to ask a second question to address your real problem. <comment300710> @David what is the process to have everything stored under one partition, skipping the `System Reserved` partition? I've never heard of that. <comment300715> When the Windows installer creates the two partitions, you delete the second larger partition. Next, you extend the first smaller partition to include the space created by deleting the second partition. Windows then can be installed to a single partition. Each delete and extend operation can be completed by highlighting the appropriate partition and selected the "Delete" or "Extend" button, respectively. <comment300723> @DeeJayh I think you have to use (at)DavidAnderson or he won't get pinged. Only one (at) can be used in a comment! <comment300724> @David, final thing, I don't want to abuse the comments anymore lol... So when I try to let windows Format the drive so I can adjust it, I get this: imgur.com/fgfAue1 I ASSUME this is because I can only have 4 partitions and windows wants to make 2 more (for a total of 5). So can I do what I did making a virtual disk, install windows on a single partition, turn the virtual disk into an image and then dd it onto the empty fourth partition?