macports/dylib failure with libc++abi.dylib: terminate called throwing an exception Abort trap: 6 <body> I installed Macports vowpal_wabbit v6.1 on MacOS 10.8.4 and it dies with:  precodelibc++abi.dylib: terminate called throwing an exception Abort trap: 6 /code/pre  I read around a lot and it seems this is a known compatibility issue between libc++ compiled with gcc vs llvm. I did read the caveats about mixing compilers. Symptoms seem to be similar to this. I vaguely recollect there was a compatibility reason with some port I installed which forced me to use mp-gcc instead of llvm, it might have been some crufty old dependency of numpy or suchlike.  MacPorts version is 2.2.0. XCode version is 5.0 and I previously also unsuccessfully tried with 4.6. I did uninstall, clean and reinstall to no success. Versions:  precodevowpal_wabbit-6.1_0+cluster.darwin_12.x86_64 boost @1.54.0_0+no_single+no_static+python27 /code/pre  Macports compiler versions are: codesudo port select --show gcc/code returns codemp-gcc45/code codesudo port select --show cc/code returns  codeError: The 'show' command failed: The specified group 'cc' does not exist./code I don't see which compiler would get used by default? Doesn't it break things if I reinstall every Macport with llvm? I have many installed ports and that would be really painful, needless to say also breaking other things.  Also:     otool -L /opt/local/bin/vw  precode/opt/local/lib/libboost_program_options-mt.dylib (compatibility version 0.0.0, current version 0.0.0) /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 169.3.0) /opt/local/lib/libz.1.dylib (compatibility version 1.0.0, current version 1.2.7) /usr/lib/libstdc++.6.dylib (compatibility version 7.0.0, current version 56.0.0) /code/pre  <answer104195> Both vowpal_wabbit and its dependency Boost seem to be getting wrongly compiled and linked with the system libstdc++ instead of macport's /opt/local/lib/libstdc++.6.dylib  Solution seems to be:  a) Hack the macports Boost install by either:  ul lihack the portfile to override configure.cxxflags, linkflags/li limanually compile and link Boost as per Remove Boost libstdc++ dependency with clang++/libc++?/li /ul  b) Then we have to hack the macports file to point VW to the Boost install  <comment121992> I think you need to ask this on the macports users mailing list <comment122148> @[Mark](http://apple.stackexchange.com/users/237/mark) But this dylib compatibility error occurs with dozens of other tools - as per my link. It's a Mac dylib issue, not a macports issue. <comment122159> As you are installin a macport it is a macports issue the porter should have solved any issues. Usual macports have you run `sudo port selfupdate` <comment122677> That is not Boost's libstdc++ but macports's in /opt/local/lib/libstdc++.6.dylib <comment122678> Note that macports uses the Apple clang by default just uses gcc if needed. <comment122775> @Mark. it gets the compiler but the libraries wrong. I'm digging into the macports list discussion and portfile... <comment213096> I'm voting to close this question as off-topic because this is a problem at a certain point in time and no new information has come in an the Macports set up will have changed by now so the question and any answer id of no use to anyone <comment213099> @Mark, I can recheck latest version behavior. I object to closing it, but if you insist, at least don't mark it offtopic.