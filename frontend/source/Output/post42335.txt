Possible to search Safari's "Reading List"? <body> Anyone know if there is a way to search Reading List?   Not necessarily the full text of the pages — but at least the titles/descriptions that you see when looking at the Reading List pane within Safari:  img src="https://i.stack.imgur.com/axb84.png" alt="enter image description here"  <answer42336> I am not aware of any options in Safari. Neither the search option under emHelp/em, nor the search option under emAll Bookmarks/em yielded any results.  But, strongOSX's Spotlight/strong did index the reading list: Results appear in the section emWebpages/em.  First I added the webpage to the reading list. Then I reset Safari.  img src="https://i.stack.imgur.com/qHQG6.png" alt="enter image description here"  And voilà, Spotlight found it. Not the best solution, but the best I found.  img src="https://i.stack.imgur.com/XxjZ0.png" alt="enter image description here"  <answer88254> Create an AppleScript .scpt or Automator Service workflow and assign it a shortcut key.   The following script opens your default editor's window with the search results. A bit kludgy, and if the search string is in the Preview field but isn't in the URL you'll get back the line from the Preview field but not the URL. Might be possible to code round that with awk, but I haven't got round to figuring it out yet. Otherwise it works quite well.  precode--AppleScript display dialog ("Enter the string to search for: ") default answer "Search Safari Reading List" buttons {"Cancel", "Search"} default button 2  set searchTerm to the text returned of the result   do shell script "strings ~/Library/Safari/Bookmarks.plist | grep -i '" &amp; searchTerm &amp; "' | awk '{ print FNR \"t\" $0}' | open -f"  --EOF /code/pre  (Note: you need to scroll right to see the end of the final line. From 'do shell script.... to ....open -f" ' is all ONE line).  hr  You should see something like this after hitting "Search" (obviously your results will differ from mine!)  img src="https://i.stack.imgur.com/IKlt2.png" alt="Search Safari Reader"  <answer182269> Scroll up within the Reading List to reveal the search function.  img src="https://i.stack.imgur.com/AE2ZB.png" width="238" title="screenshot of revealing the search box for Reading List in Safari"  <comment48133> You can use the Kind:"Safari bookmark" to restrict spotlight, but the reading list is just another folder of bookmarks with some extra UI interface to render the saved favicon and a bit more of the content. <comment48435> This is great.  Not perfect as I can't easily integrate with Alfred - but better than nothing. <comment48440> @Matty The bookmarks are saved as `.webhistory` files in `~/Library/Caches/Metadata/Safari/History`. Try to add this folder to your search scope  in **Alfred Preferences  Features**. <comment103283> I thought so too, but discovered the reading list survives clearing out the History cache. That led to me to find that the list of bookmarks in the reading list and the preview text for each is actually in ~/Library/Safari/Bookmarks.plist. See my script below. <comment103328> This would search just the URLs: `defaults read ~/Library/Safari/Bookmarks.plist | sed -En 's/.*URLString = "(.*)";/\1/p' | grep -F "$searchTerm"` <comment103348> Thanks, but restricting the search to the URLs isn't the problem. That can be done easily enough by modifying the grep command I already have. But that makes the search less powerful, which is not what we want. The issue is how to return the URL on the preceding line when the search term is only in the preview snippet. <comment103420> Maybe something like `/usr/libexec/PlistBuddy -c print ~/Library/Safari/Bookmarks.plist | sed -En 's/^ *(URLString|PreviewText) = (.*)/\2/p' | paste - - | grep -Ei searchphrase | cut -f1`. PlistBuddy prints non-ASCII characters as literal characters instead of escape sequences. <comment103437> This is getting there, thanks Lauri. It still doesn't quite return accurate results, but I may be able to tinker with it. I'm not quite familiar with the 'paste' pipe (just going to man page that now... :) ), the rest of it I get. It's a useful start. Thanks, again.