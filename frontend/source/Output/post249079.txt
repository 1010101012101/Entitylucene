iOS - supervised mode and always-on VPN <body> Is it possible on iOS to activate a non-leaking always-on VPN? I've heard this can only be done through supervised mode and with a VPN provider that supports "IKEv2", is this correct? Are there any downsides to this approach, for day to day use on a personal phone?  Also, is supervised mode configurable on Windows / Linux?  <answer249161> It is rather possible to activate "always-on" VPN activating the "Connect on demand" option via a VPN profile both in iOS and OSX/MacOS.   For instance, some commercial VPN providers do that.  However that only applies to any kind of VPN done/configured via the native client, and not 3rd party VPNs like OpenVPN.  The behaviour of the Connect on demand VPNs, is that as soon a TCP/IP packets try to leave the iDevice, the VPN goes up.  I have been using it with VPNs with IPsec with IKEv1 in iOS 8 and iOS 9, so the IKEv2 requirement does not seem to apply. I also been using it emwithout/em supervised mode.  The profile file is a xml file, that can be written by hand, or with the help of Apple tools. The file has to have an extension .mobileconfig, and has to be loaded by the Safari browser in iOS.  As an example, I am using this file, for a full VPN tunnel, "Cisco" IPsec with group password and user XAUTH authentication.   I put "Cisco", because in my case, the VPN servers are respectively, a PfSense firewall, and a Linux Debian server.  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;     &lt;key&gt;PayloadContent&lt;/key&gt;     &lt;array&gt;         &lt;dict&gt;             &lt;key&gt;IPSec&lt;/key&gt;             &lt;dict&gt;                 &lt;key&gt;AuthenticationMethod&lt;/key&gt;                 &lt;string&gt;SharedSecret&lt;/string&gt;                 &lt;key&gt;LocalIdentifier&lt;/key&gt;                 &lt;string&gt;*group_name*&lt;/string&gt;                 &lt;key&gt;LocalIdentifierType&lt;/key&gt;                 &lt;string&gt;KeyID&lt;/string&gt;                 &lt;key&gt;RemoteAddress&lt;/key&gt;                 &lt;string&gt;*11.11.11.11*&lt;/string&gt;                 &lt;key&gt;SharedSecret&lt;/key&gt;                 &lt;data&gt;                 *ksjksdjksdf*                 &lt;/data&gt;                 &lt;key&gt;XAuthEnabled&lt;/key&gt;                 &lt;integer&gt;1&lt;/integer&gt;                 &lt;key&gt;XAuthName&lt;/key&gt;                 &lt;string&gt;*username*&lt;/string&gt;                 &lt;key&gt;XAuthPassword&lt;/key&gt;                 &lt;string&gt;*password*&lt;/string&gt;                 &lt;key&gt;DisconnectOnIdle&lt;/key&gt;                         &lt;integer&gt;0&lt;/integer&gt;                 &lt;key&gt;OnDemandEnabled&lt;/key&gt;                         &lt;integer&gt;1&lt;/integer&gt;                 &lt;key&gt;OnDemandRules&lt;/key&gt;                 &lt;array&gt;                     &lt;dict&gt;                     &lt;key&gt;Action&lt;/key&gt;                     &lt;string&gt;Connect&lt;/string&gt;                     &lt;/dict&gt;                 &lt;/array&gt;             &lt;/dict&gt;             &lt;key&gt;IPv4&lt;/key&gt;             &lt;dict&gt;                 &lt;key&gt;OverridePrimary&lt;/key&gt;                 &lt;integer&gt;1&lt;/integer&gt;             &lt;/dict&gt;             &lt;key&gt;PayloadDescription&lt;/key&gt;             &lt;string&gt;Configures VPN settings, including authentication.&lt;/string&gt;             &lt;key&gt;PayloadDisplayName&lt;/key&gt;             &lt;string&gt;*VPN (MyHOME)*&lt;/string&gt;             &lt;key&gt;PayloadIdentifier&lt;/key&gt;             &lt;string&gt;*com.myhome.pt.vpn*&lt;/string&gt;             &lt;key&gt;PayloadOrganization&lt;/key&gt;             &lt;string&gt;*MY-HOME*&lt;/string&gt;             &lt;key&gt;PayloadType&lt;/key&gt;             &lt;string&gt;com.apple.vpn.managed&lt;/string&gt;             &lt;key&gt;PayloadUUID&lt;/key&gt;             &lt;string&gt;D758D99C-7CCE-44DC-8CAE-B2A5FFC86985&lt;/string&gt;             &lt;key&gt;PayloadVersion&lt;/key&gt;             &lt;integer&gt;1&lt;/integer&gt;             &lt;key&gt;Proxies&lt;/key&gt;             &lt;dict/&gt;             &lt;key&gt;UserDefinedName&lt;/key&gt;             &lt;string&gt;*VPN My-HOME*&lt;/string&gt;             &lt;key&gt;VPNType&lt;/key&gt;             &lt;string&gt;IPSec&lt;/string&gt;         &lt;/dict&gt;     &lt;/array&gt;     &lt;key&gt;PayloadDescription&lt;/key&gt;     &lt;string&gt;*VPN provisioning for My-HOME*&lt;/string&gt;     &lt;key&gt;PayloadDisplayName&lt;/key&gt;     &lt;string&gt;*MY-HOME*&lt;/string&gt;     &lt;key&gt;PayloadIdentifier&lt;/key&gt;     &lt;string&gt;*com.myhome.pt*&lt;/string&gt;     &lt;key&gt;PayloadOrganization&lt;/key&gt;     &lt;string&gt;*MY-HOME*&lt;/string&gt;     &lt;key&gt;PayloadRemovalDisallowed&lt;/key&gt;     &lt;false/&gt;     &lt;key&gt;PayloadType&lt;/key&gt;     &lt;string&gt;Configuration&lt;/string&gt;     &lt;key&gt;PayloadUUID&lt;/key&gt;     &lt;string&gt;A8E086BE-C9B1-4EA8-9E6A-F25001E0A293&lt;/string&gt;     &lt;key&gt;PayloadVersion&lt;/key&gt;     &lt;integer&gt;1&lt;/integer&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  As you correctly suspect, there are downsides to this approach. While the connect on demand profile is active, the regular wake ups for fetching data seem not be done (at least until iOS 9, still have to test iOS 10), and as such FaceTime calls are not always received while the device is "sleeping").  The Apple documentation about this directives is here. "IPSec Dictionary Keys" is of particular interest.  <answer260398> Yes you need IKEv2 and your iDevice need to be supervised by a mac. Always on VPN and on demand is not the same.   <comment308864> none of that is true, you just need to install a profile that forces vpn on demand. once I have the time, i can detail the conf file. I am on iphone, please answer tagging me so I will track the question in my computer tomorrow morning <comment308885> Ok, thanks! The reason I was under the impression it's not possible to do this the "regular" way on IOS, is because in the OpenVPN IOS FAQ (https://docs.openvpn.net/docs/openvpn-connect/openvpn-connect-ios-faq.html), it says:  "During pause, resume, and reconnect states (for example when transitioning between WiFi and Cellular data), the VPN tunnel may temporarily disengage, allowing network traffic to bypass the tunnel and route directly to the internet." <comment308955> Thanks. Now I assume, a regular VPN service that only supports the OpenVPN protocol would not work with this solution? Also, is this guaranteed to be leak-free, even during startup or while switching to a different network? <comment308957> The native client does not support OpenVPN, and always on demand only affects the native client. It *appears* to be leak free, I also have tested it with tcpdump in my router at home. <comment308959> (added the downsides and link to apple dev site link to the answer) <comment354688> @RuiFRibeiro An "on-demand" VPN is different from "always on".  The phone user can disable an on-demand VPN, whereas an always-on VPN profile cannot be disabled.