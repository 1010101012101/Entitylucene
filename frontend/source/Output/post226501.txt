DIY Fusion drive with 3 drives <body> Is it possible to build a DIY Fusion drive using 3 drives - 2 HD's and 1 SSD?  Will the Fusion machinery optimise on three levels i.e. SSD, then fast HD, then slow HD?  I have a mid 2011 27" iMac, with a 1 terabyte internal HD.  I also have a spare 1TB HD and a 256GB SSD recovered from another dead Mac.  I'm going to put one of these in using the iFixit installation kit, and the other in a caddy in place of the DVD drive.  Once I've done that, can I set all three up as a fusion drive?  <answer226527> It is possible to create a Logical Volume Group spanning over more than two disks. I doubt that it will differentiate between fast and slow HDD. The SSD part should work though.  To accomplish this put all drives in your iMac and boot to a Mavericks or Yosemite bootable installer thumb drive.  Partition all drives as simple volumes with Disk Utility.  Then open Terminal and enter codediskutil list/code to get an overview. The result is similar to this one:  precode/dev/disk0    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:      GUID_partition_scheme                        *256.0 GB   disk0    1:                        EFI EFI                     209.7 MB   disk0s1    2:                  Apple_HFS SSD                     255.6 GB   disk0s2    3:                 Apple_Boot Boot OS X               134.2 MB   disk0s3 /dev/disk1    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:      GUID_partition_scheme                        *1000.0 GB  disk1    1:                        EFI EFI                     209.7 MB   disk1s1    2:                  Apple_HFS HDD1                    999.6 GB   disk1s2    3:                 Apple_Boot Boot OS X               134.2 MB   disk1s3 /dev/disk2    #:                       TYPE NAME                    SIZE       IDENTIFIER    0:      GUID_partition_scheme                        *1000.0 GB  disk2    1:                        EFI EFI                     209.7 MB   disk2s1    2:                  Apple_HFS HDD2                    999.6 GB   disk2s2    3:                 Apple_Boot Boot OS X               134.2 MB   disk2s3 /dev/disk3-disk15 with sizes between 1 GB and 512 KB are part of the boot disk as well as the thumb drive. /code/pre  Now create the Logical Volume Group with:  precodediskutil cs create Fusion /dev/disk0s2 /dev/disk1s2 /dev/disk2s2 /code/pre  Choose the proper disk identifiers found in the diskutil list.  The output will be similar to this one:  precodeStarted CoreStorage operation Unmounting disk0s2 Touching partition type on disk0s2 Adding disk0s2 to Logical Volume Group Unmounting disk1s2 Touching partition type on disk1s2 Adding disk1s2 to Logical Volume Group Unmounting disk2s2 Touching partition type on disk2s2 Adding disk2s2 to Logical Volume Group Creating Core Storage Logical Volume Group Switching disk0s2 to Core Storage Switching disk1s2 to Core Storage Switching disk2s2 to Core Storage Waiting for Logical Volume Group to appear Discovered new Logical Volume Group "0AD5A644-34A7-4B44-A9BC-CD37411B8910" Core Storage LVG UUID: 0AD5A644-34A7-4B44-A9BC-CD37411B8910 /code/pre  Now create a new Logical Volume with:  precodediskutil cs createVolume lvgUUID jhfs+ Fusion 100% /code/pre  with the example above this is  precodediskutil cs createVolume 0AD5A644-34A7-4B44-A9BC-CD37411B8910 jhfs+ Fusion 100% /code/pre  This will yield the following:  precodeThe Core Storage Logical Volume Group UUID is 0AD5A644-34A7-4B44-A9BC-CD37411B8910 Started CoreStorage operation Waiting for Logical Volume to appear Formatting file system for Logical Volume Initialized /dev/rdisk16 as a 2 TB case-insensitive HFS Plus volume with a 172032k journal Mounting disk Core Storage LV UUID: 34345C6A-421B-4F03-A6D1-4C5A144FA610 Core Storage disk: disk16 Finished CoreStorage operation /code/pre  The 2 TB is erroneous: in fact a ~2,25 TB volume will be built:  precode... /dev/disk16     #:                       TYPE NAME                    SIZE       IDENTIFIER     0:                  Apple_HFS Fusion                 *2.3 TB     disk16                              Logical Volume on disk0s2, disk1s2, ...                              34345C6A-421B-4F03-A6D1-4C5A144FA610                              Unencrypted ... /code/pre  Now install a new system and enjoy your DIY SuperFusion drive.  hr  One fact cannot be concealed: the SuperFusion drive is even more vulnerable to drive failure than a normal Fusion drive. The failure probability is comparable to a RAID0.  Here is a comparison for 1, 2 or 3 disks:  Survival probability (for new disks and being optimistic):  precodeNr of disks  1st year 2nd year 3rd year 4th year 5th year           1       98%      90%      83%      78%      73%           2       97%      82%      69%      61%      54%           3       95%      74%      57%      47%      40% /code/pre  Considering that at least one drive is already 5 years old the survival probability is even worse. So better get a reliable backup drive!  <comment275204> I wasn't aware of the raid0 level of reliability - thanks for the heads-up on that.  The two HD's are 5 years old,  and they've both been in macs that have been used all day long for their whole lives.  Even though I have a reliable backup system, I don't want to live with this level of risk. <comment275466> The survival probability is _probably_ a little higher, since SSD reliability is better than ever, but that table makes an excellent illustration of the possible problem with Fusion drives. <comment348907> Wait. If it doesn't differentiate between the fast HDD and slow HDD, how does it differentiate between the HDDs and the SSD? These commands look like you're just making a regular RAID0 drive or something. I don't understand what is doing the smart caching (I'm guessing LRU?) here. <comment348909> @sudo This is no RAID! A RAID0 would have a size of 3 x the smallest volume (=765 GB).