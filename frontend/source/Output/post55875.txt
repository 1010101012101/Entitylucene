git auto-complete for *branches* at the command line? <body> On my Linux machine I have autocomplete emfor branches/em with Git.  [Note we are talking about git branch completion, emnot/em bash completion (e.g. commands, files, etc).  Thus NOT Lane's answer at all]  For example I can type codegit checkout/code+kbdTAB/kbd and get a list of branches.  Or I can type codegit checkout feb*/code+kbdTAB/kbd to get all branches that begin with "feb".  How can I get this functionality on a Mac?  I tried downloading and running codebash-completion/bash_completion/code and codebash-completion/bash_completion.sh.in/code but no joy.  The first gave error messages about codedeclare: -A invalid_option/code.  The second gave no errors.   When I codegit checkout/code+kbdTAB/kbd though I am still getting a list of files in the directory, not branches.  I am in the project root.  Auto-complete for directories and bash commands are working ok, so it's specific to Git.   <answer55884> You could install bash and git from MacPorts with the "bash_completion" option enabled. It is probably the easiest way of maintaining both git and the completions up-to-date.  http://denis.tumblr.com/post/71390665/adding-bash-completion-for-git-on-mac-os-x-snow-leopard  To install MacPorts: http://www.macports.org/install.php/  strongAdditional info/strong  As for locating the completion settings on your Linux system, have a look in /etc/bash_completion.d/git (it is a long file). Copying that by itself probably won't work, though, as it is designed to be sourced by the completion framework through /etc/bash_completion (which is sourced from /etc/profile.d/bash_completion.sh; files in /etc/profile.d are sourced from /etc/profile).  <answer55886> ok, so I needed the emgit/em autocompletion script.  I got that from this url:  codecurl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash/code  No need to worry about what directory you're in when you run this as your home directory(code~/code) is used with the target.  Then I added to my code~/.bash_profile/code file the following 'execute if it exists' code:  precodeif [ -f ~/.git-completion.bash ]; then   . ~/.git-completion.bash fi /code/pre  Update: I'm making these bits of code more concise to shrink down my code.bashrc/code file, in this case I now use:  precodetest -f ~/.git-completion.bash &amp;&amp; . $_ /code/pre  Note: code$_/code means the last argument to the previous command. so code. $_/code means run it - "it" being code.git-completion.bash/code in this case  This still works on both Ubuntu and OSX and on machines without the script code.git-completion.bash/code script.  Now codegit/code kbdTab/kbd (actually it's codegit/code kbdTab/kbdkbdTab/kbd ) works like a charm!  (PS: If this doesn't work off the bat, you may need to run codechmod -X ~/.git-completion.bash/code to give the script permission to run.)  <answer92637> Some people prefer to use a package manager to automate the installing, updating, and configuring of Mac OS packages. I am a fan of package managers, and I think Homebrew is the best package manager for Mac OS (some would say it's the de-facto Mac OS package manager).   Once you have installed Homebrew, you can simply install stronggit/strong along with strongbash-completion/strong with codebrew install git bash-completion/code.  You'll then need to put the following in your code~/.bash_profile/code:  precodeif [ -f $(brew --prefix)/etc/bash_completion ]; then     . $(brew --prefix)/etc/bash_completion fi /code/pre  (Note: If this install fails with a 404 error, and you already have git installed, just remove the git part of this brew install)   More info on installing git and bash-completion with brew here.  <answer159255> Locate your code.bashrc/code file.  Open it and add this line at the bottom:  codesource /etc/bash_completion.d/git/code  <answer229722> Here's what's confusing some of you: you have brew or ports installed, but you are using an the system git in code/usr/bin//code. To check this:   precodewhich git /code/pre  If you see code/usr/bin/git/code then either brew isn't correctly configured, or you've not installed git via brew.  If you install git via brew, then enabling bash completions for brew will also enable bash completions for git. This is because code/usr/local/etc/bash_completion/code actually sources everything in code/usr/local/bash_completion.d/code, and the brew package for git installs a git completion script there.  <answer243276> Run this on terminal:  precodecurl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.git-completion.bash /code/pre  Then, do this:  precodevi ~/.bash_profile /code/pre  Add this lines:  precodeif [ -f ~/.git-completion.bash ]; then   . ~/.git-completion.bash fi /code/pre  That's all. This worked for me.  <answer285288> If your git completion is partially broken, even after sourcing codehttps://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash/code, you may just need to update your git version.  For example, when I typed codegit check/code + codeTAB/code, it would correctly autocomplete codegit checkout/code. But when I typed codegit checkout/code + codeTAB/code, it did not display the list of branches, only codeHEAD/code.  The fix for me was to update my codegit/code version. I was on 2.7.0, which apparently was not compatible with the latest codegit-completion.bash/code. I ran codebrew update git/code, which updated it to 2.13.0, and now it properly autocompletes my branch names.  <comment170297> Adding `git` and adding `bash-completion` is not at all the same as adding `.git-completion.bash`  They are different programs and they do quite different things - one does bash command autocompletion and the other does git command autocompletion and 'nair the twain will meet ;) <comment226649> Yep, restarting terminal after adding the bash script made it work. I was sitting here wondering why it kept trying to autocomplete to my `Models` folder when I hit `m` `Tab` to make it autocomplete to `master`. <comment229799> I don't have anything an `/etc/bash_completion.d/` folder, on a relatively new system (OSX 10.10.3). <comment229885> Try creating it. <comment278244> Not bash_completion, git_completion which does different stuff. <comment278563> @MichaelDurrant It works. Trust Me. ;) http://www.prowrestlingtees.com/media/catalog/product/cache/1/image/470x246/9df78eab33525d08d6e5fb8d27136e95/t/r/trust_me_1_2.png <comment282333> @crmpicco Could you please provide instructions for creating `/etc/bash_completion.d/git`? It would make your answer more valuable. <comment290650> See also http://unix.stackexchange.com/q/48862/10043 for a different tip <comment341191> If the accepted answer isn't working for anyone then try this: `source ~/.bash_profile` after pasting the code. Restarting the terminal will also do the same thing. <comment367698> working like a charm, many thanks. Could you please explain what is the use of script that you have got me added in `~/.bash_profile`? <comment367892> Thank you! I tried some other stuff but nothing worked (including this https://github.com/bobthecow/git-flow-completion/wiki/Install-Bash-git-completion). Your solution worked like a charm ;)