Spanish to English and English to Spanish dictionary for Dictionary app? <body> For quite a while now, I have been looking for English and Spanish conversion dictionaries (both ways) for Apple's native Dictionary application. So far I have not had any success.    Is there any free, decent quality solution such as "New Oxford American Dictionary" and "Dictionnaire de l'Académie Française"?   Any links or information would be highly appreciated.  <answer41898> Look at this link. Here you can find the requested "eng-esp / esp-eng" dictionaries.  <answer119166> To create a dictionary for the built-in OSX Dictionary.app you will first need pyglossary to convert to the AppleDict format from the input format which can be ABBYY Lingvo DSL, Babylon BGL, Stardict IFO, etc (see all supported formats).  Once the AppleDict source XML is generated, the Apple Dictionary Development Kit is used to generate the native binary files that the Dictionary.app can use.  Proceed as follows:  h3Installing dependencies/h3  ol liInstall strongXcode command line tools/strong:/li /ol  pre class="lang-bash prettyprint-override"code    xcode-select --install /code/pre  ol start="2" liInstall the strongAuxiliary Tools for Xcode 7/strong from https://developer.apple.com/download/more/ — you'll need to login with your iCloud or Apple Developer account. Mount the DMG file by double-clicking it in Finder, and copy the folder strongDictionary Development Kit/strong to strong/Developer/Extras/strong (as root):/li /ol  pre class="lang-bash prettyprint-override"code    sudo mkdir -p /Developer/Extras/     sudo cp -r '/Volumes/Auxiliary Tools/Dictionary Development Kit' /Developer/Extras /code/pre  ol start="3" liInstall Python 3 via homebrew (OSX comes with Python 2.x preinstalled):/li /ol  pre class="lang-bash prettyprint-override"code    brew install python3 /code/pre  ol start="4" liCheckout the pyglossary project:/li /ol  pre class="lang-bash prettyprint-override"code    mkdir -p ~/projects     git clone --depth 1 https://github.com/ilius/pyglossary.git ~/projects/pyglossary /code/pre  ol start="5" liInstall lxml and BeautifulSoup, the parsers that pyglossary depends on:/li /ol  (for current user only)  precode    pip3 install lxml beautifulsoup4 --user /code/pre  (system-wide)  precode    sudo pip3 install lxml beautifulsoup4 /code/pre  Now everything is ready to do the actual conversion.  h3Performing the Conversion/h3  ol liConvert the source dictionary (in this case Babylon BGL) to AppleDict:/li /ol  pre class="lang-bash prettyprint-override"code    python3 pyglossary.pyw --read-options=resPath=OtherResources --write-format=AppleDict webster.bgl webster.xml /code/pre     supstrongNOTE/strong: This operation can take significant time if the dictionary is big./sup   ol start="2" liCompile the generated AppleDict sources to OSX Dictionary.app binary files. Pyglossary creates the AppleDict sources in a subfolder named the same as the source file./li /ol  hr     supstrongOPTIONAL/strong: By default the dictionary name will be derived from the file name of the input file. If you want to modify the name to something else then open codeMakefile/code in a text editor, and set the title in the DICT_NAME variable (make sure you include the commas)./sup   pre class="lang-bash prettyprint-override"code    cd webster ### subdir name is derived from the source file     make     make install /code/pre     supstrongNOTE/strong: codemake/code can take significant time if the dictionary is big. For huge dictionaries it can take over 10 minutes./sup   codemake install/code copies the generated dictionary to code~/Libary/Dictionaries/code.  Now if you restart the dictionary app and and open preferences (kbd⌘/kbd+kbd,/kbd) the new dictionary will appear in the list. Click the checkbox to enable it.  Other formats, for example ABBYY Lingvo DSL require more steps such as re-encoding from UTF-16 to UTF-8. Here is a wrapper script for DSL to AppleDict conversion.  And finally, the latest OSX versions already include Spanish dictionaries which can be enabled in preferences in the Dictionary.app (kbd⌘/kbd+kbd,/kbd).  Here are some Free dictionaries in Babylon BGL format. There are also literally hundreds of dictionaries available in DICTD, Stardict and ABBYY Lingvo DSL formats.  <answer119267> As a follow-up to ccpizza's answer, here's what you need as of today:  ul liAuxiliary Tools for Xcode: http://developer.apple.com/downloadsbr You need an Apple Developer account to get that.br Once you downloaded it, you can just create a new folder at /Developer/Extras and copy the Dictionary Development Kit folder from the Auxiliary Tools there./li liPython. This might be preinstalled./li libeautifulsoup. Fire up a Terminal and launch this command:br codesudo easy_install beautifulsoup4/code/li lipyglossary: https://github.com/ilius/pyglossary/li /ul  Now you can download a dictionary in any format pyglossary can read. All English - X Babylon dictionaries are here: http://www.babylon.com/free-dictionaries/languages/english  Now do what ccpizza said. I had to change the command a bit to  precodepython pyglossary.pyw --read-options=resPath=OtherResources --write-format=AppleDict webster.bgl webster.xml make make install /code/pre  Note that the output name (in this case "webster") will be the dictionaries name in Dictionary.app's toolbar; I used Spanish.xml for the Spanish dictionary. The last command will automatically install the dictionary file, so you can then enable it in Dictionary.app's preferences.  <answer293094> Starting with at least El Capitan, Apple provides one of these:  img src="https://i.stack.imgur.com/whc38.png" alt="enter image description here"  <comment47532> Answers on Ask Different need to be more than just a link. It's okay to include a link, but please summarize or excerpt it in the answer. The idea is to make the answer stand alone. <comment47567> Despite of what the FAQ might say, Toms answer is acceptable and within my phrased request. thank you! <comment116215> As the answer was not stand alone it is useless now. The link is dead. <comment139021> @Bart I was able to fix the link <comment139023> @TomGewecke Excellent! I hope this time the link stays up. <comment139169> Hi ccpizza, thank you very much for your answer, which is applicable, since i made it work like this in a similar case, using my linux distribution of choice, a few month back. For OSX it works as well! <comment139171> Thank you as well Alex, for the additional information. Much appreciated!! <comment139320> @Alex: i didn't include the dependencies into the answer because they are listed in the Readme files that come with `pyglossary` and Apple auxiliary tools, but it's good to have them here. Btw, the actual URL Aux package is http://developer.apple.com/downloads. I think that installing `Command line tools for Xcode` is also required, but cannot say for sure. There is also a Readme in the `Dictionary Development Kit` folder - it has the up-to-date instructions about compiling and folder locations, which is useful since Apple changed a bit the directory structure in the latest OSX versions. <comment140047> Oops. I didn't notice that in the README file, I used compiler warnings to find out what I was missing :/ ^^    It did take me a while to find the free Babylon dictionaries for download, so that was another part of the reason for this post. - Also, thanks for correcting my Apple Developer link :) <comment254850> I have switched from `.rst` to `.md`. Simply opening the project in your browser will show you the RAEDME file: https://github.com/ilius/pyglossary