“Airplane Mode” in OS X. Alternative command for `rfkill`? <body> Mac OS X doesn't recognize coderfkill/code from its terminal, and I am looking for an alternative command that has similar functionality (toggling "Airplane Mode").  NOTE: I don't wish to open an code.app/code to toggle. I'd like to execute the command from command line or within script in Bash (or equivalents).  hr  By "Airplane Mode", I meant to borrow the term from iOS support page here. I would like to disable all incoming/outgoing network communications from my system.  <answer86378> Depending on my objective (Should I concern about shutting down data interface as well?), I can choose the plan accordingly:  strongPlan A/strong for (1) Network Interfaces and (2) Data Interface  strongPlan B/strong for (1) Network Interfaces  hr  h2(Plan A #1) Get installed hardware interfaces info (including data interfaces):/h2  First, I'd like to know how many and what types of interfaces I should worry about.    code$ networksetup -listallhardwareports/code  precodeHardware Port: Bluetooth DUN Device: Bluetooth-Modem Ethernet Address: N/A  Hardware Port: Ethernet Device: en0 Ethernet Address: ff:ff:ff:ff:ff:ff  Hardware Port: FireWire Device: fw0 Ethernet Address: ff:ff:ff:ff:ff:ff:ff:ff  Hardware Port: Wi-Fi Device: en1 Ethernet Address: ff:ff:ff:ff:ff:f /code/pre  hr  h2(Plan A #?)  (Optional) Get the list of network interfaces only:/h2  This step makes me easy to codegrep/code.  code$ networksetup -listallnetworkservices/code  precodeAn asterisk (*) denotes that a network service is disabled. Ethernet FireWire Wi-Fi /code/pre  hr  h2(Plan A #2) Get the device name of the network interfaces./h2  I'd like to know which network interface(s) is/are active.  code$ ifconfig/code  precodeen0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500     ether ff:ff:ff:ff:ff:ff      media: autoselect (none)     status: inactive en1: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500     ether ff:ff:ff:ff:ff:ff      inet6 ffff::ffff:ffff:ffff:ffff%en1 prefixlen 64 scopeid 0x5      inet 192.168.1.fff netmask 0xffffff00 broadcast 192.168.1.fff     media: autoselect     status: active fw0: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 4078     lladdr ff:ff:ff:ff:ff:ff:ff:ff      media: autoselect &lt;full-duplex&gt;     status: inactive /code/pre  h2(Plan B #1) Locate codeairport/code command or set alias for codeairport/code command if not recognized:/h2  My system couldn't recognize codeairport/code command, so I had to add below line to code.bash_profile/code.  precodealias airport='/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport' /code/pre  hr  h2(Plan B #2) Check current AirPort status:/h2  code$ ./airport -I/code  precode     agrCtlRSSI: -10      agrExtRSSI: 0     agrCtlNoise: -10     agrExtNoise: 0           state: running         op mode: station       lastTxRate: 100         maxRate: 100 lastAssocStatus: 0     802.11 auth: open       link auth: fffffffffffffffff           BSSID: ff:ff:ff:ff:ff:ff            SSID: MelvNetwork             MCS: 15         channel: 6  /code/pre  hr  h2(Plan A &amp; B #3)Turning on/off the AirPort:/h2  precode# For OS X 10.7 and later $ networksetup -setairportpower en1 on   # Turn on Airport $ networksetup -setairportpower en1 off  # Turn off Airport  # for OS X 10.6 and below $ networksetup -setairportpower on       # Turn on AirPort $ networksetup -setairportpower off      # Turn off AirPort /code/pre  hr  h2(Plan A &amp; B #4)Turning on/off the BlueTooth:/h2  Download codeblueutil/code here.   precode$ blueutil status  # Check status of BlueTooth Status: on  $ blueutil on      # Turn BlueTooth on  $ blueutil off     # Turn BlueTooth off /code/pre  hr  h2Script:/h2  Now that I have all the ingredients, I can write the script for OS X 10.7!  hr  h2Last Comments:/h2  (1) Some of the output are masked with the character 'f'.  (2) According to code$ man networksetup/code, you can configure the proxy, TCP/IP, PPPoE as well (not tested).  (3) @RichHomolka's suggestion, codenetworksetup --enableuserprofile/code is deprecated for OS X 10.7 (not tested in other versions).  (4) If anyone following the above procedure encounters a problem, could you please address them in the comment (or as in a separate answer)?  <answer86593> Make an ad hoc location named codeisolated/code or codeairplane/code where all the network interfaces strongare present/strong and strongturned off/strong.  Switch to this deaf location with:  precodenetworksetup -switchtolocation isolated /code/pre  It might be more interesting than coderfkill/code since you can protect you from an unnoticed Ethernet cable which might be listening to all your communications (and they are a lot) :[. To check that everything is really off, run:  precodeifconfig -a | grep '[&lt;,]UP[,&gt;]' | grep -v '[&lt;,]LOOPBACK[,&gt;]' /code/pre  If this command doesn't display anything, then emall/em your interfaces are emdown/em, everything is OK.  If this command output anything, as here:  precodeen1: flags=8863&lt;UP,BROADCAST,SMART,RUNNING,SIMPLEX,MULTICAST&gt; mtu 1500 /code/pre  then it means that the interface name (here codeen1/code which is the wireless one on this Mac) is on where it shouldn't. This is the sign that either the configuration made is failing or that some Trojan horse turned it on to reach its control server via the Internet.  <comment99763> Welcome to the site and thanks for the analysis. The only piece missing in your answer (and the one thing future visitors will be looking for) is the script combining all the findings into a solution. Could you please add this as well? <comment99768> @patrix I haven't finished writing the script yet, and (I think) it may be little long to post here..I am planning to post it on github instead. I'll update the address to the github later. Thanks for your greeting! <comment99852> Hi melv! I've deleted your question on Super User, as verbatim cross posting is definitely not allowed. It would have been fine to stay on either site though, just FYI.