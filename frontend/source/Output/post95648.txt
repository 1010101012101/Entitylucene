Visually distinguish different lines (for long wrapped lines) in iTerm2 / Terminal <body> I'm using an application that outputs very long lines. It's fine - it means things aren't cut off at 80 characters - but the default Terminal and iTerm2 config makes it hard to distinguish between:  ul lithe second line of a wrapped long line/li lithe start of the next line/li /ul  Eg:  precodeLorem ipsum dolor sit amet, consectetur  adipiscing elit.  Proin sed velit nibh. Proin ornare nisi  at erat congue, vel dignissim tortor malesuada.  /code/pre  Is there any way I can configure the app to show things so that there's some space after each carriage return, eg:  precodeLorem ipsum dolor sit amet, consectetur  adipiscing elit.   Proin sed velit nibh. Proin ornare nisi  at erat congue, vel dignissim tortor malesuada.  /code/pre  Thanks very much!  <answer95653> One way around this would be to pipe your output through strongsed G/strong to double-space the output, example:  precodecat file-with-long-lines.txt | sed G /code/pre  Of course this modifies the output.  <answer95807> Here's a starting point.  In iTerm 2 go to Preferences  Profiles  (Your profile)  Advanced, then click Edit under Triggers.  Add a new Trigger using the + button at the bottom left, then set:  ul liRegular Expression: code.$/code/li liAction: codeHighlight Text…/code/li liParameters: codeRed on White/code (or a colour combination you find appropriately funkadelic)/li /ul  Close the Triggers pane.  You should now see a white "line" at the far right of the iTerm window. This is really iTerm changing the last character on the line to red text on a white background. This should help you spot lines that are wrapped versus new lines.  Example screen grab below (I use fish shell, btw)…  img src="https://i.stack.imgur.com/HP4IS.png" alt="Screen grab of iTerm2 fish shell showing use of Triggers to highlight text"  <comment112242> Ack, sed or tr would turn 1 CR into two, however I don't want to have to send stderr to stdout and use sed/tr on every command (and there's a lot of commands).