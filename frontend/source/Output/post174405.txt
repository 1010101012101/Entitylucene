How to open different emacs version from the shell? <body> I have two versions of emacs on my machine. One came preinstalled and I have just installed a newer version with homebrew.   img src="https://i.stack.imgur.com/ylGdM.png" alt="enter image description here"  If I type codeemacs/code in the terminal, the old version runs. If I type codeemacs-24.4/code then the new version runs. What do I have to do to ensure typing just codeemacs/code runs the 24.4 version and not the older version?  <answer174407> To do this for just Emacs, use  precodealias emacs=/usr/local/bin/emacs /code/pre  in your shell startup file which will make Emacs always run Homebrew emacs instead of whatever is first in your code$PATH/code.  But the better way to do this is to make your shell always look for Homebrew versions of commands first, by putting code/usr/local/bin/code strongfirst/strong, or at least early, in your code$PATH/code.  So if your code$PATH/code is set like this:  precodeexport PATH="$PATH:/usr/local/bin" /code/pre  change it to this:  precodeexport PATH="/usr/local/bin:$PATH" /code/pre  code/usr/local/bin/code is a directory containing symlinks to all Homebrew-installed commands, Emacs included, and your shell starts at the beginning of the code$PATH/code to figure out what executable to use, so putting it first will in effect choose the Homebrew emacs first.  One last thing - please remove code/usr/local/Cellar/emacs/24.4/bin/code from your code$PATH/code. It's going to break when the next version of Emacs comes out. If you use code/usr/local/bin/code instead, Homebrew will automatically manage the symlinks when you update things.  <comment205353> What is your PATH? <comment205356> My $PATH is quite long, but it includes /usr/local/Cellar/emacs/24.4/bin/ <comment205357> Not the best way I think ;) Homebrew should have links from /usr/local/bin to the cellar and then /usr/local.bin is in your path. However the issue is is is which directory that contains an executable emacs is first in the $PATH