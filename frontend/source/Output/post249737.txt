Cannot remove part of $PATH <body> I trying to fix any problem I have in codebrew doctor/code, so I see:  precodeWarning: Some directories in your path end in a slash. Directories in your path should not end in a slash. This can break other doctor checks. The following directories should be edited:     /usr/local/Cellar/node/5.0.0/bin/ /code/pre  I look into code~/.profile/code, code~/.bash_profile/code, code/etc/paths/code â€“ and don't see this path.  There is no files in code/etc/paths.d//code folder that contains this string.  So where this code$PATH/code part from?  <answer254740> From your question it sounds like the problem is a directory ending in a code//code. And it sounds like Homebrew is telling you the directory causing the error is code/usr/local/Cellar/node/5.0.0/bin//code. If this is the case then you simply need to remove the trailing code//code from this directory.  But it also sounds like you are saying you don't see this problem directory in your code$PATH/code. Running codeecho $PATH/code will show you which directories are in your PATH. If your PATH contains a lot of directories as mine does, this can be a little hard to read. So maybe you are just overlooking it?  In any case, here is a simple script to show you all the directories in your PATH; 1 per line.   precode#!/bin/bash  # save IFS to a variable     old_IFS=${IFS$' \t\n'}  #set IFS to a colon IFS=':'  for item in ${PATH[@]} do      echo $item done  # set IFS back to the default setting IFS=$old_IFS /code/pre  Or if you prefer copy and paste directly in your terminal:  precodeold_IFS=${IFS-$' \t\n'}; IFS=':'; for item in ${PATH[@]}; do echo $item; done; IFS=$old_IFS /code/pre  Or an even simpler way as pointed out by fd0 in the comments:  precodetr -s ':' '\n' &lt;&lt;&lt;"$PATH" /code/pre  This also has the added advantage of not needing to mess around with codeIFS/code.  Using any of the above scripts, if you find a line ending in a code//code then you've found the culprit.  <comment309881> Have you tried `echo $PATH` in your terminal? <comment309889> The $PATH can also be modified by launch agents/daemons and any shell script in your *profile files! <comment317115> @user556068 tried. How it can help me? <comment317116> @klanomath okay, how can I find them? <comment317143> Are you saying that you don't see a directory ending in a `/` when you run `echo $PATH`? <comment317208> Your code could be simplified using `tr` with a `herestring`- `tr -s ':' '\n' "$PATH"` <comment317222> @fd0 Thanks for the info. I updated the answer with your simplified method. <comment317587> No I see this problem part of PATH if I run `echo $PATH`. The output will be `/usr/local/Cellar/node/5.0.0/bin/ /usr/local/bin /usr/bin /bin /usr/sbin /sbin /opt/X11/bin /usr/local/sbin /Users/grawl/.composer/vendor/bin`. <comment317595> Then you need to remove the trailing `/` from `/usr/local/Cellar/node/5.0.0/bin/` <comment318380> @user556068 obviously. But I cannot find a file to edit. <comment318382> I'm confused.. or you are. `/usr/local/Cellar/node/5.0.0/bin` is a directory not a file.