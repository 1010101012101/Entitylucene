Moving .bash_profile to Dropbox <body> I'd like to move my .bash_profile to Dropbox to have my custom Terminal functions available on all my Macs. Is this possible and are there possible implications?  For example I have a command for doing a git add and commit in one go:  precodefunction gax() {     git add .     git commit -m "$1" } /code/pre  I've been unable to find any information about this.  <answer242191> You can have additional file in Dropbox folder and then on every machine inside your code.bash_profile/code file put this:  precodeFILE="/path/to/DropboxFolder/shared_bash_profile_file" if [ -f $FILE ]; then     source $FILE fi /code/pre  <answer242195> I think is better idea to upload to a repository. Let me tell you how I did it.  I version the whole code~/bin/code directory. My code.bash_profile/code is on that directory. The code$HOME/.bash_profile/code is a link to code~/bin/.bash_profile/code.  My code.bash_profile/code looks like this:  precodeif [[ $OSTYPE == darwin* ]]; then     . ~/bin/includes/exports-osx.sh     . ~/bin/includes/bash-stuff-osx.sh     . ~/bin/includes/aliases-osx.sh     . ~/bin/includes/functions-osx.sh elif [[ $OSTYPE == linux* ]]; then     . ~/bin/includes/exports-linux.sh     . ~/bin/includes/terminal-linux.sh     . ~/bin/includes/aliases-linux.sh     . ~/bin/includes/ssh-keys-linux.sh     . ~/bin/includes/bash-stuff-linux.sh fi  . ~/bin/includes/bash-stuff.sh . ~/bin/includes/aliases.sh . ~/bin/includes/powerline.sh . ~/bin/includes/functions.sh . ~/bin/includes/work-stuff.sh /code/pre  That way I can easilly track changes.  To keep the repo update you can create a cron or LaunchAgents script that pull the changes on your code~/bin/code directory once a day:  precodecd ~/bin &amp;&amp; git pull origin $(git name-rev --name-only HEAD) /code/pre  <answer242234> It is not a good idea to put the whole code.bash_profile/code in Dropbox, either by tweaking the Dropbox paths or through a symlink. Different machines may require slightly different content of this file. Examples: different software versions installed requiring different configuration, different paths, different names for things such as partitions under code/dev//code.  Do this instead: put all your customized functions and aliases in a file code$HOME/Dropbox/my_functions.sh/code and then include the line  precode. $HOME/Dropbox/my_functions.sh /code/pre  in your code.bash_profile/code.  <comment297793> I know you've already got an answer, but it's got me thinking about just softlinking to the dropbox .bash_profile. Something to think about. <comment297816> What advantages would this have over the simple solution that Mateusz presented? <comment297817> @swelet from my point of view, two main advantages: you can easily revert changes to a point and you can keep track of every change. <comment297824> Ok, thank you for answering. <comment297828> @JMY1000 with my solution you can put additional stuff depending on the machine you're on - simply put the commands after the `if` statement. But You're right this could also be a symlink. <comment297843> Since FILE could be used for other apps and such, you night want to name the variable something like "DROPBOX-RC" <comment297886> `ln -s ~/path/to/dropbox/bash_profile_file ~/.bash_profile ` <comment297887> @jherran Or you could put the git repo in the Dropbox folder as well. I do think though that Dropbox has some versioning itself. <comment298635> @pydsigner I've had trouble with a Git repo in Dropbox. I'm guessing race conditions as Dropbox attempts to sync changes to a file that Git then attempts to reopen while it's still being used. <comment301616> This solution implicitly uses a public repo for a critical system file, which can lead to security issues.  Dropbox and others are private. <comment301617> @NewAlexandria you are absolutely wrong. You can use private repos. <comment301683> You could, but you don't say that, and so an inexperienced person may mistakingly use a (*implicitly*, not explicitly) public repo, compromising their system.  Respect that other people need guidance to avoid some dangers.