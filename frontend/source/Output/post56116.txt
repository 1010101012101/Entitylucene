Network preferences will not open <body> All network preferences are frozen on my macbook. This problem happens when I do the following:   ol liFast User switching is on./li liAt least two users are logged into the system./li liI've switched from one wifi network to another./li /ol  When this happens, Airport appears to hang. The airport icon in the menu bar runs through its "searching" animation forever, and airport cannot be turned off. If I attempt to access network preferences from the system preferences it hangs and won't respond.   The only console message that appears is when I force quit the process opening system preferences:  precode([0x0-0x180180].com.apple.systempreferences[3599]) Exited: Terminated: 15 /code/pre  I also can't open the Activity Monitor.  I cannot switch users, and if I log out the user I'm in I'll lose a lot of work (I'm running a long simulation that is not complete), and also, in the past this has not helped. How can I force airport to die?  Things that do not work include killing processes with the word "airport" in their name.   OS: 10.7.4br Hardware: MacBook Pro i7br codekernel.log/code:  precodeJul 11 08:02:37 JD6944 kernel[0]: hibernate_write_image done(0)  Jul 11 08:02:37 JD6944 kernel[0]: sleep  Jul 11 08:02:37 JD6944 kernel[0]: SMC::smcHandleInterruptEvent WARNING status=0x0 (0x40 not set) notif=0x0  Jul 11 09:02:01 JD6944 kernel[0]: Wake reason: EC.LidOpen (User)  Jul 11 09:02:01 JD6944 kernel[0]: SMC::smcHandleInterruptEvent WARNING status=0x0 (0x40 not set) notif=0x0  Jul 11 09:02:01 JD6944 kernel[0]: RTC: PowerByCalendarDate setting ignored  Jul 11 09:02:05 JD6944 kernel[0]: Previous Sleep Cause: 5  Jul 11 09:02:05 JD6944 kernel[0]: SMC::smcHandleInterruptEvent WARNING status=0x0 (0x40 not set) notif=0x0  Jul 11 09:02:06 JD6944 kernel[0]: en1: 802.11d country code set to 'US'.  Jul 11 09:02:06 JD6944 kernel[0]: en1: Supported channels 1 2 3 4 5 6 7 8 9 10 11 36 40 44 48 52 56 60 64 100 104 108 112 116 120 124 128 132 136 140 149 153 157 161 165  Jul 11 09:02:13 JD6944 kernel[0]: AppleThunderboltNHI::enablePower - turn power off, status = 0x0, result_value = 0x0  Jul 11 09:06:42 JD6944 kernel[0]: (default pager): [KERNEL]: default_pager_backing_store_monitor - send LO_WAT_ALERT  Jul 11 09:07:04 JD6944 kernel[0]: macx_swapoff SUCCESS  Jul 11 09:07:15 JD6944 kernel[0]: (default pager): [KERNEL]: default_pager_backing_store_monitor - send LO_WAT_ALERT  Jul 11 09:08:00 JD6944 kernel[0]: macx_swapoff SUCCESS  Jul 11 09:23:43 JD6944 kernel[0]: CODE SIGNING: cs_invalid_page(0x1000): p=3505[GoogleSoftwareUp] clearing CS_VALID  Jul 11 09:57:21 JD6944 kernel[0]: CODE SIGNING: cs_invalid_page(0x1000): p=3549[GoogleSoftwareUp] clearing CS_VALID /code/pre  System Preferences Hang Log:  precodeDate/Time:       2012-07-11 09:05:57 -0400 OS Version:      10.7.4 (Build 11E53) Architecture:    x86_64 Report Version:  9  Command:         System Preferences Path:            /Applications/System Preferences.app/Contents/MacOS/System Preferences Version:         11.0 (11.0) Build Version:   2 Project Name:    SystemPrefsApp Source Version:  214009000000000 Parent:          launchd [235]  PID:             3413 Event:           hang Duration:        1.12s Steps:           12 (100ms sampling interval)  Pageins:         5 Pageouts:        0   Process:         System Preferences [3413] Path:            /Applications/System Preferences.app/Contents/MacOS/System Preferences Architecture:    x86_64 UID:             501    Thread 0x326bf      DispatchQueue 1   User stack:     12 ??? (in System Preferences) [0x107729b30]       12 NSApplicationMain + 867 (in AppKit) [0x7fff82cf0244]         12 -[NSApplication run] + 470 (in AppKit) [0x7fff82a74071]           12 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 135 (in AppKit) [0x7fff82a77735]             12 _DPSNextEvent + 1247 (in AppKit) [0x7fff82a7807d]               12 AEProcessAppleEvent + 102 (in HIToolbox) [0x7fff81e7ad7d]                 12 aeProcessAppleEvent + 250 (in AE) [0x7fff8800e9f7]                   12 _ZL25dispatchEventAndSendReplyPK6AEDescPS_ + 38 (in AE) [0x7fff8800eb03]                     12 aeDispatchAppleEvent(AEDesc const*, AEDesc*, unsigned int, unsigned char*) + 200 (in AE) [0x7fff8800ec25]                       12 _NSAppleEventManagerGenericHandler + 105 (in Foundation) [0x7fff88f135dc]                         12 -[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] + 283 (in Foundation) [0x7fff88f1374e]                           12 __-[NSAppleEventManager setEventHandler:andSelector:forEventClass:andEventID:]_block_invoke_1 + 101 (in Foundation) [0x7fff88f147c7]                             12 -[NSObject performSelector:withObject:withObject:] + 65 (in CoreFoundation) [0x7fff8788c541]                               12 -[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] + 307 (in AppKit) [0x7fff82a7ac5a]                                 12 -[NSApplication(NSAppleEventHandling) _handleAEOpenDocumentsForURLs:] + 272 (in AppKit) [0x7fff82cb9f33]                                   12 -[NSApplication _reopenWindowsAsNecessaryIncludingRestorableState:registeringAsReady:completionHandler:] + 287 (in AppKit) [0x7fff82a7b10f]                                     12 -[NSDocumentController(NSInternal) _autoreopenDocumentsWithCompletionHandler:] + 725 (in AppKit) [0x7fff82a7b676]                                       12 __-[NSDocumentController(NSInternal) _autoreopenDocumentsWithCompletionHandler:]_block_invoke_2 + 111 (in AppKit) [0x7fff82a7ba21]                                         12 __-[NSApplication(NSAppleEventHandling) _handleAEOpenDocumentsForURLs:]_block_invoke_1 + 1356 (in AppKit) [0x7fff82d31709]                                           12 -[NSApplication _doOpenFile:ok:tryTemp:] + 369 (in AppKit) [0x7fff82d2c30d]                                             12 ??? (in System Preferences) [0x10773b6ba]                                               12 ??? (in System Preferences) [0x1077306fc]                                                 12 -[NSPrefPaneBundle instantiatePrefPaneObject] + 438 (in PreferencePanes) [0x7fff811f3954]                                                   12 -[NSPreferencePane loadMainView] + 216 (in PreferencePanes) [0x7fff811f2a42]                                                     12 ??? (in Network) [0x10ba537d1]                                                       12 -[NSAdminPreference(Private) mainViewDidLoad] + 321 (in PreferencePanes) [0x7fff811f82e7]                                                         12 +[SFAuthorization authorization] + 48 (in SecurityFoundation) [0x7fff81b3147f]                                                           12 -[SFAuthorization initWithFlags:rights:environment:] + 89 (in SecurityFoundation) [0x7fff81b3177c]                                                             12 AuthorizationCreate + 60 (in Security) [0x7fff85123f8c]                                                               12 Security::SecurityServer::ClientSession::authCreate(AuthorizationItemSet const*, AuthorizationItemSet const*, unsigned int, Security::SecurityServer::AuthorizationBlob&amp;) + 129 (in Security) [0x7fff8512fe21]                                                                 12 Security::SecurityServer::ClientSession::activate() + 139 (in Security) [0x7fff84fe5dc9]                                                                   12 Security::ModuleNexus&lt;Security::SecurityServer::ClientSession::Global&gt;::operator()() + 71 (in Security) [0x7fff84fe5fed]                                                                     12 Security::ModuleNexusCommon::create(void* (*)()) + 166 (in Security) [0x7fff84fca574]                                                                       12 Security::ModuleNexus&lt;Security::SecurityServer::ClientSession::Global&gt;::make() + 28 (in Security) [0x7fff85032537]                                                                         12 Security::SecurityServer::ClientSession::Global::Global() + 267 (in Security) [0x7fff8503265d]                                                                           12 ucsp_client_setup + 257 (in Security) [0x7fff85032c91]                                                                             12 mach_msg_trap + 10 (in libsystem_kernel.dylib) [0x7fff8444467a]   Kernel stack:     12 ipc_mqueue_receive_continue + 0 (in mach_kernel) [0xffffff8000215930]    Thread 0x326c5      DispatchQueue 2   User stack:     12 _dispatch_mgr_thread + 54 (in libdispatch.dylib) [0x7fff87d3f31a]       12 kevent + 10 (in libsystem_kernel.dylib) [0x7fff844467e6]   Kernel stack:     12 kqueue_scan + 416 (in mach_kernel) [0xffffff800053a660]    Thread 0x326c4      DispatchQueue 12   User stack:     12 start_wqthread + 13 (in libsystem_c.dylib) [0x7fff855a2b85]       12 _pthread_wqthread + 316 (in libsystem_c.dylib) [0x7fff855a13da]         12 _dispatch_worker_thread2 + 198 (in libdispatch.dylib) [0x7fff87d3f92c]           12 _dispatch_queue_invoke + 54 (in libdispatch.dylib) [0x7fff87d40132]             12 _dispatch_queue_drain + 264 (in libdispatch.dylib) [0x7fff87d402d6]               12 _dispatch_call_block_and_release + 18 (in libdispatch.dylib) [0x7fff87d3ea86]                 12 __auto_zone_collect_block_invoke_0 + 74 (in libauto.dylib) [0x7fff853b721a]                   12 auto_collect_internal(Auto::Zone*, unsigned int) + 459 (in libauto.dylib) [0x7fff853bb7db]                     12 Auto::Zone::invalidate_garbage(unsigned long, void**) + 73 (in libauto.dylib) [0x7fff853ce019]                       12 batchFinalizeOnTwoThreads + 264 (in libobjc.A.dylib) [0x7fff872f86a8]                         12 __psynch_cvwait + 10 (in libsystem_kernel.dylib) [0x7fff84445bca]   Kernel stack:     12 psynch_cvcontinue + 0 (in mach_kernel) [0xffffff800059daa0]    Binary Images:          0x107728000 -        0x10774afff  com.apple.systempreferences 11.0 (11.0) &lt;586F487B-3019-32FC-9BCD-44A604A7178C&gt; /Applications/System Preferences.app/Contents/MacOS/System Preferences          0x10ba51000 -        0x10bae1ff7  com.apple.preference.network 2.6.1 (2.6.1) &lt;B3F96860-141A-3D39-B2CF-153210D7E88F&gt; /System/Library/PreferencePanes/Network.prefPane/Contents/MacOS/Network       0x7fff811ef000 -     0x7fff8120bfff  com.apple.frameworks.preferencepanes 15.0 (15.0) &lt;A1ABA9DB-2C8A-3C96-976A-21E63194F7B2&gt; /System/Library/Frameworks/PreferencePanes.framework/Versions/A/PreferencePanes       0x7fff81b30000 -     0x7fff81bd2fff  com.apple.securityfoundation 5.0 (55116) &lt;A9311EF6-B7F7-3DA5-84E8-21BC9B2C3C69&gt; /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation       0x7fff81e6a000 -     0x7fff82196ff7  com.apple.HIToolbox 1.9 (???) &lt;B7D2A06B-7BE5-3355-BF7D-8139100B9B97&gt; /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox       0x7fff82a6f000 -     0x7fff83675ff7  com.apple.AppKit 6.7.3 (1138.47) &lt;CAF5783F-F80B-30E7-929F-BBA6D96C5C44&gt; /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit       0x7fff8442f000 -     0x7fff8444ffff  libsystem_kernel.dylib ??? (???) &lt;1DDC0B0F-DB2A-34D6-895D-E5B2B5618946&gt; /usr/lib/system/libsystem_kernel.dylib       0x7fff84fc9000 -     0x7fff852b2ff7  com.apple.security 7.0 (55148.1) &lt;E9C46204-1336-3D90-BC67-5162FC7079D2&gt; /System/Library/Frameworks/Security.framework/Versions/A/Security       0x7fff853b6000 -     0x7fff85404fff  libauto.dylib ??? (???) &lt;D8AC8458-DDD0-3939-8B96-B6CED81613EF&gt; /usr/lib/libauto.dylib       0x7fff85551000 -     0x7fff8562efef  libsystem_c.dylib ??? (???) &lt;41B43515-2806-3FBC-ACF1-A16F35B7E290&gt; /usr/lib/system/libsystem_c.dylib       0x7fff872e3000 -     0x7fff873c7e5f  libobjc.A.dylib ??? (???) &lt;871E688B-CF57-3BC7-80D6-F6476DFF109B&gt; /usr/lib/libobjc.A.dylib       0x7fff877f6000 -     0x7fff879caff7  com.apple.CoreFoundation 6.7.2 (635.21) &lt;62A3402E-A4E7-391F-AD20-1EF20236CE1B&gt; /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation       0x7fff87d3d000 -     0x7fff87d4bfff  libdispatch.dylib ??? (???) &lt;1D5BE322-A9B9-3BCE-8FAC-076FB07CF54A&gt; /usr/lib/system/libdispatch.dylib       0x7fff8800b000 -     0x7fff8804afff  com.apple.AE 527.7 (527.7) &lt;B82F7ABC-AC8B-3507-B029-969DD5CA813D&gt; /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE       0x7fff88edb000 -     0x7fff891f4fff  com.apple.Foundation 6.7.2 (833.25) &lt;22AAC369-B63C-3C55-8AC6-C3ECBA44DA7B&gt; /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation /code/pre  <answer106183>    Q: "How can I force airport to die?"   You can disable Wi-Fi (aka "AirPort") by using the codenetworksetup/code command.   In order to do this, you have to know which "en" port AirPort is using. emUsually/em it is either en0 or en1. You can find out for sure by using this command:  precodenetworksetup -listnetworkserviceorder /code/pre  and looking at the output.  For example, here is the output of that command on my MacBook Air:  precodeAn asterisk (*) denotes that a network service is disabled. (1) Bluetooth DUN (Hardware Port: Bluetooth DUN, Device: Bluetooth-Modem)  (2) USB Ethernet (Hardware Port: USB Ethernet, Device: en2)  (3) Wi-Fi (Hardware Port: Wi-Fi, Device: en0)  (4) Bluetooth PAN (Hardware Port: Bluetooth PAN, Device: en1) /code/pre  As you can see in the third entry, mine is 'en0'. Therefore, to turn off Wi-Fi on my Mac, I use the command:  precodesudo networksetup -setairportpower en0 off /code/pre  turning it back on again, as you might expect:  precodesudo networksetup -setairportpower en0 on  /code/pre  emNote that I am on 10.9 and so things may be slightly different, but I do not think they will be significant. At one point Mac OS X's codenetworksetup/code command may have referred to this as "AirPort" instead of "Wi-Fi" but I think that was back in Snow Leopard (10.6)./em  <comment64443> what does console says when you try to open it? check the logs for any kind of errors and repost. console = /applications/utilities/console <comment64444> @pjj console, as mentioned, has no data at all beyond the exit message when system preferences is force quit. <comment64470> Can you, as an admin user, go to `/var/log` and have a look at kernel.log and system.log? <comment64472> @patrix yes. The var/log/system.log points me to a hang log for System Preferences. That file is 6800 lines long, so possibly a bit much to upload. What parts in particular would be helpful? <comment64474> The point in time where the error first occurs (which is, if I understand your question correctly, the moment you switch WiFi networks). <comment64478> @patrix added to the question. <comment64483> That's the crash log, not the extract from system/kernel.log. And to analyze further we need the logs from around the time the problem started, not from force quitting Preferences. <comment64490> @patrix added the kernel log.