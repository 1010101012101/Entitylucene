Correcting Pronunciation Errors in 'Say' Command in Terminal <body> I'm having difficulty correcting the pronunciation in the 'say' command, using 10.9.  I tried to add new pronunciations through:  System Preferences  Dictation and Speech  Open Accessibility Preferences  Open VoiceOver Utility  Speech  Pronunciation  +  After I added a new entry I tried it in both Terminal and TextEdit and neither pronounced it correctly:  precode$ say -v "Samantha" -f filename.txt -o audiofile.aiff /code/pre  Although it did not work in TextEdit (Edit  Speech  Start Speaking), I want to be able to accomplish this in Terminal.  Does anyone have any idea of how I can go about doing this?  <answer127159> According to this 2007 thread at discussions.apple.com the VoiceOver utility only fixes pronunciations in VoiceOver itself, not in text-to-speech.  So if you want to get codesay/code to correctly pronounce the words you should run a find and replace on the text file for each mis-pronounced word. emThere is probably a good way to do this in one step with a script/em, but if you just want to do it once you could:  ol liOpen the file in Text Edit (or any text editor you prefer, I like Text Wrangler)/li liFind (e.g.) "women" and replace all with "wimmen" (Located at codeEdit &gt; Find &gt; Find and Replace.../code in Text Edit) /li liMove to the next word you want to correct finding and replacing all until you've corrected all the mispronunciations. /li liRun codesay/code on the now incorrectly spelled text file./li /ol  <answer127284> Here you go:  precode# read.sh &lt;file-to-read&gt; [name-of-voice] #!/bin/bash  textToRead=$(cat $1)  IFS=$'\n' while read rep; do         IFS=" "         repArray=( $rep )         textToRead=${textToRead//${repArray[0]}//${repArray[1]}} done &lt; replacements.txt  if [ -z $2 ]; then         echo "$textToRead" | say else         echo "$textToRead" | say -v $2 fi /code/pre  This shell script read replacements from codereplacements.txt/code and uses the say command to read the files content after replacing what's defined in codereplacements.txt/code.  codereplacements.txt/code: One line per replacement, code&lt;search&gt; &lt;replace&gt;/code.  Sorry for the ugly code... I hate bash scripting.  <comment148988> right before you go to Pronunciation, in the Voices tab instead, is Samantha the Default voice? It might be that the training only works for the default. <comment149017> Yes, 'she' is. Still can't seem to get this to work. <comment149111> Thanks. What would be the best way to do this? Would it be finding and replacing each mispronounced word using sed or is there a better way? Just out of curiosity, is there even a dictionary lookup tool available somewhere? <comment149119> you could probably build up a sed command that does all the find and replace in one line and then save that as a bash script. As you find new mispronunciations you could then just edit the script. <comment149129> Thanks again. I think I will give this a shot. <comment149595> This is amazing! Thank you very much for taking the time to write this!