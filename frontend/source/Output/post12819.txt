Why is cron being deprecated? <body> I just found out that codecron/code has been deprecated in Mac OS X. Why is this, and will it eventually be completely removed from future releases?  <answer12826> With the release of Mac OS 10.4, codelaunchd/code was chosen to supersede codecron/code in Mac OS. Here's a cached version of the launchd page from the Apple Developer Connection in 2005. It explains why codecron/code was deprecated, as well as the benefits of codelaunchd/code from Apple's perspective.  The summary: codelaunchd/code was created to not just replace codecron/code but also codeinit/code, codexinetd/code for better performance, and better control over configuration and the actual tasks themselves.     The codelaunchd/code daemon offers a single, standardized, interface to any and all programs started automatically by the system. Furthermore, the configuration files that determine when to run a given program can also specify resource limits and environment variables, which simplifies setup and security for many programs. The same configuration file format is used whether a job is launched once at system startup or user login, on demand over the network, or at intervals.   <answer12833> The wikipedia article on launchd has a very good summary, extended discussions as well as some great videos and external links for a deeper dive into this decision by Apple.   In a nutshell, codelaunchd/code replaces 7 major tasks and a boatload of scripts (stronginetd/strong, stronginit/strong and strongrc/strong and associated shell script structures, strongcrond/strong, strongatd/strong, strongwatchdogd/strong, strongSystemStarter/strong) with one much more powerful open sourced tool.   Why:  ul lifaster/li limore powerful/li liunified and centralized/li limore secure/li /ul  When: 29 April 2005 (When OS X Tiger was released for sale)  There's nothing from preventing us all from using launchd to start cron now on Tiger, Leopard or Snow Leopard.  Should future Apple stop shipping code/usr/sbin/cron/code, it will surely end up like wget and other mature open source tools that get compiled and need to be added as a separate command line tool.   <answer96883> I don't even know if cron has been deprecated. codeman crontab/code seems to indicate that it hasn't:     (Darwin note: Although cron(8) and crontab(5) are officially supported under Darwin, their functionality has been absorbed into launchd(8), which provides a more flexible way of automatically executing commands.  See launchctl(1) for more information.)   Daemons and Services Programming Guide says that it has been deprecated though:     Note: Although it is still supported, cron is not a recommended solution. It has been deprecated in favor of launchd.   crontab is also required by POSIX, and OS X is supposed to be SUS compliant.  In any case, cron won't probably stop working any time soon, and I don't know if it can be said to be slower or less secure than launchd. The cron process should use almost no CPU time or memory. Some advantages of using or learning cron are that it is also available on other platforms, and the configuration format is simpler. 