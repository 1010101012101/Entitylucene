Where are the files installed when you execute a mpkg file? <body> I am running Mac Os X 10.9.1.  I downloaded and open an .mpkg file and when through the installation flow but at the end of it I still don't know where the files were installed.  Is there a way to find out what the mpkg executable did in terms of which directories were modified or what files were added and where?  I checked the Applications folder and can't see anything relevant there...  <answer119935> An "mpkg" file is a meta-package file, a file that can contain files emand packages/em to be installed.  They also contain a "bill of materials" that lists the files installed (but not the files installed by the packages it might contain - they have their own bill of materials).  Therefore you need to find the package ID of the mpkg file and any packages it might contain.  The easiest way to do this is to have a look in the receipts folder. This occasionally moves but in 10.9 it is in code/private/var/db/receipts/code.  If we installed our mpkg file recently then it is best to use codefind/code like so:  precodefind /private/var/db/receipts -ctime 2 /code/pre  which will list all the receipt files changed in the last two days. The files found will have names that look like "com.company.application.bom" or they also end in ".plist". The file name without the .bom or .plist is a package ID.  Now we know a package ID we can ask codepkgutil/code to list all the files installed and their location.  precodepkgutil --files com.company.application /code/pre  This will produce a long list of all the files installed and where they are located.  You may see some who recommend methods using the folder code/Library/Receipts/code but not all receipts are actually stored in there for some reason.  <answer119938> h2Use opensnoop/h2  Next time before running the .mpkg file you could run codeopensnoop/code from the command line and that will tell you exactly what files are being modified, opened and created.  <answer120236> You can press command-I in an installer window to list the files that would be copied by the installer:  img src="https://i.stack.imgur.com/HuoN8.png" alt=""  If the mpkg file is a bundle that contains pkg files, you can use lsbom:  precode$ lsbom /Volumes/TrueCrypt\ 7.1a/TrueCrypt\ 7.1a.mpkg/Contents/Packages/TrueCrypt.pkg/Contents/Archive.bom .   40755   0/0 ./TrueCrypt.app 40775   0/80 ./TrueCrypt.app/Contents    40775   0/80 ./TrueCrypt.app/Contents/Info.plist 100664  0/80    934 2986627536 ./TrueCrypt.app/Contents/MacOS  40775   0/80 ./TrueCrypt.app/Contents/MacOS/TrueCrypt    100775  0/80    10941620    3857709971 ./TrueCrypt.app/Contents/PkgInfo    100664  0/80    12  2672927831 ./TrueCrypt.app/Contents/Resources  40775   0/80 ./TrueCrypt.app/Contents/Resources/License MacFUSE.rtf  100664  0/80    13023   2006089031 ./TrueCrypt.app/Contents/Resources/License OSXFUSE.rtf  100664  0/80    19096   2055725362 ./TrueCrypt.app/Contents/Resources/License.txt  100664  0/80    24018   2573692796 ./TrueCrypt.app/Contents/Resources/TrueCrypt User Guide.pdf 100664  0/80    923969  902212473 ./TrueCrypt.app/Contents/Resources/TrueCrypt.icns   100664  0/80    60982   1040643878 /code/pre  codepkgutil --bom/code works with some non-bundle pkg files:  precodelsbom $(pkgutil --bom file.pkg) /code/pre  Or use lsbom after you have installed the package:  precodelsbom /var/db/receipts/com.tapbots.TweetbotMac.bom /code/pre  <comment140258> The downside of this is you see _all_ files that change during the time period. It's a neat tool for debugging, but might be difficult to trace IO to the installer if the system isn't totally idle (including system operations which never can be counted to be idle).