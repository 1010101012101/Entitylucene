Least intrusive way to install Ruby 1.9 on a borrowed MacBook? <body> I need to use Ruby 1.9 for a programming test, and I'll be borrowing my dad's MacBook Air to do so. He's running OSX 10.7.5 and has Ruby 1.8.7  What's the least "invasive" way to install a newer version of Ruby on his machine. Do I emhave/em to install XCode? Do I emhave/em to install RVM? Would homebrew be useful for this? If so, is it relatively simple to remove them once I'm done? I'd like to return it "clean" and avoid making any unnecessary changes to his system. It would be ideal if I could undo/uninstall any changes I do make.  Thanks for your help!  <answer91126> The problem is that there aren't any builds for Ruby for OS X, so you'll have to emat least/em install the Command Line Tools for Xcode to be able to build it. But once you've done that, you might as well use any of Homebrew, RVM or rbenv to install Ruby, rather than building it yourself.  I don't think there's any major difference in terms of how easy it is to remove either of these tools, since they were all designed to be standalone and as little intrusive as possible. In fact, RVM and rbenv live in one folder only.  The choice is yours.  hr  h3With Homebrew/h3  I would say the easiest way of getting Ruby is through Homebrew. Note that Homebrew has Ruby 2.0.0 as of writing this answer, so you won't get 1.9.3 through it.  precoderuby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)" brew install ruby /code/pre  Homebrew and everything it installs lives in code/usr/local/code. You can use this gist to remove it completely â€“ just copy and paste it to a Terminal. Although I would say having Homebrew on a Mac is never a bad idea, which is the reason I'd recommend this over the other methods.  hr  h3With RVM/h3  RVM is a little more intrusive in the way it interoperates with your shell, but if you're going to remove it after, then you shouldn't worry about it.   Install RVM by following the instructions. For 1.9.3, you then just need:  precodervm install 1.9.3 /code/pre  Note that in order to use RVM you would have to change your shell's configuration file (code.bash_profile/code) as well, so remember to clean that up afterwards. Apart from that, RVM lives in code~/.rvm/code, and can be uninstalled with codervm implode/code.  hr  h3With rbenv/h3  rbenv is a competitor to RVM, and does the same thing. Except that if you want to install Rubies you need ruby-build as a plugin.  Follow its installation guide and once you're done, use coderbenv install 1.9.3-p392/code for the latest 1.9.3 patchlevel, for example.  To remove rbenv, you only have to delete code~/.rbenv/code and remove the line that loads it from code~/.bash_profile/code.  <comment107019> Huge thanks, that's exactly the information (and interpretation) I needed! Also, "intrusive" is precisely the word I was looking for when I said "invasive". Kudos :) <comment107240> You could also use a virtual machine, install ruby there, and once you're done, just delete it. <comment138430> Old question, but I agree with this answer, except I think OSX does have a system version of ruby, but you need Xcode to run command line tools to make new versions.  `brew` (homebrew) is the easiest way to install/update, `rbenv` allows you to use different versions of ruby w/o affecting other applications.  You can assign a particular ruby version locally (directory level), or user-globally (setting stored in `~/.rbenv` in home directory), or across shells using environment settings.  Which makes it non-invasive.