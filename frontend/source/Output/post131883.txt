Why is opencv not using all cores after upgrading to Mavericks? <body> I'm running a CPU intensive command on Mavericks (Opencv_traincasscade).  Under Mountain Lion the process used to use all 8 cores all the way though.  However after upgrading it drops to 1 core after a short time.  img src="https://i.stack.imgur.com/W3tBG.png" alt="enter image description here"  Could this be app nap? Is there anything I can do to fix this?  <answer131887> Being able to use multiple-cores or threads is dependent on the process. This is not AppNap or OS X causing the change.  Your process, codeopencv_traincascade/code, may be resource constrained after a few moments and thus reduced to queuing up tasks as it waits for disk access or another limited resource.  In this case you may need to switch to a different build of OpenCV:     Note that opencv_traincascade application can use TBB for multi-threading. To use it in multicore mode OpenCV must be built with TBB.   ul liCascade Classifier Training/li liHow do I build OpenCV with TBB?/li /ul  Installing OpenCV with TBB via codebrew/code:  precodebrew install opencv --with-tbb /code/pre  <answer131932> Graham Miln was correct - the OpenCV installation was wrong.    To verify this:  precodeotool -L /usr/local/lib/libopencv_core.2.4.9.dylib # Look for libtbb.dylib in the response, # if missing you need to reinstall with tbb. /code/pre  To fix this (assuming you installed with homebrew):  precodebrew uninstall opencv brew info opencv # This will tell you about other flags you might be interested in. brew install opencv --with-tbb  # Simples! :) /code/pre  <comment155004> Thanks you for the answer, I will definitely give that a go.  However, there are 2 reasons why I think it might not be the case.  Firstly, the CPU did hit 800% for a few mins when it started, which suggested that OpenCV is capable of using all cores.  Secondly I never encountered this problem on Mountain lion (however, I cant be 100% sure if it was the same build).  The `-mode` parameter is related to rotation of feature detection not cores I believe. <comment155016> Actually I take that back! You were right :D  I'm going to answer for completeness. <comment155028> Rather than being a separate answer, consider appending this to your question.