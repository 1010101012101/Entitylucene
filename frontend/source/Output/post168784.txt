How to stop Time Machine backing up log files inside application containers? <body> Time Machine does not backup log files in code~/Library/Logs/code  But it emdoes/em backup logs files within application containers.  For example, log files in the folder code~/Library/Containers/com.apple.mail/Data/Library/Logs/Mail/code.  My Mail and OneDrive logs are currently adding about 2 GB per backup.  I could manually exclude each of code~/Library/Containers/*/Data/Library/Logs/code but that is a lot of exclusions and would be a list which needs addition whenever I install a new app.  The code~/Library/Containers/*/code folders were introduced to support sandboxing applications, but Time Machine seems to have not kept up with these changes.  Is there a better way of telling Time Machine to not backup the code/Log/code folders within Containers?  I am using OS X Yosemite 10.10.1.  <answer272563> I had a similar need and using a combination of this answer and this answer I came up with the following solution.  Create a property list (e.g. code~/Library/LaunchAgents/excludeLogFiles.plist/code) which will be loaded with codelaunchctl load ~/Library/LaunchAgents/excludeLogFiles.plist/code:  precode&lt;?xml version="1.0" encoding="UTF-8"?&gt; &lt;!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"&gt; &lt;plist version="1.0"&gt; &lt;dict&gt;   &lt;key&gt;Label&lt;/key&gt;   &lt;string&gt;excludeLogFiles&lt;/string&gt;   &lt;key&gt;ProgramArguments&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;/bin/zsh&lt;/string&gt;     &lt;string&gt;-c&lt;/string&gt;     &lt;string&gt;tmutil addexclusion /Users/user/Library/Containers/**/Data/Library/Logs&lt;/string&gt;   &lt;/array&gt;   &lt;key&gt;WatchPaths&lt;/key&gt;   &lt;array&gt;     &lt;string&gt;/Users/user/Library/Containers&lt;/string&gt;   &lt;/array&gt; &lt;/dict&gt; &lt;/plist&gt; /code/pre  Instead of using codeEnableGlobbing/code, which hasn't been supported since OS X 10.10 (ref), the path gets expanded by the program calling code/bin/zsh &lt;args&gt;/code.  A couple of things I found while experimenting:  ol liThe code**/code glob works with codezsh/code but not codebash/code/li liUsing code~/code should work in the path for codeProgramArguments/code but I don't know if the same trick can be used for codeWatchPath/code. Hard-coding the user path might be necessary./li /ol  <comment342549> No ~ is not called through zsh - it gets expanded by the program calling /bin/zsh  <comment342550> Thanks for the clarification. I've updated the answer to hopefully be correct now. <comment342606> You know what?  With Sierra, nearly all my Containers/**/Data/Library/Logs are empty.  So the problem has gone!  Part of the Sierra changes to logging.  But your answer looks correct - I hadn't thought of that method - obvious when you are shown it!  So I will mark it as correct answer to the question for when I asked. <comment344617> Thanks.  I used this to exclude sbt generated target dirs with a pattern like: tmutil addexclusion /Users/user/dev/*/target  /Users/user/dev/*/*/target /Users/user/dev/*/*/*/target /Users/user/dev/*/*/*/*/target <comment344618> Note that the use of "**/target" was way way slower than explicit use of */*/* <comment344632> Note relevant other link here that notes that these excluded directories do now show up in the preferences list, which is kind of scary/dangerous: http://apple.stackexchange.com/a/222348/23555 <comment347258> @Traveler: That was my use case as well (maven vs sbt), but speed was less of a concern than making sure I included all possible target directories, present and future. Hence my preference for /**/.